Featured,Track,Name1,JobTitle1,Company1,Name2,JobTitle2,Company2,Title,Abstract,LinkedIn1,Twitter1,LinkedIn2,Twitter2,Slides,Picture,YouTube,Keywords,Duration
yes,,Finbar Fleming,Customer Engineer,Rollbar,,,,Improving the process of debugging JavaScript errors in Production for better end user experience and happier developers,"JavaScript can be very difficult to debug, especially errors impacting end users in Production.

The way that JavaScript applications are developed and debugged pre-production often means that good processes are not put in place to monitor errors in production.

Most teams only learn about errors when customers call in with a problem.

Reducing the time taken from the time and user first experiences and error to the point where a developer understands the root cause of the error  can transform the experience of your end users, and give developers time back to work on new feature development

Learn how to improve how quickly you can fix errors in Production ",https://www.linkedin.com/in/finbarfleming/,,,,,js_finbar_fleming.png,,"debugging,errors,in,production",
no,getting started,Andrew Knight,The Automation Panda,Applitools,,,,Visually Testing Your Components,"Component libraries are the building blocks of modern front-end apps. Developers can create a component once and reuse it in many places to create consistent user experience. But what happens if a change accidentally breaks any of those components? That could affect many pages! Changes to size, color, layout, and phrases may unintentionally go undetected.

How can we easily catch these bugs? Visual component testing! In this talk, we will:

1. Learn how visual testing differs from traditional automated testing
2. Demo visual tests for a live React app with Storybook components
3. Evaluate pros and cons of different visual testing techniques

We will use [Applitools Eyes](https://applitools.com/products-eyes/) as our visual testing tool. After this talk, you will be better equipped to test your apps. All example code will be provided in a GitHub repository for you to clone and extend as well!",https://www.linkedin.com/in/andrew-leland-knight/,@AutomationPanda,,,,js_andrew_knight.png,,"visually,testing,components",
no,getting started,Marcell Endrey,Frontend Developer,Wise,,,,Teaching JavaScript to the uninterested,"For a couple of years, I taught beginner programming to high school and university students who did not intend to be developers. The members of these classes did not have an engineering background and only applied for fun — or because the curriculum forced them to.
During these times I went through multiple iterations of my course materials and changed many of its details including the language being taught, the editor being used, and the storage of the resulting programs. I kept the parts that worked well in the previous semester and threw out the ones that did not. I had some very positive feedback along the way, along with some total failures.
In this talk, I am sharing my learnings from these classes and invite the audience to help me improve the material even further with their feedback.",https://www.linkedin.com/in/endrey-marcell/,,,,,js_marcell_endrey.png,,"teaching,the,uninterested",
no,getting started,Chris Miller,Internal Services Lead,School Of Code,,,,"Clean, Concise, Collaborative Code","I have worked in the industry on and off since the year 2000.  I now teach code at The School Of Code.  I have a passion for seeing code that is at it's best and the most friendly for every skill level, whilst still maintaining effectiveness and completeness.  This talk has been given in the PHP world several times, and each time this has prompted strong discussion around the definitions of how this might look in practice.",https://www.linkedin.com/in/ccmiller2018/,@ccmiller2018,,,,js_chris_miller.png,,"clean,concise,collaborative,code",
no,getting started,Connor Lindsey,Software Engineer,Grafana Labs,,,,"Getting started with open source observability - OpenTelemetry, Grafana, and more","Learn to use modern observability tools and standards to proactively understand your systems, so you can improve performance, prevent downtime, and respond to incidents. 

We'll cover instrumenting a full-stack JS application using OpenTelemetry, Prometheus, Loki, Tempo, and Grafana. Topics covered include:
- What is observability and why it matters
- What questions can I answer about my system using observability? 
- 3 primary observability signals and their use cases (metrics, logs, and traces)
- Manual and auto-instrumentation using the OpenTelemetry JS SDK
- OpenTelemetry ecosystem including exporters, the specification, and the collector
- Instrumenting a full-stack React + Node app using OpenTelemetry, Prometheus, Loki, and Tempo
- Running the above services using Docker
- Visualizing and connecting metrics, logs, and traces using Grafana
- Additional resources to learn more",https://www.linkedin.com/in/connor-lindsey-b7608914a/,@connor_lindsey,,,,js_connor_lindsey.png,,"open,source,observability,opentelemetry,grafana",
no,getting started,Hou Chia,Independent Consultant/Owner,Kappa Innovation,,,,Introduction to Web3 for JavaScript Developers,"Interest in Web3 is growing quickly, and there's an ever-rising demand for JavaScript developers to build on Web3. This talk will introduce Web3 to developers, including a brief history of Web3, Web3's potential promise and significance to the next wave of tech innovation, the role of JavaScript in building on Web3, an overview of (both conventional and non-conventional) Web3 career opportunities, and how to get started developing with core Web3 JavaScript frameworks, libraries, and tools. Conference attendees will walk away from the talk equipped with action items to explore and capture opportunities in the Web3 space.",https://www.linkedin.com/in/houchia/,,,,,js_hou_chia.png,,"web3,for,js,developers",
no,getting started,Marcos Felipe,Senior Software Developer,TourRadar,,,,Organizing your code with composition API,"Vue 3 brought the amazing functionality: the composition API. With this functionality, we got good solutions to problems that existed in Vue 2, but are we using this new approach well? This talk aims to draw paths and demonstrate ideas for programming using the composition API.",https://www.linkedin.com/in/omarkdev/,@omarkdev,,,,js_marcos_felipe.png,,"organizing,your,code,composition,api",
no,getting started,Mayank Kumar,,,,,,Internationalisation(i18n) & Localisation(l10n),"From this talk the audience will get to know what exactly internalisation and localisation is, how are they related to or different from each other. How i18n can help them upscale their app and increase their user base. They will know how an application can be created to support multiple locales so that the users from different parts and origin around the globe can use their apps in their native locales (language). They will also learn about the common challenges around supporting i18n and how to address those challenges. They will also get to know about the browser support in the context of i18n and l10n. We will also touch base around the Right-to-Left language based app rendering. The audience will also get to know that i18n, l10n are not specific to the textual content but they also deal with images, numbers, currency etc.",,,,,,js_mayank_kumar.png,,"Internationalisation,i18n,localisation,l10n",
no,getting started,Travis Waith-Mair,Senior Software Engineer,Plex,,,,Intro to Solid.js for React Developers (or anyone else),"Solid.js has an API that feels very familiar to React developers, but under the hood is completely different. Solid.js has a suite of ""fine-grained reactive primitives."" It is these primitives that we will explore and learn how to use coming from the perspective of a React.js Developer.",https://www.linkedin.com/in/travis-mair/,@travisWaithMair,,,,js_travis_waith.png,,"solid.js,react",
no,security,Feross Aboukhadijeh,Founder,Socket,,,,"The Good, the Bad, and the NPM Package: Supply Chain Attacks and How to Protect Your App","Open source code makes up 90% of most codebases. How do you know if you can trust your open source dependencies? It is critical to manage your dependencies effectively to reduce risk, but most teams have an ad-hoc process where any developer can introduce dependencies leaving organizations open to risk from malicious dependencies. Software supply chain attacks have exploded over the past 12 months and they’re only accelerating in 2022 and beyond. We’ll dive into examples of recent supply chain attacks and what concrete steps you can take to protect your team from this emerging threat.",https://www.linkedin.com/in/feross/,@feross,,,,js_feross_aboukhadijeh.png,,"npm,package,supply,chain,attacks",
no,security,Serhii,,catchts.com,,,,Safer TypeScript,"You will learn how to write safer typescript:

- template literal types
- permutations and combinations of argument types
- type inference on function arguments",,@captainyosarian,,,,js_serhii.png,,"safer,typescript",
no,tools,Alba Rivas,Principal Developer Advocate,Salesforce,,,,Building Slack Applications with Bolt.js,"In this session:

- I'll explain the architecture of the app
- I'll show how to use Block Kit to build the required UIs
- We'll learn how to respond to Slack events to build our business logic

Note: I have two options for storying the travel requests. I can use a postgress db in heroku (simpler approach) or I can use Salesforce for that. In the second case it's more complex because I need to explain how to authorize and communicate with Salesforce too, but it's interesting. I can also do some code live to make it more fun!",https://www.linkedin.com/in/alba-rivas/,@AlbaSFDC,,,,js_alba_rivas.png,,"slack,applications,bolt.js",
no,tools,Andrei Ignat,Technical Director for EARO Automation Testing,Electronic Arts,,,,"JavaScript, Blockly, Swagger and automation","In this session I will present Blockly - the ""editor to your app that represents coding concepts as interlocking blocks. "" - and can be translated into javascript.
You will see how you can construct custom Blocks. 
Finally, you will see https://ignatandrei.github.io/BlocklyAutomation - an Angular application with custom blocks to read various HTTP /  Swagger endpoints.

",https://www.linkedin.com/in/ignatandrei/,@ignatandrei,,,,js_ignat_andrei.png,,"blockly,swagger,automation",
no,tools,Anton Kalik,Senior Software Engineer,Amenitiz,,,,Words Translation with multi-languages on JavaScript,"The title of talk is - The React/NodeJS application development experience from scratch till fully workable service.
In the beginning I'd like to tell about the story why and from where this idea comes to my mind.
Then I'd like to show the whole infrastructure of the project with diagrams.
Then I want to represent some snip of code of communication between server and client.
Then the part of code resentence of algorithm training words, creating collections and so on.
Then the security part of protecting routes.
Then the final recap about the future and benefit for others.",https://www.linkedin.com/in/antonkalik/,,,,,js_anton_kalik.png,,"words,translation,multi-languages",
no,tools,Arman Murzabulatov,Senior Software Engineer,Rabobank,,,,MeteorJS as a framework for hyper prompt development,"I discovered MeteorJS when I was a co-founder/CTO of an early-stage startup and we desperately needed to develop quickly and be very flexible (180 degrees pivot over the weekend) upon the needs of clients. MeteorJS is a full-stack JS framework that helps build quickly. I will explain how MeteorJS works and how to utilize it in the best way. Also, will talk about the tradeoffs of using MeteorJS (vs traditional stacks) and the strategy for future migration to different more popular stacks.",https://www.linkedin.com/in/murzabulatov/,@kz_arman,,,,js_arman_murzabulatov.png,,"meteorjs,framework,hyper,prompt,development",
no,tools,Dmitry Khorev,Senior Software Engineer,Mero,,,,Scalable event-driven applications with NestJS,"hi, I am a Software Engineer.

7+ YoE in producing quality, scalable server, and client applications.
Skilled at creating well-designed, testable, and efficient back-end services using best practices.
I'm currently a Senior Software Engineer at Mero, managing more than 200 buildings.
Write articles about exciting Back-End technologies on Medium.
Certified Node.js Services Developer and Node.js Application Developer. (https://www.credly.com/badges/6c4d0043-27b4-4dd6-96bb-6faeedfd5cd2?source=linked_in_profile and https://www.credly.com/badges/e1b737e8-2f77-46e9-bbf7-7b7aa1e46a35?source=linked_in_profile)
",https://www.linkedin.com/in/dmitry-khorev/,,,,,js_dmitry_khorev.png,,"scalable,event-driven,applications,nestjs",
no,tools,Dr. Derek Austin,Developer Advocate,Propel Data,,,,How To Build In-Product Analytics With Jamstack,"#### Let's build a leaderboard from publicly-available Netflix data using GraphQL and Jamstack!

#### Everyone loves a leaderboard, right?
In 30 minutes, Dr. Derek Austin will show how you can build an in-product analytics dashboard using GraphQL APIs.

#### Data science concepts
We'll briefly cover data science concepts like ETL (extract, transform, load) and the role of Snowflake data warehouse.

#### GraphQL for analytics
Then, we'll move on to the why, how, and best practices for using GraphQL for analytics data.

#### Let's build a leaderboard!
Finally, we'll focus on how Next.js (React) can be used to launch an ""in-product"" analytics dashboard that would be appropriate for use at a company like Netflix. Don't miss it!",https://www.linkedin.com/in/derek-austin/,@AskDoctorDerek,,,,js_derek_austin.png,,"build,in-product,analytics,jamstack",
no,tools,Eric Burel,Computer Science Engineer,LBKE - Vulcan,,,,Treat your users right with segmented rendering,"Jamstack, SSR, SSG, static rendering, Next.js, Gatsby, ISR, prerendering, edge handlers... JavaScript developers sure like making up new words!

But what do they mean, *actually*? In this talk, I'll demystify those fancy concepts and propose a better definition of ""server-side rendering"" a web app.

You thought ""server-side rendering"" and ""static rendering"" were different things? That you cannot render authenticated, paid or personalized content at build-time? That per-request SSR costs an arm and a leg? Then this talk will blow your mind!

Based on this corrected definition of SSR, I'll show you how you can solve the ""rich guest/poor customer"" issue that arises when you don't use static rendering to its full potential. The result: ultra-personalized static websites, that cost nothing to host and deliver the best possible user experience. 

**Segment your renders and make your customers rich again!**",https://www.linkedin.com/in/ericburel/,@ericbureltech,,,,js_eric_burel.png,,"segmented,rendering",
no,tools,Joshua Arvin Lat,CTO,NuWorks Interactive Labs,,,,Building Machine Learning-powered Applications with JavaScript,"When dealing with machine learning (ML) requirements, most teams generally start using **Python** or **R** due to the number of references available using those languages. However, there are cases where companies do not have the bandwidth and budget to learn a new language on top of **JavaScript** especially if **JavaScript** and **Node.js** are being used in most deployed systems. That said, ML practitioners should still be able to build and deploy ML-powered applications using JavaScript as long as they know which tools, services, and packages are available for these types of requirements.

In this talk, we will discuss how to use different techniques to build machine learning powered apps ranging from fully abstracted to fully customized solutions with JavaScript",https://www.linkedin.com/in/joshualat,@mrjoshualat,,,,js_joshua_arvin_lat.png,,"ml-powered,applications",
no,tools,Katarzyna Wojdalska,Project Manager,Nanores,Malwina Kubas,Full-Stack Developer,Goldman Sachs,Digital ecology - Can you mitigate the carbon footprint of websites?,"Did you know that more than 250 000 websites are published every day? The majority uses too heavy fonts, too large/unnecessary images or utilises redundant libraries. These and other factors generate the carbon footprint. Actually, one view of an average website emits 4.6 g CO2 which sums up to 553 kg CO2 annually. Unfortunately, current solutions optimise only already existing websites.

ec0lint is a tool for frontend developers that mitigates the carbon footprint of websites. It shows tips advising how to create a more climate-friendly code. Thanks to code optimization ec0lint can help in reducing CO2 emissions per one view from 4.6 g to ~0.2 g saving 529 kg CO2 (-96%!) annually. 

In the keynote, we want to share our knowledge about digital ecology with the audience, tips and tricks on how to mitigate digital footprint and information about the tool we created.

Our website (active from the official release day 07.06.22): ec0lint.com
An article with tips written by me: https://www.linkedin.com/pulse/change-your-online-habits-mitigate-climate-crisis-katarzyna-wojdalska/
An article about digital ecology written by me: https://www.linkedin.com/pulse/have-you-ever-wondered-how-much-carbon-emissions-your-wojdalska/
Our GitHub: https://github.com/ec0lint/ec0lint",https://www.linkedin.com/in/k-wojdalska/,,https://www.linkedin.com/in/malwina-kubas/,,,js_katarzyna_wojdalska_malwina_kubas.png,,"digital,ecology,mitigate,carbon,footprint,websites",
no,tools,Luciano Mammino,Senior Architect,fourTheorem,,,,Let's build a 0-cost invite-only website with Next.js and Airtable!,"Imagine you are hosting a private event and you want to create a website to invite all your guests. Of course, you'd like to have an easy way to just share a URL with every guest and they should be able to access all the details of the event. Everyone else should not be allowed to see the page. Even nicer if the website is customized for every guest and if you could use the same website to collect information from the guests (who is coming and who is not). Ok, how do we build all of this? But, most importantly, how do we build it quickly? How do we keep it simple and possibly host it 100% for FREE? I had to do something like this recently so, in this talk, I am going to share my solution, which involves a React SPA (built with Next.js & Vercel) and AirTable as a backend! In the process, we are going to learn some tricks, like how to build a custom React Hook and how to protect our app from AirTable query injection (yes, it's a thing)!",https://www.linkedin.com/in/lucianomammino/,@loige,,,,js_luciano_mammino.png,,"0-cost,website,next.js,airtable",
no,tools,Michele Riva,Staff Engineer,NearForm,,,,You don't want to server-side render your Next.js app,"Next.js is a fantastic framework, but when choosing the right rendering strategy for your pages, you may face a problem; how should I render them? Server-side rendering is rarely the best option, and let's explore why (and how to solve this problem!)",https://www.linkedin.com/in/MicheleRiva95/,@MicheleRivaCode,,,,js_michele_riva.png,,"don't,server-side,render,next.js,app",
no,tools,Naty Rocha,Narendra N Shetty,Stack Builders,,,,Are promises our only choice?,"Promises are the standard approach to handling asynchronous operations in JavaScript and TypeScript. While they are flexible and fun to program in, important downsides make our codebase less maintainable. For instance,  errors in a promise are typed as any, they use eager evaluation, and you can completely omit a catch operation for error handling. So there should be something else we can use, shouldn’t it? 

In this talk, we will be learning how to use functional programming and some alternative asynchronous computations like TaskEither, ReaderTaskEither, and Futures to show how we can handle side effects and create more robust applications.",https://www.linkedin.com/in/natrocha/?originalSubdomain=ec,,,,,js_naty_rocha.png,,"promises,our,only,choice",
no,tools,Robert Aboukhalil,Senior Software Engineer,Chan Zuckerberg Initiative,,,,Interactive command-line tutorials with WebAssembly,"In this talk, I'll dive into how sandbox.bio was built, with a focus on how WebAssembly enabled bringing command-line tools to the web. Although these command-line tools were originally written in C/C++, they all run directly in the browser, thanks to WebAssembly! Since the computations run on each user's computer, this makes the application highly scalable and cost-effective.

Along the way, I'll discuss how to get started with WebAssembly, along with its benefits and pitfalls (it's a great technology but not always the right tool for the job!).
",https://www.linkedin.com/in/robertaboukhalil/,@RobAboukhalil,,,,js_robert_aboukhalil.png,,"interactive,command-line,tutorials,webassembly",
no,tools,Roy Derks,Senior Specialist Solutions Architect - Serverless ,StepZen,,,,Web applications of the future with TypeScript and GraphQL,"Type systems like TypeScript are the next thing when developing JavaScript applications. They make sure that your props are passed in the correct form and shape throughout your application. Together with GraphQLs query language that is based on types, you can create the web application of the future!

Structure: With (live) code examples I will show how to combine TypeScript and GraphQL into a fully functioning application that is based on a secure type system.",https://www.linkedin.com/in/royderks1/,@gethackteam,,,,js_roy_derks.png,,"web,apps,future,typescript,\graphql",
no,tools,Saravana Srinivasan,Software Engineer,Red Hat,,,,Platform freedom with Micro-frontends,"This talk will introduce the audience to an exciting framework that leverages Micro-frontend strategy and makes Typescript/Javascript applications available across different platforms like Web, Desktop, VSCode, Chrome extension etc. The framework is highly flexible and scalable for code development. Additionally, I will elaborate on the challenges we at Red Hat overcame by implementing this Multiplying Architecture that benefited our community and the end users to a great extent.

I’ll illustrate via some examples and implementation options and discuss Backend for Frontend(BFF), sync and async services, event bus, federated modules, and other opportunities for decoupling your front-end architecture.
",,,,,,js_astronaut.png,,"platform,freedom,micro-frontends",
no,tools,Scott Spence,Developer Relations Engineer,Storyblok,,,,SvelteKit and the Content Layer,"An overview of the past the present and the future of content on the web with SvelteKit placed to make the most of what it has to offer.

This talk will detail content on the web in its infancy how the modern CSS was born and where that has taken us up to in the present. There’ll be an introduction to Svelte and SvelteKit and how they can leverage what the modern web has to offer.

There will be code examples of how to get started with modern GraphQL clients for use in SveltKit and how to use them with SvelteKit.

We will discuss the features SveltKit has to offer and how to use them in a secure way so as not to expose sensitive credentials on the browser (client).

",https://www.linkedin.com/in/spences10/,@spences10,,,,js_scott_spence.png,,"sveltekit,content,layer",
no,tools,Yagiz Nizipli,"Node.js Core Member, Senior Software Engineer",,,,,Implementing a performant URL parser from scratch,"Performance plays and important role in engineering. After looking for contributing to Node.js, implementing a very fast specification compliant URL state machine and a parser for Node.js became the project which pushes the boundaries of both javascript user-land and node.js.

I've been working on implementing the URL parser, currently written in C++, in Rust and WebAssembly. I want to share my experience working on it, and benchmarking with the native implementation. The first talk will cover implementing it in Rust and WebAssembly, which I wrote it on https://www.yagiz.co/implementing-node-js-url-parser-in-webassembly-with-rust/, and then I'll focus on implementing it using JavaScript and releasing it under github.com/anonrig/url-js. 

A work-in-progress presentation is available from https://drive.google.com/file/d/1-O2Esv18JHIOomZbPrSqhkzzI9s0TyF9/view?usp=sharing",https://www.linkedin.com/in/yagiznizipli/,@yagiznizipli,,,,js_yagiz_nizipli.png,,"performant,url,parser",
no,tools,yum,DEV RANGER,CUDOS,,,,A new way to write web apps with FIWL.JS,"FIWL.JS is an innovative way to arrange your web layout as efficient and effective as possible. FIWL.JS uses low level canvas primitives to create a whole new world to draw and render things on. In this talk, I will explain what FIWL.JS is, how can it be used and then I will live-code a small demo application using FIWL.JS and showcase the simplicity of FIWL.JS while retaining and harnessing it's low level power. Then, I will also show how FIWL.JS allows you to render text, images and a lot more directly on the browser without any HTML, CSS, directly using the Drawing API provided to you by FIWL.JS. If you are a web developer, with or without JavaScript knowledge, this talk is right for you.",https://www.linkedin.com/in/antariksh-verma-82908a190/,@AntarikshaVerm2,,,,js_antariksh_verma.png,,"write,web,apps,fiwl.js",
no,tools,Michael Wehar,Visiting Assistant Professor,Swarthmore College,,,,Algorithmically Generated Visual Designs,"This past summer, I worked with two undergraduate students (Alyssa Zhang and Maya Newman-Toker) and one software engineer (John Mancini) on a research project that investigates computer generated artwork. During this investigation, we designed and implemented nine algorithms that generate visual designs. Our algorithms, coded in JavaScript, are built from procedural processes that draw lines and basic shapes onto a digital canvas. These procedural processes were inspired by mathematical concepts, natural phenomena, and artistic trends, but contain many parameters to allow for image variation. We used our algorithms to build a dataset of over 1,000 algorithmically generated artworks, which we recruited reviewers to compare and rate. We plan to analyze the reviewers' ratings to find associations between different parameterizations of our algorithms and the response of reviewers to the resulting images.",https://www.linkedin.com/in/michael-wehar/,,,,,js_michael_wehar.png,,"algorithmically,generated,visual,designs",
no,deep dive,Austin Gil,Senior Developer Advocate,Akamai Technologies,,,,JSDocs:  It's like TypeScript but without all that TypeScript,"If you're a JavaScript developer, chances are, you've heard about TypeScript. In this talk, I want to share an iterative approach to enable TypeScript support with as little tooling as possible, using JSDocs. I break it into four stages:

- Enabling TypeScript in a JavaScript file
- Enabling TypScript in a whole JavaScript project
- Integrating TypeScript into CI/CD Pipeline
- Generating Type Definitions for Open-Source Libraries",https://www.linkedin.com/in/austingil/,@heyAustinGil,,,,js_austin_gil.png,,"jsdocs,typescript",
no,deep dive,Gareth McCumskey,Developer Advocate,Serverless,,,,How Serverless Is Changing the World for Developers,"They say if something is too good to be true, it usually is … except now. Using the Serverless Framework (the most popular development tool for building serverless applications according to DataDog’s “state of serverless” report) and some JavaScript, you can rapidly spin up applications faster than ever before and get it deployed into a production ready state at the same time without needing to trudge through the maze of complexity that is AWS. Lets not forget to mention you’ll save money at the same time!
",https://www.linkedin.com/in/garethmcc/,@garethmcc,,,,js_gareth_mccumskey.png,,"serverless,changing,world",
no,deep dive,Gaurab Patra,Co-Founder,Techweirdo Consultancy,,,,Data analytics in browser with AlaSQL.JS,"Today's PCs are more powerful than the chips used in the Apollo mission. Participants will learn to implement a robust frontend data analytics framework using AlaSQL.JS. Data can be imported to AlaSQL very fast, then custom queries can be written to do different complex analytical functions without hitting the server. Participants will also learn to build a custom reporting framework that sits in the browser and is customized for different users' needs, which is highly desirable for multi-tenant architecture.
In the end, participants will get to know about a few more interesting use cases and open source projects to contribute to.",https://www.linkedin.com/in/gaurab-patra-41597960/,@coolpatrox,,,,js_gaurab_patra.png,,"data,analytics,browser,alasql.js",
no,deep dive,Griffin Solot-Kehl,Developer Advocate,Dolby.io,,,,Learn BabylonJS to Create Your Own 3D Metaverse Environments,"Users expect immersive experiences that can not only be entertaining but create engagement and retention.

This workshop will explore some of the theory around user perception while learning the BabylonJS library for creating 3D environments in a web browser.

Additional hands-on sections explore extending this environment to include live streaming media and communications between participants in that metaverse environment. For real-time interactivity with sub-second latency we'll cover some of the same techniques with WebRTC being used by major companies for broadcast quality workflows.",https://www.linkedin.com/in/griffinzs/,@WingofaGriffin,,,,js_griffin_solot-kehl.png,,"babylonjs,create,3d,metaverse,environments",
no,deep dive,Karl Groves,Chief Innovation Officer,Level Access,,,,Data Mining Accessibility,"Everyone agrees the best approach to accessibility issues is to avoid them in the first place. What if we could predict problems before they happen?  

Informed buying decisions—such as researching a product’s accessibility before buying the product or adopting a technology—is the true path to saving money and time on auditing and remediating issues after the system has been deployed. Using a variety of data sources, it is possible to weigh how accessible a site is while also identifying which technologies it uses.  The aggregated data can be used to determine the error rates, error densities, and categories of errors. This information can allow organizations to make informed decisions when they choose which technologies to use on their sites. There are many ways that the implementation of technologies can affect the accessibility of the resulting interface. The use of large-scale data gathering will provide the opportunity for the impact of implementation differences from being a barrier to effective analysis. The data that we gathered in this process confirms how pervasive accessibility problems are on the web. It can also show risk patterns that can help organizations learn about potential accessibility problems related to specific technologies before they adopt those technologies. This presentation will discuss this ongoing research effort, including our current findings and our future research plans. ",https://www.linkedin.com/in/karlgroves/,@karlgroves,,,,js_karl_groves.png,,"data,mining,accessibility",
no,deep dive,Narendra N Shetty,,Booking.com,,,,Exploring Machine Learning as a Javascript Developer,"I’ve been always been fascinated about Machine Learning and the importance of it to build products which enhances customer experience.

I am going to take you through my journey of exploring the world of machine learning and how you can build something and deploy it quickly only with Javascript.",,@narendra_shetty,,,,js_narendra_n_shetty.png,,"exploring,machine learning",
no,deep dive,Rizel Scarlett,Developer Advocate and Open Source Advocate,GitHub,,,,GitHub Pages Reimagined: Deploy Your First Website Without Leaving Your IDE,"This talk will cover the following:

- How I built a VS code extension using TypeScript (and how people can build their own VS Code Extension)
- How it enables early career developers to host their first website
- and how GitHub Pages recently started providing developers with the ability to easily deploy sites built with various JavaScript frameworks like Next.js. This wasn't always offered -- but now you can build your own GitHub Action/workflow to deploy a site on GitHub Pages. ",https://www.linkedin.com/in/rizel-bobb-semple/,@blackgirlbytes,,,,js_rizel_scarlett.png,,"github,pages,reimagined,website,ide",
no,deep dive,Rob Richardson,Developer Advocate,Shoreline.io,,,,Gaining Confidence with Cypress Tests,"Have you ever wanted to refactor mercilessly but didn't want to break the fragile tower? Or have you ever pushed to production only to spend the next few days cleaning up the regressions? You need integration tests, and Cypress is a great, fast way to build them. With a simple JavaScript or TypeScript interface, you can automate browsers to hit those critical functions in your app to prove it works as expected -- this time and every time. Join us to dive into building Cypress tests and leave with confidence to refactor your way to greatness.",https://www.linkedin.com/in/erobrich/,@rob_rich,,,,js_rob_richardson.png,,"confidence,cypress tests",
no,deep dive,Robert Hoffmann,Senior Solutions Architect,AWS,,,,"Stop configuring infrastructure, start coding it!","Do you want to become an infrastructure wizard overnight? Then this talk is for you.

With most tools for Infrastructure as Code, we describe our infrastructure in a declarative configuration language. But there is another way: We can use a general-purpose programming language like TypeScript, Java or C#.

This talk gives an overview of this alternative approach to IaC and answers some of the most burning questions: Can we finally get rid of tons and tons of YAML and JSON files? What are the pros and cons of coding instead of configuring? What tools can we use, what are their differences? And most importantly, do they help us to build infrastructure like a boss without 30 years of experience?",https://www.linkedin.com/in/robert-cloudnative/,@robhoffmax,,,,js_robert_hoffman.png,,"stop,configuring,infrastructure,start,coding,it",
no,deep dive,Roman Boiko,Senior Specialist Solutions Architect - Serverless,AWS,,,,Serverless Backend for Frontend on AWS,"In my talk I will present different ways to implement Backends for Frontends pattern with the help of Serverless services on AWS. 
I will share best practices and also talk about some pitfalls. I also will do a live demo on how to set-up the developer environment, develop a service, test it and deploy on AWS. ",https://www.linkedin.com/in/romboiko/,@romannboiko,,,,js_roman_boiko.png,,"serverless,backend,frontend,aws",
no,deep dive,Li Hau Tan,Developer Relations Engineer,Shopee,,,,Build your own Svelte,"Inspired by talks such as build your own react, we are going to build our own Svelte.
Svelte is a compiler-based frontend framework that compiles your code into optimised JavaScript.
In this 40-min talk, we will write a Svelte compiler from scratch, and learn everything about designing a compiler.",https://www.linkedin.com/in/lihautan/,@lihautan,,,,js_li_hau_tan.png,,svelte,
no,lessons learned,Andrey Goncharov,Senior Software Engineer,Meta (ex-Facebook),,,,Applied history of the front-end,"Relevance: Often, people fall victims to a cargo cult, when they do something because everyone else does so. In this talk, we'll try together to explore the ideas behind modern front-end tech to make educated and well-understood choices instead of blindly following the trends.",https://www.linkedin.com/in/aigoncharov/,@ai_goncharov,,,,js_andrey_goncharov.png,,"applied,history,front-end",
no,lessons learned,Ben Tlusty,Senior Software Engineer,Forter,,,,The 5 architecture principles that helped me as a new father? You won't believe #7!,"Are you tired? Is your child keeping you up at night? This talk is for you!
Monoliths, decoupling, microservices, and database remodeling.
In this talk, we will go through real-life examples that will help us to better understand the trade-offs made when choosing an architecture design pattern.
I will share with you how I used these principles as a new father so I can get more sleep and peace of mind.",https://www.linkedin.com/in/ben-t-8715a1a0/,@benytol1,,,,js_ben_tlusty.png,,"architecture,principles,helped,as,father",
no,lessons learned,Dave Bitter,"Developer Advocate, Team Captain & Senior Front-end Developer/Consultant",iO,,,,"Remix party, you’re invited!","Remix is a great framework to build robust, progressively enhanced and interactive web apps! 

During Covid we all missed the Parties.... therefore Dave will create his own party on stage. He will take you on a fun journey on how he created a multi-user and real-time progressive web app. But be aware, there is a guest list and not every solution is invited to join the party!

 Dave will show you how the Remix friend group will keep your party rocking:

- where the state of your data is on the server where it belongs. (load some data and take action to get the party started).
- where this multi-user web app is not dependent on complex client-side javascript (so even your drunk friend will understand it)
- where the client-side is less error-prone (no party fouls wanted)
- where the components are just plain stupid (no good story starts with a glass of milk)
- where your application becomes simple and easy to understand (you know, for that friend)

Dave will tell you about the challenges he encountered building this web app and how it was solved charmingly by using Remix. He will show you how Remix can be used for web apps with a lot of interactivity not just for plain websites with an occasional form.

Getting FOMO? Make sure to sign up for the party and don’t miss out!",https://www.linkedin.com/in/davebitter/,@dave_bitter,,,,js_dave_bitter.png,,"remix,party",
no,lessons learned,Domenico Musto,Principal Engineer,Chronomics,,,,Development productivity in a post serverless world,"The journey from physical computers to functions running in the cloud has changed how engineering teams work forever.
The role of software developers and infrastructure engineers is not what it used to be.
But what is coming next ? What’s beyond devops, containers and serveless ?
In this session we will explore new emerging models for software development which aim to boost productivity and reduce time to market. 
Warning: this talk might contain code
",https://www.linkedin.com/in/domenicomusto/,@mimmozzo,,,,js_domenico_musto.png,,"development,productivity,post,serverless,world",
no,lessons learned,James Diacono,Software Engineer,Equimaps,,,,Feedback and the REPL,"Programmers have been always been subject to feedback loops. Fast feedback liberates us to do our best work, and slow feedback punishes us. To help us understand our predicament, a brief history lesson is given. This is followed by a demonstration of the REPL, an interactive programming tool. Though widely neglected, the REPL has the potential to make us all happier and more productive.

There will be something in this talk for programmers of any language or skill level, but note that the demonstration is in JavaScript.",,,,,,js_astronaut.png,,"feedback,repl",
no,lessons learned,Julio Cesar Abalde Reyes,Head at Corunet,Sngular,,,,The changing API problem,"After a bad experience with some backend teams that changed the API without informing the frontend team in any way, we decided to introduce the API First paradigm in our development, adopting the OpenAPI specifications. This, together with a contract-based development, would allow us to detect such changes earlier and not reach critical moments at the end of the sprint.

One of the problems we encountered was than all the tools we found depend on java that allow, so we made the decision to build our own CLI in nodejs. From this need, several applications are born, aimed at different moments of development. Following the specifications contained in an OpenAPI file, allows us to:

automatically create code in javascript or typescript, both for client and server, so that we save a lot of time that we can spend thinking. This functionality is already available within the application openapi-nodejs-cli
automatically create a mock server, which allows the front team not to have to wait for the API to be finished
check that an API meets the indicated OpenAPI specifications, which allows us to test within the development flow for early detection of changes in the API",https://www.linkedin.com/in/julio-cesar-abalde-reyes/,@Julio_Abalde,,,,js_julio_cesar_abalde_reyes.png,,"changing,api,problem",
no,lessons learned,Shedrack Akintayo,Developer Relations Engineer,Platform.sh,,,,The Evolution of Deploying Node on Servers and Platforms,"NodeJS is a server-side representation of Javascript that can work well as an application's backend and can be run on various servers and infrastructures. In this talk, we'll be going through the journey of how Nodejs has been deployed over the years via various infrastructures from PaaS to Containers.",https://www.linkedin.com/in/shedrackakintayo/,@coder_blvck,,,,js_shedrack_akintayo.png,,"evolution,deploying,node,servers,platforms",
no,lessons learned,Theodore Vorillas,Web Developer,Workable,,,,The cats are fighting back,"Using a headless browser, WebAssembly, and tons of artificially generated cats to size down non-consensual intimate image-sharing websites
On December the 2nd 2020, I was in my pajamas scrolling through my Twitter feed when I spotted a tweet about an online petition. From that moment everything changed. A few months later I would see my name rumbling through the media, getting featured in a documentary, and getting mentioned in the European parliament.
This is my wild story about taking down a website where non-consensual intimate images were shared. During this talk, you will find out how using a headless browser, WebAssembly, and tons of artificially generated cats we can help out victims and survivors of non-consensual intimate image sharing.",https://www.linkedin.com/in/theodore-vorillas-99863440/,@vorillaz,,,,js_theodore_vorillas.png,,"cats,fighting,back",