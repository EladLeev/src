accept/refuse/transfer,track,name,email,bio,Linkedin,twitter,Title,Company,cospeaker name,email_2,Linkedin_2,twitter_2,title_2,Talk Title,abstract,tags
accept,lessons learned,Dana Scheider,dana.scheider@gmail.com,"Dana Scheider is a senior full-stack software engineer (primarily Ruby on Rails and React) at [Envato](https://envato.com). Hailing from Portland, Oregon, she currently lives in Melbourne, Australia. Since 2016, Dana has been one of the core maintainers of [Cucumber](https://cucumber.io). She is particularly interested in testing and quality management, diversity and inclusion, and improving processes within engineering organisations. Dana's extracurricular interests include mathematics, opera, foreign languages and Star Trek. An in-demand speaker, notable conference appearances include SwanseaCon, CukeUp! London, Full Stack Toronto, RubyConf Colombia and Covalence Conf.",https://www.linkedin.com/in/danascheider/,@DanaScheider,Senior Software Engineer,Envato,,,,,,Choose Your Own (QA) Adventure,"Quality engineering processes are essential if you want to be sure you're shipping robust, maintainable software that meets (or exceeds!) customer expectations. This talk covers quality processes you can implement in your organisation even when you don't have a dedicated QA department.

Every organisation needs quality processes in place to ensure the software it produces is maintainable and satisfies customer needs. But what to do when your organisation doesn't have, or can't have, a dedicated QA team? You're in luck. This talk covers everything you'll need to know to not only adopt quality processes within your development teams, but to create an organisational culture conducive to releasing reliable, maintainable, and consistently high quality software.","testing,qa,quality,process"
accept,frameworks,Dmitry Vinnik,dmitry@dvinnik.dev,Dmitry Vinnik is an Open Source Developer Advocate at Facebook.,https://www.linkedin.com/in/dmitry-vinnik/,@DmitryVinnik,Developer Advocate,Facebook,,,,,,Ent: Making Data Easy in Go,"Ent is an entity framework built for Go programming language. This framework provides developers with a Graph-based, ORM. 
In this talk, we will learn how to use Ent when dealing with data schemas, including types, relations and constraints. It’s a hands-on talk, so get ready to follow along!

What do most applications do these days? They interact with data in one way or another. As your app's scale increases, it becomes more challenging to manage databases, schemas, queries, and constraints. These challenges are why a technique called Object-Relational Mapping, or ORM, was created. 
At Facebook, we tend to think about data modeling in graph concepts and as we were working with Go, it led us to create a new open source project, Ent.

Ent is an entity framework built for Go programming language. This framework provides developers with a Graph-based, Object Relational Mapping. 
In this talk, we will learn how to use Ent when dealing with data schemas, including types, relations and constraints. It’s a hands-on talk, so get ready to follow along!
","ent,making data easy"
accept,frameworks,Felix Schuster,fs@edgeless.systems,"Felix Schuster is an academic turned startup founder. After his PhD in computer security, he joined Microsoft Research to work four years on the foundations of Azure Confidential Computing, before co-founding Edgeless Systems. The startup’s vision is to build an open-source stack for cloud-native Confidential Computing. Throughout his career, Felix has frequently given technical talks at top-tier conferences, including Usenix Security Symposium, IEEE Symposium on Security & Privacy, and ACM CCS. His 2015 paper on the “VC3” system is believed by some to have coined the term Confidential Computing.",https://www.linkedin.com/in/felixschuster/,@flxflx,Co-Founder,Edgeless Systems,Moritz Eckert,me@edgeless.systems,https://www.linkedin.com/in/moritz-eckert-15a7b91a0/,@m1ghtymo,Chief Architect,Confidential computing with Go,"Confidential computing (CC) is a breakthrough hardware-based security technology. We built an open-source Go framework for CC called EGo. We'll talk about the inner workings of EGo, show how it makes it easy to build and deploy confidential apps, and describe exciting real-world applications.

""# Abstract 

Confidential computing (CC) is a new and much-discussed security paradigm. It enables the always encrypted and verifiable processing of data on potentially untrusted computers, e.g., your cloud provider’s systems or maybe even your local cluster. CC enables many exciting new applications like super-secure bitcoin wallets or end-to-end encrypted and verifiable AI pipelines. 
In this talk, we’ll give a brief intro to CC and the corresponding hardware technologies. We'll talk about how the technology is particularly relevant for the cloud-native space and why Go and CC make for a great fit. We'll sketch the status quo of Go tooling for CC and given an intro to our open-source EGo framework. Finally, we give some hands-on examples of Go CC apps and discuss use cases.  
We argue that EGo is the simplest way to leverage CC - in particular for Go programmers :-) We'd love to get feedback from the Go community for our approach. 

# Structure of the talk (30min)

* Intro (3min) 
* What is Confidential Computing? (5min) 
* Why Go and Confidential Computing are a perfect match (3min) 
* The architecture of EGo (5min) 
* How to build your first confidential microservice (7min) 
* Use cases (5 min) 
* Conclusion (2min) 

# About Confidential Computing 

Confidential computing is an emerging security paradigm. With it, data and code are protected inside secure enclaves at runtime. Enclaves protect against potentially compromised OSes, hypervisors, or even malicious cloud admins with hardware access. 
 
Enclaves are created and enforced by the CPU. An enclave’s contents remain always encrypted in memory at runtime. Yes, correct, data and code remain always encrypted! This is one of the key features that make confidential computing so exciting for many, e.g., for Forbes. 
 
Besides, enclaves have access to unique cryptographic keys, which can be used to store secrets on untrusted storage (“sealing”). it is possible to verify the integrity of an enclave and set up secure channels to it (“remote attestation”). 
In one sentence: secure enclaves enable the always encrypted and verifiable execution of workloads in the cloud and elsewhere. 
 
The most prominent enclave implementation to date is Intel SGX. SGX is available on many recent Intel-based systems. Several cloud vendors already have corresponding offerings. 
 
Apart from unprecedented security, confidential computing enables new types of data-driven applications. The verification aspect is key here: users can verify precisely how data is processed, who provides the inputs, and who gets access to the results. For instance, this enables zero-trust data sharing, super-secure crypto wallets, and many other exciting things. 
 
However, previously, developing confidential apps used to require arcane knowledge, significant code changes, and cumbersome build steps. With EGo, this changes! 
 
# About EGo 

EGo is used via a simple CLI. In a nutshell, EGo consists of a modified Go compiler, an in-enclave Go runtime and a Go library that makes CC-specific functionality available to in-enclave code and external consumers. Most notably, the library facilitates the process of remote attestation.  
 
With EGo, you can build and debug your Go code as you are used to. Apps built with EGo run on all systems that normal Go apps run on — even if those systems are not SGX-enabled. Thus, EGo can be nicely integrated with existing development and build processes. The following commands build and run a helloworld app: 
 
```go 
ego-go build myapp.go 
ego sign myapp 
ego run myapp 
``` 
 
If you tell `ego sign` that you want a debuggable enclave, you can debug your app inside the enclave using `ego-dbg` and GDB-compatible IDEs like Visual Studio Code.  
 
In contrast to enclave SDKs for programming languages like C++ (e.g., Open Enclave) or Rust, EGo does not require programmers to split your app between enclave and non-enclave code. It simply keeps all of your data and code inside the enclave. We believe that this is the most intuitive and practical approach. 
 
Most Go apps run out of the box on EGo. This includes the popular key management app HashiCorp Vault, which is a good example of an app that benefits greatly from CC. ""","confidential computing,Intel SGX,security,cloud native"
accept,deep dive,Francisco Daines,fdaines@gmail.com,"I’m a Senior Software Engineer with over 15 years of experience. I have worked with different languages and architectures, a few months ago I started using Go and I become a promotor of its simplicity and performance. Nowadays I’m working as Software Engineer at Walmart Chile. When I’m not coding, I’m either trying to play bass guitar or just drinking a beer.",https://www.linkedin.com/in/fdaines/,@fdaines,Senior Software Developer,Walmart,,,,,,Using Arch-Go to continuously test the quality of our architecture,"In every product, we start by defining architectural guidelines and code conventions, but the hard part is to check if the code adheres to these definitions over the time. Arch-Go is a testing tool that can be included as part of the CI pipeline to continuously verify our architectural guidelines.

Most authors defines software architecture as a set of important decisions which are hard to change. If we are working in a software artifact, then these decisions are represented as architectural guideline, because of that it’s very common to talk about some unwritten rules like “Don’t call repository components from components in the presentation packages”, or “prefer the use of structs over too many parameters or return values in functions/methods”. We can check this kind of rules as part of a code review process, but as this is manual, is errors-prone, then is possible to pass this quality-gate and push code into our master branch that breaks our guidelines, so we need a way to automatically check if our code adheres to these rules.
This talk is about Arch-Go, a testing tool which provides a simple way to document the architectural guidelines and checks if our Go code complies with those rules as part of a continuous integration pipeline. We will review why we need to check architecture quality and how Arch-Go can help us to automate it.","arch-go,architecture,tooling,test,guidelines,automation"
accept,getting started,Gaurav Gahlot,gauravgahlot0107@gmail.com,"Gaurav is a Software Engineer working with InfraCloud. He is a Docker Community Leader and Tinkerbell maintainer. He also contributes to other open-source projects like gRPC-go, fission, and docker/get-involved. ",https://www.linkedin.com/in/gauravgahlot/,@_gauravgahlot,Software Engineer,InfraCloud Technologies Pvt Ltd,,,,,,Two years of Go - Mistakes & Learnings,"Not everybody starts learning a language by reading the official spec. Most of us just start. We refer to blogs, documentation, and presentations as we go. We learn from other's mistakes, and that is why I step forward to share my mistakes. So that everyone can learn from them too.

Go is a simple and fun language to work with. However, not everybody starts learning a language by reading the official spec. Most of us just start. We refer to blogs, documentation, and presentations as we go. We learn from other's mistakes, and that is why I step forward to share my mistakes. So that everyone can learn from them too.

Here is what I would like to talk about:

- Go is not OO
- Methods vs Functions
- Not using Interfaces
- Pointers vs Values
- Memory Gotchas
- Unit Tests vs Integration Tests
- Error Abuse
- A few Best Practices

This is a non-exhaustive list that most Go developers can relate to. I'm sure that others will learn from it.","2 years with go,mistakes,learnings"
refuse,security,Gordon Rudd,gordon@stonecreekcoaching.com,"Gordon Rudd is the CEO of Stone Creek Coaching. Gordon has over 40 years of experience in the IT and cybersecurity in oil & gas, health care and financial services. He is a recognized expert in cybersecurity, ERM, GRC, IT risk management, and compliance program development. Gordon works with the coaching team at Stone Creek helping technical personnel map their careers and achieve their personal objectives. He also serves as our subject matter expert in residence. 

Gordon joined Stone Creek Coaching after being the VP, CISO for RCB Bank. Gordon implemented and managed both their cybersecurity program and enterprise risk management program, which included managing internal and external audits and regulatory examinations, creating the vendor management office and implementing a successful continuous process improvement program. Today, Gordon uses his proven ability to energize any department or organization using Stone Creek's innovative people, process, and technical solutions.

Gordon founded the CISO Mentoring Project 12 years ago and is still an engaged mentor for many aspiring and active CISOs around the world. Gordon is a regular presenter with (ISC)2 an international, nonprofit association for information security leaders, to create and lead educational events, videos and content for their members. 

As a recognized expert, Gordon is frequently sought to speak at industry events on information security, GRC and enterprise risk. Gordon received his BBA in Finance from the University of Oklahoma and an MBA from West Texas A&M University.",https://linkedin.com/in/gordonrudd,@glrudd,CEO,Stone Creek Coaching,,,,,,"Scalable, Sustainable Cybersecurity for Any Size Organization","This session will focus on how corporate size and growth rate actually dictate cybersecurity methodology, strategy and operations.  Setup and maintenance of CyberOps is very different for these companies. IT and Cybersecurity operate in hybrid models, focused on five areas. Successful information security teams must understand each of these areas and their operation to succeed.

Securing fast-growing companies, is difficult to do. Very difficult to do well. This session will give attendees key performance indicators to describe the relationship between each area of excellence and the scalability, sustainability and flexibility required in a cybersecurity program/department.  
","cybersecurity,scalability,sustainability,ciso"
accept,,Gordon Rudd,gordon@stonecreekcoaching.com,"Gordon Rudd is the CEO of Stone Creek Coaching. Gordon has over 40 years of experience in the IT and cybersecurity in oil & gas, health care and financial services. He is a recognized expert in cybersecurity, ERM, GRC, IT risk management, and compliance program development. Gordon works with the coaching team at Stone Creek helping technical personnel map their careers and achieve their personal objectives. He also serves as our subject matter expert in residence. 

Gordon joined Stone Creek Coaching after being the VP, CISO for RCB Bank. Gordon implemented and managed both their cybersecurity program and enterprise risk management program, which included managing internal and external audits and regulatory examinations, creating the vendor management office and implementing a successful continuous process improvement program. Today, Gordon uses his proven ability to energize any department or organization using Stone Creek's innovative people, process, and technical solutions.

Gordon founded the CISO Mentoring Project 12 years ago and is still an engaged mentor for many aspiring and active CISOs around the world. Gordon is a regular presenter with (ISC)2 an international, nonprofit association for information security leaders, to create and lead educational events, videos and content for their members. 

As a recognized expert, Gordon is frequently sought to speak at industry events on information security, GRC and enterprise risk. Gordon received his BBA in Finance from the University of Oklahoma and an MBA from West Texas A&M University.",https://linkedin.com/in/gordonrudd,@glrudd,CEO,Stone Creek Coaching,,,,,,Every CISO’s First 90 Days on the Job,"This session will give you the tools and techniques to be a world class CISO. We’ll Explore the programs, processes, procedures, and technical skills needed to be a survive in your role as CISO.  We will also explore the tools to help you do your job better, cheaper, and faster than the competition.

 - Learn to use the MAP (measure, asses, plan) process to:
 - Assess your organization
 - Assess an information security department, the people in it, and the organization it serves. 
 - Plan the work and work the plan
 - Demonstrate why your programs, processes, and projects will keep the organization as secure as possible in the world we live in today.","30-60-90dayplan,careerdevelopment,ciso career mapping,ciocareermapping,cybersecreuityoperations,itoperations"
accept,getting started,Huseyin Babal,huseyinbabal88@gmail.com,Development Team Lead @ Hazelcast Cloud,https://www.linkedin.com/in/huseyinbabal/,@huseyinbabal,Software Development Team Lead,Hazelcast,,,,,,Ultimate Guide to Golang Development for Beginners,"A talk about easy start with Golang development with production grade examples and tools

In this talk I will try to show how to start Golang Development with production grade best practices. You will learn the answers of ""How to do environmental/project setup?"", ""How to test your projects"", ""What kind of tools you need to use to ship your application?"", etc.... 

On each section, there will be a mapping from other languages to have better insight.",development for beginners
accept,deep dive,Ilya Kaznacheev,dreamworm@ya.ru,"Backend developer who has been coding in Go since 2017 after many years in the enterprise development. I'm working remotely for the last 3 years. A big fan of automation and DevOps culture.

Also a founder of Voronezh SAP Community and Golang Voronezh, organizer of events, e.g. meetups, conferences, and workshops, host of Z-namespace podcast and active public speaker.",https://www.linkedin.com/in/ilyakaznacheev/,@ilya_kaznacheev,Technical Lead,MTS Cloud,,,,,,DDD and FSM: tackling complexity with state machines,"The talk will describe how you can simplify the implementation of complex domain models, using FSM as a basis for building logic and interactions between elements. At the same time, the topic contains a minimum of theory and a maximum of practical advice and examples from the author's experience. 

The participant will learn:
- how FSM is applied to a domain model;
- how to manage the state of complex data models with many independently changing entities;
- how to implement interaction of different domains depending on their states;
- how to make error handling in complex processes fault-tolerant;
- how to use this technique in distributed systems with synchronous, asynchronous, and event-driven communication.","ddd,fsm,state machine"
accept,deep dive,Ishuah Kariuki,kariuki@ishuah.com,"Ishuah Kariuki is the Principal Backend Engineer at Hover. He’s based in Nairobi, Kenya. Besides writing code, he’s a budding triathlete, adrenaline junkie and an avid hiker.",https://www.linkedin.com/in/ishuah/,@ishuah_,Principal Backend Engineer,Hover Developer Services,,,,,,Terminal Emulator Basics in Golang,"Dive into the inner workings of the Unix TTY subsystem and understand how terminal emulators work.

Have you ever wondered what happens when you type something on your terminal? Why signal interrupts such as Ctrl-Z exist? Why are they called terminals in the first place?

This talk aims to improve your understanding of what happens in the background when you use terminal emulators. We'll cover the basics of the TTY subsystem and build a simple terminal emulator in Go. 

Talk outline:
 1. Introduction: A brief background of the current state of the TTY subsystem.
 2. Why PTY?: This section explains how Linux PTY works.
 3. 10-minute Codelab: Build and run a simple terminal emulator in Golang.
 4. Conclusion/Q&A","tty,linux,terminal emulator basics"
accept,getting started,Jayaganesh Kalyanasundaram,jayaganesh1997@gmail.com,,https://www.linkedin.com/in/jayaganesh-kalyanasundaram-7a5b7720/,,SRE,Google,,,,,,Concurrency for beginners," As a beginner myself (not so long ago) trying to learn this language, it always seemed like C++/Python like language. Golang is much more than just functions and execution, its probably the easiest to write code which exploits concurrency at its best and in an intuitive and readable manner. 

This talk, I'll discuss ""channels"" and ""go-routines"" with an example of MergeSort to demonstrate the power of this language for beginners.",concurrency for beginners
refuse,,Luis Cardoza Bird,luisalfonsocb83@gmail.com,"Software Engineer dedicated to the Mobile Development with Flutter and Kotlin/Swift, and Backend Developer with GO.
Cofounder of the Software Development Company <DEVotion/>.
Mobile Senior Lead at Contollo Consulting.
Member of Google Developer Group Nicaragua, member of Java User Group Nicaragua.
Creator of the flutter plugins formio_flutter and floaty_head.
Professor of Backend/Mobile for the Central America University.",https://www.linkedin.com/in/luis-cardoza-bird-82a1aa95/,@Crdzbird_,Senior Mobile Developer,Contollo Consulting,,,,,,Demystifying streaming with GRPC,"Let's GO and build our own streaming audio service, taking the big features offers by GRPC and combining with the incredible power of Go.

We will learn about how to create your own microservice architecture using GRPC with GO, learn about the main differences between Client/Server, and create a tiny mp3 player that sends in real time a specific music file!

And of curse we will know about the most common errors, and mispractices that everyone do at one moment and the best shortcut :)","streaming,GRPC"
accept,deep dive,Luis Cardoza Bird,luisalfonsocb83@gmail.com,"Software Engineer dedicated to the Mobile Development with Flutter and Kotlin/Swift, and Backend Developer with GO.
Cofounder of the Software Development Company <DEVotion/>.
Mobile Senior Lead at Contollo Consulting.
Member of Google Developer Group Nicaragua, member of Java User Group Nicaragua.
Creator of the flutter plugins formio_flutter and floaty_head.
Professor of Backend/Mobile for the Central America University.",https://www.linkedin.com/in/luis-cardoza-bird-82a1aa95/,@Crdzbird_,Senior Mobile Developer,Contollo Consulting,,,,,,Building Blockchains on the Go,"We will learn about how to create your own blockchain distribution with GO, learn about the differences between a Database and a Decentralized Database, also explain when, why and how to implement a blockchain using a Microservices architecture with GRPC, and have fun creating or own genesis cube and streaming services.","building,blockchains"
accept,deep dive,Mahendra Hiraman Bagul,bagulm123@gmail.com,"Professionally, I am fixing and breaking things since last 8 years. Prior to that, in my college days, I had configured my college network and since then I have never stopped. I have developed 5+ products from scratch in multiple technology stacks. Java was my first love but had to break up with it and now in relation with Golang and Javascript. In short, I am full stack developer but carry experience of every phase in SDLC in detail. You can find me on linkedin (https://www.linkedin.com/in/bagulmahendra), its quite uptodate.",https://github.com/mahendrabagul,@bagulm123,Software Engineer,InfraCloud Technologies,,,,,,Setting up mTLS for Client-Server powered with gRPC (Golang and NodeJs),"I want to share my experience on creating a mTLS setup for two different microservices talking to each other via gRPC. These gRPC services  are running on two searate kubernetes clusters, still keeping the mTLS communication intact. All configurations and code changes needed will be covered.Excited?

Setting up mTLS for Client-Server powered with gRPC (Golang and NodeJs)
======================================================================= 

Golang gRPC Server (Running with Server Certificates)
---------------------------------------------------------------

NodeJs gRPC Client (It possess its own client Certificates)
---------------------------------------------------------------

Both client and server talk to each other over the bidirectional streaming tunnel secured using mTLS.

The complex part of the session is how to keep the mTLS communication intact and pass the Client Certificates to the Golang gRPC server pod.

","nodejs,kubernetes,mtls,bidirectional streaming"
accept,getting started,Matan Cohen,matanc@wix.com,"Matan is a software development team lead with 11 years of experience.
Currently in the Production platform group at Wix, responsible for the new provisioning system and dev experience and velocity of the group.

When not coding, you can find him sitting on the beach or on the surfboard.


",https://www.linkedin.com/in/matan-cohen-b8253311a/,@co_matan,Software Development Team Lead,Wix,,,,,,Go development on local k8s with Skaffold,"How difficult is it to develop on your local machine?? How long is taking you to mock the production process? 
No more! With skaffold and other great new tools, it became very easy. 
Join me to learn about new golang development experience on local k8s cluster!

Talk agenda:
- local development with go (+demo)
- Skaffold (+demo)
- real use case - Golang + skaffold + helm + Bazel",skaffold helm kubernetes local development
accept,frameworks,Matteo Grella,matteogrella@gmail.com,"Matteo Grella’s expertise has the distinction of combining vision, leadership and technical background.

He has been engaged in Artificial Intelligence projects by private companies, academic institutes and government organizations, among them the University of Turin, the Accademia Della Crusca and the Italian Ministry of Defense.

With a particular focus on Natural Language Processing and related Machine Learning models, Matteo is active on open-source and authoring research papers. As Head of Artificial Intelligence, Matteo is responsible for the application of these technologies in the context of security-risks analysis within the EXOP Group.",https://www.linkedin.com/in/matteogrella/,@GrellaMatteo,Head of Research & AI,EXOP,,,,,,Natural Language Processing in Go,"My talk proposal is about spaGO, a work in progress that started as a platform to explore the common territory between Software Engineering and Machine Learning. It is the first and only pure Go library that focuses on cutting-edge NLP neural tech. without requiring any third-party DL framework.

Are you loving Go? But you're having an affair with NLP?
In this session, I'll talk about [spaGO](https://github.com/nlpodyssey/spago/), a lightweight **Machine Learning** library written in pure Go designed to support relevant neural architectures in **Natural Language Processing**.

spaGO makes it possible to create and train your own neural model, or import a pre-trained one from [Hugging Face](https://huggingface.co/) and [FlairNLP](https://github.com/flairNLP/flair), without moving to other languages and without the burden of third-party deep learning frameworks (so the deployment is just a single executable for your server!).

I'll tour the spaGO library's main packages in a top-down fashion, providing a quick overview of 
1. the built-in NLP modules served via gRPC and HTTP JSON API;
2. the straightforward implementation of well-known neural models (e.g., MLP, LSTM, BERT); 
3. the underlying mechanism of the internal machine learning framework; 

By the end of this talk, you will know how to exploit in your own projects the potential of state-of-the-art neural models for **Named Entity Recognition**, **Sentiment Analysis**, **Question-Answering**, **Machine Translation**, and much more.","machine learning,natural language processing,artificial intelligence,AI"
accept,getting started,Miriah Peterson,Petersonmiriah@gmail.com,"Miriah Peterson graduated from Brigham Young University in 2017 with a Bachelor’s degree in Physics. She attended one semester of graduate school at the University of Oklahoma in 2017, but dropped out to start a career as a software engineer. She is currently a Data Engineer at Weave in Lehi, Utah. She has given many talks on machine learning, data engineering, and data architecture strategy. Additionally she works in the community as a board member for the Forge Foundation Inc and organizer of GoWest Conference, WomenWhoGo Utah meetup, and Machine Learning Utah meetup.
",https://www.linkedin.com/in/miriah-peterson-35649b5b/,@captainnobody1,Data Engineer,Weave,,,,,,Go from Zero to Hero: Learning Go when you don't know how to code,"Go as a language is infamously not friendly to new developers. This is funny to me because I consider it my ""first"" language. This talk explores how to use go to teach first time developers basic programing topics, how to set up a dev environment, how to write a program and basic coding practices.

# Intro
I believe the simplicity and cleanliness of the Go programming Language makes it suitable as a language for first time programmers. However, things like a GoPath, Dependencies, binaries, CLIs, IDEs, and Git make it hard for someone who has never coded before to just pick up go in their free time. This [tutorial](https://soypete.github.io/Golang_tutorial_zero_to_hero/) is written for people who have less that one year programming experience or even no experience whatsoever. It is to help them learn go and master their tools as well. I do not have experience in education theory, but from personal experience this course is curated in an order to help them learn go as well as all the scary stuff. In this talk we will go over the sections and tools used to help first time devs Master go.

# Open Source Learning
As experience devs we can learn most things online and for free. Blog posts, tutorials, demos, meetups, etc. these all contribute to our learning via `Open Source`. But what about first time devs? we require them to take university courses or bootcamps? They have to pay thousands of dollars just to start off using tools and tech that are not top of the line? 

The idea behind this tutorial it to replicate the opensource blog posts and tutorials, but to make it for beginners. And to make it truely opensource anyone can contribute to it, I am just waiting for someone to make a pr and finish it for me *cough cough* (that is only half a joke). Hopefully it becomes something that can get people off the ground and ready to tackle projects either on their own or in a workplace setting. 

# Tutorial outline

## [Part-1 Intro to Programming]

These are the basics we learn in our first programming class. Devs learn them in boot camps. We have to explain the why to first time devs. How they are tools on your tool belt that will allow you to start solving harder problems. 

### [1.1 Hello World]

### [1.2 Types]

### [1.3 Functions]

### [1.4 Conditionals]

### [1.5 Loops]

## [Part-2 Using the Command Line]

The hardest this for me what figuring out what a Dev env was. Here we walk through it step my step. by the end we should be ready to build a go program.

### [2.1 Bash]

### [2.2 Git]

### [2.3 Install Go]

### [2.4 Pick Your IDE]

## [Part-3 Write a Go server]

We deal with servers and apis everyday. Is it part of Web dev. Seems like a good place to start.

### [3.1 What is an API?]

### [3.2 Chat server Example project]


## [Part-4 Dependencies]

This may be common place for Java devs, but for new developers it using other libraries and tools ins a new concept

### [4.1 Using Go Modules]

### [4.2 Using Opensource Libriares]


## [Part-5 Checking your Code]

Now we need to prepare them for industry best practices. 

### [5.1 Linters]

### [5.2 Unit Tests]

### [5.3 Test Coverage]


### [5.4 Web Crawler Example]


## [Part-6 Deploying a Service]

I haven't worked anywhere that doesn't use docker so this seems like an invaluable skill

### [6.1 Docker]

# Tools 
- https://goplay.space/
- vscode
I am sure I will have more once the tutorial is more fleshed out.

# Additional Resources
Other places to go learn pulled from the doc


","from zero to hero,learning go"
accept,lessons learned,Mofizur Rahman,mofi.ccny@gmail.com,"Mofizur Rahman (@moficodes) is a Developer Advocate at IBM. His area of interests include container orchestration and micro services. His favorite programming language these days is Go. He also tinkers with Node, Python and Java. He is also learning and teaching in the Go, Kubernetes, Docker and Microservice community. He is a strong believer of the power of open source and importance of giving back to the community. He is a self proclaimed sticker collecting addict and has collected several box full of stickers with no signs of stopping. He dabbles in photography sometimes.

He writes tech blogs sometimes which can be found on https://dev.to/moficodes.",https://www.linkedin.com/in/moficodes/,@moficodes,Developer Advocate,IBM,,,,,,How we accidentally created a Cloud on our Cloud,"In an effort to automate tasks for our users we ended up creating a cloud (kind of). In this talk we will describe our journey towards automation, and how we accidentally created a Cloud on our Cloud and why we chose go to do it all.

Part of the job of a Developer Advocate is the ability to demo or show off portions of your technology stack to possible users. At IBM we run many workshops and tech demos every week for our clients and conferences. We need to create, monitor, maintain and clean these assets. In this talk we will describe our automation journey from bash scripts run and maintained by individual developers to automating the creations and deletion on automatic schedule with a UI. We will discuss situation, our iterations on what we tried and the painful portions of them, and how we accidentally created a Cloud interface on top of the IBM Cloud, or easier said, we created a Cloud on our Cloud. 

Ideally, we’ll show our journey and the lessons we learned along the way, and as an audience member, you’ll come away with nuggets of useful tooling to make your cloud usage more streamlined, and hopefully, you’ll see the pitfalls we fell in and you can avoid them yourself. We’ll show off some bad code, some good code, and some robust code; all open source and in Go and available to allow you to leverage it too.","cloud,cloud native"
accept,security,Mohammad Shahbaz Alam,mdsbzalam@gmail.com,"Shahbaz is a full stack developer and open source enthusiast, Developer Advocate @ Magic Labs, GDG Ranchi Organizer, Auth0 Ambassador, and Mozilla Representative. He loves teaching and sharing his learnings at conferences and meetups related to Serverless, Authentication and Authorization, Google Technologies, Security, Web Extensions, SPAs, PWAs and VR/AR/XR.",https://www.linkedin.com/in/mdsbzalam/,@mdsbzalam,Developer Advocate,Magic,,,,,,Secure your Go APIs with Decentralised Identity Tokens,"After so many breaches and passwords leaks, developers must reunite and reinvigorate APIs to protect their Applications, making the internet a secure global public resource, open and accessible to all. In this talk, I will cover how to secure your Go APIs using Decentralised Identity Tokens.

The APIs keeps changing, and the programming languages like Go are shifting the paradigm of API consumption. We often dedicate a lot of time to craft powerful APIs but overlook proper security measures. Setting up an authentication layer is, without a doubt, one of the most challenging yet necessary tasks within any web application.

In this talk, we’ll look at proper ways to secure our Go APIs with Decentralised Identity Tokens. We’ll go from learning what Decentralised Identity standards are, how the users’ identities are self-sovereign by leveraging blockchain public-private key pairs, why they’re the future of API security, and to put theory into practice we will build a real-world implementation using Go where I’ll show common best practices.","API,authorization"
accept,lessons learned,Piyush Verma,github@piyushverma.net,"Piyush Verma is co-founder and CTO at Last9.io, an SRE platform that aims to minimize the toil that SREs and decision-makers need to go through to reduce the time to make a decision.

Earlier, he led SRE @ TrustingSocial.com to produce 600 million credit scores a day across 4 countries. 
In his past life, he built oogway.in (exit to TrustingSocial.com), datascale.io (exit to Datastax),  and siminars.com.
",https://www.linkedin.com/in/meson10/,@realmeson10,CTO,last9.io,,,,,,Concurrency primitives of Golang. How to use and how not to.,"Every marginally, sophisticated Golang code that I write needs refactoring to solve race and deadlocks. The concurrency primitives like atomic, sync, channels, and waitGroups have their uses and fail. The lack of understanding ends up with a lot of rewrites. This talk aims to solve that.

I have seen more Go code shipped as glue programs and binaries than actual web servers, usually intended to do the heavy-lifting of data transfers shortly and reliably. With such clinical needs comes a need to handle concurrency and parallelism. And each time more than one worker is doing a job, there will be contention and starvation.
A lack of useful design principle guides ends up in Engineers writing non-performant, race-condition prone codes or ending up refactoring. 

To provide an example, some of the things I wish I had known:
- the *real* difference of when to use a Channel, a waitGroup, an atomic, or a mutex
- one shouldn't be using a wg.Add() inside a goroutine. 
- How does one solve the problem of multiple listeners waiting on an event?
- How atomic Int operations can synchronize multiple workers signaling completion of work.

The talk is not limited to the above scenarios. It intends to cover a few of these constructs to reduce the refactoring that Golang engineers have to go through while also building a better understanding of distributed systems' design patterns.",concurrency primitives
accept,deep dive,Praveen Sastry,sastry.praveen@gmail.com,"Distributed systems Developer with experience in mentoring, facilitating and leading teams offering a decade of experience in Large Scale cloud-native application and tooling development. Possessing excellent analytical skills summed up with strong knowledge in Go, JavaScript, Kubernetes, AWS, Terraform, Vault, Consul, Service Meshes, Observability and monitoring tools. Active open source contributor and contributed to projects like Kubernetes, gvisor, grafana, terraform, firecracker-containerd. I enjoy speaking and spoke at conferences like conference like JS Conf, ContainerCamp AU, DDD Sydney and Go Days. Organiser of Serverless Days Melbourne.",https://www.linkedin.com/in/praveen-sastry-69a00222/,@geek4evr,Distributed systems Developer,,,,,,,Multi-cloud portability for Go applications,"Developers love Go for cloud development because of its efficiency, productivity, built-in concurrency, and low latency. One common theme with many organisations is the need for portability across cloud providers. This talk deep dives into architecting multi-cloud Go applications with go-cloud.

Often teams want to deploy robust applications in multi-cloud and hybrid-cloud environments, and migrate their workloads between cloud providers without significant changes to their code. To achieve this, they attempt to decouple their applications from provider-specific APIs in order to produce simpler and more portable code. However the short-term pressure to ship features means teams often sacrifice longer-term efforts toward portability. As a result, most Go applications running in the cloud are tightly coupled to their initial cloud provider.

As an alternative, teams can use Go Cloud, a set of open generic cloud APIs, to write simpler and more portable cloud applications. Go Cloud also sets the foundation for an ecosystem of portable cloud libraries to be built on top of these generic APIs. Go Cloud makes it possible for teams to meet their feature development goals while also preserving the long-term flexibility for multi-cloud and hybrid-cloud architectures.","multi-cloud,portability,applications"
accept,getting started,Sylvain Combraque,sylvain@les-tilleuls.coop,,https://www.linkedin.com/in/sylvain-combraque/,@darkweak_dev,Software Developer,Les-Tilleuls.coop,,,,,,Go learning by project: Souin (rex),"I'm Træfik user since v1.4 but there was no caching system. I scrolled over the internet to know if any solution exists but nothing appear then I decided to write my own Træfik cache system. This talk it will be a feedback on Golang learning, issues, tips and tricks to start on this awesome language

I discovered Go language but didn't have any time to follow multiples tutorials to learn it. But one day I discovered Træfik reverse-proxy project when I wanted to switch my infrastructure into fully dockerized one. I'm Træfik user since v1.4 but after many months using it I encountered an issue : there were no caching system in this reverse-proxy. I scrolled over the internet to know if any solution exists but nothing appears.

Then I decided to write my own Træfik cache system, but the main question was ""Which language?""  
 - PHP ? Nah.  
 - Nodejs ? What a joke !  
 - C++ ? I didn't learn this language at school and it's really insane to learn.

Then I was on Træfik github repository when I decided to write it in Go. Another good point: that's compatible with docker integration.

So I started the project and called it [Souin](https://github.com/darkweak/Souin)  
This talk will be a feedback on Go learning, issues, tips and tricks to start on this awesome language.","Souin,feedback"
accept,deep dive,Tugberk Ugurlu,tugberk@outlook.com,"Software Engineer and Tech Lead, with a growth mindset belief and 10+ years of practical software engineering experience including technical leadership and distributed systems. I have a passion to create impactful software products, and I care about usability, reliability, observability and scalability of the software systems that I work on, as much as caring about day-to-day effectiveness, productivity and happiness of the team that I work with. I occasionally speak at international conferences (tugberkugurlu.com/speaking), and write technical posts on my blog (tugberkugurlu.com).

I currently work at Deliveroo as a Staff Software Engineer in the Consumer division, working on distributed backend systems which have high throughput, low latency and high availability needs. Before that, I used to work at Redgate as a Technical Lead for 4 years, where I led and line-managed a team of 5 Software Engineers. I was responsible for all aspects of the products delivered by the team from technical architecture to product direction. I was also a Microsoft MVP for 7 years between 2012-2019 on Microsoft development technologies.",https://www.linkedin.com/in/tugberk/,@tourismgeek,Software Engineer,Facebook,,,,,,Implementing Resilient Microservices at Scale in Go,"Running resilient services at scale is hard, and nothing is more effective on learning about the related challenges than actually running services at scale with resiliency in-mind. I want to give you a rundown of the techniques and patterns to run our services implemented in Go at Deliveroo.

There are some many factors that can go wrong and even if you take all the right steps with your own implementation, your dependencies can still fail you which could lead to cascading failures. Go programming language gives you an effective tooling to build these service for your scaling needs but it’s still not a magic bullet.
At Deliveroo, we have years of experience implementing HTTP services with Go and running them on production with resilience for high concurrency workloads. In this session, we will go through common pattens and techniques we employ at Deliveroo to provide resilience for our Go services as well as touching on some other areas which are easier to miss but could have notable implications for the health of your services. 

At the end of this session, you should be better equipped to make your existing Go applications more resilient and meet the scalability needs of your systems. Even if you are not using Go to implement your HTTP services, you should still be able to take away some learnings that you can apply to your own systems regardless of the technology stack.",resilient microservices at scale
accept,frameworks,Abdullah Alrasheed,abdullah@integranet.ph,Developer for over 20 years started writing code at age 11. Currently I'm the CTO of IntegrityNet. I come from a background in AI and machine learning.,https://www.linkedin.com/in/abdullah-alrasheed-/,@twistedhardware,CTO,IntegrityNet,,,,,,uAdmin - the Golang Framework,"We developed this web framework in 2016. We will open source it this December, 2018. I would like to introduce the library in your conference. It is really easy to use, full of features and blazing fast.

We built many products using this framework including Zumumu, eGrub, digibutler, motelTV, and a CRM that we use for our ISP.","uAdmin,framework"
accept,getting started,Oliver Fuerst,ofuerst@tsak.net,,https://www.linkedin.com/in/oliverfuerst/,,Lead Developer,Restorepoint,,,,,,DevOps automation with Go,"In his talk, Oliver will show the many ways his team is using Go to automate every aspect of their development workflow from race condition reporting, deploying releases, bridging Freshdesk and Gitlab, versioning internal libraries and many more.","devops,automation"
refuse,,Oliver Fuerst,ofuerst@tsak.net,,https://www.linkedin.com/in/oliverfuerst/,,Lead Developer,Restorepoint,,,,,,Love the monolith,"In his talk, Oliver will make the case for the Go monolith. In his function as the Lead Developer for Restorepoint, he and his team maintain a large monolith that has everything but the kitchen sink. He will show why a monolithic architecture makes sense and how Go’s standard library and relatively easy to use concurrency make it a perfect tool for the problem they are solving.",love the monolith
accept,frameworks,Preslav Rachev,hey@preslav.me,,https://www.linkedin.com/in/preslavrachev/,@preslavrachev,Founder,PSV,,,,,,Between Order and Chaos: Creating Immersive Generative Art With Go,"Generative art is a unique form of artistic expression, building bridges between computer programming, randomness, and visual aesthetics. It has kept my imagination for over a decade. While I have never been particularly skilled at drawing, I have always been amazed by what one could achieve with a couple of lines of code. At the beginning of this year, I wrote and and self-published a book about the use of Go as a language for graphics and generative art programming.

Unlike popular choices such as Processing, NodeBox, openFrameworks, etc., I picked Go for two simple reasons:

Go’s syntax is easy enough that virtually anyone can learn it quickly. The language is far more versatile than what most programmers use it for.

I am hoping that my talk will give the audience a new perspective about their favorite language, and the chance to discover an artistic side they did not know thy possessed.","order and chaos,create immersive generative art"
accept,deep dive,Sean Dubois,sean@pion.ly,,https://www.linkedin.com/in/sean-dubois/,,Developer,Apple,,,,,,WebRTC: The secret power you didn't know Go has,"Robots, Virtual Reality, Multiplayer NES Games and Censorship Circumvention. These are just some of the things being built with Go and WebRTC. This talk will teach you about the technology that is powering the cutting edge and why Go is the language to do it.


If you know WebRTC you know Pion WebRTC. With 7k stars on Github and the 23rd most popular channel on Slack it is growing fast. The company formant.io recently announced a demo that allowed you to control a spot robot right from your browser using it. Piepackr allows you to play multiplayer NES games with friends. Tor is using it to bring uncensored internet to those that can’t even download binaries.

In this talk you won’t learn just how to build things with WebRTC, but get a whirlwind tour of concepts that you can apply to other projects. Learn high level topics like NAT Mapping, Congestion Control and Error Correction. These are things that we take for granted, but don’t have the luxury in high performance networking. Learning these topics will make you stronger going back to other problems.

Then see a quick demo of the Pion WebRTC API. How can you express these RTC topics using a simple Go API? Last we will finish with the most popular projects build with WebRTC in Go. This will inspire you to go build your project that will change the world.","WebRTC,secret power"
accept,deep dive,Lorna Mitchell,lornajane@aiven.io,,https://www.linkedin.com/in/lornajane/,@lornajane,Head of Developer Relations,Aiven,,,,,,Go Big with Apache Kafka,"When your data needs outgrow the traditional setup, spend some time getting to know Apache Kafka, an open-source, distributed event streaming platform. With high performance and epic scalability, Apache Kafka can get the data flowing between your applications, components, and other systems with the minimum of fuss. 

This session will show you around the basics of Kafka, explain the problems it is best suited to solve, and  introduce some of the tools that make dealing with it so delightful. 

We'll also show how you can use Kafka from your Go applications, and showcase the integrations such as Kafka Connect that can really take your systems to the next level. This session is recommended for engineers, data specialists and tech leaders alike.","go big,apache kafka,open source"
accept,security,Mathilde Raynal,mathildealienor.raynal@gmail.com,,https://www.linkedin.com/in/mathilde-raynal/,,Cybersecurity Student,EPFL & ETHZ,,,,,,Quantum-Resistant Native Go Programs: Taking the (Quantum) Leap,"The arrival of Quantum computers threatens the security of cryptography  as we know it. To take a step ahead, NIST launched a competition in 2016  to find the best quantum-resistant algorithms. Out of the 105 initial  candidate schemes, only 15 were selected as finalists in 2020. The  research community has done extensive work on assessing their security  and weaknesses, and we are now at a point where we can start using them  in practice. Unlike the competition that designated AES as the standard  for symmetric encryption, it is expected for multiple schemes to be  standardized at the end of this one. Indeed, the wide range of approaches  taken by the finalists all come with different advantages and  disadvantages that might not be suited for all use-cases.

This presentation motivates the need for post-quantum cryptography,  offers an introduction to the various techniques used to build quantum resistant protocols and gives an insight on what to expect in the coming  years. 

Among the remaining candidates, we selected Kyber and Dilithium - two  schemes offering respectively a Key Encapsulation Mechanism and a  Signature algorithm- and ported the reference implementations to Go. We  deviate from a straightforward code translation in order to preserve the  security of the implementation, especially against Side-Channel attacks,  and to benefit from Go’s special features to obtain a fast and reliable  library. We are open-sourcing the library we developed, and it will be  available on Github at the time of the talk. We will go through its API and  the way one might use it in their own codebase to obtain quantum  resistant protocols. 
","quantum-resistant,native go programs"