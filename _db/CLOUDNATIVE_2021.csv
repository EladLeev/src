Featured,Track,Name1,JobTitle1,Company1,Name2,JobTitle2,Company2,Title,Abstract,LinkedIn1,Twitter1,LinkedIn2,Twitter2,Slides,Picture,YouTube,Keywords,Teaser
Yes,,Or Elimelech,SRE Lead,StackPulse,Eldad Rudich,Director of Engineering,StackPulse,How we used Open-Source tools to create a gating service for Flagger,"At StackPulse we use a full CI/CD pipeline with FluxCD + Flagger, in order to support our CD culture needs. We also developed Puerta — a homegrown gating service that implements the Flagger webhook phases to support time-based approvals, triggering E2E jobs (CircleCI etc.), load-testing and auto release to production once canary passes on staging.

In this session, we’ll discuss why and how we built Puerta and dig into three key areas:
- How to customize your CD workflow to fit your needs and culture
- How to empower developers so they can quickly deploy their code securely 
- How we dedicated time and resources to developing this internal CD service",https://www.linkedin.com/in/0r3limelech/,@orelimelech_,https://www.linkedin.com/in/eldad-rudich/,@d3bu9,,cloud_or_eldad.png,,"open source gating service,flagger",
Yes,,Michael Sickles,Solution Architect,Honeycomb.io,,,,Using OpenTelemetry in a polyglot environment,"Michael Sickles will walk through instrumenting the Google Microservices demo app in OpenTelemetry. 

This demo app uses Go, Java, NodeJS, .Net, and Python all communicating in a distributed microservice architecture.  

Michael will talk about the challenges he faced to get everything to connect and show up in a single OpenTelemetry Trace.  ",https://www.linkedin.com/in/msickles/,,,,,cloud_michaels.png,,"telemetry,polyglot environment",
Yes,,Uma Mukkara,CEO,Chaos Native,,,,Taking control of reliability in cloud native systems,Reliability is key to adoption and scale of cloud native systems. Chaos Engineering is a way of measuring how reliable the services are. There are a host of ways to use Chaos Engineering in DevOps. This session describes the importance of Chaos Engineering and best practices around them specifically to Cloud Native environments.,https://www.linkedin.com/in/uma-mukkara/,@Uma_Mukkara,,,,cloud_uma.png,,"reliability,cloud native systems",
No,deep dive,Natalie Pistunovich,Lead Developer Advocate,Aerospike,,,,Building a K8s Operator for a Distributed Database,"How did we build a k8s operator that allows 100% up time for a high availability high workload database?

Operating a distributed high load, high throughput database in the cloud comes with several interesting challenges. In order to manage real-time serving of mission critical workloads at 100% availability we developed a Kubernetes operator that handles the operational complexities.
 
We needed to handle the following requirements: 
- Apply live patches
- Replace live cluster with tens of nodes
- Handle degraded/crashed nodes 

Under these conditions: 
- High Availability - remain 100% online with no down time
- Operate under very high workloads and traffic 
- Manage replicated records across different hardware failure groups (rack awareness)

Due to its stateful nature and the type of workloads that are usually handled, cluster management and recovery are non-trivial. We are using the Operators API to handle that complexity and control the clusters from within Kubernetes.

In this talk we’ll cover the steps we took to plan and execute and the challenges we faced and share the best practices.
",https://www.linkedin.com/in/nataliepistunovich/,@nataliepis,,,,cloud_natalie.png,,"k8s operator,distributed database",
No,deep dive,Adam Gordon Bell,Developer Advocate,Earthly Technologies,,,,Compiling Containers,"What happens when you take a Dockerfile and build it? How is the series of commands executed and turned into a docker image and then a container?

The answer is BuildKit. BuildKit is an OCI image builder and it is behind every docker build and the secret sauce in several other projects.

In this talk, I will explain how BuildKit works. We will learn it is a compiler and like many compilers, it has a frontend, a backend, and an internal representation (IR). As we will learn about this hidden gem we will also learn a little bit about compilers and containerization.",https://www.linkedin.com/in/adamgordonbell/,@adamgordonbell,,,,cloud_adamgordon.png,,compiling containers,
No,deep dive,M4dz,Tech Evangelist - Developer Advocate,alwaysdata,,,,Cgroups for the best: Using container technologies as a PaaS provider,"Kubernetes, Docker, LXC, Virtual Machines, Micro-services… And what if all the trendy tail of containers isn't just f** up? Let's see how we run isolation and containers in our PaaS using POSIX and Linux native features: Cgroups!

We power a PaaS platform, but we don't choose to rely on fancy containers technologies to run isolation. Instead, we intensively rely on permissions and cgroups. Here's an explanation of our architecture, how we use it in production, and why we made those choices that we support for a while now. A proper introduction to isolation in production, for a lightweight environment, far away from Docker, Kubernetes, and others trendy stuff.",https://www.linkedin.com/in/m4d-z/,@m4d_z,,,,cloud_madz.png,,"cgroups,container technologies,paas provider",
No,deep dive,Mary Grygleski,Developer Advocate,IBM,,,,Exploring Stateful Microservices built with Open Liberty in Kubernetes,"How does one choose to architect a system that has a Microservice / REST API endpoints?  There are many solutions out there.  Some are better than others.  Should state be held in a server side component?  Generally we are told this is a bad practice, but is it?  It’s unclear and this confusion may lead to poor technology stack choices that are impossible or extremely hard to change later on as your system evolves in terms of demand and performance.

We learn from the experience of others.  Choosing who to follow is hard and this topic will help you the developer or technical decision maker to meet your company’s I.T. demands in the modern world.  We will explore into a tried and true, enterprise-grade, Java Open Source stack - Open Liberty in Kubernetes - which exercises and promises to fulfill the expectations of a modern server solution that epitomizes all the elements needed to build, run and deploy an efficient production system today.

We will examine and demonstrate the fundamentals of such a system that’s built with Open Liberty in Kubernetes:
* Microservices/REST API –  Options to use when running your apps in the JVM
* Concurrency – how to take advantage of multi-core CPUs and clustered distributed systems 
* Stateful vs Stateless - while stateless apps are easier to implement, the bulk of the apps in production are stateful which involve a higher level of complexity and risk, especially when data would need to travel across multiple machine and network boundaries
* Deployment – how about containerization and orchestration using Kubernetes?
",https://www.linkedin.com/in/mary-grygleski/,@mgrygles,,,,cloud_mary.png,,"stateful microservices,open liberty,kubernetes",
No,deep dive,Ismael Hommani,Cloud Native Developer,WeScale,Joachim Rousseau,Coding Architect,WeScale,"The Cloud, the application and the configuration","Cloud is now well accepted in development practices. Projects with no cloud element are more the exception than the rule. However, this new paradigm requires adjustment for your workloads.
It is not just about containerization, micro-service approach or managed services usage. 
Code organisation must also reflect the adoption of this new paradigm.
Configuration is part of it. Traditionally thought as an operational element, it becomes more and more prevalent in an environment where high-scalability, distribution but also failures are the watchwords.

How to guarantee the consistency of our configuration amongst the thousands of instances that represents our applications ? How to automate the entire configuration lifecycle ? Should we even think about live configuration update? 
Questions that predate the cloud era but that have been exacerbated by the cloud arrival.

In this session we would like to introduce you with a Cloud-Native pattern called “Configuration layer”. Through theory and practice, we would like to demonstrate the elegance of the approach in a Cloud-Native environment to industrialize your configuration management.",https://www.linkedin.com/in/%F0%9F%92%BB-ismael-hommani%E2%98%81%EF%B8%8F-37b45576/,,https://www.linkedin.com/in/joachimrousseau/,,,cloud_ismael_joachim.png,,"cloud,application,configuration",
No,deep dive,Phil Wilkins,Senior Consultant & Tech Evangelist,Capgemini,,,,Making Logs Work for you with Fluentd,"Understanding what is happening with a distributed solution can be challenging. Whilst the solution space for monitoring and application log management is mature, there is a tendency for organizations to end up with multiple tools which overlap in this space to meet different team needs – result multiple agents/probes on every server. Many of these tools work by bulk central analysis rather than enabling events of interest to be spotted as they’re logged.

Fluentd presents us with a means to simplify the monitoring landscape, address challenges of hyper-distribution occurring with microservice solutions, allowing different tools needing log data to help in their different way. Without imposing a specific analysis tool on relevant teams.

In this session, we’ll explore the challenges of modern log management.  We’ll look at how Fluentd works and what it can bring to making both development and ops activities easier.  To do this we’ll explore and demos some examples of Fluentd and how it makes life easier & more efficient.",https://www.linkedin.com/in/philwilkins/,@mp3monster,,,,cloud_phil.png,,"logs,fluentd",
No,deep dive,Akanksha Sheoran,EMEA Business Development Manager,AWS,,,,"Save, Grow and Innovate using AWS Databases ","In this session, you will learn how AWS databases help you save cost, increase agility and innovate faster. We will also look into our NO-SQL database portfolio and Managed open source DB's ",https://www.linkedin.com/in/akanksha-sheoran-26535520/,@akankshasheoran,,,,cloud_akanksha.png,,"save,grow,innovate,databases",
No,deep dive,Rafał Leszko,Cloud-Native Team Lead ,Hazelcast,,,,Architectural Caching Patterns for Kubernetes,"Kubernetes brings new ideas of how to organize the caching layer for your applications. You can still use the old-but-good client-server topology, but now there is much more than that. This session will start with the known distributed caching topologies: embedded, client-server, and cloud. Then, I'll present Kubernetes-only caching strategies, including:
- Sidecar Caching
- Reverse Proxy Caching with Nginx
- Reverse Proxy Sidecar Caching with Hazelcast
- Envoy-level caching with Service Mesh

In this session you'll see:
- A walk-through of all caching topologies you can use in Kubernetes
- Pros and Cons of each solution
- The future of caching in container-based environments",https://www.linkedin.com/in/rafal-leszko/,@RafalLeszko,,,,cloud_rafal.png,,"architectural caching patterns,kubernetes",
No,deep dive,Ricardo Miranda,Big Data Consultant,Closer Consulting,,,,Automation is where a project starts,"Cloud native is all about speed, time from merging a PR to have this feature in production is priceless. The unique successful path is starting automation development immediately. 
This strategy as the side effect of incrementally hardening the automation layer, testing in prod the automation layer.",https://www.linkedin.com/in/ricardocmiranda/,,,,,cloud_ricardo.png,,automation is where a project starts,
No,deep dive,Yonatan Maman,VP Engineering,Outbrain,,,,REST in peace,"since the web2.0, and the Ajax days, REST became the usual suspect for building APIS.  Thing is what was great 14 years ago, might not be the case today.

In this talk, I will focus on the weak points of REST, and the alternatives.",https://www.linkedin.com/in/yonatanm/,@yonatanm,,,,cloud_yonathan.png,,rest in peace,
No,multi-cloud,Adrienne Tacke,Senior Developer Advocate,MongoDB,,,,Multi-Cloud Magic: Leveraging Multi-Cloud Clusters in Real-World Scenarios,"Public, Private, Hybrid...Multi-Cloud?

As the cloud development options and architectures continue to evolve, we've finally found ourselves at the next new thing: Multi-Cloud. What is it? Do we really need it? How would you take advantage of a multi-cloud solution?

In this talk, I'd like to describe a few real-world use cases where a multi-cloud solution is currently in production, specifically when it comes to data. 

Specifically, we'll see how multi-cloud helps:
- Data Sovereignty scenarios
- Fulfill varied client cloud requirements
- Developers have more freedom in choosing services
- Achieve greater availability

A demo on how to setup a multi-cloud cluster will also be shown.

The audience will leave with a more confident understanding of real-world, multi-cloud use cases and see how to create their own!",https://www.linkedin.com/in/adriennetacke/,@AdrienneTacke,,,,cloud_adriennetacke.png,,"multi-cloud magic,clusters",
No,multi-cloud,Lawrence Finn,Author,Cloud Sidecar,,,,Enabling multi-cloud and breaking vendor lock-in with Cloud Sidecar,"Many companies want to become multi-cloud or have the ability to switch clouds. However, cloud providers try hard to lock in customers with proprietary services like storage. Cloud Sidecar provides a simple way to take existing software and deploy it to different clouds without complex rewrites.

Cloud providers offer numerous services that abstract away common problems from software developers.  No longer do companies need to manage their own file storage solutions, message queues, key-value stores, etc...  The problem is, once you start building software on top of these services you get locked into that specific cloud provider.  This is better known as vendor lock-in.  Of course, the more services you use the harder it is to go multi-cloud or switch clouds.  Cloud Sidecar solves the problem of vendor lock-in by converting requests from one cloud's API to another cloud's API.  So if your applications use Amazon Web Services' S3 and SQS, you can easily deploy Cloud Sidecar next to your application and now it automatically uses Google Cloud's GCS and Pubsub.  Learn about Cloud Sidecar, how it works, how easy it is to modify your software to use it, and how you can deploy it.",,@lawrencefinn,,,,cloud_lawrence.png,,"multi-cloud,breaking,cloud sidecar",
No,multi-cloud,Leonardo Murillo,CTO,Qwinix,,,,Doing GitOps for multicloud resource management using Crossplane and Flux2,"How would you like for resources to be automatically created across any clouds of your choosing by simply pushing a manifest to a repository? In this talk we'll see hands on how to do multi cloud management following the GitOps operating model by leveraging Flux2 and Crossplane!

A continuous delivery world without pipelines, with automatic reconciliation of resources eliminating all drift in configuration, everything versioned and everything declarative! **That is what GitOps is all about.** _What if only you could follow this same operating model for all your cloud resources, across any public cloud?_

**In this talk you'll learn how to do precisely that!** We will be using Flux2 and Crossplane, and you will see hands on how, using these two CNCF projects, you can manage your entire multicloud architecture using Kubernetes as your control plane while following the GitOps principles.

You will learn to:
- Install Flux2
- Using Flux2, install Crossplane in your cluster
- Configure AWS and GCP providers for Crossplane
- Deploy resources across both clouds with nothing but a push to the repo

This talk is all about code! A couple of slides in the deck to give a brief intro of GitOps and the two projects we'll be using, and then it's all live code!",https://www.linkedin.com/in/leonardomurillo/,@murillodigital,,,,cloud_leonardo.png,,"gitops,multicloud,crossplane,flux2",
No,multi-cloud,Paweł Skrzypek,CTO,7bulls.com,Alicja Reniewicz,Full Stack Engineer,7bulls.com,Autonomous Multi-Cloud serverless deployment and optimized management,"The dynamic development of Cloud Computing with the introduction of novel Cloud computing models like serverless creates new challenges for Cloud deployment. 

This presentation describes how to implement Multi-Cloud native strategies using advanced an open source framework that allows for Cloud-agnostic Multi-Cloud deployment and optimized management of the serverless applications based on flexible monitoring, context aware maximization of the application owner’s utility of the deployed serverless components, and autonomic reconfiguration based on the application’s current execution context.

All stages of the cloud deployment planning and designing process will be shown. Also, the key execution steps will be provided.
",https://www.linkedin.com/in/pawel-skrzypek-836344/,,https://www.linkedin.com/in/alicja-reniewicz-834b321bb/,,,cloud_pawel_alicja.png,,autonomous multi-cloud serverless deployment,
No,observability,Aviad Mor,CTO,Lumigo,,,,Observability across serverless asynchronous managed services,"While applying distributed tracing on your own code is relatively simple, the real challenge is how to trace a full transaction across services. In this session, we'll understand the technical challenges gaining observability with managed services and see together how we can solve them.

Serverless computing transactions are a combination of owned code (like AWS Lambda) and managed services (Like SNS, SQS, EventBridge, DynamoDB and more). Applying distributed tracing on your own code through instrumentation is relatively simple (though require a lot of work). The challenge lays with the managed service, how to trace a full transaction across services like queues, streams, and databases. In this session we will discuss: 
- The technical challenges gaining observability with managed services. 
- Methods to build the full trail of transactions across managed services. 
- Ideas on how to obtain observability in a highly async distributed world. 
- We’ll technically drill down to some managed services examples.

Let’s have an async observability discussion.",https://www.linkedin.com/in/aviadmor/,@AviadMor,,,,cloud_aviad.png,,"observability,serverless,asynchronous managed services",
No,observability,Dotan Horovits,Product Evangelist,Logz.io,,,,Monitoring Microservices The Right Way,"Modern systems today are far more complex to monitor. 
Microservices combined with containerized deployment results in highly dynamic systems with many moving parts across multiple layers. 
These systems emit massive amounts of highly dimensional telemetry data from hardware and the operating system, through Docker and Kubernetes, all the way to application and its databases, web proxies and other frameworks.

Many have come to realize that the commonly prescribed Graphite+StatsD monitoring stack is no longer sufficient to cover their backs. 
New requirements need to be considered when choosing a monitoring solution for the job, including scalability, query flexibility and metrics collection.

In this talk Horovits will look at the characteristics of modern systems and what to look for in a good monitoring system. He will also discuss the common open source tools, from the days of Graphite and StatsD to the currently dominant Prometheus.
This talk will put you on the right track for choosing the right monitoring solution for your needs.
",https://www.linkedin.com/in/horovits/,@horovits,,,,cloud_dotan.png,,"monitoring,microservices",
No,observability,Erez Berkner,CEO,Lumigo,,,,Monitoring Kubernetes Vs. Serverless based applications,"Monitoring Kubernetes based application is a common practice nowadays. What is changed when moving to Serverless. Comparing an established practice to a new practice can assist developers to build the right journey to the serverless world.

The software we write does not always work as smoothly as we would like. In order to know if something went wrong, understand the root cause and fix the problem, we need to monitor our system and get alerts whenever issues pop up. There are many useful tools and practices for Kubernetes based applications. As we adopt serverless architecture can we continue to use the same practice? Unfortunately, the answer is no.

In this session we will discuss:
The differences between monitoring Kubernetes and serverless based applications
Best practices for serverless monitoring
Methods to efficiently troubleshoot serverless based applications

Join our session and start enjoying the great benefits of serverless computing.",https://www.linkedin.com/in/erezbe/,@erezberkner,,,,cloud_erez.png,,"monitoring kubernetes,serverless based applications",
No,observability,Michael Haberman ,CTO,Aspecto,,,,Hundreds of Microservices without breaking your APIs,"Managing dozens or hundreds of microservices in scale can be very challenging. As developers, we often find ourselves blind to how our application is actually behaving in production, what dependencies we should be aware of and what should we check before deploying a new version.

In this talk, we will introduce a new method to collect and analyze microservices communication from production and how to leverage this data during development and testing phases to improve our code.

By relying on production behavior we can automatically generate tests that are more efficient, catch dependencies that are about to break in real-life and to have our developers more product & product oriented.",https://www.linkedin.com/in/michael-haberman/,@hab_mic,,,,cloud_michael.png,,"microservice,apis",
No,reliability,Andrew Robinson,Principal Solutions Architect,AWS,,,,Improving reliability using health checks and dependency management,"We can improve the reliability of services by decoupling dependencies, using health checks, and understanding when to use fail-open and fail-closed behaviours. In this session we’ll talk about and demonstrate how to implement graceful degradation, monitor all the layers of your workload to help detect failures, route traffic only to healthy nodes, use fail-open and fail-closed as appropriate in response to faults, and reduce mean time to recovery. We’ll take some lessons learnt from the AWS Well-Architected framework and from the Amazon Builder’s Library, showing some of how Amazon builds and operates it’s software.",https://www.linkedin.com/in/andrew-m-robinson/,@theonlyrobinson,,,,cloud_andrewrobinson.png,,"improving reliability health check,dependency management",
No,reliability,Eduardo Janicas,Solutions Architect,AWS,,,,Static stability using availability zones,"In this session, we’ll define a pattern that we use called static stability to achieve extremely high HA targets. We’ll show you how we apply this concept to Availability Zones, a key infrastructure building block in AWS and therefore a bedrock dependency on which all of our services are built.",https://www.linkedin.com/in/edujanicas/detail/photo/,@edujanicas,,,,cloud_eduardo.png,,"stability,availability",
No,reliability,Jorge Fonseca,Solutions Architect,AWS,,,,Global Active-Active Serverless,"Be it for data-sovereignty, latency or resiliency, organizations expanding their businesses world-wide are adopting global multi-region serverless architectures.

In this session, you will learn how to improve customer experience on your global services by deploying into multiple regions to reduce latency, and by applying event-driven architectural patterns to increase performance.

See how to use path-based traffic routing to allow for gradual migrations of legacy API operations, how to route requests based on network latency, how to separate reads from writes with CQRS, how to use a Lake House to support multiple data-access patterns while keeping them in sync between regions, and how to simplify the complexity of deploying and maintaining a global active-active architecture by using serverless orchestration across regions.",https://www.linkedin.com/in/jorgefonseca/,,,,,cloud_jorge.png,,global active-active serverless,
No,reliability,Muktesh Mishra,Software Development Engineer,Adobe,,,,The art of being resilient. How to handle failures gracefully in Distributed Systems.,"In the modern world of distributed systems, failures are imminent. However, through the right balance of patterns, tooling and implementation they can be handled with ease. During the session, we will introduce the audience to concepts and best practices to survive different failures via code demos.

""You invest your time and effort breaking up that monolithic Frankenstein into a suite of elegant composable micro-services, you containerize them and you deploy them somewhere in the cloud in the form of distributed resources. Then you proudly watch it all come together reaping the benefits of the most scalable architectures. It is all fine and dandy from this point on. Too good to be true? Of course! This session is about what to do when you wake up to find yourself in the weeds diagnosing that first bug or application failures through the convoluted web of distributed systems of your own doing. 
Through a series of code snippets, we will introduce the most important open-source projects tools to strike the right balance of tooling and best practices to handle failures gracefully and detect them quickly in the world of distributed systems""",https://www.linkedin.com/in/mukteshkrmishra/,@mukteshkrmishra,,,,cloud_muktesh.png,,"resilient,handle failures,distributed systems",
No,reliability,Tom Granot,Developer Advocate,Lightrun,,,,On-call done right: how even a developer can help,"It’s another night on-call, and a customer is reporting a problem with one of your key services. The logs and the monitoring systems tell you nothing, and so it’s time to wake up one of the on-call developers. You can already predict what they’re going to say - that they “don’t see anything on their end” and that they “can’t understand why you woke them up, again, for what is clearly a problem on your end”. Same old, same old...

You have to remember, though, that while you have all the tools at your disposal - the developers don’t. They wrote and pushed the code, and at that point have transferred the responsibility to you - they don’t have the same context. This talk discusses this gap, and what we can do to close it.",https://www.linkedin.com/in/tomgranot/,@TomGranot,,,,cloud_tom.png,,"on-call,developer",
No,security,Ara Pulido,Developer Relations,Datadog,,,,Embracing change: Policy-as-code for Kubernetes with OPA and Gatekeeper,"Sometimes, RBAC is not enough: we need ways to define and enforce fine-grained policies for our clusters.

Gatekeeper and OPA make it easy to adopt policy-as-code practices in Kubernetes. You’ll learn how to adopt these techniques and how to integrate Gatekeeper with your existing tools.

Kubernetes provides a native Role based access control (RBAC) authorization scheme, allowing cluster operators to define rules to define which operations users or services can do against a particular Kubernetes object. As more enterprises migrate to cloud native environments like Kubernetes, RBAC alone presents limitations. The need for more scalable ways to define and enforce fine-grained policies increases: how can I limit the number of replicas of a pod for certain users? how can I ensure that all images come from trusted registries?

[Gatekeeper](https://github.com/open-policy-agent/gatekeeper/) is an open source project to integrate [Open Policy Agent (OPA)](https://www.openpolicyagent.org/) in Kubernetes environments. Gatekeeper allows to define policy as Kubernetes objects, making it easier to adopt policy-as-code practices in Kubernetes environments and sharing reusable policy templates.

In this talk we will demo Gatekeeper for Kubernetes environments. You’ll learn how to adopt policy-as-code techniques and how you can integrate Gatekeeper with your existing tools. ",https://www.linkedin.com/in/arapulido/,@arapulido,,,,cloud_arapulido.png,,"poilcy-as-code,kubernetes,opa,gatekeeper",
No,security,Brian Vermeer,Developer Advocate,Snyk,,,,Securing Containers by Breaking In,"There’s no better way to understand container security than seeing some live hacking! This session introduces the state of docker security by reviewing vulnerabilities in Docker images and their impact on applications and demonstrates via hands-on live hacking. This session further provides the audience with security best practices when building docker container images, and each successful hack will help you better understand the mistakes you can make, their implications, and how you can avoid them.",https://www.linkedin.com/in/brianvermeer/,@BrianVerm,,,,cloud_brianvermeer.png,,containers breaking in,
No,security,Josh Stella,CTO,Fugue,,,,Locking Down the Security of IAM,"If you use Amazon Web Services (AWS), you’re probably making extensive use of AWS Identity and Access Management (IAM). It’s a powerful service for managing access to your AWS services and resources that is almost like a new kind of network in the cloud. 

But for enterprise cloud environments, AWS IAM security can become quite complex. Recent high-profile cloud-based data breaches have involved AWS IAM but cannot be chalked up to simple customer mistakes. Rather, advanced cloud misconfiguration attacks exploit IAM misconfigurations that compliance controls and security professionals often miss. 
In this session, Josh will walk through some of these  IAM misconfigurations, using the AWS console to demonstrate  to  participants how to avoid becoming a victim of cloud exploits through IAM.  Josh will dig into AWS IAM and take us on a deep dive into the layers of AWS IAM and how malicious actors can exploit common misconfigurations to gain access to—and extract—data without detection. You’ll understand how to identify AWS IAM misconfiguration vulnerabilities you’ve missed before—and how malicious actors exploit them.

In this talk, Fugue co-founder and CEO,  Josh Stella digs into how AWS IAM works to help you think more critically about the security for your AWS use cases. You’ll understand how to identify AWS IAM misconfiguration vulnerabilities you may have missed before—and how malicious actors exploit them.
 

",https://www.linkedin.com/in/josh-stella-949a9711/,@Joshstella,,,,cloud_josh_new.png,,"security,iam",
No,security,Mofizur Rahman,Developer Advocate,IBM,,,,Kubernetes Security Jumpstart,"Kubernetes makes it possible to run containerized application at scale. It solves many problems of microservice architecture by abstracting away things like container deployment, container-to-container communication, load balancing. While Kubernetes is great at it many things, it seems to be lacking in terms of security. It has some security features but in most respect it is not production grade security, at least not by default.

If you are thinking about or already started with Kubernetes for your production workload, there are some steps you could follow to make sure your environments sand applications is secure. 

In this talk we will discuss some best practices for Kubernetes security. From container image to secret management, we will try to cover it all. And after this talk hopefully we will all be in a better position to harden and secure our Kubernetes cluster.",https://www.linkedin.com/in/moficodes/,@moficodes,,,,cloud_mofizur.png,,"kubernetes,security,jumpstart",
No,security,Stuart Green,Cloud Security Architect,Check Point Software Technologies,,,,Cloud Threat Landscape - 2021,"This session reveals Check Point Research (CPR) latest Cloud related findings. From a fraudulent wire transfer initiated through an email compromised on a cloud app to a vulnerability within a public cloud infrastructure, CPR analyse the latest risks and threat landscape of public cloud. The session will also include global threat intelligence stats related to COVID-19 and public cloud.",https://www.linkedin.com/in/stuartg/,,,,,cloud_stuart.png,,loud thread landscape 2021,
No,CI/CD,Efi Merdler-Kravitz,VP R&D,Lumigo,,,,CI/CD in the serverless era,"Serverless development introduces a new methodology of how to build real “cloud-native” applications or workloads. It is impossible to duplicate an exact serverless environment to be run locally, and this is influencing the tools we use and the way we need to manage our CI/CD pipelines.

The main goal of Serverless is to release software faster. So, practicing CI/CD is the logical thing, but there are some adaptations that need to be taken. In this session, we will share how we are doing CI/CD on a pure serverless platform we are developing.
We will discuss:
 - Dev Environment
 - Testing Methodology
 - Deployment Pipeline, combining Bash, AWS CLI, and Serverless Framework to create a seamless CI/CD pipeline
 - Monitoring

Let's discuss good serverless practices.",https://www.linkedin.com/in/efime/,@TServerless,,,,cloud_efi.png,,"ci/cd,serverless",
No,CI/CD,Matt Jarvis,Senior Developer Advocate,Snyk,,,,Continuous Security - Building Security into your Pipelines,"In the world of continuous delivery and cloud native, the boundaries between what is our application and what constitutes infrastructure is becoming increasing blurred. Our workloads, the containers they ship in, and our platform configuration is now often developed and deployed by the same teams, and development velocity is the key metric to success. This presents us with a challenge which the previous models of security as a final external gatekeeper step cannot keep up with. To ensure our apps and platforms are secure, we need to integrate security at all stages of our pipelines and ensure that our developers and engineering teams have tools and data with enable them to make decisions about security on an ongoing basis. In this session I will talk through the problem space, look at the kinds of security issues we need to consider, and look at where the integration points are to build in security as part of our CI/CD process.",https://www.linkedin.com/in/mattjarvis08/,@mattj_io,,,,cloud_matt.png,,"conunuous security,pipelines",
No,CI/CD,Zan Markan,Developer Advocate,CircleCI,,,,The Need for Speed (in your CI/CD setup),"What's the longest CI/CD build you worked with? Mine once took whole day. 
This is a tale of creating and taming that monster build.

When developing software and maintaining CI/CD and testing pipelines we are often compelled to increase our test coverage by adding more tests, and therefore improve our apps’ quality. After all, more automation equals better software, right?
There’s a flipside to this equation however, and a point at which we start seeing diminishing returns from each test we add. Taken to extreme, these diminishing returns begin to actively harm our ability to deliver working software. 

In this talk we will look at a tale of creating and taming a monster of an all day build (one that really happened to me once), and cover tips, tricks, and tools to help you avoid that scenario in the future - from obvious suggestions such a s adding resources to your build machines, to less obvious ones like removing tests altogether. 
 
This talk will cover tips, tricks, and tools that help you speed up builds - from adding resources to test splitting to bringing a hatchet to your test suite.",https://www.linkedin.com/in/zmarkan/,@zmarkan,,,,cloud_zan_new.png,,"need for speed,ci/cd setup",
No,lessons learned,Lian Li,Engineering Manager,Container Solutions BV,,,,Kubernetes won't save you,"Kubernetes has become the new darling of the infrastructure world. Not only is it a great piece of technology for managing your containers, but in conjunction with the possibility to rent managed clusters from any of the big Cloud providers, Kubernetes offers organisations the possibility to get rid of the shackles of hosting and/or managing one’s infrastructure.
But that does not mean that Kubernetes is a one-size-fits-all solution. Especially in big corporations, bigger, systemic and/or more pressing problems could be revealed while implementing a big shift like moving to the cloud. As consultants, we can often observe the chaos and frustration that breaks out, when the vision of management does not align with the reality of what the teams are able to deliver. More often than not, it’s not a technological problem, but a cultural one.
When is an organisation ripe for cloud transformation? How can we make sure we are addressing the problems at their root? 
Kubernetes alone won’t save you, but with the right mindset, it might be just what you needed to save yourself.",https://www.linkedin.com/in/lian-li/,@chimney42,,,,cloud_lian.png,,kubernetes wont save you,
No,lessons learned,Daniel Bass,CTO,Zeti,,,,Building a Serverless FinTech Startup on Azure,"Hear from the CTO of Zeti about how he is building an entire FinTech startup completely on Serverless technology. Learn about the challenges we've faced, and the unique power of the Cloud Native Serverless technology we are using to solve them.

Zeti is a pay-per-mile green vehicle financing platform, accelerating the move to zero emission transport. We have a network of Internet of Things devices in vehicles tracking their usage. We monitor and retrieve the data from these devices using a serverless system built on Azure. You'll hear about how we designed and built that system, and the key challenges it solves - particularly those brought about by rolling lockdowns. You'll also hear about how Serverless benefits the environment compared to other techniques, and how it's excellent security profile makes it a good fit for Financial organizations. ",https://www.linkedin.com/in/daniel-bass-6843ab50/,@danbassdev,,,,cloud_danielbass.png,,"serverless,fintech,startup,azure",
No,lessons learned,Dhiraj Hegde,Architect,Salesforce,,,,Containing An Elephant: How we took HBase and HDFS from private data centers into Kubernetes and Public Cloud,"Operating a distributed system like HBase/Hadoop FS at peta byte scale took years to master in our private data centers. This talk describes our dramatic shift towards running a mission critical stateful application on Kubernetes in Public Cloud, why we did it and the challenges we had to overcome.

Salesforce runs a very large footprint of HBase and HDFS clusters in our data centers with multiple petabytes of data, billions of queries per day over thousands of machines. After more than a decade of running our own data centers, we pivoted towards public cloud for its scalability and availability. As part of this foray, we made a bold decision to move our HBase clusters from staid bare metal hosts to the dynamic and immutable world of containers and Kubernetes. This move brought with it a number of challenges which are likely to find echoes in other such mature stateful applications adapting to public cloud and Kubernetes. The challenges include
1. Limitations in Kubernetes while deploying large scale stateful applications
2. Failures in HBase/HDFS as the DNS records keep changing in Kubernetes
3. Resilience of HBase/HDFS even when a whole availability zone fails in Public Cloud
4. Introducing encryption in communication over untrusted public cloud networks without application being aware

 This talk will go over how we overcame these challenges and the benefits we are beginning to see from these efforts.",https://www.linkedin.com/in/dhirajlink/,@dhirajtxt,,,,cloud_dhiraj.png,,"hbase,hdfs,kubernetes,public cloud",
No,lessons learned,Shelby Spees,Developer Advocate,Honeycomb.io,,,,Graviton2: How Honeycomb Reduced Infra Spend by 40% on Its Highest-Volume Service,"How did Honeycomb have the confidence to migrate to a more efficient processor architecture, resulting in a 40% reduction in AWS spend on their backend ingest service? In this talk, Developer Advocate Shelby Spees explores how Honeycomb’s platform engineering measured the risk and ROI of moving their high-traffic ingest workloads to the new ARM-based Graviton2 processor architecture. Learn how high-cardinality observability data supported performing side-by-side comparisons of the same workloads on different processor architectures, and how to gain similar insights into your own infrastructure.",https://www.linkedin.com/in/shelbyspees/,@shelbyspees,,,,cloud_shelby.png,,"graviton2,honeycomb,infra spend,highest-volume service",
No,lessons learned,Fabricio Buzeto,CTO,bxblue,,,,Building the Stonehenge using Gall’s law,"Gall’s Law states that all complex systems that work, evolved from simpler systems that also worked. Let me show you two examples of how to start small and simple and grow in complexity whilst improving your software application. Based on the background of two different companies, two different stacks and team formation. Sharing how we identified the hints for improvement, the techniques to support it, and the tools that aided through this path. Both cases going from tiny experiments to millions of transactions processed per hour.",https://www.linkedin.com/in/fabriciobuzeto/,@nukdf,,,,cloud_fabricio.png,,"stonehenge,galls law",
No,lessons learned,Joe Karlsson,Software Engineer,MongoDB,,,,Save The World And Money with Data Lake's,"Data centers are expensive, and also not very good for the environment. By 2040, storing digital data is set to create 14% of the world’s green house emissions. As a developer you probably work with a lot of data. Your clusters balloon and become more expensive every day. Now is the time to be a hero, save the world and your wallet.

In this live coding session, I will show you how to archive your cold MongoDB data automatically to an AWS S3 bucket using Serverless Triggers. I will also demonstrate how to keep querying this archived data using MongoDB Atlas Data Lake with zero downtime.

You walk away from this session with a clear understanding of data lakes, their features and capabilities. Join this session and be equipped to save the world.",https://www.linkedin.com/in/joekarlsson/,@joekarlsson1,,,,cloud_joe.png,,"save the world,data lakes",
No,lessons learned,Marco Coulter,Technical Evangelist,Tech-Whisperer.com,,,,Get ready to spend more on Cloud Native than you expect and be happy about it.,"Cloud Native will reduce your cost, right? Sorry, Jevon says you are likely to end up spending more, and that you will probably be glad you did! Expect surprise Cloud Native microservices appearing in your cloud invoices. Learn what to prepare for and which will not work in the microservice ecology.

It seems common sense. Today, you pay for a server with a full stack. Tomorrow, you run just a microservice without that overhead. You will reduce your cost, right? Sorry, Jevon says you are likely to end up spending more, and that you will probably be glad you did! By stepping through IT's history of sprawl and consolidation cycles and weaving 'Jevon's Paradox' into the lessons learnt, this session prepares you for the surprise Cloud Native microservices appearing in your cloud invoices. Learn what to prepare for and which will not work in the microservice ecology.",https://www.linkedin.com/in/marcocoulter/,@marcocoulter,,,,cloud_marco.png,,spend more on cloud native,
No,lessons learned,Nicolas Frankel,Developer Advocate,Hazelcast,,,,"Pragmatic App Migration to the Cloud: Quarkus, Kotlin, Hazelcast and GraalVM in action","With the Cloud becoming ubiquitous, it's time to assert whether our traditional application stack is up to it.",https://www.linkedin.com/in/nicolasfrankel/,@nicolas_frankel,,,,cloud_nicolas.png,,"app migration,cloud,quarkus,kotlin,hazelcast,graalvm",
No,lessons learned,Rob Zuber,CTO,CircleCI,,,,"Ways CS fundamentals fail us, and how to avoid them","At the core of most software incidents is a misalignment of data and algorithms, coupled with a pattern of human factors that take place in production. At CircleCI we see a lot of incidents and solve them not only for our own team but for thousands of engineering teams all over the world. 

Join CircleCI’s CTO, Rob Zuber as he uncovers a few instances when CS fundamentals didn’t pan out as they do in textbooks, and how to avoid them. ",https://www.linkedin.com/in/robzuber/,@z00b,,,,cloud_rob.png,,cs fundamentals fail us,
No,lessons learned,Stephane Jourdan,CTO,CloudSkiff,,,,Why you should take care of infrastructure drift,"As infrastructure as code (IaC) becomes widely adopted by users with heterogenous skillsets, and as IaC codebases become larger and larger, it becomes harder to track drift. Drift is a deviation between the actual infrastructure state and the IaC codebase. It causes issues for security posture management, collaborative work, and maintenance. It’s hard to improve what you can’t measure! Can we define good metrics for drift? Developers track unit tests coverage to track how well unit tests match application code over time. Can we use an analogy and define infrastructure code coverage to track how well IaC matches the actual infrastructure state? In this talk, we will show how minor infrastructure drift can cause issues. We will then introduce various ways to track IaC coverage, and how we can use them to bring visibility into the state of infrastructure and anticipate common drift issues. We will also show how measuring IaC codebase also benefits IaC adoption.",https://www.linkedin.com/in/stephanejourdan/,@sjourdan,,,,cloud_stephane.png,,infrastructure drift,
No,lessons learned,Elder Moraes,Developer Advocate,Red Hat,,,,Your Java code Cloud Native ready: a live experience,"Is your Java code ready for the cloud-native age?

There are a lot of buzzwords around cloud-native. But the modern applications have indeed complex demands like automatic scalability, containers lifecycle, service mesh, observability, and more.
How can your code be ready? Can the Java ecosystem help you?

You bet! With the new Java release train, the latest MicroProfile updates, the orchestration of Kubernetes, and the modernity of Quarkus, you can turn your code cloud-native right now.
This is the best time ever for cloud-native with Java! And this 100% practical session will help you to get ready to apply all those technologies to your code today.
",https://www.linkedin.com/in/eldermoraes/,@elderjava,,,,cloud_elder.png,,"java code,cloud native ready",