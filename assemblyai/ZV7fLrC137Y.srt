1
00:00:13,450 --> 00:00:16,830
Hello everyone. I'm joined today by Erin McEwen and

2
00:00:16,900 --> 00:00:20,202
charity Majors. Erin comes from Zendesk.

3
00:00:20,266 --> 00:00:23,774
She is the director of engineering resilience there.

4
00:00:23,892 --> 00:00:27,442
She has a lot of experience in crisis communications and leadership

5
00:00:27,506 --> 00:00:31,410
disaster recovery. She spent some time at Google and Salesforce

6
00:00:31,490 --> 00:00:35,234
in both the risk management and business continuity worlds.

7
00:00:35,362 --> 00:00:39,538
Charity majors is the co founder and CTO of Honeycomb,

8
00:00:39,714 --> 00:00:43,510
the observability platform to find critical issues in your infrastructure.

9
00:00:43,670 --> 00:00:46,538
So today we're going to be talking about Jones of my favorite topics, and I

10
00:00:46,544 --> 00:00:49,670
know one of their favorite topics as well. Incident management.

11
00:00:49,750 --> 00:00:53,182
We all come from incident management from different

12
00:00:53,236 --> 00:00:57,422
phases of the spectrum. Charity has a lot of insight on to before

13
00:00:57,476 --> 00:01:00,750
the incident happens and what you're doing during the incident.

14
00:01:01,250 --> 00:01:05,294
Erin comes from a world where she is really actively communicating

15
00:01:05,342 --> 00:01:08,594
with customers and also communicating with the folks in her

16
00:01:08,632 --> 00:01:12,306
organization to understand what is happening in the incident and understand what

17
00:01:12,328 --> 00:01:15,794
is happening afterwards. And they're both leading organizations doing

18
00:01:15,832 --> 00:01:19,078
this as well. And I'll quickly intro myself. My name

19
00:01:19,084 --> 00:01:23,266
is Nora. I'm the founder and CEO of Jelly

20
00:01:23,458 --> 00:01:26,886
IO. We are a post incident platform, but we kind

21
00:01:26,908 --> 00:01:31,198
of COVID the whole stack as well, from responding to the incident to diagnosing

22
00:01:31,234 --> 00:01:33,770
it to understanding it afterwards.

23
00:01:34,270 --> 00:01:37,386
So thank you both for being here with me today. Thanks so

24
00:01:37,408 --> 00:01:40,586
much for having me. This is going to be super fun. Yeah, same. Super happy

25
00:01:40,608 --> 00:01:44,506
to be joining the conversation. Awesome. So I'm going to first ask Erin

26
00:01:44,538 --> 00:01:48,602
a question. I want to understand a little bit more about your leadership

27
00:01:48,666 --> 00:01:52,222
style when an incident happens at Zendesk today. Yeah,

28
00:01:52,276 --> 00:01:56,062
sure. So I think what's interesting is I'll give a little context

29
00:01:56,126 --> 00:01:59,346
of the parts of how we operate in an

30
00:01:59,368 --> 00:02:04,546
incident. At Sundisk. I have a really amazing global incident management team and

31
00:02:04,568 --> 00:02:07,846
we also have different roles of those that are constantly in

32
00:02:07,868 --> 00:02:11,110
an incident. My incident manager, we have an engine lead on call.

33
00:02:11,180 --> 00:02:14,834
We also have know, we have our advocacy

34
00:02:14,882 --> 00:02:18,814
customer facing communication role as well as our Zenoc,

35
00:02:18,882 --> 00:02:22,694
which is all about the initial triage and then all of our engineers

36
00:02:22,742 --> 00:02:26,854
that get pulled in. Wait, did you say Zenoc? Yeah. So Zendesk

37
00:02:26,902 --> 00:02:30,774
knock. I love that. So my first ever management

38
00:02:30,822 --> 00:02:34,762
experience was at Linden Lab where I founded the Dnoc, the distributed knock.

39
00:02:34,826 --> 00:02:38,160
So I was super tickled. I don't think I've ever heard of another company doing

40
00:02:40,610 --> 00:02:44,618
they. I actually managed them for a little bit of time, but they've

41
00:02:44,634 --> 00:02:48,306
moved over to a different leadership. But we stay very close.

42
00:02:48,408 --> 00:02:52,066
We're very close with our Znoc buddies. But yeah, I think

43
00:02:52,088 --> 00:02:55,902
what's interesting is during an incident, especially when I'm getting involved,

44
00:02:55,966 --> 00:02:59,286
because a lot of our incidents, those are managed at the

45
00:02:59,308 --> 00:03:02,934
incident manager level. We have our Internet leads on call

46
00:03:02,972 --> 00:03:06,518
that come in. If I'm there, it's a little bit of a different situation

47
00:03:06,604 --> 00:03:10,234
because that means that it's probably a pretty big one or something that has

48
00:03:10,272 --> 00:03:13,946
high visibility. And so a lot of what I'm there to do is to make

49
00:03:13,968 --> 00:03:18,140
sure that I'm supporting the team that's responding and keeping them

50
00:03:20,110 --> 00:03:23,738
in scoping those things. Right. But I really serve as a

51
00:03:23,744 --> 00:03:27,294
conduit to our leadership. It's really about how making sure

52
00:03:27,332 --> 00:03:30,446
that booths on the ground are able to do exactly what they need to do.

53
00:03:30,548 --> 00:03:33,778
The executives that need to be informed are informed and pulled in at

54
00:03:33,784 --> 00:03:37,554
the right increments, in the right timing. So getting that alignment is really

55
00:03:37,592 --> 00:03:41,554
important. And I think that having

56
00:03:41,592 --> 00:03:45,378
that calm demeanor and making sure that you're managing up

57
00:03:45,464 --> 00:03:48,662
in these situations so that you can protect the folks that really

58
00:03:48,716 --> 00:03:52,054
need to be paying attention to what they're doing right in front

59
00:03:52,092 --> 00:03:55,650
of them is really important during an incident. Totally.

60
00:03:55,810 --> 00:03:59,378
The emotional tenor really gets set by whoever is in charge

61
00:03:59,394 --> 00:04:02,586
of the incident. If you're just, like, slapping around and just, like,

62
00:04:02,608 --> 00:04:05,738
reacting and everything, everybody in the company is going to freak out.

63
00:04:05,824 --> 00:04:09,350
And if you can project calmness, but intensity.

64
00:04:09,430 --> 00:04:12,366
Right. Like, you don't want people to just be like, oh, nothing's wrong. You want

65
00:04:12,388 --> 00:04:16,030
them to be aware that something's happening, that it's not Normal,

66
00:04:16,370 --> 00:04:18,240
but that it's under control.

67
00:04:20,050 --> 00:04:23,694
I think part of the key thing is that people need to

68
00:04:23,732 --> 00:04:27,326
feel like they can be confident that they will be pulled in if needed,

69
00:04:27,428 --> 00:04:30,754
so that the entire company doesn't just have to hover and look,

70
00:04:30,872 --> 00:04:33,314
am I needed there? Am I needed there? Do I need to respond here?

71
00:04:33,432 --> 00:04:36,786
No. In order for everything to stop, everyone has to

72
00:04:36,808 --> 00:04:39,686
have confidence they will be pulled in if they are needed or if they can

73
00:04:39,708 --> 00:04:42,742
help. Yeah. And I think one of the things that I will say, too,

74
00:04:42,796 --> 00:04:46,326
is that part of being able

75
00:04:46,348 --> 00:04:49,802
to come in and have that calmness also is part of

76
00:04:49,856 --> 00:04:53,814
having a really strong program around incident management and having good structure

77
00:04:53,862 --> 00:04:57,606
and how your tooling operates, that your folks

78
00:04:57,638 --> 00:05:00,010
are educated on their roles and responsibilities.

79
00:05:01,070 --> 00:05:05,246
We also have crisis management that is the next level above that. So I

80
00:05:05,268 --> 00:05:08,814
think that at Zendesk, I feel very

81
00:05:08,852 --> 00:05:11,754
fortunate because everybody jumps into an incident,

82
00:05:11,802 --> 00:05:15,018
they're ready to go. They are happy to help out. They want to know what

83
00:05:15,044 --> 00:05:18,610
they can do. They're contributing in the space that they can.

84
00:05:18,680 --> 00:05:22,210
And I think that's a very important piece

85
00:05:22,280 --> 00:05:25,854
of it makes it a lot easier to be a leader in those situations

86
00:05:25,902 --> 00:05:29,734
when you have folks like that that are jumping in and really wanting to just

87
00:05:29,852 --> 00:05:32,280
collaborate and figure out what's going on.

88
00:05:32,650 --> 00:05:34,440
Totally agree.

89
00:05:35,930 --> 00:05:38,774
It sounds like the way you handle it is a lot more of an art

90
00:05:38,812 --> 00:05:42,326
than it is a science, too. And it's just really keeping

91
00:05:42,358 --> 00:05:45,770
a pulse on what's happening, making sure you're really present

92
00:05:45,840 --> 00:05:49,302
in that moment. How do you prepare folks

93
00:05:49,366 --> 00:05:52,814
for those situations as well before you're in them? Yeah,

94
00:05:52,852 --> 00:05:57,022
I think it's a great question. There's a couple of different layers for that.

95
00:05:57,076 --> 00:06:00,574
So we actually are right now

96
00:06:00,612 --> 00:06:04,318
doing a lot of training. We've got folks that

97
00:06:04,324 --> 00:06:07,362
have been around for a long time. We realize we have a lot of new

98
00:06:07,416 --> 00:06:11,454
people. So my incident management teams have been doing some regional

99
00:06:11,502 --> 00:06:14,974
training. They did a mayor recently, they're in the middle of doing a MIA,

100
00:06:15,022 --> 00:06:18,470
and we're getting amazing feedback from that. I think that both

101
00:06:18,620 --> 00:06:22,054
newer and older folks are. It's good reminders, but it's also,

102
00:06:22,092 --> 00:06:26,006
at the same time, really great education. And I think we do

103
00:06:26,028 --> 00:06:29,698
other things such as shadowing. We make sure that folks that are getting onto new

104
00:06:29,724 --> 00:06:33,082
on calls, that they're doing

105
00:06:33,136 --> 00:06:36,966
a couple of sessions where they're following along and shadowing during someone else's

106
00:06:36,998 --> 00:06:40,066
on call so they can learn from that. Do you do primary,

107
00:06:40,118 --> 00:06:42,880
secondary? Yeah. So it depends on the team.

108
00:06:43,250 --> 00:06:46,686
So the structure can

109
00:06:46,708 --> 00:06:50,426
vary a little bit depending on the size of the team, the criticality

110
00:06:50,458 --> 00:06:53,714
of what services they are over, things like

111
00:06:53,752 --> 00:06:57,154
that. So just a little bit of variance here and

112
00:06:57,192 --> 00:07:01,122
there. But the one last thing that I would say is we do

113
00:07:01,176 --> 00:07:03,090
a lot of exercising.

114
00:07:05,910 --> 00:07:09,160
We have our chaos engineering team that does.

115
00:07:10,010 --> 00:07:13,670
They have a whole suite of tests that we practice. It's really important

116
00:07:13,740 --> 00:07:17,430
for us to operate in that exercise as it's an incident.

117
00:07:18,330 --> 00:07:22,810
We have an incident manager that participates in every single one of those exercises.

118
00:07:24,430 --> 00:07:27,862
We use as much as our tooling as we possibly can to make it realistic

119
00:07:27,926 --> 00:07:31,340
and to get in and do all of those things. I think

120
00:07:32,190 --> 00:07:34,960
that's the space that I think we get the most value.

121
00:07:35,570 --> 00:07:39,230
And I will just say that I think it's something

122
00:07:39,300 --> 00:07:43,022
that, trying to expand on that a little bit wider is something that we're looking

123
00:07:43,076 --> 00:07:47,270
at with Zendesk just because we learned

124
00:07:47,290 --> 00:07:51,442
so much from it. How time consuming is that? I think

125
00:07:51,496 --> 00:07:55,570
that we have one primary

126
00:07:56,410 --> 00:08:00,290
Zendesk is an AWS crew.

127
00:08:00,450 --> 00:08:03,670
And so, for example,

128
00:08:03,820 --> 00:08:06,694
we have AZ resilience testing that we do.

129
00:08:06,892 --> 00:08:10,726
We do an AZ resilience failover exercise, I think it's on

130
00:08:10,748 --> 00:08:14,154
a quarterly basis. Right. You know, that takes

131
00:08:14,192 --> 00:08:18,326
a lot of prep work because usually what we're doing with that is depending

132
00:08:18,358 --> 00:08:21,710
on what incidents have we had,

133
00:08:21,780 --> 00:08:26,430
what areas do we need to press on? Even using AWS incidents,

134
00:08:27,730 --> 00:08:31,550
you have AZ resiliency. Do you have region resiliency

135
00:08:33,910 --> 00:08:37,620
for data? We have data, but we're not like,

136
00:08:38,310 --> 00:08:41,490
got you. Yeah, we're not across

137
00:08:41,560 --> 00:08:45,154
multiple regions per account. I'm curious because

138
00:08:45,192 --> 00:08:48,246
it can be incredibly time consuming. And you're right, the payoff can be

139
00:08:48,348 --> 00:08:51,698
enormous for companies that are at the stage where it's

140
00:08:51,714 --> 00:08:55,510
worthwhile. But where would you say is the point at which it's worth

141
00:08:55,580 --> 00:08:59,570
starting to invest in that? Because it is pretty time consuming,

142
00:08:59,730 --> 00:09:03,178
and I think it depends on the commitments that

143
00:09:03,184 --> 00:09:06,858
you've made to your customers. What thresholds would

144
00:09:06,864 --> 00:09:10,506
you look for to say, okay, you should start really doing this for real as

145
00:09:10,528 --> 00:09:13,818
a driver? Yeah, I think that's a really great question, and I think that

146
00:09:13,904 --> 00:09:17,006
there's a couple of different inputs to that. First of all,

147
00:09:17,108 --> 00:09:20,526
starting as small as possible, tabletop exercises are a great

148
00:09:20,548 --> 00:09:23,200
way to go if you don't have a lot of time to do things.

149
00:09:23,890 --> 00:09:27,902
If you're not able to prepare your pre prod environment,

150
00:09:27,966 --> 00:09:31,220
to be able to actually put hands on keyboard and simulate things,

151
00:09:31,670 --> 00:09:35,300
you can start at a much lower level and build on top of that.

152
00:09:35,850 --> 00:09:39,014
I think people think right away they've got to go in and

153
00:09:39,132 --> 00:09:42,546
do the big bang. Right. At what stage

154
00:09:42,578 --> 00:09:45,080
should they start doing that?

155
00:09:48,250 --> 00:09:52,650
I think it depends on the company, because I think that there's a different desire

156
00:09:53,310 --> 00:09:57,254
for whatever. Absolutely right. What characteristics

157
00:09:57,302 --> 00:10:00,250
or something would you look for in a company to be like,

158
00:10:00,320 --> 00:10:04,314
okay, it's time for you to really start investing in these affirmative,

159
00:10:04,442 --> 00:10:07,758
active sort of tests? Yeah. So I'm of the

160
00:10:07,764 --> 00:10:11,230
persuasion that I think that companies right now are not starting

161
00:10:11,300 --> 00:10:14,958
early enough with getting incident management practices

162
00:10:15,054 --> 00:10:18,546
and teams and structure and testing in place.

163
00:10:18,728 --> 00:10:21,922
I hate to be annoying about this, I super agree.

164
00:10:21,976 --> 00:10:25,758
But specifically for regional failovers

165
00:10:25,774 --> 00:10:29,410
or av failovers, that's a big gun in my opinion.

166
00:10:29,490 --> 00:10:32,854
Where would you say that comes in? And it's an

167
00:10:32,892 --> 00:10:36,546
expensive, super expensive. It's not a cost. You can't

168
00:10:36,578 --> 00:10:40,066
just go, oh, everyone should do it as soon as they should, because that's

169
00:10:40,098 --> 00:10:44,074
not actually true. Yeah, but it makes total sense

170
00:10:44,112 --> 00:10:47,846
for Zendesk to do it if you think of the nature of what they're offering

171
00:10:47,958 --> 00:10:52,214
and what their customers are going to say when they have incidents. If Zendesk

172
00:10:52,262 --> 00:10:55,806
tooling goes down and one of their customers is in the middle of an

173
00:10:55,828 --> 00:10:59,114
incident, they're not able to resolve their incident.

174
00:10:59,162 --> 00:11:02,830
And so I feel know the urgency of doing what

175
00:11:02,900 --> 00:11:06,818
Erin and team are doing becomes higher in that know, we're trying to

176
00:11:06,824 --> 00:11:09,954
think about it on a weighted spectrum, but, yeah, you're right.

177
00:11:09,992 --> 00:11:14,274
Like some organizations, it probably is not worth

178
00:11:14,392 --> 00:11:16,500
some of the time. I think right now,

179
00:11:19,350 --> 00:11:22,440
and there might be no good answer at just because you're so.

180
00:11:23,290 --> 00:11:26,422
I think that, again, that's why it kind of, again,

181
00:11:26,476 --> 00:11:30,006
like to. What Nora is saying is that we're a critical

182
00:11:30,198 --> 00:11:32,460
service for our customers.

183
00:11:33,550 --> 00:11:37,066
They depend on us to be able to deliver their customer

184
00:11:37,168 --> 00:11:40,742
support to their customers. So if we're impacted and they're unable

185
00:11:40,886 --> 00:11:44,622
to support their customers, that reflects on them. They don't know

186
00:11:44,676 --> 00:11:48,910
necessarily that down the line. It's a Zendesk incident that's causing that customer pain.

187
00:11:48,980 --> 00:11:52,538
Right. So we have an obligation and the pressure,

188
00:11:52,634 --> 00:11:56,850
too, to actually minimize as much as possible of that impact.

189
00:11:57,670 --> 00:12:00,594
The tolerance these days is a lot lower for that, right?

190
00:12:00,712 --> 00:12:03,474
Yeah, it used to be like, oh,

191
00:12:03,512 --> 00:12:07,620
AWS is down, everybody just go out for coffee. It's not like that.

192
00:12:09,910 --> 00:12:13,174
I mean, I agree. I don't know if it definitely is not

193
00:12:13,212 --> 00:12:16,374
a one shoe fit, all type of a timing, but I do think

194
00:12:16,412 --> 00:12:20,234
that there are baby steps that people can take in understanding what

195
00:12:20,272 --> 00:12:23,738
their business needs are. And again,

196
00:12:23,824 --> 00:12:27,018
the first question that I would ask is, what's the tolerance from the business

197
00:12:27,104 --> 00:12:30,730
for downtime or for impact? I think that that

198
00:12:30,800 --> 00:12:34,854
question is one to put back to the business and to the leaders and say,

199
00:12:34,992 --> 00:12:38,254
what is our tolerance for this? Are you okay? If we're down for this amount

200
00:12:38,292 --> 00:12:41,998
of time, do we have financial commitments? Do we have just, like, word of

201
00:12:42,004 --> 00:12:46,210
mouth commitments? I think that for me, the two things that I would say that

202
00:12:46,360 --> 00:12:49,970
every company should do pretty much across the board, if you have customers,

203
00:12:50,040 --> 00:12:53,682
you should do this. Number one, something is better than nothing.

204
00:12:53,816 --> 00:12:57,334
If it's literally like your homepage is just returning a 500 or

205
00:12:57,372 --> 00:13:01,010
a 502, that's unacceptable

206
00:13:01,090 --> 00:13:04,726
for anyone these days, at least. If your

207
00:13:04,748 --> 00:13:08,294
storage, if your back end writes are failing, cool. Try to

208
00:13:08,332 --> 00:13:11,798
degrade gracefully enough so that you give your customers some information about what's

209
00:13:11,814 --> 00:13:15,130
going on and you return something. Right. You should return

210
00:13:15,200 --> 00:13:18,810
something and you should handle as much as possible without making

211
00:13:18,880 --> 00:13:22,154
false promises about what you've handled. And number two,

212
00:13:22,192 --> 00:13:26,046
I think to your point about tabletop exercises, I think that as soon

213
00:13:26,068 --> 00:13:29,262
as you're mature enough to have a platform team, an Ops team,

214
00:13:29,396 --> 00:13:32,826
whatever team you're mature enough to have a meeting

215
00:13:32,858 --> 00:13:35,300
at least once a quarter where you look at, okay,

216
00:13:36,710 --> 00:13:40,098
look at your risk path, right? Your critical path. Like, what are

217
00:13:40,104 --> 00:13:42,050
the elements in there? How can they fail?

218
00:13:43,270 --> 00:13:48,406
And what is the limited thing that you can always do if

219
00:13:48,428 --> 00:13:51,814
whatever component goes down? What's your path? What's your story?

220
00:13:51,932 --> 00:13:55,010
What do you try and return? Like at parse?

221
00:13:55,090 --> 00:13:57,430
We had all of these replica sets.

222
00:13:58,490 --> 00:14:01,958
The minimum thing that we could do if almost everything was down except

223
00:14:01,974 --> 00:14:05,210
this one, AZ was. We could at least return

224
00:14:05,280 --> 00:14:08,570
a page that said blah, blah, blah, or whatever. But you should think

225
00:14:08,640 --> 00:14:12,362
through what is my end user's experience going to be like

226
00:14:12,416 --> 00:14:15,278
and have an answer for it and try to make it as good as possible,

227
00:14:15,364 --> 00:14:18,574
because often that takes very little work. You just have to think

228
00:14:18,612 --> 00:14:22,174
about it. And I think you both have touched on the

229
00:14:22,212 --> 00:14:25,986
real benefit behind this is coming up with what is a

230
00:14:26,008 --> 00:14:28,578
good tabletop exercise to run. Right.

231
00:14:28,744 --> 00:14:32,014
It makes sense for Erin and her team to run these region

232
00:14:32,062 --> 00:14:35,234
exercises because that is issues they've experienced before.

233
00:14:35,272 --> 00:14:38,546
But what you're gearing at charity is just like thinking about your user

234
00:14:38,578 --> 00:14:41,666
lifecycle and thinking about what matters to your users,

235
00:14:41,778 --> 00:14:45,638
like returning something or

236
00:14:45,724 --> 00:14:48,966
thinking about what they're going to experience at that moment, or thinking about what the

237
00:14:48,988 --> 00:14:52,634
time of day is for them, or thinking about when they're most using your

238
00:14:52,672 --> 00:14:56,154
platform. Those are all things to think about. It probably doesn't make sense

239
00:14:56,192 --> 00:14:59,894
for most orcs to just take a standard regional

240
00:14:59,942 --> 00:15:03,178
failover exercise, but it doesn't make sense for them to

241
00:15:03,184 --> 00:15:06,494
think of something. And I think a lot of the value in it is actually

242
00:15:06,532 --> 00:15:09,614
taking the time to work together to think of that thing. What is

243
00:15:09,652 --> 00:15:13,238
the best for us to do right now? And really digging

244
00:15:13,274 --> 00:15:16,820
into what that means for everyone and why Facebook got

245
00:15:17,270 --> 00:15:20,706
15 years into their server. And whatever about

246
00:15:20,728 --> 00:15:24,402
Facebook, but they were 15 years old as a company

247
00:15:24,456 --> 00:15:27,698
before they started actually investing in being able to shut down a

248
00:15:27,704 --> 00:15:30,918
data center. And that was driven not by them wanting to be able to do

249
00:15:30,924 --> 00:15:34,040
this, but by the fact that their original data center was shutting down.

250
00:15:34,490 --> 00:15:38,246
And so they were like, well, we got to figure this out anyway. Let's make

251
00:15:38,268 --> 00:15:41,066
it so that it's a repeatable process. And then kind of like what you were

252
00:15:41,088 --> 00:15:44,266
saying, aaron, like once a quarter from there on out, they do these

253
00:15:44,368 --> 00:15:48,234
highly prepared, shut down a region failover sort of practices just for

254
00:15:48,272 --> 00:15:51,546
hygiene. But, yeah, I think it's easy to say, oh, you should

255
00:15:51,568 --> 00:15:54,826
do this easier. But when you sit down and think about it, it's costly,

256
00:15:54,938 --> 00:15:58,126
it's hard, it's going to take resources away. And so you should be

257
00:15:58,148 --> 00:16:02,062
thinking pretty narrowly about what is the least best. What's the 20%

258
00:16:02,116 --> 00:16:05,940
solution here that gives 80% of the benefit? Exactly.

259
00:16:07,270 --> 00:16:11,134
And again, I do think it's important to know that what I'm

260
00:16:11,182 --> 00:16:14,658
speaking about has been years of. I mean, I've been

261
00:16:14,664 --> 00:16:18,178
at sundust for over seven years. We started little bits

262
00:16:18,194 --> 00:16:23,526
and pieces of incident management when I came on board and

263
00:16:23,628 --> 00:16:27,342
building out our resilience organizations, our reliability organization,

264
00:16:27,506 --> 00:16:31,030
there's been a lot of time and effort. What does your resilience

265
00:16:31,110 --> 00:16:33,500
organization look like, if you don't mind?

266
00:16:33,870 --> 00:16:39,914
Yeah, so I actually have a very interesting team under

267
00:16:39,952 --> 00:16:43,030
resilience. I've got our technology continuity organization,

268
00:16:43,110 --> 00:16:47,114
which is all about our disaster recovery and continuity

269
00:16:47,162 --> 00:16:50,382
of our technology. And we have

270
00:16:50,436 --> 00:16:53,774
incident management, which I've mentioned already. And then I also

271
00:16:53,812 --> 00:16:57,406
am responsible for business continuity and crisis management at Zendesk.

272
00:16:57,438 --> 00:17:01,166
So not only are we focusing on the engineering pieces

273
00:17:01,198 --> 00:17:04,594
of things, but we also are responsible for what happens with

274
00:17:04,632 --> 00:17:07,670
business disruptions to the overall business operations.

275
00:17:08,330 --> 00:17:12,374
And then there's one other part of my team. I've got our

276
00:17:12,412 --> 00:17:15,640
resilience tooling and data, and they are responsible for.

277
00:17:17,370 --> 00:17:20,822
The engineers are awesome. And they've built all of the

278
00:17:20,876 --> 00:17:24,966
in house tooling that we have for incident management,

279
00:17:25,158 --> 00:17:29,034
and they support the integrations and things like

280
00:17:29,072 --> 00:17:33,306
that for the other tooling that we leverage outside of Zendesk.

281
00:17:33,338 --> 00:17:37,070
And then we have our data team, which they're newer. We've been like,

282
00:17:37,140 --> 00:17:40,766
data. Obviously, data is lifeblood these days,

283
00:17:40,868 --> 00:17:43,470
and we have managed.

284
00:17:45,330 --> 00:17:48,962
That team is about a year old. But really doing

285
00:17:49,016 --> 00:17:53,170
the crunching of the data that we have related to incident management and

286
00:17:53,240 --> 00:17:56,630
the impact that we have as a business and bringing those back to the business

287
00:17:56,700 --> 00:17:58,898
so that we can make critical decisions.

288
00:17:59,074 --> 00:18:01,640
So it's an interesting,

289
00:18:02,490 --> 00:18:06,002
wide breadth of responsibility when it comes to disruption.

290
00:18:06,066 --> 00:18:10,026
And the alignment there makes quite a bit of

291
00:18:10,048 --> 00:18:14,154
sense for the Zendesk organization. Thank you.

292
00:18:14,272 --> 00:18:17,562
Yeah, that's awesome. And I feel like what you're gearing at

293
00:18:17,616 --> 00:18:21,182
is a lot of, I think, the real value of SRE, which is

294
00:18:21,236 --> 00:18:25,134
understanding relationships and organizations like technology

295
00:18:25,252 --> 00:18:29,002
relationships, human relationships, all kinds of things. And it becomes invaluable

296
00:18:29,066 --> 00:18:32,750
after a while. Charity. I'm going to turn the question

297
00:18:32,820 --> 00:18:36,414
over to you. Can you tell me a little bit about your leadership

298
00:18:36,462 --> 00:18:38,180
style when an incident happens,

299
00:18:39,510 --> 00:18:43,346
and this could be your philosophy towards how folks should

300
00:18:43,368 --> 00:18:46,760
handle incidents in general? It can be anything.

301
00:18:47,130 --> 00:18:51,174
Yeah. These days, I don't respond to incidents at

302
00:18:51,212 --> 00:18:55,206
all. I think I am very high up if it

303
00:18:55,228 --> 00:18:59,186
fails over the front end time engineer, and then the back end

304
00:18:59,228 --> 00:19:02,250
engineer, and then the successive engineer, and then something,

305
00:19:02,320 --> 00:19:05,626
something. But I maybe get a page failure to be once a year,

306
00:19:05,648 --> 00:19:07,050
and it's usually an accident,

307
00:19:08,590 --> 00:19:12,154
which I feel

308
00:19:12,192 --> 00:19:16,202
like the people that we have are so amazing. Like fucking

309
00:19:16,266 --> 00:19:19,870
Fred and our SRE team and Ian, and they're amazing.

310
00:19:19,940 --> 00:19:23,534
And so I can't really take any credit for all of the amazing stuff

311
00:19:23,572 --> 00:19:26,946
that they're doing these days. I feel like I can take some credit for the

312
00:19:26,968 --> 00:19:30,126
fact that we didn't make a bunch of mistakes

313
00:19:30,158 --> 00:19:33,794
for the first couple of years. And so, you know how there's a stage that

314
00:19:33,832 --> 00:19:37,230
most startups go through where they're like, whoa, we're going through a lot

315
00:19:37,240 --> 00:19:41,350
of growth, and suddenly everything's breaking. Let's bring on someone who knows something about operations.

316
00:19:41,690 --> 00:19:45,286
We never went through that. In fact, we didn't hire our

317
00:19:45,308 --> 00:19:48,646
first actual SRE for four years. Then he was

318
00:19:48,668 --> 00:19:51,834
there for a year, and then he left, and then we didn't hire another for

319
00:19:51,872 --> 00:19:55,594
another year. We really

320
00:19:55,632 --> 00:19:59,226
have the philosophy of engineers write their own code, and they

321
00:19:59,248 --> 00:20:03,034
own their code in production, and for a long time,

322
00:20:03,152 --> 00:20:06,554
that was enough. Now these days it's not. And much

323
00:20:06,592 --> 00:20:10,142
like Aaron and much like you, Nora, we have a service that people

324
00:20:10,196 --> 00:20:13,114
rely on above and beyond their own monitoring,

325
00:20:13,162 --> 00:20:16,090
right? And above and beyond their own systems, because they need to be able to

326
00:20:16,100 --> 00:20:19,918
use it to tell what's wrong with their own systems,

327
00:20:20,014 --> 00:20:23,490
and which I know we're going to talk about build versus buy a little later

328
00:20:23,560 --> 00:20:26,646
on. And this is where I have to put my plug in for.

329
00:20:26,748 --> 00:20:30,054
You should never, as an infrastructure company, put your

330
00:20:30,092 --> 00:20:33,922
monitoring and your observability on the same fucking hardware,

331
00:20:34,066 --> 00:20:37,834
the same colo. As your own production system, because then when one goes

332
00:20:37,872 --> 00:20:41,242
down, you've got a million problems, right? They should be very much

333
00:20:41,296 --> 00:20:45,178
segregated and separated, whether you're buying something or

334
00:20:45,264 --> 00:20:48,870
building it yourself. But Tldr,

335
00:20:48,950 --> 00:20:52,134
I think we did a lot of things early on

336
00:20:52,192 --> 00:20:56,046
that were helpful. For a long time, we only

337
00:20:56,068 --> 00:20:59,934
had one on call rotation, and all the engineers were in it.

338
00:21:00,132 --> 00:21:03,554
One of my philosophies about on call is that the rotation should

339
00:21:03,592 --> 00:21:08,322
be somewhere between about

340
00:21:08,376 --> 00:21:11,986
seven people, right? Because you don't want it to be so short that

341
00:21:12,008 --> 00:21:15,218
everyone's getting. You want them to have like a

342
00:21:15,224 --> 00:21:18,706
month to two months between on call stints, right? You want to give them

343
00:21:18,728 --> 00:21:22,134
plenty of time to recover, but you don't want to give them so long they

344
00:21:22,172 --> 00:21:26,134
forget how the system works, or so long the system changes and when your

345
00:21:26,172 --> 00:21:29,450
system is changing rapidly, like more than two months,

346
00:21:29,600 --> 00:21:30,940
it's just too long.

347
00:21:33,950 --> 00:21:36,940
Now we have multiple on call rotations, of course.

348
00:21:37,310 --> 00:21:40,780
But I guess the main philosophical thing

349
00:21:41,250 --> 00:21:44,606
that I will point out here is that the

350
00:21:44,628 --> 00:21:47,774
way that I grew up dealing with

351
00:21:47,892 --> 00:21:51,722
outages and monitoring and everything, they were very much intertwined.

352
00:21:51,786 --> 00:21:55,830
Right? The way that you dealt with outages was the way that you debugged

353
00:21:55,850 --> 00:21:59,554
your system and vice versa. And really,

354
00:21:59,592 --> 00:22:02,866
when you were dealing with a lamp stack or a monolith, you could look at

355
00:22:02,888 --> 00:22:07,006
the system, predict most of the ways it was going to fail, write monitoring checks

356
00:22:07,038 --> 00:22:10,486
for them. Like, 70% of the work is done because all of the

357
00:22:10,508 --> 00:22:14,306
logic was tied up inside the application, right. It would fail

358
00:22:14,338 --> 00:22:17,254
in some weird ways. You tease them out over the next year or so,

359
00:22:17,292 --> 00:22:21,340
and only like a couple of times a year, would you really just be completely

360
00:22:21,950 --> 00:22:25,978
puzzled, like, what the hell is going on? It didn't happen that often,

361
00:22:26,144 --> 00:22:30,074
but these days it happens all the time. It's almost like

362
00:22:30,192 --> 00:22:33,638
every time you get alerted these days, it should be something genuinely new,

363
00:22:33,744 --> 00:22:37,610
right? We've come a long ways when it comes to resilience and reliability.

364
00:22:37,770 --> 00:22:41,130
And when things break, we typically fix them so they don't break anymore.

365
00:22:41,210 --> 00:22:45,082
Right. It should be something new. And now you've got microservices

366
00:22:45,146 --> 00:22:49,326
and multitenancy, and you're using third party services and platforms

367
00:22:49,358 --> 00:22:52,946
and everything, and it's just wildly more complex. Which is why I

368
00:22:52,968 --> 00:22:56,662
think you have to have engineers own their own code in production. But I also

369
00:22:56,716 --> 00:22:59,958
feel like the processes and the tools and the

370
00:22:59,964 --> 00:23:03,270
ways we think about debugging,

371
00:23:04,970 --> 00:23:08,760
you need to kind of decouple them from the process of

372
00:23:09,610 --> 00:23:12,646
the sites down. We have to get it back up, just the emergency sort of

373
00:23:12,668 --> 00:23:16,118
stuff, because you can't look at it and predict 70% of the ways it's

374
00:23:16,124 --> 00:23:19,010
going to fail. You can't predict almost any of the ways it's going to fail.

375
00:23:19,090 --> 00:23:22,814
You can write some to Erin checks, but that's not

376
00:23:23,012 --> 00:23:26,334
going to save you much because the system is going to fail in a different

377
00:23:26,372 --> 00:23:30,266
way every time. And this is where dashboards

378
00:23:30,298 --> 00:23:33,518
just become kind of useless, right? If you're used to just like,

379
00:23:33,604 --> 00:23:37,086
eyeballing your dashboards and going, it's that component or it's that metric

380
00:23:37,118 --> 00:23:40,498
or something that's not good enough anymore. And this is where

381
00:23:40,664 --> 00:23:44,018
obviously, everyone's heard me ranting about reliable, about observability for a

382
00:23:44,024 --> 00:23:47,838
long time now. But I think that the core components of observability you

383
00:23:47,864 --> 00:23:50,658
can really boil down to. You need to support high cardinality,

384
00:23:50,754 --> 00:23:54,466
high dimensionality, and explorability. And the shift

385
00:23:54,498 --> 00:23:58,002
for engineers is going from a world where you had fixed dashboards

386
00:23:58,066 --> 00:24:01,622
and you just eyeballed them and kind of pattern matched. Oh, that spike

387
00:24:01,686 --> 00:24:05,206
matches that spike. So it's probably that that's

388
00:24:05,238 --> 00:24:08,762
not enough anymore. You can't do that. And the shift to moving to a more

389
00:24:08,816 --> 00:24:12,438
explorable, queryable world where you're like, okay, I'm going to start at the edge.

390
00:24:12,534 --> 00:24:16,154
Break down by endpoint, break down by request

391
00:24:16,202 --> 00:24:19,774
code, break down by whatever. Or if you're using

392
00:24:19,812 --> 00:24:22,110
bubble up, you're just kind of like, okay, here's the thing I care about.

393
00:24:22,180 --> 00:24:25,454
How is it different from everything else? But it's not like getting

394
00:24:25,492 --> 00:24:28,866
over that hump of learning to be more fluid and using your

395
00:24:28,888 --> 00:24:32,802
tools in a more explorable way. It's different, and it's a really

396
00:24:32,856 --> 00:24:36,206
important mental shift that I think all engineers are having to make

397
00:24:36,248 --> 00:24:40,326
right now. Yeah, absolutely. And you mentioned earlier you

398
00:24:40,348 --> 00:24:43,798
didn't really have a philosophy. You haven't responded to an incident in

399
00:24:43,804 --> 00:24:47,560
a while, but it's like, that's a philosophy. Yeah, that's true.

400
00:24:48,490 --> 00:24:51,614
In your organization, you responded to your last incident

401
00:24:51,762 --> 00:24:55,242
in the depths of the weeds, and I wonder what that point was

402
00:24:55,296 --> 00:24:59,146
for your business. Right. Obviously, the business shifted in

403
00:24:59,168 --> 00:25:02,750
its own way from a market perspective and things like that,

404
00:25:02,820 --> 00:25:06,782
and it wasn't maybe the most

405
00:25:06,916 --> 00:25:10,574
valuable use of time. And by

406
00:25:10,612 --> 00:25:13,966
doing that, you're also giving everyone else a chance to do what they

407
00:25:13,988 --> 00:25:17,266
do best at, which is what you mentioned. Right. Which is an amazing

408
00:25:17,448 --> 00:25:21,234
philosophy on its own, is like giving people the time and space to

409
00:25:21,272 --> 00:25:25,026
become experts and to build their expertise. Yeah, well, that was

410
00:25:25,048 --> 00:25:28,246
pretty early on for us, and it wasn't an intentional thing so much

411
00:25:28,268 --> 00:25:30,982
as it was. I was CEO for the first three and a half years.

412
00:25:31,036 --> 00:25:32,630
I was constantly flying.

413
00:25:34,330 --> 00:25:37,558
I couldn't do it, and the other engineers had

414
00:25:37,564 --> 00:25:41,046
to pick it up. And before long, there was so much drift that I wasn't

415
00:25:41,078 --> 00:25:44,886
the most useful person. Right. These are complex breathing systems

416
00:25:44,918 --> 00:25:48,122
that are constantly changing, and it doesn't take very long

417
00:25:48,176 --> 00:25:52,074
for you to not be up on them anymore. But you'd be

418
00:25:52,112 --> 00:25:55,946
surprised how many leaders don't

419
00:25:56,058 --> 00:25:59,550
necessarily. That's a mistake. That's a big mistake.

420
00:26:00,610 --> 00:26:02,750
I love responding to incidents.

421
00:26:03,570 --> 00:26:07,274
I love them. That's my happy place. I have ADHD,

422
00:26:07,322 --> 00:26:10,722
which I just found out about, like, two years ago. So I never understood why

423
00:26:10,856 --> 00:26:14,178
everyone else is freaking out about incidents. And that's when I get dead calm and

424
00:26:14,184 --> 00:26:17,922
I can focus the best the more, the scarier it is, the better

425
00:26:17,976 --> 00:26:21,318
I can focus. And I'm just like, we. So that's really hard for me

426
00:26:21,324 --> 00:26:24,374
to want to give up because I suddenly don't have any times where I really

427
00:26:24,412 --> 00:26:27,654
feel like I'm useful anymore. But you have

428
00:26:27,692 --> 00:26:31,078
to. You have to, because just like you said, you have

429
00:26:31,084 --> 00:26:34,550
to let your team become the experts. If you cling to that,

430
00:26:34,620 --> 00:26:36,280
you cling to it too hard.

431
00:26:38,170 --> 00:26:41,486
You're just preventing them from being the best team that

432
00:26:41,508 --> 00:26:45,102
they could be. I will give you. And they won't feel like you trust

433
00:26:45,156 --> 00:26:47,918
them. That's the thing. Like if I show up every time, they're just going to

434
00:26:47,924 --> 00:26:51,566
be like, she doesn't trust us. I was

435
00:26:51,588 --> 00:26:54,506
going to say for the job anymore.

436
00:26:54,618 --> 00:26:58,206
It's like there are a number of different things. Sorry, I didn't mean to interrupt

437
00:26:58,238 --> 00:27:01,842
you guys. I was just going to say that I have an old

438
00:27:01,896 --> 00:27:05,902
leader that back in the day he incredible and very technical

439
00:27:05,966 --> 00:27:09,286
and very smart, and I would have to have side conversations with him and

440
00:27:09,308 --> 00:27:12,774
be like, people love having you in there, but you

441
00:27:12,812 --> 00:27:16,600
also are preventing them from learning this. Let's wait.

442
00:27:17,210 --> 00:27:20,742
I know we want to get this taken care of, but give them that little

443
00:27:20,796 --> 00:27:24,374
bit of. Because it does have a different reaction

444
00:27:24,422 --> 00:27:27,546
than people all of a sudden are like, oh boy, they're here. They're going to

445
00:27:27,568 --> 00:27:31,322
tell us what to do. We'll just wait to be told. Instead of saying,

446
00:27:31,456 --> 00:27:35,262
actually, I know this, and this is how I should. We fixed this

447
00:27:35,316 --> 00:27:38,986
before. You could have a more junior engineer

448
00:27:39,018 --> 00:27:42,526
in there that's never with this SVP before.

449
00:27:42,628 --> 00:27:46,494
And they're like, whoa, I'm not speaking up right now. Yeah,

450
00:27:46,692 --> 00:27:50,130
totally. It removes a sense of safety, it adds an edge of fear.

451
00:27:50,870 --> 00:27:53,666
And the thing is that when you're dealing with leaders like this, and I've been

452
00:27:53,688 --> 00:27:56,974
one before, you just have to look them in the eye and shake their shoulders

453
00:27:57,022 --> 00:28:00,706
and say, it's not about you. It's not about you anymore.

454
00:28:00,818 --> 00:28:04,454
You are not as clutch as you think you are. And it's not your

455
00:28:04,492 --> 00:28:08,210
job to be as clutch as you want to be. You need to step aside

456
00:28:08,370 --> 00:28:11,738
and let the next generation. They'll fumble it a little bit. It might take them

457
00:28:11,744 --> 00:28:15,338
a little longer the first time, but they'll get there and they have to.

458
00:28:15,504 --> 00:28:18,922
I was in an organization that was like, it was a public

459
00:28:18,976 --> 00:28:22,634
facing company. It was used by so many different folks

460
00:28:22,682 --> 00:28:26,480
in the world. And still, even after all that,

461
00:28:27,330 --> 00:28:32,094
the CTO would jump into incidents and as

462
00:28:32,132 --> 00:28:36,306
soon as they joined the channel, everybody talking,

463
00:28:36,488 --> 00:28:39,794
well, no, it would go from one person is talking to several people

464
00:28:39,832 --> 00:28:43,406
are talking, and the time between people hitting

465
00:28:43,438 --> 00:28:45,410
enter increased.

466
00:28:47,910 --> 00:28:51,126
This person didn't realize it, but it was almost like we had to

467
00:28:51,148 --> 00:28:54,694
take them through it. It's just showing them how

468
00:28:54,732 --> 00:28:58,454
the tenor of the incident changes. And it's not even just people

469
00:28:58,492 --> 00:29:02,122
that high up. It's certain senior engineers, too. I think also

470
00:29:02,176 --> 00:29:05,722
as leaders, we have to be

471
00:29:05,776 --> 00:29:09,226
really intentional about

472
00:29:09,328 --> 00:29:12,570
what we're rewarding and how things are happening,

473
00:29:12,640 --> 00:29:16,634
because I also thought that organization as well, like very senior

474
00:29:16,682 --> 00:29:20,238
engineers, even when they entered the channel, they would come in and just save the

475
00:29:20,244 --> 00:29:23,838
day. There was one engineer that when they joined, everyone reacted with the

476
00:29:23,844 --> 00:29:27,294
Batman emoji, and they were like the most principal engineer.

477
00:29:27,342 --> 00:29:30,898
And I saw more junior engineers acting like this person,

478
00:29:31,064 --> 00:29:34,494
and they were the information. They had their own private

479
00:29:34,542 --> 00:29:38,146
dashboards because it was like what we were incentivizing

480
00:29:38,178 --> 00:29:41,302
was this culture where you came in and saved the day as well.

481
00:29:41,356 --> 00:29:45,334
And it was kind of fascinating. Yeah, I think,

482
00:29:45,372 --> 00:29:48,762
Nora, super real. One of the things along

483
00:29:48,816 --> 00:29:52,346
that line is that obviously

484
00:29:52,528 --> 00:29:55,786
we have jelly that we've been using, and one of

485
00:29:55,808 --> 00:29:59,766
the things that is really shining through there is where we've

486
00:29:59,798 --> 00:30:03,534
got those folks that the incident is called. They're hopping in there. They're not on

487
00:30:03,572 --> 00:30:07,630
call, and they're doing work. And there's

488
00:30:08,530 --> 00:30:12,240
a lot of opportunity to learn about that because

489
00:30:12,930 --> 00:30:17,060
there are situations where maybe we don't have the right page set up

490
00:30:17,430 --> 00:30:21,406
for that particular type of event, or there's

491
00:30:21,438 --> 00:30:24,946
many different elements that can contribute to that happening, but one

492
00:30:24,968 --> 00:30:28,646
of them is. But when shit really hits the

493
00:30:28,668 --> 00:30:32,166
fans, I bet you all have your

494
00:30:32,188 --> 00:30:35,286
top four or five engineers that you're pinging on the side being

495
00:30:35,308 --> 00:30:38,530
like, hey, are you watching this? And holding?

496
00:30:38,690 --> 00:30:42,490
Because you know that they're going to be able to come in and really help.

497
00:30:42,560 --> 00:30:46,314
But at the same time, there's just so much to learn about

498
00:30:46,352 --> 00:30:49,674
how to manage the people element of.

499
00:30:49,792 --> 00:30:52,860
Because again, if you keep having them come in and do that,

500
00:30:53,250 --> 00:30:56,430
that's not going to help the organization overall.

501
00:30:56,930 --> 00:31:00,254
Ultimately, in that case, you have to get to a point where you

502
00:31:00,292 --> 00:31:03,502
say, thank you so much for being here. We do rely on you sometimes,

503
00:31:03,556 --> 00:31:07,234
but wait for us to ask you. Wait for someone to escalate to you before

504
00:31:07,272 --> 00:31:10,766
you jump in, because that gives the instant

505
00:31:10,798 --> 00:31:14,914
commander, and that gives them a genuine chance

506
00:31:15,032 --> 00:31:18,466
to try and solve it themselves without just constantly looking over their shoulder going,

507
00:31:18,488 --> 00:31:20,246
when is so and so going to jump in and fix it for us,

508
00:31:20,268 --> 00:31:24,054
right? And they know that they need to give it a shot, and that

509
00:31:24,092 --> 00:31:26,950
person is still available. But like the training wheels,

510
00:31:27,370 --> 00:31:30,426
you need to try and wobble around with the training wheels off a little bit

511
00:31:30,448 --> 00:31:33,562
before you reach for them. Yeah.

512
00:31:33,616 --> 00:31:37,114
And it's giving them the opportunity

513
00:31:37,232 --> 00:31:40,746
to teach others their skills. And this is how

514
00:31:40,768 --> 00:31:44,206
you become even more seniors, by doing stuff like this. Also, when you

515
00:31:44,228 --> 00:31:47,646
do escalate to someone, ask them

516
00:31:47,668 --> 00:31:51,630
to come in and try not to do hands on themselves, but just to answer

517
00:31:51,700 --> 00:31:54,100
questions about where to look. Yeah.

518
00:31:54,710 --> 00:31:57,010
One of the things that we did recently,

519
00:31:57,510 --> 00:32:00,980
I guess it's not, man, my brain is, it's been a while,

520
00:32:01,430 --> 00:32:05,414
but we got away from having an

521
00:32:05,452 --> 00:32:08,566
engineer lead constantly in our

522
00:32:08,588 --> 00:32:12,326
incident, our high severity incidents, and it worked pretty well for

523
00:32:12,348 --> 00:32:15,990
a while, and we were seeing that things

524
00:32:16,060 --> 00:32:19,894
were. But one of the things that we were noticing is

525
00:32:19,932 --> 00:32:23,702
that there wasn't always someone there to kind of take the brunt

526
00:32:23,766 --> 00:32:27,002
of a business decision being made. And what I mean by that

527
00:32:27,056 --> 00:32:29,500
is when trade off conversations are happening,

528
00:32:29,870 --> 00:32:33,866
having the right person to ask a couple of those pointed questions that has a

529
00:32:33,888 --> 00:32:37,406
broader breadth to help really be able and

530
00:32:37,428 --> 00:32:40,720
to raise their hand and say, yes, go ahead and do that.

531
00:32:42,130 --> 00:32:44,480
I'm here. I've got you. Yes, go.

532
00:32:45,250 --> 00:32:48,658
And really doing exactly what you're saying, which is, most of

533
00:32:48,664 --> 00:32:52,034
the time, really listening and making sure that the team has what they

534
00:32:52,072 --> 00:32:56,040
need, but then finding the opportune moments to make sure that

535
00:32:56,570 --> 00:32:59,894
things are moving along, the questions are getting asked, and,

536
00:33:00,092 --> 00:33:03,670
again, really taking on the responsibility,

537
00:33:04,010 --> 00:33:07,686
again, that pressure off those engineers where they may

538
00:33:07,708 --> 00:33:11,020
not be as comfortable to say, yes, we need to do this.

539
00:33:11,470 --> 00:33:16,534
One of the things at Sundusk right now that we're very laser

540
00:33:16,582 --> 00:33:20,090
focused on is reducing all of our mean times,

541
00:33:20,160 --> 00:33:23,502
too. So we've got a bunch of different mean

542
00:33:23,556 --> 00:33:27,022
times, too. And I'm saying that in the sense that

543
00:33:27,156 --> 00:33:31,114
we've got a bunch of them that are, meantime to resolve, meantime to activate

544
00:33:31,242 --> 00:33:34,674
all of those. And I think that there's these

545
00:33:34,712 --> 00:33:38,286
very interesting pockets of responding

546
00:33:38,318 --> 00:33:42,180
to the incident where, little by little, reducing that time,

547
00:33:43,910 --> 00:33:46,734
especially around that type of a thing, where, again,

548
00:33:46,792 --> 00:33:50,470
there's a debate going back and forth of whether or not to do something.

549
00:33:50,540 --> 00:33:54,022
And it's, again, just especially

550
00:33:54,076 --> 00:33:57,446
when it comes down to not the engineering decisions, but the

551
00:33:57,468 --> 00:34:00,614
business decisions. Right. A lot of engineers will feel like, okay,

552
00:34:00,732 --> 00:34:04,026
but now I'm at this risky precipice, and I'm not sure

553
00:34:04,048 --> 00:34:07,654
how to make this decision about this risk to the business and how to analyze

554
00:34:07,702 --> 00:34:11,470
that that's really important. Do you solve this with roles?

555
00:34:12,290 --> 00:34:13,040
Yeah,

556
00:34:15,490 --> 00:34:19,200
we now have our engineering lead on call rotation, which is

557
00:34:19,570 --> 00:34:23,422
pretty much, this is a little inside baseball,

558
00:34:23,486 --> 00:34:27,954
but like director plus, we follow the sun first

559
00:34:27,992 --> 00:34:32,418
and secondary, and we

560
00:34:32,424 --> 00:34:35,498
have a handful of senior managers that are in that, but those are senior

561
00:34:35,534 --> 00:34:40,006
managers, that this is a growth opportunity for them to

562
00:34:40,028 --> 00:34:42,040
be able to get to that.

563
00:34:43,930 --> 00:34:47,602
It's a great opportunity to get some visibility and to show leadership skills outside

564
00:34:47,676 --> 00:34:49,946
of what their area is.

565
00:34:50,128 --> 00:34:53,434
And I think that what's interesting,

566
00:34:53,632 --> 00:34:57,066
again, observing different incidents where we have different

567
00:34:57,248 --> 00:35:00,394
leaders, they take different approaches. Right. Like,

568
00:35:00,432 --> 00:35:03,200
you have some of the ones that are like,

569
00:35:04,130 --> 00:35:07,786
they're there, they have their presence, they're listening, and then they're

570
00:35:07,818 --> 00:35:11,226
ready to go with their three very specific questions as soon as there's

571
00:35:11,258 --> 00:35:14,674
a break in the conversation where there's other

572
00:35:14,712 --> 00:35:18,580
leaders that get a little bit more involved. And so

573
00:35:19,030 --> 00:35:22,590
I think the most important piece of that role

574
00:35:22,670 --> 00:35:27,250
is the relationship with the incident manager iims

575
00:35:27,330 --> 00:35:30,530
should be making. They are in charge ultimately,

576
00:35:30,610 --> 00:35:34,200
right? They are the ones that are making sure that

577
00:35:35,290 --> 00:35:39,014
they're doing all the things. But I think that that

578
00:35:39,052 --> 00:35:43,530
partnership between the end lead and the IM and

579
00:35:43,680 --> 00:35:47,254
even having a little back channel conversation between those two on slack

580
00:35:47,302 --> 00:35:49,980
to just say, hey, I'm hearing where the,

581
00:35:51,230 --> 00:35:54,686
I'd rather make sure that they're pushing things along instead of

582
00:35:54,708 --> 00:35:58,218
having me jump in because if I jump in, then it, it can shift

583
00:35:58,394 --> 00:36:02,606
the, like, oh, whoa, why is all of a sudden asking this question?

584
00:36:02,788 --> 00:36:06,580
So I think that there's a lot of opportunity to like,

585
00:36:07,750 --> 00:36:10,754
and that works well in a situation where you don't have a lot of people

586
00:36:10,792 --> 00:36:14,660
that are trying to exert a lot of,

587
00:36:15,850 --> 00:36:19,794
it's not those power grab situations.

588
00:36:19,842 --> 00:36:23,426
We don't really have that at Zendesk. I was mentioning

589
00:36:23,458 --> 00:36:27,174
earlier, it's a really collaborative and all for one type

590
00:36:27,212 --> 00:36:30,374
of the way that we operate.

591
00:36:30,422 --> 00:36:33,914
But I think that there's unique elements like that

592
00:36:33,952 --> 00:36:37,420
that, like, I wouldn't necessarily recommend having that role for

593
00:36:37,950 --> 00:36:41,020
all programs. Right. Like, that might not be the right fit.

594
00:36:42,350 --> 00:36:45,674
That might actually not be the way to become more effective.

595
00:36:45,722 --> 00:36:49,422
But for us, that's helpful in the sense of let's make sure that there's someone

596
00:36:49,476 --> 00:36:52,522
there to really own those critical decisions.

597
00:36:52,666 --> 00:36:56,126
Yeah, makes sense. Erin, you touch on this

598
00:36:56,148 --> 00:36:58,498
a little bit, but I mean, a lot of the folks that are going to

599
00:36:58,504 --> 00:37:02,082
be listening to this have no idea the amazing learning

600
00:37:02,136 --> 00:37:05,498
from incidents culture that you are building at Zendesk

601
00:37:05,534 --> 00:37:09,080
and just how hard and intentional that

602
00:37:09,770 --> 00:37:13,430
is with a really large organization with

603
00:37:13,500 --> 00:37:16,562
a very pervasive tool in the industry.

604
00:37:16,626 --> 00:37:17,670
And I'm curious,

605
00:37:20,190 --> 00:37:23,398
you obviously can't distill it in like a five minute thing. But I'm

606
00:37:23,414 --> 00:37:27,322
curious what advice you might have for other folks looking

607
00:37:27,376 --> 00:37:30,650
to Erin out looking to create an intentional learning

608
00:37:30,720 --> 00:37:34,186
culture there. And I think one of the things you suggested was that you put

609
00:37:34,208 --> 00:37:38,074
it on the career ladder a little bit. Right. And so folks are being rewarded

610
00:37:38,122 --> 00:37:42,046
for it in a way. And I think more of the tech industry needs to

611
00:37:42,068 --> 00:37:45,566
do that and be that intentional about it. But is there any other advice you

612
00:37:45,588 --> 00:37:49,310
might give to folks? Yeah, I think that that's a really good question.

613
00:37:49,380 --> 00:37:52,750
And it's funny, like, yeah. Trying to squeeze it into a five minute,

614
00:37:53,810 --> 00:37:56,902
keeping it short. I think

615
00:37:56,956 --> 00:38:01,080
that it really starts from

616
00:38:02,730 --> 00:38:06,134
the folks that are responsible for incident management. Right.

617
00:38:06,332 --> 00:38:10,620
Wanting to make sure that they are understanding and

618
00:38:11,070 --> 00:38:14,666
operating their process as efficiently as possible.

619
00:38:14,768 --> 00:38:18,250
Right. So when we do that and we learn from,

620
00:38:18,400 --> 00:38:22,010
we take the opportunity to really have a blameless culture.

621
00:38:22,430 --> 00:38:26,126
And that is something that we really do stand by at Zendesk. We always have.

622
00:38:26,308 --> 00:38:29,786
I feel like I keep kind of mentioning these rah, raw things about Zendesk,

623
00:38:29,818 --> 00:38:32,110
but it is true. You should be proud.

624
00:38:33,650 --> 00:38:37,202
We do practice these things. And I do think, though, that that

625
00:38:37,256 --> 00:38:41,122
started from a very early foundation. I think that we have

626
00:38:41,176 --> 00:38:44,706
maintained that culture, which helps quite a bit from the

627
00:38:44,728 --> 00:38:48,598
learning. Right. Like the opportunity to learn. I will say

628
00:38:48,684 --> 00:38:51,640
that what we ended up doing is,

629
00:38:52,170 --> 00:38:55,634
I mentioned this earlier, we collect a lot of data, our incident

630
00:38:55,682 --> 00:38:59,498
retrospectives, very intricate. At the

631
00:38:59,504 --> 00:39:02,646
end of every incident, there's a report owner that's

632
00:39:02,678 --> 00:39:06,022
assigned. If it's a large incident,

633
00:39:06,086 --> 00:39:09,786
there may be more than one. And they

634
00:39:09,808 --> 00:39:13,294
work on doing their full RCA, and there's so much

635
00:39:13,332 --> 00:39:16,910
information. What's an RCA? Root cause analysis.

636
00:39:17,570 --> 00:39:21,518
Yeah. And as part of that process,

637
00:39:21,604 --> 00:39:24,930
it's really the work that they do to really understand what had happened,

638
00:39:25,000 --> 00:39:29,650
providing the story, the narrative, the timeline, the impact remediations,

639
00:39:30,390 --> 00:39:33,842
and being able to.

640
00:39:33,976 --> 00:39:37,302
Then we have our meeting where we go through,

641
00:39:37,356 --> 00:39:41,462
we talk about the incident, and then from

642
00:39:41,516 --> 00:39:45,046
there we push out our public post mortem that

643
00:39:45,068 --> 00:39:48,754
is shared out to customers. We also have an event analysis

644
00:39:48,802 --> 00:39:52,118
that we do prepare within 72 hours that gets shared

645
00:39:52,134 --> 00:39:55,546
with some of our customers upon request. Just because

646
00:39:55,728 --> 00:39:59,306
this is what we know at this point, that also helps a lot with our

647
00:39:59,328 --> 00:40:02,974
customer piece. That's not about learning, though. So I think

648
00:40:03,012 --> 00:40:06,960
that what we've done is we have established a pretty strong

649
00:40:07,330 --> 00:40:10,590
process that has worked for Zendesk

650
00:40:11,090 --> 00:40:15,182
pretty much pretty well in the sense that we've been able to learn

651
00:40:15,236 --> 00:40:18,546
quite a bit from our incidents and

652
00:40:18,728 --> 00:40:22,610
our remediation item process, we have slas against our remediations.

653
00:40:23,270 --> 00:40:26,886
And with those remediations, I think that I

654
00:40:26,908 --> 00:40:30,418
was mentioning the chaos engineering that's a more recent.

655
00:40:30,594 --> 00:40:34,054
And I'm saying these timelines, which me saying

656
00:40:34,092 --> 00:40:37,782
recent could actually mean a little bit longer, but taking those and

657
00:40:37,836 --> 00:40:41,354
saying, hey, we had this incident. Let's do this exercise and

658
00:40:41,392 --> 00:40:45,190
validate that all of these remediations that you said are completed,

659
00:40:45,350 --> 00:40:47,850
we are good. We've mitigated this risk.

660
00:40:48,350 --> 00:40:52,142
And there's this whole piece of, I mentioned

661
00:40:52,196 --> 00:40:55,470
about the data that we collect, right. And being

662
00:40:55,540 --> 00:40:59,150
able to put together a narrative and a story that is

663
00:40:59,220 --> 00:41:02,686
really able to help the business understand

664
00:41:02,868 --> 00:41:06,066
what it is that we're dealing with, and how

665
00:41:06,088 --> 00:41:09,618
are we actually taking that data and making changes? How do

666
00:41:09,624 --> 00:41:13,794
we drive the business to actually recognize where

667
00:41:13,832 --> 00:41:17,426
we need to be making improvements? And again,

668
00:41:17,528 --> 00:41:21,602
we've been collecting this data for years now, so we've got a lot of historical

669
00:41:21,666 --> 00:41:25,414
context, and it's very helpful. And I think what we've done now with

670
00:41:25,452 --> 00:41:29,218
adding jelly to the mix with this is that it's a whole other layer for

671
00:41:29,244 --> 00:41:32,934
us that we haven't been able to get that level of insight.

672
00:41:32,982 --> 00:41:36,234
And we were ready for it in terms of

673
00:41:36,272 --> 00:41:40,114
being able to do things like pulling our timeline

674
00:41:40,182 --> 00:41:43,502
together from various slack channels and being able

675
00:41:43,556 --> 00:41:47,754
to see the human element and involvement

676
00:41:47,802 --> 00:41:52,506
and participation. I think those

677
00:41:52,548 --> 00:41:55,982
are two really big spaces that we had some blind spots

678
00:41:56,046 --> 00:41:59,890
to. Because again, when I talk about us trying to reduce

679
00:42:00,470 --> 00:42:04,180
our times, mean times too,

680
00:42:05,430 --> 00:42:08,822
there are things that are happening in other slack channels where there's time

681
00:42:08,876 --> 00:42:12,614
spent on triage that is like, there's these

682
00:42:12,652 --> 00:42:16,054
pieces that, sure, you can put into a big

683
00:42:16,092 --> 00:42:19,366
write up of a report that, oh, we triage this in the such and

684
00:42:19,388 --> 00:42:23,066
such slack channel with a link to the Slack channel, but that's not doing you

685
00:42:23,088 --> 00:42:26,854
any good to actually, when you talk about blameless

686
00:42:26,902 --> 00:42:30,318
culture and all this stuff, is that just within engineering or is that

687
00:42:30,324 --> 00:42:33,040
company wide? Good question.

688
00:42:37,170 --> 00:42:41,418
I think it's company wide. I think every organization

689
00:42:41,514 --> 00:42:44,814
kind of has their own little. Because this is something

690
00:42:44,852 --> 00:42:48,402
that I have definitely struggled with a little bit. And I don't mean to

691
00:42:48,456 --> 00:42:52,126
throw other under the bus or anything, but in engineering,

692
00:42:52,158 --> 00:42:55,490
I feel like we have for a couple of decades now,

693
00:42:55,560 --> 00:42:59,320
been working on training. None of us

694
00:42:59,690 --> 00:43:03,382
just shows up out of college or whatever,

695
00:43:03,436 --> 00:43:06,998
just like, yay. I know how to admit my mistakes and not feel safe and

696
00:43:07,004 --> 00:43:10,810
everything. This has been like a very conscious, very intentional, multi year,

697
00:43:10,880 --> 00:43:14,106
multi decade effort on behalf of the

698
00:43:14,128 --> 00:43:17,990
entire engineering culture to try and depersonalize

699
00:43:18,070 --> 00:43:22,830
everything in code reviews to create blameless retros,

700
00:43:23,570 --> 00:43:27,790
and we still struggle with it. And it's something where I feel like other

701
00:43:27,860 --> 00:43:31,898
parts of the business, like sales and marketing, they're still fucking petrified.

702
00:43:31,994 --> 00:43:35,546
They're just, like, so afraid to talk about mistakes

703
00:43:35,578 --> 00:43:38,818
in public. So I keep trying to find out if

704
00:43:38,824 --> 00:43:42,594
there are companies out there who are trying to expand this beyond engineering because it

705
00:43:42,632 --> 00:43:45,620
feels so needed to me, and I'm not sure how to do it.

706
00:43:47,270 --> 00:43:49,910
So I can talk to that in a little bit of a different way than

707
00:43:49,980 --> 00:43:53,718
how I would say, blameless. So we do

708
00:43:53,804 --> 00:43:57,454
a lot of work with our go to market folks in terms of enabling

709
00:43:57,522 --> 00:44:00,490
them to be informed during an incident.

710
00:44:00,910 --> 00:44:04,506
Immediately after an incident, they have process around where they can

711
00:44:04,528 --> 00:44:08,534
understand what's happening. We obviously maintain

712
00:44:08,582 --> 00:44:11,770
our space where we're actually active

713
00:44:11,850 --> 00:44:15,774
responding to the incident, but there's other ways for them

714
00:44:15,812 --> 00:44:19,200
to gain information so that they can communicate with their customers.

715
00:44:20,050 --> 00:44:24,222
I think that Zendesk is also a pretty transparent

716
00:44:24,286 --> 00:44:28,046
company when it comes to taking responsibility for where we've

717
00:44:28,078 --> 00:44:29,410
had missteps.

718
00:44:31,510 --> 00:44:34,466
But I will say when we have,

719
00:44:34,568 --> 00:44:38,238
I will call them noisy times where

720
00:44:38,424 --> 00:44:42,294
we are not aware that we may not have that

721
00:44:42,332 --> 00:44:46,534
many high severity incidents. Right. But we could have an enterprise customer

722
00:44:46,732 --> 00:44:49,526
that has a bug that hasn't been.

723
00:44:49,628 --> 00:44:53,226
That's taking longer than they expect. They could be

724
00:44:53,248 --> 00:44:56,918
having an integration issue that has nothing to do with Zendesk side, but it's

725
00:44:56,934 --> 00:45:00,426
on the other side of it. There could be multitudes of

726
00:45:00,448 --> 00:45:03,914
different things that have nothing to do with our incidents.

727
00:45:03,962 --> 00:45:07,200
Right. And so that's where we run into

728
00:45:07,890 --> 00:45:11,214
the frustration from, I think, our folks that are

729
00:45:11,252 --> 00:45:14,674
trying to just support our customers, because I think that

730
00:45:14,712 --> 00:45:18,242
that's a big piece of being able

731
00:45:18,296 --> 00:45:22,094
to enable them to be able to have the right pieces

732
00:45:22,142 --> 00:45:25,614
come together, to be able to work and interact

733
00:45:25,662 --> 00:45:28,114
with their customers on those things. Totally.

734
00:45:28,162 --> 00:45:31,254
And I think that that's what you're describing, too,

735
00:45:31,292 --> 00:45:35,106
is like, creating this big, same team vibe. I've definitely seen engineering

736
00:45:35,138 --> 00:45:38,466
cultures where they're like, no, if you refer to this doc

737
00:45:38,498 --> 00:45:42,246
that we've pinned in our channel, it's actually not an incident. So you can't

738
00:45:42,278 --> 00:45:45,350
talk to us right now. Ticket.

739
00:45:45,430 --> 00:45:48,838
And it becomes incredibly frustrating for everybody. And you're

740
00:45:48,854 --> 00:45:52,826
not actually like the engineers. Even though they may be creating

741
00:45:52,858 --> 00:45:56,574
this internal blameless culture, they're not really having that

742
00:45:56,692 --> 00:45:59,614
vibe with their other colleagues, too. I really like,

743
00:45:59,652 --> 00:46:03,350
totally, one of the other things that we implemented

744
00:46:03,530 --> 00:46:07,582
a while back was we have an engineering leadership escalation

745
00:46:07,646 --> 00:46:12,274
process. So if

746
00:46:12,312 --> 00:46:15,702
there's a customer that is frustrated and they have

747
00:46:15,756 --> 00:46:20,902
whatever's going on. And our

748
00:46:20,956 --> 00:46:24,582
customer success folk or person can go in

749
00:46:24,636 --> 00:46:28,454
and put in a request, and basically, depending on

750
00:46:28,492 --> 00:46:32,650
either executive sponsorship and or expertise in that particular area,

751
00:46:32,800 --> 00:46:35,978
we then can line them up to be able to have a direct

752
00:46:36,064 --> 00:46:38,970
conversation with one of our leaders within engineering.

753
00:46:39,390 --> 00:46:43,054
This is something that originated from. I used

754
00:46:43,092 --> 00:46:46,234
to have to manage crazy intake

755
00:46:46,362 --> 00:46:50,654
and spreadsheets of frustration from certain

756
00:46:50,772 --> 00:46:52,080
customers. Right.

757
00:46:53,250 --> 00:46:56,970
And there were a couple of us that would take those calls

758
00:46:57,050 --> 00:47:00,706
and just like, you would get on a call and you would listen and

759
00:47:00,728 --> 00:47:03,666
you like, you know. Yeah, most of the time it was they just wanted to

760
00:47:03,688 --> 00:47:07,314
be heard, and they just wanted to hear directly from somebody that was

761
00:47:07,352 --> 00:47:11,094
closer to it. And I think that, again, I mentioned

762
00:47:11,132 --> 00:47:14,646
that event analysis document that we put together. I think that also went

763
00:47:14,668 --> 00:47:18,198
a long way with bridging that gap a little bit with like, hey, we don't

764
00:47:18,204 --> 00:47:20,700
know everything yet, but this is what we do know,

765
00:47:21,390 --> 00:47:23,820
and this is what we're doing about it right now.

766
00:47:24,350 --> 00:47:28,074
I think that there's ways to kind of bring it

767
00:47:28,112 --> 00:47:32,926
in so that the way in which the

768
00:47:32,948 --> 00:47:37,294
rest of the organizations is trusting in the

769
00:47:37,332 --> 00:47:41,246
engineering organization as a whole, there's definitely

770
00:47:41,428 --> 00:47:45,006
ways to do that. But again, it's what

771
00:47:45,028 --> 00:47:48,530
we were saying. I think it goes back quite a bit to the culture element.

772
00:47:48,950 --> 00:47:52,034
I mean, that artifact that you're talking about creating is really

773
00:47:52,072 --> 00:47:56,174
a shared vernacular. Right? It's like thinking about going to read

774
00:47:56,232 --> 00:47:59,846
what you're giving to. If you're creating something that is just for engineering and is

775
00:47:59,868 --> 00:48:02,520
just about the technical system issues,

776
00:48:04,010 --> 00:48:07,430
they do impact customer success, but they're not written in

777
00:48:07,500 --> 00:48:11,066
any sort of language that they can understand that doesn't give that

778
00:48:11,168 --> 00:48:14,810
same vibe, and it makes them maybe not want to participate afterwards.

779
00:48:16,510 --> 00:48:20,006
I think the tech industry is really cool, and the engineering

780
00:48:20,198 --> 00:48:23,902
and organizations has a lot of influence. And so if you can enroll other

781
00:48:23,956 --> 00:48:27,758
teams and other departments into your processes that are usually

782
00:48:27,844 --> 00:48:31,342
quite good, they might be able to learn as well.

783
00:48:31,476 --> 00:48:34,946
I was in an incident like several years ago on

784
00:48:34,968 --> 00:48:38,770
Super Bowl Sunday, where Jones of the engineers that were on call

785
00:48:38,840 --> 00:48:41,170
knew that we were running a Super bowl commercial.

786
00:48:44,150 --> 00:48:47,030
And we went down during the Super bowl commercial,

787
00:48:49,130 --> 00:48:52,374
and I came to the incident review the next day,

788
00:48:52,412 --> 00:48:56,354
and it was only sres in the room. No one from marketing

789
00:48:56,402 --> 00:48:59,654
was in the room, no one from PR was. And it was just

790
00:48:59,692 --> 00:49:03,242
like, it was very much we should be prepared for every

791
00:49:03,296 --> 00:49:06,810
situation vibe, but that's not

792
00:49:06,880 --> 00:49:10,186
really. Maybe we can talk about that. I feel like a

793
00:49:10,208 --> 00:49:13,694
lot of this is how we

794
00:49:13,732 --> 00:49:16,926
coordinated here with other departments and exacerbating the

795
00:49:16,948 --> 00:49:19,840
issue by not talking to them about it.

796
00:49:20,210 --> 00:49:23,710
Totally. We only have about 15

797
00:49:23,780 --> 00:49:27,122
minutes here, and I know you both have really great

798
00:49:27,176 --> 00:49:30,546
recent incident stories that I kind of want to hear about, so I

799
00:49:30,568 --> 00:49:32,420
want to shift gears a little bit.

800
00:49:33,510 --> 00:49:37,314
Charity, I would love to hear about a

801
00:49:37,352 --> 00:49:41,058
recent outage that you all had in as much detail as you're

802
00:49:41,074 --> 00:49:43,926
willing to go into and what you've learned from it.

803
00:49:43,948 --> 00:49:47,526
And what I will say, that as

804
00:49:47,548 --> 00:49:50,406
much detail as I'm willing to go into is all of the detail. This is

805
00:49:50,428 --> 00:49:53,642
one of the marvelous things about starting

806
00:49:53,696 --> 00:49:57,066
a company. I was always so frustrated with the editing of,

807
00:49:57,088 --> 00:50:00,186
like, I would be writing a postmortem for here's what happened. And they'd be like,

808
00:50:00,208 --> 00:50:03,822
script scratching. No, no, you can't say MongodB, say our data

809
00:50:03,876 --> 00:50:07,626
store, or no, you can't say aws, say our hosting

810
00:50:07,658 --> 00:50:09,470
provider. I'm just like, what the fuck?

811
00:50:11,090 --> 00:50:14,250
Or maybe, no, this reveals too much about the algorithm.

812
00:50:14,410 --> 00:50:17,854
And I'm just like that

813
00:50:17,892 --> 00:50:20,882
build verse by culture that we're still supposed to talk about later,

814
00:50:20,936 --> 00:50:24,354
but if you're not allowed to name that, you're being

815
00:50:24,392 --> 00:50:27,526
like, no one needs to know that we paid for this thing. It's like,

816
00:50:27,548 --> 00:50:30,200
yeah, they should know that because that has nothing to do with your business.

817
00:50:32,730 --> 00:50:36,706
Yeah. I feel like everybody's

818
00:50:36,738 --> 00:50:40,506
always so worried about losing trust with their users, and I just feel like the

819
00:50:40,528 --> 00:50:44,554
more transparent you are, the more trust you'll build, because these

820
00:50:44,592 --> 00:50:47,866
problems are not easy. And when you go down a couple of

821
00:50:47,888 --> 00:50:51,502
times, users might be frustrated. Then you explain what happened

822
00:50:51,636 --> 00:50:55,486
and they're going to go, oh, respect. Okay, we'll let

823
00:50:55,508 --> 00:50:59,086
you get to it. We'll talk later when things are up. In my experience,

824
00:50:59,268 --> 00:51:02,750
more detail is always better anyway.

825
00:51:02,820 --> 00:51:06,386
And so that was one of the first things that I did as

826
00:51:06,488 --> 00:51:08,740
CEO at the time. I was just like, look,

827
00:51:09,510 --> 00:51:13,054
whatever you want to put in the outage report, anything that's relevant,

828
00:51:13,102 --> 00:51:15,780
just write it all, let people see it. Anyway,

829
00:51:16,250 --> 00:51:20,454
yeah, we had this really interesting outage week

830
00:51:20,492 --> 00:51:24,086
or two ago. Maybe it was just last week, and it's the

831
00:51:24,108 --> 00:51:27,830
first time in, like, last time we really had an outage.

832
00:51:29,290 --> 00:51:32,394
Might have been something this spring, but before that it was like a kafka thing,

833
00:51:32,432 --> 00:51:36,380
like a year ago. So this was significant for us.

834
00:51:37,550 --> 00:51:40,746
And I got a couple of alerts that honeycomb was down, and I was

835
00:51:40,768 --> 00:51:44,398
like, wow, this is very unusual. And it

836
00:51:44,404 --> 00:51:47,790
took us a couple of days to figure out what was going on, and basically

837
00:51:47,860 --> 00:51:51,886
what was happening was we were

838
00:51:51,908 --> 00:51:55,934
using up all the lambda capacity period repeatedly.

839
00:51:56,062 --> 00:51:59,746
And the way our system work is we

840
00:51:59,768 --> 00:52:03,442
have hot data which is stored on the

841
00:52:03,496 --> 00:52:06,966
ssds, local ssds, and then cold data, which is stored in s

842
00:52:06,988 --> 00:52:10,902
three. And stuff ages out to s three pretty

843
00:52:10,956 --> 00:52:14,614
quickly. And this

844
00:52:14,652 --> 00:52:19,458
outage had to do with slos, because every

845
00:52:19,484 --> 00:52:22,726
time that someone sets an sl, they set an SLI,

846
00:52:22,758 --> 00:52:25,740
right, which rolls up into an slO, and the SLI will be like,

847
00:52:26,430 --> 00:52:29,674
tell me if we're getting

848
00:52:29,712 --> 00:52:32,938
x number of 504 over this time or whatever.

849
00:52:33,104 --> 00:52:36,670
So we have this offline job, right, which periodically kicks off and

850
00:52:36,740 --> 00:52:40,158
just pulls to see if things are meeting the

851
00:52:40,164 --> 00:52:44,110
SLI or not. And we realized

852
00:52:44,190 --> 00:52:47,940
after a while that we were seeing timestamps way into the future.

853
00:52:48,950 --> 00:52:52,766
And what happened was anytime a customer requests

854
00:52:52,798 --> 00:52:57,058
an SLO that doesn't exist yet, we backfill everything

855
00:52:57,144 --> 00:53:00,742
because they might be turning on a new SLI, right? They're writing something

856
00:53:00,796 --> 00:53:04,614
new. So as soon as somebody requests it, we backfill. And this

857
00:53:04,652 --> 00:53:07,560
was happening just over and over and over and over,

858
00:53:08,650 --> 00:53:11,994
didn't have any valid results, so it wouldn't make a cache line. So every

859
00:53:12,032 --> 00:53:15,766
single minute it would launch a backfill. And all the lambda jobs were just spun

860
00:53:15,798 --> 00:53:19,290
up just trying to backfill these slos.

861
00:53:20,450 --> 00:53:24,974
What was interesting about this was that we

862
00:53:25,012 --> 00:53:28,446
often think about how users are going to abuse our

863
00:53:28,468 --> 00:53:31,998
systems, and we try to make these guardrails and

864
00:53:32,084 --> 00:53:35,378
these limits and everything. And in fact,

865
00:53:35,464 --> 00:53:39,166
most of our interesting outages or edge cases

866
00:53:39,198 --> 00:53:42,674
or whatever come from people who are using the system as

867
00:53:42,712 --> 00:53:46,258
intended, but in a really creative, weird way,

868
00:53:46,424 --> 00:53:50,262
right? This is not something that we ever would have checked for,

869
00:53:50,316 --> 00:53:54,038
because it's completely valid. People will spin up SLis and need to

870
00:53:54,044 --> 00:53:57,286
backfill them. People will set dates in the future. All of these

871
00:53:57,308 --> 00:54:00,878
are super valid. I feel like when I was working on parts,

872
00:54:00,914 --> 00:54:05,174
I learned the very hard lesson repeatedly about creating these bounds checks

873
00:54:05,302 --> 00:54:08,714
to protect the platform from any given individual, right?

874
00:54:08,752 --> 00:54:12,234
But it becomes so much more interesting and difficult of a problem if what they're

875
00:54:12,282 --> 00:54:15,918
doing is valid, but in some way because of the size

876
00:54:16,004 --> 00:54:18,846
of the customer or because of whatever,

877
00:54:19,028 --> 00:54:22,190
it just is incredibly expensive.

878
00:54:23,650 --> 00:54:27,218
We have a really big write up. Go ahead. I was going

879
00:54:27,224 --> 00:54:30,594
to say, it's always very interesting to see how creative people can get with using

880
00:54:30,632 --> 00:54:34,114
your systems. Like some things that you were often. I was

881
00:54:34,152 --> 00:54:35,720
never like, wow,

882
00:54:37,930 --> 00:54:42,354
often it's a mistake or something where it might be intentional

883
00:54:42,482 --> 00:54:45,718
and completely legit, but they're doing a

884
00:54:45,724 --> 00:54:49,274
very extreme version of it, right? Like Jones of the very first

885
00:54:49,312 --> 00:54:53,254
things that we ran into with honeycomb, we do high cardinality, high dimensionality,

886
00:54:53,302 --> 00:54:56,810
all this stuff. And we started

887
00:54:56,880 --> 00:55:00,566
seeing customers run out of cardinality,

888
00:55:00,598 --> 00:55:04,286
not in the values but in the keys because they accidentally swapped the key

889
00:55:04,308 --> 00:55:06,640
value pairs. And so they were just like.

890
00:55:07,250 --> 00:55:10,462
So the key would have like, what do people. Instead of

891
00:55:10,516 --> 00:55:14,254
it being in the value. And that's where we realized that

892
00:55:14,452 --> 00:55:17,478
our cap on number of unique key values

893
00:55:17,514 --> 00:55:20,978
is somewhere around the number of Unix file system handles that we

894
00:55:20,984 --> 00:55:24,242
can hold up. So now we limit it to like 1500

895
00:55:24,296 --> 00:55:27,618
or something like that. Right. This is why I'm so

896
00:55:27,704 --> 00:55:31,318
you can see my shirt test and prod or live a lie. This shit is

897
00:55:31,404 --> 00:55:35,094
never going to come up in test environments. You're only

898
00:55:35,132 --> 00:55:39,010
ever going to see it at the conjunction of your code, your infrastructure,

899
00:55:39,090 --> 00:55:42,498
a point in time with users using it. Right. And this

900
00:55:42,524 --> 00:55:45,866
is why it's so important to instrument your code. Keep a close eye on

901
00:55:45,888 --> 00:55:49,654
it while it's new. Deploying is not the end of the story. It's the beginning

902
00:55:49,702 --> 00:55:53,194
of baking your code. It's the beginning of testing it out and

903
00:55:53,232 --> 00:55:56,734
seeing if it's resilient and responsible or not.

904
00:55:56,852 --> 00:55:59,982
And you just have to put it out there, keep an eye on it

905
00:56:00,036 --> 00:56:01,680
and watch it for a little bit.

906
00:56:02,690 --> 00:56:06,530
Unfortunately, we had the kind of instrumentation and the kind of detail

907
00:56:06,600 --> 00:56:10,034
where we were able to pretty quickly figure it out

908
00:56:10,072 --> 00:56:13,246
once we went to look. But you can't predict

909
00:56:13,278 --> 00:56:16,466
this stuff. You shouldn't even try. It's just impossible. You got

910
00:56:16,488 --> 00:56:19,686
to test and prod. It's a waste of time to try to

911
00:56:19,708 --> 00:56:22,918
predict it, too. Waste of time, right.

912
00:56:23,084 --> 00:56:27,270
You'll find out. It will come up quickly.

913
00:56:27,420 --> 00:56:30,666
Every limit in every system is there for a reason. There is a

914
00:56:30,688 --> 00:56:34,266
story behind every single one. Exactly. And people

915
00:56:34,288 --> 00:56:37,078
who spend all this time writing elaborate tests,

916
00:56:37,174 --> 00:56:41,354
just trying to test every. It's a waste of time because they

917
00:56:41,392 --> 00:56:44,346
spend a lot of time now. The time it takes them to run their tests

918
00:56:44,378 --> 00:56:48,062
is forever. It takes them a long time to know.

919
00:56:48,116 --> 00:56:51,930
Take that time and energy that you're investing into making all these wacky tests

920
00:56:52,010 --> 00:56:55,522
and invest in instrumentation. That effort will

921
00:56:55,576 --> 00:56:58,846
pay off. Yeah, totally.

922
00:56:59,038 --> 00:57:02,834
That is an awesome one. Erin, I'm going to turn it over

923
00:57:02,872 --> 00:57:06,710
to you. Can you tell us about a recent outage that you all had?

924
00:57:06,860 --> 00:57:10,354
Yes, and unlike charity, I am not the CEO,

925
00:57:10,402 --> 00:57:13,894
so I have to be a little bit more careful with

926
00:57:13,932 --> 00:57:17,734
some of the details that I possibly share. But I

927
00:57:17,772 --> 00:57:20,806
think that before we got on this

928
00:57:20,828 --> 00:57:24,166
call, I was going back and kind of looking through recent incidents

929
00:57:24,198 --> 00:57:27,466
that we've had. And I think that one of the things that I

930
00:57:27,488 --> 00:57:31,262
just want to call out is that it's interesting to

931
00:57:31,316 --> 00:57:35,342
see how over time, your type

932
00:57:35,396 --> 00:57:38,560
of incidents and the nature of them can change.

933
00:57:39,250 --> 00:57:42,830
And I don't have one of my obvious

934
00:57:42,900 --> 00:57:46,302
ones that normally I'd be like, yes, I'm sure we have one of these recently.

935
00:57:46,366 --> 00:57:49,250
And no, it's been pretty quiet in that space for a while.

936
00:57:49,320 --> 00:57:49,940
Right.

937
00:57:53,910 --> 00:57:55,940
I want to just talk a little bit.

938
00:57:57,190 --> 00:58:00,294
This is a little bit different because I think that this is an interesting one

939
00:58:00,332 --> 00:58:03,590
in the sense that it's more about the process of

940
00:58:03,660 --> 00:58:06,920
how I'm going to talk about it than it is about the actual incident itself.

941
00:58:11,390 --> 00:58:14,522
Of course I am because that's where I always come from.

942
00:58:14,576 --> 00:58:18,614
But we had an incident that was called recently,

943
00:58:18,742 --> 00:58:22,106
and the nature of it was, the question came up of,

944
00:58:22,128 --> 00:58:26,314
is this a security incident or is this a service incident? And the team realized

945
00:58:26,362 --> 00:58:29,854
like, oh, we can handle this within, like, we already tried escalating up through

946
00:58:29,892 --> 00:58:32,762
security. They said that this was on the customer side,

947
00:58:32,836 --> 00:58:37,198
so we're going to just technically

948
00:58:37,294 --> 00:58:40,898
it's not a security incident. And so we managed it

949
00:58:40,984 --> 00:58:45,342
because we could take those actions through the service side. We had the right engineers

950
00:58:45,406 --> 00:58:49,400
and all of that. But I think that one of the things that

951
00:58:49,770 --> 00:58:53,234
came back out of that was more of this understanding and discussion

952
00:58:53,282 --> 00:58:57,142
around. There was more of a risk from the standpoint of

953
00:58:57,196 --> 00:59:00,818
not, was that actually the right direction for

954
00:59:00,844 --> 00:59:03,910
us to go in terms of handling that from a process perspective,

955
00:59:03,990 --> 00:59:07,418
or would it have been better served, managed differently because

956
00:59:07,504 --> 00:59:10,774
of the fact that the engineering work that was required

957
00:59:10,902 --> 00:59:13,870
was not necessarily a high severity,

958
00:59:14,610 --> 00:59:18,174
we downgraded the incident to a lower severity level because it was something

959
00:59:18,212 --> 00:59:21,982
that, for them wasn't that, but reflecting back and looking

960
00:59:22,036 --> 00:59:25,578
at it, it was like, there's a couple of gotchas

961
00:59:25,754 --> 00:59:29,060
in here that we need to be more aware of that.

962
00:59:29,510 --> 00:59:32,722
Are we actually following that process from the process

963
00:59:32,776 --> 00:59:37,686
from the right standpoint, even though it doesn't fit in that perfect box of

964
00:59:37,708 --> 00:59:41,734
what it is? Security incidents also

965
00:59:41,772 --> 00:59:45,586
roll up through, like, we are responsible for service incidents

966
00:59:45,618 --> 00:59:49,434
or security incidents as well, but we have our

967
00:59:49,472 --> 00:59:53,290
triage and threat and triage team is

968
00:59:53,360 --> 00:59:56,634
through our cybersecurity organization, so we

969
00:59:56,672 --> 01:00:00,150
partner very closely with them. And so obviously

970
01:00:00,240 --> 01:00:03,774
that's something that there's some really strong learnings from

971
01:00:03,812 --> 01:00:07,374
that to kind of follow the tale of,

972
01:00:07,572 --> 01:00:11,502
because that's also one where it was very specific for a

973
01:00:11,556 --> 01:00:15,058
particular customer. Right. It wasn't a widespread thing. It was one particular

974
01:00:15,144 --> 01:00:18,926
customer that was having this issue. So following

975
01:00:18,958 --> 01:00:22,206
that trail and determining when it's

976
01:00:22,238 --> 01:00:26,178
a situation of rightfully so, the individual is like,

977
01:00:26,344 --> 01:00:29,846
we need to take care of this. So they raised an incident and

978
01:00:29,868 --> 01:00:33,302
it's like, wow, is it truly? Is it not? But it needed to get taken

979
01:00:33,356 --> 01:00:37,080
care of. But I think

980
01:00:37,690 --> 01:00:41,660
those are the types of things that are always very interesting in terms of like,

981
01:00:42,670 --> 01:00:46,618
it's totally off. It's not a common thing that would happen. And so you

982
01:00:46,624 --> 01:00:51,402
got to go back and just kind of review and figure out how to those

983
01:00:51,456 --> 01:00:54,846
incidents where it's not affecting everyone, those can be the

984
01:00:54,868 --> 01:00:58,586
trickiest ones to figure out. Especially when your slo

985
01:00:58,618 --> 01:01:02,458
or your SlI is like, yeah, we're at 99.9% reliability,

986
01:01:02,554 --> 01:01:05,630
but it's because everybody whose first name starts with like,

987
01:01:05,700 --> 01:01:09,058
slid thinks you're 100% down, or some of

988
01:01:09,064 --> 01:01:12,066
those really weird little edge cases. This is where a lot of my anger at

989
01:01:12,088 --> 01:01:15,982
dashboards comes from, because dashboards just cover over all those sins.

990
01:01:16,046 --> 01:01:18,754
You're just like, everything's fine while people are just like, no,

991
01:01:18,792 --> 01:01:22,294
it's not. Yeah, Aaron, you were talking about

992
01:01:22,332 --> 01:01:25,346
a lot of the metrics you're measuring earlier, and recently I've

993
01:01:25,378 --> 01:01:28,758
been coming know. I think metrics have value in their own and I have a

994
01:01:28,764 --> 01:01:32,178
lot of gripes with some of them think, you know, sometimes we over

995
01:01:32,204 --> 01:01:35,686
index on them. But I've been trying to come up with more creative metrics

996
01:01:35,718 --> 01:01:38,950
lately, and one of them is how long someone spends waffling

997
01:01:39,030 --> 01:01:40,990
trying to decide if something's an incident.

998
01:01:43,490 --> 01:01:44,720
I love it.

999
01:01:46,450 --> 01:01:49,838
Trying to figure it out or trying to figure out the severity and

1000
01:01:49,924 --> 01:01:54,666
the time it takes how many people they rope into a conversation. I was@one.org

1001
01:01:54,698 --> 01:01:57,954
that used to get paged all the time and

1002
01:01:58,152 --> 01:02:01,774
people just stopped wanting to bother each other because everyone was getting woken

1003
01:02:01,822 --> 01:02:05,806
up so much that one day people would open up incident channels

1004
01:02:05,838 --> 01:02:09,462
on their own and then sit there by themselves typing everything they were doing

1005
01:02:09,516 --> 01:02:13,222
for like 2 hours before they brought anyone else

1006
01:02:13,276 --> 01:02:17,400
in, which was fascinating. And so we started recording that

1007
01:02:18,990 --> 01:02:22,266
before paging another person in and thinking it was

1008
01:02:22,288 --> 01:02:25,660
a serious thing. So it just reminded me of that.

1009
01:02:28,590 --> 01:02:32,320
Cool. Well, we are wrapping up time now.

1010
01:02:33,010 --> 01:02:36,000
We probably have time for one more question.

1011
01:02:36,690 --> 01:02:40,414
And there's like three really

1012
01:02:40,452 --> 01:02:43,850
great ones. I'm trying to figure out which one I want you all to answer.

1013
01:02:43,940 --> 01:02:46,962
We're just going to have to do a second round at some point. Yeah,

1014
01:02:47,016 --> 01:02:50,382
like a follow up, a part two. We'll just end it on a cliffhanger.

1015
01:02:50,526 --> 01:02:54,402
Yeah, I guess

1016
01:02:54,456 --> 01:02:57,986
I will ask. I know,

1017
01:02:58,008 --> 01:03:01,414
cherry, you have thoughts on this? I want to hear you talk

1018
01:03:01,452 --> 01:03:05,174
about build versus buy with regard to tooling for any

1019
01:03:05,212 --> 01:03:08,486
phase of the incident lifecycle. You touched on it a little bit earlier, so I

1020
01:03:08,508 --> 01:03:11,978
feel like it's good for us to call back to that. Yeah,

1021
01:03:12,064 --> 01:03:15,878
so I preach with the religious zeal

1022
01:03:15,894 --> 01:03:19,926
of the converted. For the longest time, I was one of the neck

1023
01:03:19,958 --> 01:03:23,526
beards who just like, no, I will not outsource my core functions.

1024
01:03:23,558 --> 01:03:26,878
I am going to run my own mail because I want to be

1025
01:03:26,884 --> 01:03:30,094
able to grep through the mail schools. And it's so scary when I can't figure

1026
01:03:30,132 --> 01:03:32,686
out exactly where the mail went. Like, it goes up to Google and like,

1027
01:03:32,708 --> 01:03:35,262
what the fuck? All right, that was a long time ago, but it's still,

1028
01:03:35,316 --> 01:03:38,574
it was a big deal for me. Overcome that and go, okay, I can

1029
01:03:38,612 --> 01:03:42,746
outsource this to Google. Okay, I can do this, whatever. But even up to including

1030
01:03:42,778 --> 01:03:45,734
parse, I was like, no, metrics are a thing that use to give to someone

1031
01:03:45,772 --> 01:03:48,598
else. They're too critical, they're too core. I need to be able to get my

1032
01:03:48,604 --> 01:03:52,614
hands in there and figure it out. And I have come around full

1033
01:03:52,652 --> 01:03:56,710
circle on that and did so before starting honeycombio. Just because

1034
01:03:56,780 --> 01:04:00,874
the thing that I mentioned earlier about you never want your

1035
01:04:00,912 --> 01:04:04,614
telemetry to be on the same anything as your production systems.

1036
01:04:04,742 --> 01:04:08,598
Huge thing. But also it's

1037
01:04:08,614 --> 01:04:11,886
a big and really important part of the entire, call it

1038
01:04:11,908 --> 01:04:15,886
DevOps transformation or whatever, which is just that we

1039
01:04:15,908 --> 01:04:20,030
as engineers, the problem space is exploding.

1040
01:04:20,930 --> 01:04:23,966
Used to be you had the database to run. Now you've got fucking how many

1041
01:04:23,988 --> 01:04:27,210
data stores do you have? And you can't be expert in all

1042
01:04:27,220 --> 01:04:30,018
of them. You probably can't be expert in any of them and also do a

1043
01:04:30,024 --> 01:04:33,314
bunch of other stuff. Telemetry. For a long time,

1044
01:04:33,352 --> 01:04:36,418
it was just the case that you're going to get kind of shitty metrics and

1045
01:04:36,424 --> 01:04:39,222
dashboards, whether you ran them yourself or you paid someone else to do it.

1046
01:04:39,276 --> 01:04:42,374
That's not the case anymore. It's come a long way.

1047
01:04:42,492 --> 01:04:46,278
You could give somebody else money to do it way better than you could.

1048
01:04:46,444 --> 01:04:49,686
And that frees up engineering cycles for you to do

1049
01:04:49,708 --> 01:04:53,226
what you do best, right? What you do best is the reason that your

1050
01:04:53,248 --> 01:04:56,346
company exists, right? They're your crown jewels. It's what you spend your

1051
01:04:56,368 --> 01:04:59,990
life caring about. And you want to make that as an engineering leader,

1052
01:05:00,070 --> 01:05:02,874
you should make that list of things that you have to care about as small

1053
01:05:02,912 --> 01:05:05,966
as possible so you can do them as well as you can, right?

1054
01:05:06,068 --> 01:05:10,240
And everything that's not in that absolutely critical list,

1055
01:05:10,690 --> 01:05:14,126
get someone else to do it better than you can. It's so much cheaper

1056
01:05:14,158 --> 01:05:18,094
to pay someone else to run services than to have this enormous,

1057
01:05:18,142 --> 01:05:21,762
sprawling engineering team that's focused on 50 million different things.

1058
01:05:21,816 --> 01:05:25,410
That's not how you succeed your core business

1059
01:05:25,480 --> 01:05:28,966
or how you exactly take your headcount and spend them

1060
01:05:28,988 --> 01:05:32,950
on the things that you do and do them. Love it.

1061
01:05:33,020 --> 01:05:36,214
I love it. Aaron, anything to add there

1062
01:05:36,252 --> 01:05:38,918
before we wrap up here? Yeah, no, I mean, I think that it makes a

1063
01:05:38,924 --> 01:05:42,246
lot of sense. And again, I'm also responsible for our vendor

1064
01:05:42,278 --> 01:05:46,054
resilience. So dealing with understanding what our capabilities

1065
01:05:46,102 --> 01:05:49,820
are of the vendors and what we've agreed to, going back with

1066
01:05:50,290 --> 01:05:53,230
understanding. Now, I want to pick your brain about that, Erin.

1067
01:05:57,970 --> 01:06:01,760
There's a whole binder full of goodies that I have for it.

1068
01:06:02,210 --> 01:06:05,294
But, yeah, I think that there's a way to look at it from a perspective

1069
01:06:05,342 --> 01:06:08,754
of there's ways in which that we are getting

1070
01:06:08,792 --> 01:06:12,194
more sophisticated in how we are creating our systems and

1071
01:06:12,312 --> 01:06:16,546
our ecosystems in general overall. And the dependency there

1072
01:06:16,568 --> 01:06:20,054
is the web of things that everybody is connecting to and using

1073
01:06:20,092 --> 01:06:23,286
and leveraging. And I think that what is best,

1074
01:06:23,468 --> 01:06:26,742
again, I will go back to what I was bringing up earlier, which is starting

1075
01:06:26,796 --> 01:06:30,998
from a risk perspective of really actually understanding

1076
01:06:31,094 --> 01:06:32,810
what is your risk tolerance,

1077
01:06:34,670 --> 01:06:38,026
looking to use this tool. Okay, what are the

1078
01:06:38,048 --> 01:06:42,026
risks associated with doing that? And are you

1079
01:06:42,048 --> 01:06:46,240
willing to take those risks, such as dependency? Right. And again,

1080
01:06:46,850 --> 01:06:50,446
what are the things that you can do to ensure that you are mitigating that

1081
01:06:50,468 --> 01:06:54,354
risk as much as possible by creating workarounds and really thinking

1082
01:06:54,392 --> 01:06:57,474
about your technology continuity element of things and how

1083
01:06:57,512 --> 01:07:00,866
you're developing around that dependency. Right. When I was

1084
01:07:00,888 --> 01:07:04,674
at parse, we were like, okay, what we do is

1085
01:07:04,712 --> 01:07:07,658
we build the infrastructure so mobile developers can build their apps.

1086
01:07:07,694 --> 01:07:11,126
Right. So operations was absolutely core to us. We had to

1087
01:07:11,148 --> 01:07:14,342
run our own MongoDB systems because it was what we

1088
01:07:14,396 --> 01:07:17,650
did. Right. Yeah. But for most people, it's not what

1089
01:07:17,660 --> 01:07:19,290
you do. Go use RDS.

1090
01:07:21,230 --> 01:07:25,190
It's fine. You're still a good engineer if you go a good promise.

1091
01:07:25,270 --> 01:07:28,730
Yeah. And I think it's interesting, too,

1092
01:07:28,800 --> 01:07:32,074
because I think that we

1093
01:07:32,112 --> 01:07:35,466
have certain things that internally at

1094
01:07:35,488 --> 01:07:39,214
Zendesk that have been built, and there's been a lot of work that's Jones into

1095
01:07:39,252 --> 01:07:42,494
them, and they have a lot of people know what it is,

1096
01:07:42,532 --> 01:07:46,500
class fallacies. But also at the same time,

1097
01:07:47,270 --> 01:07:51,646
there's this tipping point where that becomes like, okay, we have this dependence,

1098
01:07:51,758 --> 01:07:55,410
we created this, we have to maintain it. We have to keep it alive.

1099
01:07:55,750 --> 01:07:59,318
At what point do you get to where that becomes like, okay, this is

1100
01:07:59,324 --> 01:08:03,206
a much larger task than it would be to outsource it. So I think that

1101
01:08:03,228 --> 01:08:06,994
there's different phases and also future proofing

1102
01:08:07,042 --> 01:08:10,330
because the people who built it and run it might not be there forever.

1103
01:08:12,110 --> 01:08:15,638
Especially if that thing is involved in a ton of incidents.

1104
01:08:15,734 --> 01:08:18,826
They are going to burn out and leave, and no one's going to know how

1105
01:08:18,848 --> 01:08:21,610
to run. True facts. True facts.

1106
01:08:23,170 --> 01:08:26,558
We went through a huge exercise a couple of

1107
01:08:26,564 --> 01:08:30,766
years ago where the whole entire thing around

1108
01:08:30,948 --> 01:08:34,002
ownership and self service and really

1109
01:08:34,056 --> 01:08:38,130
making sure that everything had a clear owner.

1110
01:08:39,430 --> 01:08:42,930
It seems like it's a simple thing to say that, but when you have

1111
01:08:43,080 --> 01:08:46,654
multiple different. It's something that just existed from the beginning.

1112
01:08:46,702 --> 01:08:50,418
And it's like, we don't own that. We just use it. We don't

1113
01:08:50,434 --> 01:08:53,718
own it. We just use it. Well, somebody's got to own it

1114
01:08:53,724 --> 01:08:57,174
because this thing keeps breaking. So can we please figure out

1115
01:08:57,212 --> 01:09:01,114
who's actually going to take on the responsibility of it? And I

1116
01:09:01,152 --> 01:09:04,634
think that's also. Yeah, you end up with

1117
01:09:04,672 --> 01:09:08,394
people that they leave, and then you're like, okay, does anybody know what's going

1118
01:09:08,432 --> 01:09:12,394
on here? Right? And it becomes more critical than

1119
01:09:12,432 --> 01:09:16,160
ever right now. I really want to do a part two with you all

1120
01:09:16,930 --> 01:09:20,874
in person. Wine, whiskey, part two. We can totally

1121
01:09:20,922 --> 01:09:24,382
do that. And we can record Jones as well. But thank you both

1122
01:09:24,436 --> 01:09:28,170
for joining me. Really, really appreciated the conversation.

1123
01:09:28,330 --> 01:09:31,582
And, yeah, look forward to talking more later.

1124
01:09:31,716 --> 01:09:34,190
Thanks, Darren. Yeah, thanks, Aaron.

