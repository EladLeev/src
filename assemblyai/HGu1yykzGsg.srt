1
00:01:28,370 --> 00:01:32,114
Hi, I'm Josh Stella. I am a chief

2
00:01:32,162 --> 00:01:35,878
architect here at Snyk. Prior to that

3
00:01:36,044 --> 00:01:40,414
and presenting at Conf 42 in the past was

4
00:01:40,452 --> 00:01:45,002
the co founder and sometimes CTO, sometimes CEO

5
00:01:45,066 --> 00:01:48,906
of fugue, but now Fugue has joined sneak and we're

6
00:01:48,938 --> 00:01:52,410
building some awesome stuff. So I get to

7
00:01:52,500 --> 00:01:56,110
go back to designing computer software, which is what I'm

8
00:01:56,270 --> 00:02:00,018
most passionate about. Okay, great to be back here

9
00:02:00,184 --> 00:02:03,902
at Conf 42. The topic

10
00:02:03,966 --> 00:02:08,198
today is understanding cloud.

11
00:02:08,284 --> 00:02:12,440
Cloud. Cloud cloud control, plane compromise

12
00:02:12,810 --> 00:02:15,560
attacks to prevent these,

13
00:02:16,570 --> 00:02:20,154
a methodology of how to think about the

14
00:02:20,192 --> 00:02:23,546
problem so that you

15
00:02:23,568 --> 00:02:27,834
can hopefully not be one of those folks who end

16
00:02:27,872 --> 00:02:31,200
up in the news. Right? None of us want that.

17
00:02:32,530 --> 00:02:36,986
All right. The cloud fundamentally changed

18
00:02:37,098 --> 00:02:41,486
computing security, and it did this because it

19
00:02:41,508 --> 00:02:45,234
is software defined. And when

20
00:02:45,272 --> 00:02:48,542
you fully automate something and make it software defined,

21
00:02:48,686 --> 00:02:52,210
it has very different behavioral characteristics

22
00:02:52,630 --> 00:02:56,914
than a kind of a manually assembled

23
00:02:56,962 --> 00:03:00,520
pile of atoms in a data center, right?

24
00:03:00,970 --> 00:03:05,730
You can bring things into existence and modify them nearly instantaneously

25
00:03:05,890 --> 00:03:09,482
out of this effectively for most people,

26
00:03:09,536 --> 00:03:14,666
infinite pool. So it

27
00:03:14,768 --> 00:03:18,506
really changed what you're securing the lifespan of

28
00:03:18,528 --> 00:03:22,526
the things you're securing. It changed the

29
00:03:22,548 --> 00:03:26,240
amount of time you have to secure them,

30
00:03:26,690 --> 00:03:29,886
right? So in the data center we had,

31
00:03:29,908 --> 00:03:33,490
we bought boxes, we stacked them

32
00:03:33,560 --> 00:03:37,806
with humans, we ran cables with humans,

33
00:03:37,998 --> 00:03:41,810
right? And therefore, it was relatively static

34
00:03:42,150 --> 00:03:45,842
and persistent. So fairly

35
00:03:45,906 --> 00:03:49,574
normal recapitalization cycle would be three or five

36
00:03:49,612 --> 00:03:53,554
years. You buy a new switch, and in somewhere

37
00:03:53,602 --> 00:03:57,414
between three and five years, youll look to the replacement for that

38
00:03:57,452 --> 00:04:01,174
switch. That's the upgrade. The same with a server

39
00:04:01,302 --> 00:04:04,460
or a network attached storage device or whatever.

40
00:04:04,830 --> 00:04:09,530
But these were long lived static entities

41
00:04:10,610 --> 00:04:13,120
relative to cloud.

42
00:04:13,970 --> 00:04:17,902
And as a result, we gave them names, right. Whats were like

43
00:04:17,956 --> 00:04:21,310
permanent names. There was

44
00:04:21,380 --> 00:04:25,186
typically a team that owned those assets in

45
00:04:25,208 --> 00:04:28,814
terms of making sure theyre kept running, had adequate

46
00:04:28,862 --> 00:04:32,194
power, had HVAC, had working with these

47
00:04:32,232 --> 00:04:36,182
security team, the correct defenses around them.

48
00:04:36,236 --> 00:04:40,226
Typically defined in the network, right? Typically defined

49
00:04:40,258 --> 00:04:44,520
as, I mean, you had some operating system level stuff too, of course,

50
00:04:45,130 --> 00:04:49,026
both in terms of hardening guidelines and in terms of software you'd

51
00:04:49,058 --> 00:04:53,150
run to secure servers and anti malware

52
00:04:53,250 --> 00:04:56,682
stuff and things like that. But a lot of it in the data

53
00:04:56,736 --> 00:05:00,490
center era was TCP, IP based defense in depth,

54
00:05:00,850 --> 00:05:03,950
based on the network with devices,

55
00:05:05,970 --> 00:05:09,530
devices like firewalls and intrusion detection systems,

56
00:05:09,610 --> 00:05:14,174
all these colorful one and two U units in your racks

57
00:05:14,222 --> 00:05:15,780
coming out of security companies,

58
00:05:16,870 --> 00:05:21,170
the scale, even in big data centers,

59
00:05:22,470 --> 00:05:26,802
typically thousands of components, as opposed to tens

60
00:05:26,866 --> 00:05:30,866
or hundreds of thousands or millions of components.

61
00:05:30,978 --> 00:05:34,354
And by component, I mean something screwed into a rack,

62
00:05:34,402 --> 00:05:38,282
not every chip on every board. And the services were

63
00:05:38,336 --> 00:05:41,594
pretty simple. When you

64
00:05:41,632 --> 00:05:45,702
look at these services that a data center offers

65
00:05:45,846 --> 00:05:49,254
to a business unit or an application development

66
00:05:49,302 --> 00:05:53,450
group, they tend to be big chunks like compute,

67
00:05:53,610 --> 00:05:57,406
which might be defined as virtual machines or containers, but some

68
00:05:57,428 --> 00:06:01,994
kind of compute, some storage, typically block storage,

69
00:06:02,122 --> 00:06:05,634
right? So your

70
00:06:05,672 --> 00:06:09,234
application is defining how that block storage is used,

71
00:06:09,432 --> 00:06:11,678
right. It's a disk,

72
00:06:11,774 --> 00:06:13,780
remote or local.

73
00:06:15,050 --> 00:06:18,802
There are network services around DNS, et cetera.

74
00:06:18,866 --> 00:06:22,738
But even if you were operating

75
00:06:22,834 --> 00:06:25,398
in an environment with a lot of these things,

76
00:06:25,484 --> 00:06:29,386
monitoring services, what have you, theyre probably in

77
00:06:29,408 --> 00:06:32,726
the teams, I would argue,

78
00:06:32,838 --> 00:06:36,330
and the big ones are a handful.

79
00:06:36,670 --> 00:06:39,802
Compute, storage, network are the really big ones.

80
00:06:39,856 --> 00:06:43,982
Well, okay, let's look at the cloud and how different this

81
00:06:44,036 --> 00:06:49,466
world is. So when you were procuring resources

82
00:06:49,578 --> 00:06:53,186
for the data center, it was a hardware procurement cycle. You had

83
00:06:53,208 --> 00:06:56,786
to ship things made of metal around in

84
00:06:56,808 --> 00:07:00,990
the cloud. It's software defined from a user perspective,

85
00:07:01,070 --> 00:07:04,706
right? It's an API call away. Now, there's still a

86
00:07:04,728 --> 00:07:08,086
box made of metal, but it's already sitting there at Amazon or

87
00:07:08,108 --> 00:07:12,550
Microsoft or Google or the real cloud providers.

88
00:07:13,290 --> 00:07:17,442
Because it's software defined, that means it is expressed

89
00:07:17,506 --> 00:07:20,970
in the form of API, and that means it's programmable.

90
00:07:21,950 --> 00:07:25,420
And we know what that means, right? When you can program something.

91
00:07:27,310 --> 00:07:31,790
Well, first of all, your mistakes can be much costlier, much faster.

92
00:07:32,370 --> 00:07:35,934
Your errors are executed at the

93
00:07:35,972 --> 00:07:39,310
speed of electrons firing across

94
00:07:39,460 --> 00:07:43,106
circuits, not at the. You don't have that. Wait a minute, maybe I shouldn't do

95
00:07:43,128 --> 00:07:46,626
that, right? It's programmable, so you

96
00:07:46,648 --> 00:07:50,660
can fully automate things. But you can also use

97
00:07:51,030 --> 00:07:54,986
decades of knowledge about programming

98
00:07:55,038 --> 00:07:59,160
and computer science and software engineering to

99
00:07:59,770 --> 00:08:03,062
make things right, to check

100
00:08:03,116 --> 00:08:06,742
things, to test things. It is dynamic and

101
00:08:06,796 --> 00:08:11,270
ephemeral, particularly if you are using truly

102
00:08:11,350 --> 00:08:15,062
cloud native patterns, immutable infrastructure,

103
00:08:15,206 --> 00:08:16,810
serverless functions,

104
00:08:18,830 --> 00:08:21,200
containers if done right.

105
00:08:22,370 --> 00:08:25,806
So where you had a box that you

106
00:08:25,828 --> 00:08:29,918
would slide into a rack and name Frodo in the past,

107
00:08:30,084 --> 00:08:33,614
now you have an instance or a container or a serverless

108
00:08:33,662 --> 00:08:36,994
function. Whats comes and goes in hours, minutes or

109
00:08:37,032 --> 00:08:40,894
seconds, it never gets a name. It just has to join

110
00:08:41,022 --> 00:08:44,482
some service group and become aware of its

111
00:08:44,536 --> 00:08:46,600
role while it is needed.

112
00:08:48,010 --> 00:08:51,640
There's no friction here. There's very little friction here.

113
00:08:52,810 --> 00:08:56,870
And because of that, the developers

114
00:08:57,370 --> 00:09:00,330
own a lot of this stuff. They build a lot of these stuff.

115
00:09:00,480 --> 00:09:04,134
My background is as a developer and as a software

116
00:09:04,182 --> 00:09:07,562
architect and not as a

117
00:09:07,616 --> 00:09:10,540
data center operations person or a security person.

118
00:09:11,310 --> 00:09:14,686
Those folks don't tend to out of the

119
00:09:14,708 --> 00:09:18,010
gate know as much about code as developers, which is natural,

120
00:09:18,090 --> 00:09:21,566
right? That's because of how the data center worked. But in

121
00:09:21,588 --> 00:09:25,890
the era of cloud security, this stuff is all programmable.

122
00:09:26,950 --> 00:09:30,994
If humans can put an API on something and

123
00:09:31,032 --> 00:09:34,066
program it and automate it, we're going to do it.

124
00:09:34,248 --> 00:09:37,814
And the cloud is kind of that for infrastructure. So you

125
00:09:37,852 --> 00:09:41,366
end up with developers, maybe not the ones living in the application

126
00:09:41,468 --> 00:09:45,030
development teams, maybe living in the security team,

127
00:09:45,180 --> 00:09:48,906
maybe living in the dedicated DevOps team or platform

128
00:09:49,008 --> 00:09:52,620
engineering team, owning how

129
00:09:53,310 --> 00:09:57,510
this cloud infrastructure is created,

130
00:09:57,590 --> 00:10:00,250
maintained, configured, et cetera.

131
00:10:00,910 --> 00:10:04,434
And the scale, I mean, at what was fug

132
00:10:04,502 --> 00:10:08,320
is now Snyk becoming sneak cloud, which is,

133
00:10:08,690 --> 00:10:12,030
I don't have any announcements today, but we're working on some really cool

134
00:10:12,100 --> 00:10:15,842
stuff. We manage millions of

135
00:10:15,896 --> 00:10:19,218
resources for our customers, resources being like,

136
00:10:19,304 --> 00:10:22,126
again, not chips on boards, but servers,

137
00:10:22,238 --> 00:10:26,230
databases, network definitions, et cetera.

138
00:10:29,770 --> 00:10:34,162
There are a lot more objects. They're coming and going much faster,

139
00:10:34,306 --> 00:10:37,834
right? Dynamic and ephemeral and much

140
00:10:37,872 --> 00:10:42,678
bigger scale. And on top of that, there's more diversity

141
00:10:42,854 --> 00:10:46,570
of what they're made of, of what types they are.

142
00:10:46,720 --> 00:10:52,342
So in the data center, we primarily had storage,

143
00:10:52,486 --> 00:10:56,078
compute, network, and then there's a bunch of other stuff too, but it's kind

144
00:10:56,084 --> 00:11:00,958
of along those lines. In the cloud, you have like how many different completely

145
00:11:01,044 --> 00:11:04,610
cloud service provider managed databases are there at Amazon,

146
00:11:05,270 --> 00:11:09,230
a dozen. Those are abstractions

147
00:11:09,310 --> 00:11:11,742
where the database is just directly accessible,

148
00:11:11,806 --> 00:11:15,422
DynamoDB, RDS,

149
00:11:15,566 --> 00:11:17,970
et cetera, at Google,

150
00:11:18,040 --> 00:11:21,586
bigtable. And the cloud providers are

151
00:11:21,608 --> 00:11:24,440
coming out with more of these all the time.

152
00:11:24,970 --> 00:11:29,034
And it's an imperative for them, it's a competitive imperative for

153
00:11:29,072 --> 00:11:31,660
them. So when you're thinking about security,

154
00:11:32,110 --> 00:11:36,214
you're no longer just thinking about TCP IP packets traversing

155
00:11:36,262 --> 00:11:40,262
networks that lead to compute and storage. You're now thinking about

156
00:11:40,416 --> 00:11:44,014
how does this container that only lives for two

157
00:11:44,052 --> 00:11:47,486
minutes access that database? And by the way,

158
00:11:47,668 --> 00:11:53,250
it is completely a separate control

159
00:11:53,320 --> 00:11:55,890
plane than the TCP IP network.

160
00:11:57,510 --> 00:12:01,122
So at the bottom, traditional security doesn't work or

161
00:12:01,176 --> 00:12:02,820
scale well in the cloud.

162
00:12:04,810 --> 00:12:08,550
Hackers also started acting differently concurrently with

163
00:12:08,620 --> 00:12:11,334
the rise of cloud.

164
00:12:11,452 --> 00:12:14,614
So you never

165
00:12:14,652 --> 00:12:17,834
know in this kind of scenario. Well, let me say I don't know in this

166
00:12:17,872 --> 00:12:21,770
scenario if it's coincident or causal.

167
00:12:22,430 --> 00:12:26,442
However, the behavior has definitely changed. And the

168
00:12:26,496 --> 00:12:30,702
kind of pre cloud era was

169
00:12:30,756 --> 00:12:33,898
really the most common attacks,

170
00:12:33,994 --> 00:12:37,870
successful attacks. The attacker would pick a target,

171
00:12:38,210 --> 00:12:42,110
they would search that target for vulnerabilities, and then often

172
00:12:42,180 --> 00:12:45,518
they would end up doing a low, slow exfiltration,

173
00:12:45,614 --> 00:12:49,726
maybe things like outbound DNS requests containing

174
00:12:49,838 --> 00:12:54,046
little bits of the database they wanted to extract.

175
00:12:54,238 --> 00:12:58,066
And that is kind of the Hollywood version

176
00:12:58,098 --> 00:13:01,426
of a hack, right? And a couple examples

177
00:13:01,458 --> 00:13:05,254
of these, the Sony motion pictures hack that

178
00:13:05,292 --> 00:13:09,114
North Korea did, right, Sony was targeted because they made

179
00:13:09,152 --> 00:13:12,950
a movie that the authoritarian

180
00:13:13,030 --> 00:13:16,860
government in North Korea felt was insulting to them.

181
00:13:17,310 --> 00:13:21,390
And so they hacked all the executives'emails, they went after

182
00:13:21,540 --> 00:13:25,262
Sony in particular. We are seeing much less

183
00:13:25,316 --> 00:13:29,054
of that type of approach now.

184
00:13:29,172 --> 00:13:33,170
It still happens for sure. But the

185
00:13:33,240 --> 00:13:36,510
much more common methodology

186
00:13:36,590 --> 00:13:40,466
of the hacker these days is to first

187
00:13:40,648 --> 00:13:43,762
look at public facing endpoints for

188
00:13:43,816 --> 00:13:47,222
vulnerabilities. So it really doesn't matter who you are.

189
00:13:47,356 --> 00:13:51,346
I mean, we know from the capital one breach that that's

190
00:13:51,378 --> 00:13:54,658
how she discovered a vulnerability in capital one. She wasn't targeting

191
00:13:54,674 --> 00:13:58,338
that bank, she was targeting anything with a vulnerability

192
00:13:58,434 --> 00:14:02,438
to assemble a list for her. And this was done through automation.

193
00:14:02,614 --> 00:14:06,294
Coming back to we're asking about programmable global infrastructure.

194
00:14:06,342 --> 00:14:09,900
Now, youll need to be using it in its most

195
00:14:10,450 --> 00:14:13,470
effective and rapid way and correct way

196
00:14:13,620 --> 00:14:17,790
in order to build systems, compete, and stay safe.

197
00:14:18,370 --> 00:14:21,280
But hackers are using it to their purposes, right?

198
00:14:22,130 --> 00:14:25,394
So they'll search for vulnerabilities, get a list of these things,

199
00:14:25,512 --> 00:14:28,462
of that list, pick a target,

200
00:14:28,606 --> 00:14:31,902
and then very often do a very brutal,

201
00:14:32,046 --> 00:14:35,170
almost instantaneous smash and grab exfiltration.

202
00:14:35,590 --> 00:14:38,440
Just take all the data and go. And very often,

203
00:14:39,130 --> 00:14:43,014
as was the case in the capital one breach, or in

204
00:14:43,212 --> 00:14:46,726
two of the Uber breaches, this is stuff that the

205
00:14:46,748 --> 00:14:50,406
exfiltration was not detectable on the customer facing

206
00:14:50,518 --> 00:14:54,138
TCP IP network. It had to be understood in the form

207
00:14:54,224 --> 00:14:56,170
of API calls.

208
00:14:56,750 --> 00:14:59,942
So your traditional perimeter data center

209
00:15:00,016 --> 00:15:04,000
security watching packets stuff would not help you

210
00:15:05,170 --> 00:15:08,666
mean it might help you at the margins.

211
00:15:08,778 --> 00:15:11,950
But if you look at all these breaches, the twitch breach,

212
00:15:12,790 --> 00:15:16,382
capital one breach, et cetera, the Uber

213
00:15:16,446 --> 00:15:20,018
breaches, the security

214
00:15:20,104 --> 00:15:22,900
cloud security company whats got breached a couple of few years ago,

215
00:15:24,710 --> 00:15:28,150
Imperva, their database got hacked.

216
00:15:28,810 --> 00:15:32,502
When you look at them, there are some very common traits both to

217
00:15:32,556 --> 00:15:36,374
what happened in the breaches and also how those

218
00:15:36,412 --> 00:15:39,526
things are described incorrectly by the press.

219
00:15:39,628 --> 00:15:43,018
Okay? And therefore people start thinking about the wrong things.

220
00:15:43,104 --> 00:15:47,082
So in Twitch's case, this huge 125 gigabyte data

221
00:15:47,136 --> 00:15:51,050
and source code leak, it says due to server misconfiguration.

222
00:15:51,630 --> 00:15:55,226
Nonsense. Was a server that was misconfiguration involved

223
00:15:55,258 --> 00:15:58,862
in these breach? Yeah, often there is, but that's not

224
00:15:58,916 --> 00:16:02,366
why the hackers got 125gb of data from

225
00:16:02,388 --> 00:16:06,340
them. It was due to a poorly designed set

226
00:16:06,710 --> 00:16:11,118
of access controls and permissions based on identity.

227
00:16:11,294 --> 00:16:15,038
No misconfigured server should be able

228
00:16:15,144 --> 00:16:19,110
to connect and download all the source code for

229
00:16:19,180 --> 00:16:22,946
all the applications you have, including some source

230
00:16:22,978 --> 00:16:26,760
code from your parent company, Amazon. That is a design

231
00:16:27,610 --> 00:16:31,242
mistake and there are probably a bunch of reasons for it,

232
00:16:31,296 --> 00:16:35,194
but that is not due to a misconfigured server. You're going to

233
00:16:35,232 --> 00:16:38,858
have misconfigured servers. You don't have to shoot yourself in

234
00:16:38,864 --> 00:16:41,680
the foot with bad architecture. Okay,

235
00:16:42,610 --> 00:16:46,138
capital one breach more complicated than it looks. People attributed

236
00:16:46,154 --> 00:16:50,750
whats to a misconfigured waf yet again, the misconfigured server

237
00:16:51,330 --> 00:16:54,434
was the foot in the door and the hacker didn't care about

238
00:16:54,472 --> 00:16:57,966
that misconfiguration server. They went after s three storage,

239
00:16:58,078 --> 00:17:02,254
which is an abstracted storage

240
00:17:02,302 --> 00:17:05,862
service. The server didn't matter

241
00:17:05,916 --> 00:17:07,560
that much, right?

242
00:17:09,930 --> 00:17:13,634
So what these folks are doing is they're

243
00:17:13,682 --> 00:17:16,994
going cloud, cloud control plane compromise attacks control plane.

244
00:17:17,042 --> 00:17:21,370
What we mean are the APIs that

245
00:17:21,440 --> 00:17:25,050
allow modification, creation, deletion,

246
00:17:25,390 --> 00:17:29,162
read, describe operations against cloud

247
00:17:29,216 --> 00:17:33,306
resources. That's what they're going after. They're going after endpoints

248
00:17:33,338 --> 00:17:37,322
that are hosted by the CSP, by Amazon,

249
00:17:37,386 --> 00:17:41,242
by Microsoft, by Google, using stolen,

250
00:17:41,306 --> 00:17:44,574
typically credentials that they're getting from somewhere.

251
00:17:44,702 --> 00:17:48,050
So that initial penetration, the misconfigured server,

252
00:17:49,510 --> 00:17:53,982
who cares as long as that server doesn't

253
00:17:54,046 --> 00:17:56,770
allow for discovery and movement.

254
00:17:57,270 --> 00:18:00,734
All right, so if all the way on the left youll get into,

255
00:18:00,872 --> 00:18:04,454
maybe you have a cloud misconfiguration, a dangerous port is left open during

256
00:18:04,492 --> 00:18:08,662
a maintenance window. Maybe you have an application vulnerability

257
00:18:08,806 --> 00:18:12,058
like log for shell or

258
00:18:12,064 --> 00:18:16,250
something like this. Maybe as in the case of Uber,

259
00:18:16,590 --> 00:18:20,638
if you get to GitHub, and I suspect this is probably

260
00:18:20,724 --> 00:18:25,146
the case in twitch, that we don't know API

261
00:18:25,178 --> 00:18:30,654
keys stored in source control repos and

262
00:18:30,692 --> 00:18:34,130
that aren't rotated frequently like long lived API keys.

263
00:18:34,550 --> 00:18:38,082
So that's the initial penetration, but then what's done with that?

264
00:18:38,136 --> 00:18:41,522
The goal is always to get to a bunch of other stuff,

265
00:18:41,656 --> 00:18:44,174
typically storage,

266
00:18:44,302 --> 00:18:47,510
typically data persistence of one form or another,

267
00:18:47,580 --> 00:18:51,158
databases, object stores, et cetera. That's kind of

268
00:18:51,164 --> 00:18:54,626
the norm. And so the automated detection

269
00:18:54,658 --> 00:18:58,570
of the misconfiguration that you've got this bot that's out there looking

270
00:18:58,640 --> 00:19:01,914
for anything that has a certain version of

271
00:19:01,952 --> 00:19:06,214
Apache running because it has a known CVE, or you have a bot that's

272
00:19:06,262 --> 00:19:09,670
looking for public facing IP addresses

273
00:19:09,750 --> 00:19:13,040
with port 22 open, or whatever it is,

274
00:19:13,650 --> 00:19:17,150
it discovers it. You then get

275
00:19:17,220 --> 00:19:20,462
a toehold in that initial penetration and then

276
00:19:20,516 --> 00:19:23,890
you start exploring from there.

277
00:19:24,040 --> 00:19:27,986
The vast majority of asking, as is the

278
00:19:28,008 --> 00:19:32,206
vast majority of defense, is knowledge.

279
00:19:32,398 --> 00:19:34,906
It's understanding what's dangerous,

280
00:19:35,038 --> 00:19:39,634
understanding what's vulnerable and not making those errors,

281
00:19:39,682 --> 00:19:43,830
and understanding what you have the hackers

282
00:19:44,570 --> 00:19:47,878
is going to do discovery and movement, and that typically leads

283
00:19:47,894 --> 00:19:51,510
to data extraction. I mean, there are other kinds of breaches

284
00:19:51,590 --> 00:19:56,198
where Stuxnet was tapping the side effectively.

285
00:19:56,294 --> 00:20:00,170
Through controllers of uranium centrifuges,

286
00:20:01,010 --> 00:20:04,298
you can get defacement

287
00:20:04,394 --> 00:20:07,486
kind of attacks like anonymous will

288
00:20:07,508 --> 00:20:11,514
do, but most of the time, your economically motivated hackers

289
00:20:11,642 --> 00:20:15,314
are going to tend to steal data

290
00:20:15,352 --> 00:20:18,626
from you. Okay, so here

291
00:20:18,648 --> 00:20:22,820
at sneak, we've identified among our

292
00:20:23,430 --> 00:20:26,760
customers the ones who are really successful with this stuff,

293
00:20:27,130 --> 00:20:30,006
five fundamentals of cloud security.

294
00:20:30,108 --> 00:20:33,634
And for the remainder of this presentation,

295
00:20:33,682 --> 00:20:36,694
I'm just going to walk you through these steps I promised you up front,

296
00:20:36,812 --> 00:20:40,666
a methodology that would help you deal with the kinds of

297
00:20:40,688 --> 00:20:44,426
threats I just described for the last 20 minutes or so.

298
00:20:44,608 --> 00:20:49,098
All right, so these five fundamentals, there are really four

299
00:20:49,184 --> 00:20:52,926
things youll do, four verbs here, and those are on

300
00:20:52,948 --> 00:20:56,686
the outside edges. We'll go through them one at a time. And in

301
00:20:56,708 --> 00:21:00,446
the center is this big noun. Policy is code. Policy is code

302
00:21:00,628 --> 00:21:04,510
is because the cloud is software defined,

303
00:21:04,670 --> 00:21:08,900
is programmable. We can express security

304
00:21:09,670 --> 00:21:13,426
not in Excel spreadsheets and lists of rules in

305
00:21:13,528 --> 00:21:17,542
English or French or whatever human language you speak, but literally as

306
00:21:17,596 --> 00:21:21,366
code, as executable code. And this is a

307
00:21:21,468 --> 00:21:25,334
massive leap forward for security. So policy as code

308
00:21:25,452 --> 00:21:29,354
is essential. It is the method by which

309
00:21:29,552 --> 00:21:33,802
these other things are accomplished and by which you can secure your

310
00:21:33,856 --> 00:21:36,860
systems. If you're not doing policy as code,

311
00:21:37,550 --> 00:21:40,814
the hackers are faster than you because they're doing exploitation as

312
00:21:40,852 --> 00:21:45,054
code. So you can't use

313
00:21:45,252 --> 00:21:49,166
those old manual processes. Okay? So step one,

314
00:21:49,348 --> 00:21:51,310
know your environment.

315
00:21:53,590 --> 00:21:57,666
Much easier said than done, especially when a

316
00:21:57,688 --> 00:22:00,654
reminder, you've got these dynamic and ephemeral resources,

317
00:22:00,702 --> 00:22:04,974
and there are hundreds of thousands of them in a medium to

318
00:22:05,032 --> 00:22:07,350
large cloud environment.

319
00:22:08,410 --> 00:22:11,240
But that's just at any one moment in time.

320
00:22:12,330 --> 00:22:16,050
They also went through the software development lifecycle

321
00:22:16,210 --> 00:22:19,834
to become deployed assets. And so as you think

322
00:22:19,872 --> 00:22:23,734
about this, you have to understand in all the contexts

323
00:22:23,862 --> 00:22:27,270
if you want to understand what's safe and unsafe.

324
00:22:27,430 --> 00:22:29,740
So, for example,

325
00:22:31,650 --> 00:22:35,786
we know from a department of justice filing

326
00:22:35,898 --> 00:22:40,682
that in the capital one breach, s three list permissions

327
00:22:40,826 --> 00:22:44,814
were left on to a running virtual

328
00:22:44,862 --> 00:22:48,590
machine with a set of Im API keys.

329
00:22:48,750 --> 00:22:52,274
Well, you have to have list permissions for s

330
00:22:52,312 --> 00:22:56,034
three. Somewhere in youll organization, like when I go to the console

331
00:22:56,082 --> 00:22:59,458
or whatever it is, humans need to be able to see what's

332
00:22:59,474 --> 00:23:04,054
out there, right? But you really don't want a

333
00:23:04,252 --> 00:23:07,406
public facing asset, compute asset,

334
00:23:07,538 --> 00:23:10,090
a container or a virtual machine,

335
00:23:12,590 --> 00:23:16,554
even a serverless function, to be able to just get a list of

336
00:23:16,592 --> 00:23:20,262
all the locations in s three, that's extraordinarily dangerous.

337
00:23:20,406 --> 00:23:24,666
It's only dangerous because of that combination of things in these context,

338
00:23:24,858 --> 00:23:28,698
a compute instance, whats has those resources that is connected

339
00:23:28,794 --> 00:23:30,640
to the Internet. Okay,

340
00:23:32,930 --> 00:23:36,382
so you've got a number of dimensions here. Youll have to know

341
00:23:36,436 --> 00:23:39,890
at any given moment in time the state of everything, the list of everything

342
00:23:39,960 --> 00:23:43,138
and what it's doing and its current state. And then you have

343
00:23:43,144 --> 00:23:47,746
to track change over time if you really want to understand what's

344
00:23:47,778 --> 00:23:50,294
going on. And by the way, the hackers do this,

345
00:23:50,492 --> 00:23:54,054
right? They are really good at

346
00:23:54,092 --> 00:23:57,286
discovery. That's why they are good at hacking the

347
00:23:57,308 --> 00:24:01,162
successful ones anyway. Okay, the next

348
00:24:01,216 --> 00:24:04,474
step here is to prevent error. And that

349
00:24:04,512 --> 00:24:06,090
may sound a little strange,

350
00:24:08,430 --> 00:24:11,806
but the only way you're going to

351
00:24:11,828 --> 00:24:15,120
get in front of cloud security issues

352
00:24:15,650 --> 00:24:18,910
is by changing the way you build software,

353
00:24:19,970 --> 00:24:23,550
okay? You can't put devices

354
00:24:23,710 --> 00:24:26,180
on the network to solve the problem.

355
00:24:28,470 --> 00:24:32,222
The imperva breach. Another example, using identity.

356
00:24:32,366 --> 00:24:35,986
All right, so these are design issues, these are architecture

357
00:24:36,018 --> 00:24:39,080
issues. And what that means is you need to be using

358
00:24:39,450 --> 00:24:43,030
policy as code to check things like

359
00:24:43,100 --> 00:24:47,282
infrastructure as code, like terraform templates or cloud formation

360
00:24:47,346 --> 00:24:50,922
templates before they're deployed, and give those

361
00:24:50,976 --> 00:24:54,106
developers who are writing that code the

362
00:24:54,128 --> 00:24:58,198
feedback that lets them act on things and prevent

363
00:24:58,294 --> 00:25:01,534
those errors from getting out there into the

364
00:25:01,572 --> 00:25:04,942
live system. And this has to be integrated into

365
00:25:04,996 --> 00:25:08,320
the CI CD pipeline. Okay?

366
00:25:08,850 --> 00:25:12,122
If you really want to make this a practice,

367
00:25:12,186 --> 00:25:14,980
if you really want to get safe and secure on cloud,

368
00:25:15,830 --> 00:25:19,566
a big part of your effort is integrating your security tools.

369
00:25:19,678 --> 00:25:23,330
And of course sneak does this with all of our tools,

370
00:25:24,150 --> 00:25:27,394
not just these cloud oriented ones, into that CI CD

371
00:25:27,442 --> 00:25:30,726
pipeline for prevention and to

372
00:25:30,748 --> 00:25:34,982
educate the people building things. That's a nice side

373
00:25:35,036 --> 00:25:39,242
effect of that. All right?

374
00:25:39,376 --> 00:25:43,754
And this gets to empowering your developers. So in

375
00:25:43,792 --> 00:25:47,946
one of our customers, there are over

376
00:25:48,048 --> 00:25:51,630
2000 application developers

377
00:25:51,970 --> 00:25:55,582
in the various business units writing new

378
00:25:55,716 --> 00:25:59,374
applications for running their

379
00:25:59,412 --> 00:26:03,134
business. And the cloud security team and the platform team

380
00:26:03,172 --> 00:26:07,426
is like three people, all right? So when

381
00:26:07,448 --> 00:26:10,882
you have that scenario, and everyone does,

382
00:26:11,016 --> 00:26:14,066
whether they're fully aware of it or not, I guarantee you this is

383
00:26:14,088 --> 00:26:17,494
what's happening in your organization is the majority of people

384
00:26:17,612 --> 00:26:22,102
by a very large margin are much

385
00:26:22,156 --> 00:26:25,714
more concerned with shipping software and hitting quarterly

386
00:26:25,762 --> 00:26:28,710
numbers or mission goals or whatever,

387
00:26:28,860 --> 00:26:32,070
if you're a business or a government entity,

388
00:26:32,890 --> 00:26:36,300
than are concerned with securing it. And what that means is

389
00:26:36,750 --> 00:26:41,390
the security teams need to act more chief architect and

390
00:26:41,460 --> 00:26:45,386
provide their knowledge

391
00:26:45,498 --> 00:26:49,086
in a way that can be absorbed naturally by

392
00:26:49,108 --> 00:26:52,602
the people building stuff, which means in an automated way,

393
00:26:52,756 --> 00:26:56,274
right. So IAC security looks which give

394
00:26:56,312 --> 00:27:00,610
feedback in the code editor through the CI CD pipeline.

395
00:27:01,030 --> 00:27:04,626
You need to provide the knowledge, the guidance as to

396
00:27:04,648 --> 00:27:07,926
what's secure, what's insecure, but not in emails and

397
00:27:07,948 --> 00:27:11,110
not in written form. You need to do it as policy, as code.

398
00:27:11,260 --> 00:27:14,390
So when they're actually building a system,

399
00:27:14,460 --> 00:27:16,520
your developers are building a system.

400
00:27:17,630 --> 00:27:21,530
Their tooling are telling these when they're making errors,

401
00:27:21,870 --> 00:27:25,686
and of course, complete integration to the DevOps

402
00:27:25,718 --> 00:27:29,466
workflow. So right away if you look at

403
00:27:29,648 --> 00:27:33,226
our five, first one is know your environment, and then immediately we're

404
00:27:33,258 --> 00:27:35,520
going to prevention and secure design,

405
00:27:36,690 --> 00:27:40,526
and then to empowering the developers. So this

406
00:27:40,548 --> 00:27:44,654
is all the things we've shown so far contribute

407
00:27:44,782 --> 00:27:47,966
to stopping digging the hole that you're

408
00:27:47,998 --> 00:27:53,140
currently digging in your organization, right? It's stopping future

409
00:27:53,590 --> 00:27:55,460
mistakes from being made.

410
00:27:57,430 --> 00:28:01,014
And all of this is being done with policy as

411
00:28:01,052 --> 00:28:04,934
code, as the mechanism. And if you're not doing this with policy as code,

412
00:28:05,132 --> 00:28:10,070
it really comes apart at the seams. It really becomes vastly

413
00:28:10,150 --> 00:28:14,362
less effective because the

414
00:28:14,416 --> 00:28:17,626
scales we're operating at and the short time frames in

415
00:28:17,648 --> 00:28:21,114
which we're operating necessitate

416
00:28:21,162 --> 00:28:24,606
automation. If there is any human in

417
00:28:24,628 --> 00:28:28,798
the looks, what you are doing is slowing yourself

418
00:28:28,884 --> 00:28:32,346
down to being slower than the hackers,

419
00:28:32,458 --> 00:28:35,666
and you will lose. So this really needs to be

420
00:28:35,688 --> 00:28:39,554
expressed as code and then measure what

421
00:28:39,592 --> 00:28:42,914
matters. How much risk are you taking? This is going to be

422
00:28:42,952 --> 00:28:45,300
different for every organization. Okay.

423
00:28:47,110 --> 00:28:50,214
There are very small data sets that exist. You might have some

424
00:28:50,252 --> 00:28:53,846
that are extremely damaging in terms of the

425
00:28:53,868 --> 00:28:57,754
blast radius if they were to be exposed. And there are very large

426
00:28:57,792 --> 00:29:00,220
data sets that don't matter that much.

427
00:29:00,590 --> 00:29:03,210
So you need to be measuring what matters.

428
00:29:04,830 --> 00:29:08,650
As you're fixing stuff in your cloud

429
00:29:08,720 --> 00:29:12,554
environments, you need to be quantifiably tracking that.

430
00:29:12,592 --> 00:29:16,430
I mean, that's one of the things we spend a ton of time on,

431
00:29:16,580 --> 00:29:20,254
is giving you that ability to know kind of where was I? Where am I?

432
00:29:20,292 --> 00:29:24,050
How am I doing? What's the list of stuff we've accomplished?

433
00:29:25,350 --> 00:29:28,674
And of course, investment is a big piece

434
00:29:28,712 --> 00:29:29,780
of this as well.

435
00:29:32,870 --> 00:29:36,322
And this acts as a virtuous cycle.

436
00:29:36,466 --> 00:29:40,162
Right. Policy as code is the facilitating

437
00:29:40,226 --> 00:29:44,274
technology. But as you go through this and measuring

438
00:29:44,322 --> 00:29:47,910
what matters that contributes back to understanding youll environment

439
00:29:48,590 --> 00:29:50,570
and back around the horn,

440
00:29:52,510 --> 00:29:57,046
we hope these five fundamentals

441
00:29:57,238 --> 00:30:00,986
are helpful to you. It's a very complex topic unless

442
00:30:01,018 --> 00:30:03,120
youll kind of start breaking it down.

443
00:30:04,770 --> 00:30:08,560
We are having on May 5

444
00:30:09,010 --> 00:30:12,754
a cloud security masterclass. I will be hosting that

445
00:30:12,792 --> 00:30:16,530
with my Fugue co founder, Andrew Wright.

446
00:30:17,430 --> 00:30:20,994
We also have some really cool resources for

447
00:30:21,032 --> 00:30:25,010
you over on our website. Fugue co resources

448
00:30:25,610 --> 00:30:29,174
the state of Cloud Security 2021 is the

449
00:30:29,212 --> 00:30:32,566
last big market survey we did.

450
00:30:32,668 --> 00:30:36,630
We do this every year on the state of cloud security.

451
00:30:36,700 --> 00:30:39,866
There's tons of interesting stuff in theyre, and then

452
00:30:39,888 --> 00:30:43,510
we also have an engineer's handbook

453
00:30:43,670 --> 00:30:49,210
on cloud security, which is a great place to start for

454
00:30:49,280 --> 00:30:52,494
engineers. And you can also, of course, find in

455
00:30:52,532 --> 00:30:55,886
resources there a lot of classes we've taught, videos,

456
00:30:55,988 --> 00:31:00,190
et cetera. So I hope this was useful to you in

457
00:31:00,260 --> 00:31:03,642
understanding cloud cloud cloud cloud

458
00:31:03,706 --> 00:31:07,166
control plane compromise attacks fundamentals as a

459
00:31:07,268 --> 00:31:11,390
methodology to try to prevent bad design,

460
00:31:11,540 --> 00:31:15,542
and bad design is the principal enemy in cloud

461
00:31:15,596 --> 00:31:19,238
security. So thanks much for your time.

462
00:31:19,324 --> 00:31:22,180
I'm around to take questions. Take care.

