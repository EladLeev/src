1
00:00:25,410 --> 00:00:28,834
You. Hello. I hope you're

2
00:00:28,882 --> 00:00:32,326
enjoying comp 42 chaos engineering. My name

3
00:00:32,348 --> 00:00:36,034
is quintessence, and I'm here to talk to you about sensory friendly monitoring

4
00:00:36,082 --> 00:00:39,494
or how to keep the noise down relevantly. Make sure you

5
00:00:39,532 --> 00:00:43,314
have any echo Alexa devices in listening range

6
00:00:43,362 --> 00:00:46,786
or use headphones, because as a reminder, we are in each other's

7
00:00:46,818 --> 00:00:50,814
homes. But I won't be trolling you today. When we try to know everything,

8
00:00:50,932 --> 00:00:54,398
it looks a little something like this. You start off with

9
00:00:54,404 --> 00:00:57,978
a bunch of slack notifications. Maybe you're using Trello or Jiro

10
00:00:58,074 --> 00:01:01,294
or both between different teams, and those

11
00:01:01,332 --> 00:01:05,354
get integrated into your chat platform. Or when you're going beyond

12
00:01:05,402 --> 00:01:08,734
engineering, you can also take a look at HR things and lunches

13
00:01:08,782 --> 00:01:12,318
and things that people are trying to do together, especially now that we're

14
00:01:12,334 --> 00:01:15,950
all very isolated and our primary means of communication are virtual

15
00:01:16,030 --> 00:01:19,474
add status page and pagerduty into the mix,

16
00:01:19,522 --> 00:01:22,966
and all of a sudden, there's just a ton of notifications that need to be

17
00:01:22,988 --> 00:01:26,818
handled. And the end result of this is just too much noise.

18
00:01:26,914 --> 00:01:30,106
It's too much noise to be effective. And when you have

19
00:01:30,128 --> 00:01:33,574
too much noise, it buries high importance and severe

20
00:01:33,622 --> 00:01:37,402
alerts in a sea of all these low priority notifications. And then

21
00:01:37,456 --> 00:01:40,974
you're going to mute individual notification sources, right? How many

22
00:01:41,012 --> 00:01:44,430
people have closed slack for focus time, for example,

23
00:01:44,580 --> 00:01:47,806
or whatever? Teams, right? And the result of

24
00:01:47,828 --> 00:01:51,358
these closed notifications is that you won't get them,

25
00:01:51,444 --> 00:01:54,638
right. You've created an artificial silence, you said, okay, well,

26
00:01:54,724 --> 00:01:58,210
I'm getting too many notifications in slack or teams, so I'm going to close that.

27
00:01:58,280 --> 00:02:01,938
And now, if something important comes through, how are they going to reach you?

28
00:02:02,024 --> 00:02:05,294
And when that happens, it's not as cathartic

29
00:02:05,342 --> 00:02:09,054
as you would hope, because, you know you've manufactured the silence.

30
00:02:09,102 --> 00:02:12,386
The silence isn't because nothing's wrong. The silence is because you've turned

31
00:02:12,418 --> 00:02:15,734
on mute. And what we need to do with all of this is find

32
00:02:15,772 --> 00:02:19,554
a happy medium. So first, let's talk about the cost of noise.

33
00:02:19,682 --> 00:02:23,306
Now, when we're thinking about our brains, we're actually thinking

34
00:02:23,408 --> 00:02:26,710
all the time. We're osmotically absorbing what's in our environment.

35
00:02:26,870 --> 00:02:30,410
Let's think of any time any of us have actually lived with another human,

36
00:02:30,480 --> 00:02:34,346
whether or not we're doing so. Now, if that other human had any significant

37
00:02:34,378 --> 00:02:37,902
or serious interest in a topic, you might find

38
00:02:37,956 --> 00:02:41,374
you're suddenly able to speak to that topic despite never having

39
00:02:41,412 --> 00:02:45,438
read, listened to, or otherwise engaged with it personally, yourself. But they're

40
00:02:45,454 --> 00:02:49,106
doing it in your environment. And this is one of the

41
00:02:49,128 --> 00:02:52,734
earliest indicators that your brain is always processing that background

42
00:02:52,782 --> 00:02:56,402
information and relevantly to alerts. If you think to yourself,

43
00:02:56,456 --> 00:03:00,706
oh, I'll just ignore these alerts, you're not actually ignoring

44
00:03:00,738 --> 00:03:03,762
the alerts. You're trying to multitask after a fashion.

45
00:03:03,906 --> 00:03:07,478
And the time cost that you lose when you redirect your focus

46
00:03:07,644 --> 00:03:11,834
is 25 minutes. And I'm talking about the little alerts here.

47
00:03:11,952 --> 00:03:15,686
This isn't something like, oh, there's an outage, and now I'm completely redirecting

48
00:03:15,718 --> 00:03:19,306
my attention. I'm talking about in the walk up days when

49
00:03:19,328 --> 00:03:23,538
we had an office, Joe the engineer would walk up for the Wifi password,

50
00:03:23,654 --> 00:03:26,570
and you would give him the wifi password and redirect your attention.

51
00:03:26,730 --> 00:03:30,398
Or on a more iterative level, you get a notification in the

52
00:03:30,404 --> 00:03:34,426
upper right hand corner of your monitor, and you choose to dismiss

53
00:03:34,458 --> 00:03:37,906
it. Right. Very quick interaction, and the

54
00:03:37,928 --> 00:03:42,178
time loss is actually 25 minutes. And the reason it's 25 minutes is actually

55
00:03:42,264 --> 00:03:45,806
study by Gloria Marks. And she covered the cost of interrupted

56
00:03:45,838 --> 00:03:49,926
work at UC urban. And what she found was that when

57
00:03:49,948 --> 00:03:53,666
you're building through complicated tasks, kind of like we do in engineering

58
00:03:53,698 --> 00:03:57,762
and in SRE and in chaos, we're trying to understand very complicated

59
00:03:57,826 --> 00:04:00,898
systems and very complicated things. And what ends up

60
00:04:00,924 --> 00:04:04,790
happening is we're building this mental model, and then you see the distraction,

61
00:04:04,870 --> 00:04:08,406
the alert, the notification, and all of a sudden, that mental

62
00:04:08,438 --> 00:04:11,626
model goes. And in order to get back to where you were on the

63
00:04:11,648 --> 00:04:15,486
problem that you were trying to solve, you need to rebuild that model. And that

64
00:04:15,508 --> 00:04:18,814
is where this time sink comes in. So what happens if,

65
00:04:18,852 --> 00:04:22,398
instead of trying to redirect and direct back, you do try

66
00:04:22,484 --> 00:04:25,902
and multitask? And this was actually covered by

67
00:04:25,956 --> 00:04:29,310
George Mason University. And they did a test with AP tests,

68
00:04:29,390 --> 00:04:33,042
actually. And what they did, and for those unfamiliar AP tasks, are a zero

69
00:04:33,096 --> 00:04:36,938
to five scale, and they wanted to see what would happen if people were interrupted.

70
00:04:36,974 --> 00:04:41,010
And again, these were the quick interruptions, not the entire repositioning

71
00:04:41,090 --> 00:04:44,934
of your workflow. And they found that the AAP test

72
00:04:44,972 --> 00:04:48,870
score dropped, on average, about half a point for 96%.

73
00:04:49,020 --> 00:04:52,426
They all did worse, right? Because what they tried to

74
00:04:52,448 --> 00:04:55,930
do is they tried to ignore whatever the background noise was and focus,

75
00:04:56,000 --> 00:04:59,766
in this case, on the writing section of their test. But they lost the essay

76
00:04:59,798 --> 00:05:03,514
that they were building. They lost their place, and so they tried to

77
00:05:03,552 --> 00:05:07,050
add it back in, and unfortunately, it hit the overall quality of the assay.

78
00:05:07,130 --> 00:05:10,666
So then there was a follow up study, someone who's familiar with both the UC

79
00:05:10,698 --> 00:05:13,914
Irving study and the George Mason University study, and they decided

80
00:05:13,962 --> 00:05:17,074
to say, okay, well, what happens if we give you your time back?

81
00:05:17,192 --> 00:05:20,734
And they gave back approximately 30 minutes, in alignment with the earlier

82
00:05:20,782 --> 00:05:24,206
study, and they found that the same 90 some odd

83
00:05:24,238 --> 00:05:27,998
percent still did worse. Their score did not recover even when the time

84
00:05:28,024 --> 00:05:31,414
was added back in. And that's a lot. And one

85
00:05:31,452 --> 00:05:35,234
more study relevant to all of this, multitasking with sequence

86
00:05:35,282 --> 00:05:38,886
based tasks. So this is when you reduce the complexity of the task. So instead

87
00:05:38,908 --> 00:05:41,130
of writing an essay or building a cluster,

88
00:05:41,950 --> 00:05:45,594
imagine Bert writing lines on a chalkboard, same line over and

89
00:05:45,632 --> 00:05:48,934
over. And in this case, it was a very short, sequential task.

90
00:05:49,062 --> 00:05:52,162
And so they decided to do, again, background radiation, notification,

91
00:05:52,246 --> 00:05:55,738
alert noise, et cetera. They basically introduced noise into the environment.

92
00:05:55,834 --> 00:05:58,590
And what happened? Their error rate tripled.

93
00:05:59,090 --> 00:06:02,906
So even when you reduce the complexity of the task, you still encounter

94
00:06:02,938 --> 00:06:06,098
problems from high distraction mode. None of

95
00:06:06,104 --> 00:06:09,266
this sounds very great, so let's talk about what we

96
00:06:09,288 --> 00:06:12,706
can do. How can we fix this? So, first thing we

97
00:06:12,728 --> 00:06:16,446
can do is be aware, not overwhelmed.

98
00:06:16,638 --> 00:06:20,374
You want to be aware of the notification sources and everything that's coming

99
00:06:20,412 --> 00:06:23,846
through, but you don't want it to overwhelm you while you're trying to make your

100
00:06:23,868 --> 00:06:27,606
way through your day. That said, you also need to determine those sources of

101
00:06:27,628 --> 00:06:31,222
noise, and then you need to categorize them, channel them,

102
00:06:31,356 --> 00:06:34,860
and then create a routine to clear the clutter. And I'll get into that later.

103
00:06:35,230 --> 00:06:39,066
And so when you're not overwhelmed, right, you're trying to determine the

104
00:06:39,088 --> 00:06:42,358
source. So instead of saying, oh, I wish the slacker

105
00:06:42,374 --> 00:06:45,750
teams was less chatty, or, I wish that this notification

106
00:06:45,830 --> 00:06:48,622
wasn't going off so much, or I wish that people didn't have so many questions,

107
00:06:48,676 --> 00:06:51,822
you can say, okay, well, what are the sources of the noise? Is it human?

108
00:06:51,876 --> 00:06:54,990
Is it machine? Is it a chatty service, for example,

109
00:06:55,060 --> 00:06:58,066
that has a lot of low level alerts that maybe aren't paging my phone but

110
00:06:58,088 --> 00:07:01,506
are certainly going into whatever channel they're being sent into, and if

111
00:07:01,528 --> 00:07:04,626
you can say, oh, I know this source, you can actually do something productive with

112
00:07:04,648 --> 00:07:08,178
that. You can make decisions based on that. You don't want to necessarily mute everything,

113
00:07:08,264 --> 00:07:11,734
but you might want to redirect what's happening there. And you might also

114
00:07:11,772 --> 00:07:15,606
notice that you're keeping around a few legacy things that don't even belong. And this

115
00:07:15,628 --> 00:07:18,920
goes into the clutter. Right? So if you're thinking, okay,

116
00:07:19,290 --> 00:07:23,034
we actually channels that endpoint. And so the reason the service is chatty or not

117
00:07:23,072 --> 00:07:25,926
chatty enough is because it's checking on the wrong condition,

118
00:07:26,038 --> 00:07:29,914
easy. I can change it or delete it depending on what the situation

119
00:07:30,112 --> 00:07:33,774
allows for. And this actually happens pretty

120
00:07:33,812 --> 00:07:37,166
quickly as a really quick example of a

121
00:07:37,188 --> 00:07:41,294
very basic infrastructure, right? You have your office wiki, you might have something

122
00:07:41,412 --> 00:07:44,730
like elasticsearch, you have slack, you have mail,

123
00:07:44,810 --> 00:07:48,402
you'll have an alert notification platform, you have the info, you have the code base.

124
00:07:48,536 --> 00:07:52,386
And this isn't even getting into all the microservices that might be existing all

125
00:07:52,408 --> 00:07:55,502
around all of these things. Lots and lots of noise.

126
00:07:55,646 --> 00:07:59,320
Then you'll also notice, and I've hinted at it a couple of times already,

127
00:08:00,250 --> 00:08:04,006
the next side is a human, because that human is you.

128
00:08:04,108 --> 00:08:07,314
While you're being aware of the sources of noise, one sources of noise

129
00:08:07,362 --> 00:08:11,094
is you and your other humans. How often are you introducing

130
00:08:11,142 --> 00:08:14,666
noise into your own environment? Think about when you check your

131
00:08:14,688 --> 00:08:18,266
email between other tasks, or checking social media like

132
00:08:18,368 --> 00:08:21,766
Twitter or Facebook or text messages or other forms

133
00:08:21,798 --> 00:08:24,926
of messages, and the things go on, right? You might even have your phone on

134
00:08:24,948 --> 00:08:28,222
the desk right beside you, face up, screen up,

135
00:08:28,276 --> 00:08:31,774
and you can just see the notifications or the news alerts just popping right through,

136
00:08:31,892 --> 00:08:35,486
cranking along throughout the day with our very rapid news cycle. So with

137
00:08:35,508 --> 00:08:39,246
all of these things go on, you're introducing that distraction in addition

138
00:08:39,278 --> 00:08:42,642
to whatever is happening in your work ecosystem and the machine you're working

139
00:08:42,696 --> 00:08:46,098
on. And this brings us back to this. The reason I mentioned it in the

140
00:08:46,104 --> 00:08:49,650
beginning is because another source of noise in this virtual reality

141
00:08:49,730 --> 00:08:53,334
is we're in each other's homes. I'm presenting to you while

142
00:08:53,372 --> 00:08:56,646
you're at home instead of on a stage in an in person environment where we

143
00:08:56,668 --> 00:09:00,534
could say hi, give hugs or elbow tap or whatever we're comfortable with,

144
00:09:00,572 --> 00:09:04,122
right? But because I'm in your know, you could have like a Google

145
00:09:04,176 --> 00:09:08,154
Home or an echo device that could accidentally be activated by

146
00:09:08,192 --> 00:09:11,430
the current speaker, myself or anyone else. And that is another source of

147
00:09:11,440 --> 00:09:14,766
noise. And sometimes it's intentional, right? We sit on

148
00:09:14,868 --> 00:09:18,174
hangouts and we have our huddles or

149
00:09:18,212 --> 00:09:21,854
our sprint sessions or whatever muting we're having. And if someone notices you

150
00:09:21,892 --> 00:09:25,694
have can echo hanging out in view somewhere behind you, they might

151
00:09:25,732 --> 00:09:29,042
try and talk to it just to get a laugh. And it's funny once,

152
00:09:29,096 --> 00:09:31,966
maybe not ten months in or what's time anymore,

153
00:09:31,998 --> 00:09:35,698
really. So you want to make sure that when you're interacting in virtual environments and

154
00:09:35,704 --> 00:09:38,786
virtual meetings like this one, you want to make sure those are unmuted, or you

155
00:09:38,808 --> 00:09:42,086
can just use your headphones and then the device can't pick up anything but you

156
00:09:42,108 --> 00:09:45,894
anyway. You also need to establish boundaries and communicate them

157
00:09:45,932 --> 00:09:49,254
with other people. You need to be able to set times to focus on work

158
00:09:49,292 --> 00:09:52,966
and then be able to mute those noncritical alerts. You don't want to just mute

159
00:09:52,998 --> 00:09:56,518
the notifications without communicating. You're doing so, but you want people to know that that's

160
00:09:56,534 --> 00:10:00,282
what's about to happen. And this includes those messages from friends

161
00:10:00,336 --> 00:10:04,470
and family. They need to know what's relevant and they need to know what's expected.

162
00:10:04,550 --> 00:10:07,678
So when you're setting those focus times, you might say, okay, so this is my

163
00:10:07,684 --> 00:10:11,374
time for lunch and or after lunch is my focus time for writing code,

164
00:10:11,412 --> 00:10:15,166
review, whatever it is, whatever the focus time is being devoted to. And you can

165
00:10:15,188 --> 00:10:18,574
say, okay, so I know we're not really going out anymore. So this

166
00:10:18,612 --> 00:10:21,998
example is pre pandemic dated, but you don't want to get a

167
00:10:22,004 --> 00:10:25,606
text message from your roommate or spouse or whomever ever to

168
00:10:25,628 --> 00:10:29,046
say, hey, can you pick up XYZ from the grocery store on your way home

169
00:10:29,148 --> 00:10:32,278
when you're trying to focus, when that's the goal of your focus time, you can

170
00:10:32,284 --> 00:10:34,806
tasks them to say, hey, can you just send it at the end of the

171
00:10:34,828 --> 00:10:38,166
workday, five or six or whatever that is, and I'll address it on my way

172
00:10:38,188 --> 00:10:41,610
out the door. Right, and that's not what a relevant emergency is,

173
00:10:41,680 --> 00:10:45,174
but you can say, there's a situation that needs my immediate attention,

174
00:10:45,222 --> 00:10:48,442
please still call me. Right? I'm not muting everything. I just need

175
00:10:48,496 --> 00:10:51,658
enough to focus. And as you communicate these things, make sure

176
00:10:51,664 --> 00:10:55,194
you're communicating to coworkers too. Coworkers don't always know your

177
00:10:55,232 --> 00:10:58,686
schedule, even if you do have your calendar up to date because there's one

178
00:10:58,708 --> 00:11:01,566
of you and however many of them to you is how many of you there

179
00:11:01,588 --> 00:11:04,814
are to them. Right? Ten people, 20 people on a team

180
00:11:04,852 --> 00:11:07,794
or two teams that are interacting together. It can be very hard to just pull

181
00:11:07,832 --> 00:11:11,282
up everyone's calendar to see when everyone's available or focusing or not.

182
00:11:11,336 --> 00:11:15,682
And so you can just send out a message on the right communications platform,

183
00:11:15,816 --> 00:11:18,878
email, chat, whatever, and say, hey, I'm going has down

184
00:11:18,904 --> 00:11:22,034
for a few hours. Please use alternative communication

185
00:11:22,082 --> 00:11:25,506
method and say what it is to reach me if you need something urgent

186
00:11:25,538 --> 00:11:29,046
in that time. Otherwise, I'll check all my messages after my focus time

187
00:11:29,068 --> 00:11:32,386
block is over. And that will give them an expectation. They know when it starts

188
00:11:32,418 --> 00:11:34,774
because they can see your message. They know when it ends because you've told them

189
00:11:34,812 --> 00:11:38,454
how long, and they know what to do if something actually urgent pops up while

190
00:11:38,492 --> 00:11:41,726
your head's down. And then there are the external sources of noise. So these are

191
00:11:41,748 --> 00:11:45,262
the non human noises, like pager duty or any

192
00:11:45,316 --> 00:11:48,506
other notifications that you're using to actually keep track of your infrastructure.

193
00:11:48,538 --> 00:11:51,978
Monitoring, et cetera, goes back to categorization.

194
00:11:52,074 --> 00:11:56,410
You know, that there might be false positives, negatives, fragile systems,

195
00:11:56,490 --> 00:12:00,046
and then anything that happens that's very frequent. And so when you're getting into false

196
00:12:00,078 --> 00:12:03,474
positives and negatives, that means you're having either too much noise when you shouldn't or

197
00:12:03,512 --> 00:12:07,666
too much silence when you shouldn't. And neither of those sit very well when

198
00:12:07,688 --> 00:12:10,838
you're trying to make sure that everything's live in production the way it's supposed to

199
00:12:10,844 --> 00:12:14,450
be. And so when you see a lot of these false positive and negatives,

200
00:12:14,530 --> 00:12:17,894
when you see something that's fragile or frequent, you can actually check

201
00:12:17,932 --> 00:12:20,986
the conditions. Do they make sense? Are they measuring what

202
00:12:21,008 --> 00:12:24,566
they mean to measure or checking what they mean to check is what you're

203
00:12:24,598 --> 00:12:28,026
checking on, for example, actually notifying you of what you

204
00:12:28,048 --> 00:12:31,786
wanted to learn. If you're, for example,

205
00:12:31,888 --> 00:12:35,206
saying on this is a common one, HTTP status

206
00:12:35,238 --> 00:12:38,686
code 200 could mean that there are no errors. You might only be checking for

207
00:12:38,708 --> 00:12:41,326
errors if they come through on a different status code. But how many have seen

208
00:12:41,348 --> 00:12:44,686
the joke where it's like HTTP 200 and

209
00:12:44,708 --> 00:12:48,386
then the body text that's being sent over is an error message, it's just not

210
00:12:48,408 --> 00:12:51,714
being flagged as error for whatever reason in the code. Now obviously that's something else

211
00:12:51,752 --> 00:12:55,474
to fix, but that also is a situation that will rise and give

212
00:12:55,512 --> 00:12:58,826
you false negatives, right? So something's coming through that's an error.

213
00:12:58,878 --> 00:13:02,422
The error is not being categorized correctly, so you don't hear it.

214
00:13:02,556 --> 00:13:05,954
It doesn't come through as a notification. If something's fragile,

215
00:13:06,002 --> 00:13:10,166
that means you're getting a lot of low priority notifications in a high priority way.

216
00:13:10,348 --> 00:13:13,862
That can be either push notifications again, look at the corners of your monitoring,

217
00:13:13,926 --> 00:13:17,734
or on your phone you might be getting page. This trains you to ignore

218
00:13:17,782 --> 00:13:21,670
noise. So when a really high priority notification

219
00:13:21,750 --> 00:13:24,230
comes through, it's just going to get buried underneath all that. So you want to

220
00:13:24,240 --> 00:13:28,314
make sure, if you can't get out rid of things outright or pivot

221
00:13:28,362 --> 00:13:32,330
them correctly. You want to make sure that the very least, you're setting the urgency

222
00:13:32,410 --> 00:13:35,978
correctly. You can get it via email or chat channel, whatever your

223
00:13:36,004 --> 00:13:39,714
integrations specify. Rather than blowing up your phone, you also

224
00:13:39,752 --> 00:13:43,426
want to make sure that you're creating a flow around it. You need

225
00:13:43,448 --> 00:13:46,914
to know what needs to be known, who needs to know it, how soon

226
00:13:46,952 --> 00:13:50,294
they should know, and how they should be notified. And the idea here is

227
00:13:50,332 --> 00:13:53,526
to try and catch anything that's being misrouted. So when

228
00:13:53,548 --> 00:13:57,058
I was working as an SRE cloud engineer,

229
00:13:57,154 --> 00:14:00,758
whatever my title was at the time, it wasn't necessarily uncommon for me to

230
00:14:00,764 --> 00:14:03,914
get alerts that were routed to me when they might have been better

231
00:14:03,952 --> 00:14:06,678
suited to somebody else. So they weren't in my area of expertise.

232
00:14:06,774 --> 00:14:10,074
If they're not my area of expertise, I can't tasks action on them. Which means

233
00:14:10,112 --> 00:14:14,026
that there is now time lost and active incident for me to hunt down whomever,

234
00:14:14,058 --> 00:14:17,806
the person who actually knows this particular service or situation

235
00:14:17,988 --> 00:14:21,406
and get them to respond to this alert. And every time that

236
00:14:21,428 --> 00:14:24,798
happens, you should definitely be tracking it. Just reroute them one by one. And if

237
00:14:24,804 --> 00:14:28,434
you notice it's pervasive, sit and take a look through your monitoring and

238
00:14:28,472 --> 00:14:31,966
notifications systems to make sure that things are overall flowing

239
00:14:31,998 --> 00:14:35,906
correctly. And then as you're taking a look at all that, when you're looking at

240
00:14:36,008 --> 00:14:39,758
how soon and how to be notified, not everything is critical.

241
00:14:39,854 --> 00:14:42,726
So there are things that should be paging me on my phone that I need

242
00:14:42,748 --> 00:14:46,022
to drop everything and address them. And then there are other things

243
00:14:46,076 --> 00:14:49,366
that I can get to in an hour or by end of business, or if

244
00:14:49,388 --> 00:14:52,794
it's after hours, the next business day. And this will in part

245
00:14:52,832 --> 00:14:56,330
be determined by what the sources of the noise is and what the situation

246
00:14:56,400 --> 00:14:59,798
is, but also the criticality of the service. If you're looking at what's

247
00:14:59,814 --> 00:15:03,158
defined as a t one or in some cases a t zero service, where it's

248
00:15:03,174 --> 00:15:06,894
business critical, that's going to have a higher level of urgency almost

249
00:15:06,932 --> 00:15:09,934
across the board than anything that happens in a tier two or tier three,

250
00:15:09,972 --> 00:15:13,418
where you're still reliant on them, but you don't necessarily need to wake

251
00:15:13,434 --> 00:15:16,786
up at 04:00 in the morning for them. You also want to make sure that

252
00:15:16,808 --> 00:15:20,846
you have enough redundancy in order to prevent a vacuum.

253
00:15:20,958 --> 00:15:24,766
So we started off this year, and I'm sorry to pick on slack,

254
00:15:24,798 --> 00:15:27,566
but just a little. We started off the beginning of this year with a massive

255
00:15:27,598 --> 00:15:30,934
slack outage. And that was kind of great to come back

256
00:15:30,972 --> 00:15:34,598
from the holidays and just have an artificial vacuum that everyone got to

257
00:15:34,604 --> 00:15:38,086
experience together. But if that was your single point of

258
00:15:38,108 --> 00:15:41,698
failure for certain low criticality alerts, and they weren't getting rerouted

259
00:15:41,714 --> 00:15:44,806
to email or somewhere else to compensate for the outage,

260
00:15:44,918 --> 00:15:48,358
then you are going to basically be dropping those into an ether and no one's

261
00:15:48,374 --> 00:15:52,202
going to see what's going on with the chatter. And remember, the idea

262
00:15:52,256 --> 00:15:55,658
with low importance alerts is that you still need to know it. You just don't

263
00:15:55,674 --> 00:15:58,926
need to know it right away. So you don't want to lose that information either.

264
00:15:59,108 --> 00:16:02,558
It's important to be able to change endpoints or change services

265
00:16:02,724 --> 00:16:05,806
as needed. So if you're looking at slack and you're like, oh,

266
00:16:05,828 --> 00:16:09,474
wow, you're really reliant. So this was just a bad day. In this situation,

267
00:16:09,592 --> 00:16:12,898
it was unusually long, then that's fine. But if you notice that you have a

268
00:16:12,904 --> 00:16:16,526
microservice, you need to be able to reevaluate them because maybe they're

269
00:16:16,558 --> 00:16:19,606
becoming less reliable or more reliable over time. And you need to know if you

270
00:16:19,628 --> 00:16:22,914
need to switch into or away from them. You need enough flexibility

271
00:16:22,962 --> 00:16:26,678
in your design to accommodate that. And all of this goes around building

272
00:16:26,764 --> 00:16:30,434
trust because the noise needs to be resilient in order to build trust.

273
00:16:30,492 --> 00:16:34,186
I need to trust that silence is actually because nothing is happening and

274
00:16:34,208 --> 00:16:37,574
not because something is missed or something's been configured

275
00:16:37,622 --> 00:16:41,178
incorrectly or I've had to mute something going back to anxious squidward in

276
00:16:41,184 --> 00:16:44,554
the beginning. And if I've muted it, then I'm just made that silence.

277
00:16:44,602 --> 00:16:48,714
It's not actually silent. You want to make sure, again, how reliable

278
00:16:48,762 --> 00:16:52,298
are your tools and services. Make sure that they're keeping you in alignment

279
00:16:52,314 --> 00:16:55,438
with whatever Sli SlO Slas that you have,

280
00:16:55,604 --> 00:16:59,106
and so that you can keep those slas with your customers or users of your

281
00:16:59,128 --> 00:17:02,894
services. And you want to make sure, again, how much duplication

282
00:17:02,942 --> 00:17:06,658
is needed. You don't necessarily need a backup for every single thing.

283
00:17:06,744 --> 00:17:10,054
This ties into criticality. You want a backup or a way to pivot away

284
00:17:10,092 --> 00:17:13,634
from anything that's highly critical. But you don't necessarily

285
00:17:13,682 --> 00:17:17,206
need to invest a massive amount of time, energy and money into things that

286
00:17:17,228 --> 00:17:20,058
are less critical. You just need to be aware of them.

287
00:17:20,224 --> 00:17:23,580
And driving home this point just one more time,

288
00:17:24,110 --> 00:17:28,070
can you switch endpoints in the event of an outage?

289
00:17:28,230 --> 00:17:32,074
Because everyone has them. They're not normally as long as what I mentioned

290
00:17:32,272 --> 00:17:35,722
a little bit earlier, but you want to make sure that you can accommodate

291
00:17:35,786 --> 00:17:38,986
those. And are you regularly evaluating

292
00:17:39,018 --> 00:17:42,366
the reliability of your services? And this includes internal tools.

293
00:17:42,388 --> 00:17:44,526
So I know I talked a lot about Slack has their big name, we all

294
00:17:44,548 --> 00:17:47,966
recognize, but really, you might have some homegrown things. And are you keeping

295
00:17:47,998 --> 00:17:51,854
track of their reliability to make sure that they're keeping in alignment

296
00:17:51,902 --> 00:17:55,026
with what you've promised and what you've come to expect from them.

297
00:17:55,208 --> 00:17:58,718
And when you're evaluating those internal services, make sure that you also have the

298
00:17:58,744 --> 00:18:02,134
ability to switch. You might make the executive decision at some point that,

299
00:18:02,172 --> 00:18:06,034
you know what, we built this homegrown solution. It's not as reliable

300
00:18:06,082 --> 00:18:09,094
as we would like, and we would like to devote our engineering hours to this

301
00:18:09,132 --> 00:18:12,954
other project feature or whatever. And so we don't have

302
00:18:12,992 --> 00:18:16,458
the time to actually maintain that. So maybe we will switch to a

303
00:18:16,464 --> 00:18:19,734
third party provider. What are the process that those third party

304
00:18:19,782 --> 00:18:23,534
providers offer us and can we use them? So again,

305
00:18:23,652 --> 00:18:27,514
make sure that you're reevaluating reliability internally and externally,

306
00:18:27,642 --> 00:18:31,406
and make sure that you're keeping things as duplicated as makes sense within your

307
00:18:31,428 --> 00:18:34,718
business. And I've mentioned it a couple of times and now I'm

308
00:18:34,734 --> 00:18:38,226
going to actually talk about it. Sprint cleaning, or how to

309
00:18:38,248 --> 00:18:42,014
clean things out when you notice that they're clogged. So every time an alert

310
00:18:42,062 --> 00:18:45,442
triggered triggers, ask is it needed?

311
00:18:45,576 --> 00:18:48,910
Was it resolved, can it be automated? And is there

312
00:18:48,920 --> 00:18:52,694
a permanent solution? And was it urgent? So when you're looking at all these

313
00:18:52,732 --> 00:18:56,406
things, this goes back into do I need this notification? Is it at

314
00:18:56,428 --> 00:18:59,558
the correct urgency and can I delete it? And sometimes we get a

315
00:18:59,564 --> 00:19:02,662
little anxious around deleting things because we think, oh, I might need that later.

316
00:19:02,796 --> 00:19:05,698
But if you can determine that you really don't need that later, you're just setting

317
00:19:05,714 --> 00:19:09,494
yourself up for unnecessary noise. So go ahead and delete it. But these are questions

318
00:19:09,532 --> 00:19:12,974
that can help, you know, if you can delete it. So if

319
00:19:13,012 --> 00:19:16,234
something's been automated away, you might, instead of alerting on the outage

320
00:19:16,282 --> 00:19:19,854
itself, alert on the self healing, because you don't care if it's starting

321
00:19:19,892 --> 00:19:23,754
to fail, you care if it can't recover right? Or if you built a permanent

322
00:19:23,802 --> 00:19:27,450
solution to whatever the problem is, then you don't want alerts off of that

323
00:19:27,460 --> 00:19:30,798
condition anymore because you've changed something to make it irrelevant.

324
00:19:30,894 --> 00:19:34,226
And when you're doing all these things, go ahead and delete. And you want to

325
00:19:34,248 --> 00:19:38,142
make it. I called it sprint cleaning because you want to make it relatively frequent.

326
00:19:38,286 --> 00:19:41,718
Now, the first time you do this, if you haven't done it to this point,

327
00:19:41,804 --> 00:19:44,886
more likely than not you're going to actually need to do kind of

328
00:19:44,908 --> 00:19:48,262
a multi phased approach to it so that you can actually go

329
00:19:48,316 --> 00:19:51,458
through and see that everything's mapping correctly. And that's going to be a bit of

330
00:19:51,484 --> 00:19:54,906
a project to prevent it from being a project again. If you

331
00:19:54,928 --> 00:19:59,046
do it iteratively in small, just like with sprints, just like with daily stand ups,

332
00:19:59,158 --> 00:20:02,346
you can actually prevent yourself from having to make a massive project that will

333
00:20:02,368 --> 00:20:05,374
last that long in the future. If you want to take a look at any

334
00:20:05,412 --> 00:20:08,746
of these resources, I have them available up on noticed

335
00:20:08,938 --> 00:20:12,078
and thank you all for your time. Again, that link is at

336
00:20:12,084 --> 00:20:15,690
the bottom. My name is Quintessence and I'm a developer advocate at Pagerduty.

337
00:20:15,770 --> 00:20:19,166
If you have any other questions, please feel free to hit me up either on

338
00:20:19,188 --> 00:20:22,446
Twitter. My dms are always open or via email,

339
00:20:22,548 --> 00:20:26,198
which I can just be emailed at quintessence at pagerduty. I hope you enjoy the

340
00:20:26,204 --> 00:20:29,814
rest of the conference and the other speakers. They have a great lineup and have

341
00:20:29,852 --> 00:20:30,820
a great rest of your day.

