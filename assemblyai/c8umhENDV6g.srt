1
00:02:01,380 --> 00:02:04,716
Hi everybody, thanks for being here. It is an honor

2
00:02:04,748 --> 00:02:08,624
to have an opportunity for shading my dashboard documenting for

3
00:02:08,662 --> 00:02:11,880
chaos engineering. I have given this type to my talk.

4
00:02:11,950 --> 00:02:15,384
Why chaos engineering documents matter nice

5
00:02:15,422 --> 00:02:18,856
to meet you, I am Jody Nino. I am colombian. This is the

6
00:02:18,878 --> 00:02:23,000
flag of my country. I work as cloud cloud infrastructure engineer Google Cloud.

7
00:02:23,150 --> 00:02:27,096
Also I am chaos engineering and site reliability engineering

8
00:02:27,128 --> 00:02:29,912
advocate. You can find me in LinkedIn,

9
00:02:29,976 --> 00:02:33,836
Twitter and medium at jolinin. As it is mentioned in the

10
00:02:33,858 --> 00:02:37,864
poster of my talk, everybody here knows that the software documentation

11
00:02:37,912 --> 00:02:40,800
is a key to communication the decisions of the project.

12
00:02:40,950 --> 00:02:44,844
But something that we have missed is that it includes chaos engineering

13
00:02:44,892 --> 00:02:48,000
exercise, so we should have frameworks for that.

14
00:02:48,150 --> 00:02:52,092
However, Chaos engineering is still a new discipline.

15
00:02:52,156 --> 00:02:55,640
There is no framework that defines

16
00:02:55,660 --> 00:02:58,756
how to documents experiments. In this talk I am going to

17
00:02:58,778 --> 00:03:02,444
present, but before that I would like to share a chaos

18
00:03:02,512 --> 00:03:06,372
story that puts in evidence the importance of having documentation for chaos

19
00:03:06,436 --> 00:03:09,848
engineering. Having said that, I am going to share the benefits

20
00:03:09,934 --> 00:03:13,428
of documents each software development lifecycle stage.

21
00:03:13,524 --> 00:03:17,784
It's important to mention that I am not talking about documents

22
00:03:17,832 --> 00:03:20,972
for building and operating systems. I am talking about

23
00:03:21,026 --> 00:03:25,064
the documents for the chaos. At this point I will present a framework

24
00:03:25,112 --> 00:03:28,264
composed by a set of documents that should be keeping

25
00:03:28,312 --> 00:03:31,424
the stage of the chaos. I am going to talk

26
00:03:31,462 --> 00:03:34,752
about the general documents for the team, for example, the team

27
00:03:34,806 --> 00:03:38,284
charters and I will try to explore another documents

28
00:03:38,332 --> 00:03:42,064
for preparing, ruining and finishing the case. So let me

29
00:03:42,102 --> 00:03:45,712
start with the story, not Jude. My skills for Titan stories.

30
00:03:45,776 --> 00:03:49,844
I am really bad on that. That is the reason for giving this simple

31
00:03:49,962 --> 00:03:54,120
title to the story. A chaos story in the middle of chaos.

32
00:03:54,700 --> 00:03:58,312
This story began a Friday until 50 50 time

33
00:03:58,366 --> 00:04:01,784
ten minutes before the control chaos. I am going to use my name

34
00:04:01,822 --> 00:04:06,200
for the main actress juries as a reliability engineer and she's participating

35
00:04:06,280 --> 00:04:10,124
of a chaos engineering exercise. For the first time she watched an

36
00:04:10,162 --> 00:04:13,404
experiments cohost announce the routine for

37
00:04:13,442 --> 00:04:17,204
chaos in the Chaos Engineering network channel is a classical

38
00:04:17,272 --> 00:04:20,652
experiment in which the engineering team unplugs some network

39
00:04:20,716 --> 00:04:23,984
outlets. In production at 14 time is

40
00:04:24,022 --> 00:04:27,276
the moment of truth. One of the cohosts run the prepared

41
00:04:27,308 --> 00:04:31,620
command to insate the failure. A jury's colleague and note

42
00:04:32,520 --> 00:04:35,828
take care recurs the time at 50.

43
00:04:35,914 --> 00:04:39,216
After 14 is the time for all participants except

44
00:04:39,248 --> 00:04:42,676
the note taker to sprinkle to action. It is the

45
00:04:42,698 --> 00:04:46,216
moment for collecting the evidence of the failure, the recovery and

46
00:04:46,238 --> 00:04:49,636
the impact on the systems. Confirm on disconfigure

47
00:04:49,668 --> 00:04:54,128
all the details of your hypothesis and make note of the remediations.

48
00:04:54,324 --> 00:04:57,596
At 1430 is the moment to restore the

49
00:04:57,618 --> 00:05:00,460
service. It is the real moment of the truth.

50
00:05:01,440 --> 00:05:05,320
All the preparation and the exercise in the development environment

51
00:05:05,400 --> 00:05:08,976
has led you to this moment. You notice that the

52
00:05:08,998 --> 00:05:12,032
production environment doesn't return to the steady state.

53
00:05:12,166 --> 00:05:15,792
Since something is wrong. The chaos lead decides to stop

54
00:05:15,846 --> 00:05:19,712
here. But it is so late because the automated

55
00:05:19,776 --> 00:05:23,216
recovery procedure has put online the isolated region

56
00:05:23,248 --> 00:05:26,980
for the chaos engineering exercise. The failure is now

57
00:05:27,050 --> 00:05:31,088
noticeable for the customers. This feels truly terrifying.

58
00:05:31,184 --> 00:05:35,264
For a moment. Jury has no idea what to do for tonight.

59
00:05:35,312 --> 00:05:38,888
Leach is not alone. Jury proposes extrapolate the situation

60
00:05:38,974 --> 00:05:42,648
to the development team. The team thinks it is a good idea.

61
00:05:42,734 --> 00:05:46,300
Jury pages the document team. Unfortunately,

62
00:05:48,160 --> 00:05:52,076
she gets no response. The chaos team search on

63
00:05:52,098 --> 00:05:55,500
the intranet to find some documents that could help.

64
00:05:55,650 --> 00:05:59,104
After precious minutes go by Juris find a

65
00:05:59,142 --> 00:06:02,992
document referring a wait a script that can

66
00:06:03,046 --> 00:06:06,880
apparently fix the problem. But this is the first time that the team

67
00:06:06,950 --> 00:06:10,276
has heard of it. Since it

68
00:06:10,298 --> 00:06:13,824
is the only option, they run the script and cross fingers.

69
00:06:13,872 --> 00:06:18,144
Fortunately, it works. Luckily, all the characters

70
00:06:18,192 --> 00:06:21,184
and episodes in this story are fictional.

71
00:06:21,312 --> 00:06:24,410
Let me analyze some thoughts about the story.

72
00:06:24,940 --> 00:06:27,976
A perfect recipe for the chaos in the middle of

73
00:06:27,998 --> 00:06:31,928
the control case. It is the postmortem of our story

74
00:06:32,014 --> 00:06:35,860
starting the things went well. Let me mention that the team war

75
00:06:35,950 --> 00:06:39,784
use the communication channels and chaos engineering installation

76
00:06:39,912 --> 00:06:43,580
were things that they didn't run well.

77
00:06:43,730 --> 00:06:47,340
The things that they didn't go well.

78
00:06:47,490 --> 00:06:51,488
Lack of knowledge about the automation recovery. Skip, did you remember

79
00:06:51,654 --> 00:06:54,972
that the development team was unavailable?

80
00:06:55,116 --> 00:06:59,056
Of course, the lack of documentation and finally let

81
00:06:59,078 --> 00:07:02,436
me close with the next actions plan. A meeting between the

82
00:07:02,458 --> 00:07:05,984
development and SRE team and no less important documentation

83
00:07:06,032 --> 00:07:10,064
than user is the main topic of this talk. The moral

84
00:07:10,112 --> 00:07:13,290
of the story the documentation is very very important.

85
00:07:13,980 --> 00:07:17,444
Let me explain you why it is common that the organizations

86
00:07:17,492 --> 00:07:21,208
depend on the performance of highly skilled individuals of

87
00:07:21,214 --> 00:07:24,484
the team and the teams used to preserve

88
00:07:24,532 --> 00:07:28,264
the important operational concepts and principles as nuggets of

89
00:07:28,302 --> 00:07:31,732
trivial knowledge are passed on bear value

90
00:07:31,806 --> 00:07:35,660
to new team members. It is a fact that if these

91
00:07:35,730 --> 00:07:39,404
concepts and principles are not qualified or documented,

92
00:07:39,532 --> 00:07:43,568
they will often need to be relent painfully through

93
00:07:43,654 --> 00:07:46,770
trial and error. As I chaos mentioned here,

94
00:07:47,860 --> 00:07:50,944
documentation helps developers communicate

95
00:07:50,992 --> 00:07:54,324
with others and documents help future

96
00:07:54,442 --> 00:07:58,244
developers understand and maintain the code. For example, it is

97
00:07:58,282 --> 00:08:01,688
important these documents are important

98
00:08:01,854 --> 00:08:05,460
on the onboarding processes. For example, good documentation

99
00:08:05,540 --> 00:08:09,096
helps you learn from your mistakes. I would like to

100
00:08:09,118 --> 00:08:13,472
share this fragment of an excellent article related to SRE documents.

101
00:08:13,556 --> 00:08:17,084
SRE teams can prevent this process decay by

102
00:08:17,122 --> 00:08:20,520
creating high quality documentation that lays the communication

103
00:08:20,600 --> 00:08:24,524
for teams to scale up and take a principal approach for

104
00:08:24,562 --> 00:08:26,930
managing new and unfamiliar services.

105
00:08:28,020 --> 00:08:31,772
It is the most expected moment to present the documentation

106
00:08:31,836 --> 00:08:35,664
framework. Here are the framework I have classified the

107
00:08:35,702 --> 00:08:38,884
documents according to the stages that are part

108
00:08:38,922 --> 00:08:43,184
of a classical chaos engineering

109
00:08:43,232 --> 00:08:46,832
exercise. In the category of general, I have included

110
00:08:46,896 --> 00:08:50,576
team charters, production, readiness and technical designs

111
00:08:50,688 --> 00:08:54,760
before the chaos. It is important to consider that the chaos policies,

112
00:08:55,660 --> 00:08:58,984
service agreements and on call policies. I am

113
00:08:59,022 --> 00:09:03,172
proposing to use chaos designs, playbooks and incident

114
00:09:03,236 --> 00:09:06,796
management documents during the exercise and finally after the

115
00:09:06,818 --> 00:09:11,100
chaos, our mission will document postmortems and reliability reports.

116
00:09:12,320 --> 00:09:15,660
Let me go in detail on the general documents.

117
00:09:16,400 --> 00:09:19,484
I am going to start with one of my favorite assets.

118
00:09:19,532 --> 00:09:23,104
I am talking about the team charters. A charter general includes the

119
00:09:23,142 --> 00:09:27,708
following elements a vision statement. It should be an aspirational

120
00:09:27,884 --> 00:09:31,824
description of what the team would like to achieve the long term

121
00:09:31,952 --> 00:09:35,460
a short and high level explanation of the space in which your

122
00:09:35,530 --> 00:09:39,156
team operates. This includes the types of services

123
00:09:39,258 --> 00:09:43,348
the team engage with, related systems and examples.

124
00:09:43,444 --> 00:09:47,556
Also a short description of the top two or three services managed

125
00:09:47,588 --> 00:09:50,900
by the team. This section also highlights key technologies,

126
00:09:50,980 --> 00:09:54,904
use and challenges for running them. Benefits of chaos engineering

127
00:09:54,952 --> 00:09:58,236
engage and what chaos engineering does finally,

128
00:09:58,418 --> 00:10:02,268
key principles and valuables for the team and needs to

129
00:10:02,354 --> 00:10:06,152
rebel documents the production readiness

130
00:10:06,216 --> 00:10:09,888
review, or PR as it is known, is a document with

131
00:10:09,894 --> 00:10:13,424
the criteria considered to make sure that a service meets the

132
00:10:13,462 --> 00:10:17,456
accepted standards of operational readiness and that service

133
00:10:17,558 --> 00:10:21,824
owners have the guidance they need. A service go through

134
00:10:22,022 --> 00:10:26,044
the review process prior

135
00:10:26,092 --> 00:10:29,492
before the launch to production. Important to mention that

136
00:10:29,546 --> 00:10:33,080
during this stage the service has not SRE support,

137
00:10:33,230 --> 00:10:36,570
so the product development team supports the service.

138
00:10:37,260 --> 00:10:40,724
Some common sections includes architecture

139
00:10:40,772 --> 00:10:44,708
and dependencies. What is your request flow from user to

140
00:10:44,734 --> 00:10:48,124
front end to back end? The capacity planning very

141
00:10:48,162 --> 00:10:51,768
important. A key question here is have you obtained

142
00:10:51,864 --> 00:10:55,432
all the compute resource needed to support your traffic failures

143
00:10:55,496 --> 00:10:59,372
mode? For example, do you have any single points of failure

144
00:10:59,516 --> 00:11:03,436
in your design on how do you mitigate an availability

145
00:11:03,548 --> 00:11:06,812
of your dependencies, processes and automation?

146
00:11:06,876 --> 00:11:10,804
Very important also. And finally, external dependence is

147
00:11:10,842 --> 00:11:14,852
critical to know to do any partners depend

148
00:11:14,906 --> 00:11:18,768
on your services? Technical design documents, also known

149
00:11:18,784 --> 00:11:22,344
as TDDs, are similar to proposals, but they

150
00:11:22,382 --> 00:11:26,152
describe in detail how a specific solution will work.

151
00:11:26,286 --> 00:11:30,116
Design documents are often written when the implementation

152
00:11:30,308 --> 00:11:34,144
a solution is not trivial or not well understood.

153
00:11:34,292 --> 00:11:38,684
The author will usually have to design

154
00:11:38,802 --> 00:11:42,856
decided, but he's looking for an approval from reviewers.

155
00:11:43,048 --> 00:11:46,984
Since a design document should describe the steady

156
00:11:47,032 --> 00:11:50,252
state of a system, it is really valuable asset for chaos

157
00:11:50,316 --> 00:11:54,124
engineers. Some common sections include an overview

158
00:11:54,172 --> 00:11:57,532
of the system, the system architectures, infrastructure,

159
00:11:57,596 --> 00:12:01,472
services and documentation standards, which includes naming

160
00:12:01,536 --> 00:12:02,950
convention. For example,

161
00:12:07,320 --> 00:12:11,200
another sections for at PDD includes programming

162
00:12:11,280 --> 00:12:15,232
standards, development tools, requirement traceability metrics,

163
00:12:15,296 --> 00:12:19,400
document controls, documents syncops and document change reports.

164
00:12:19,740 --> 00:12:23,864
Now I will move to the documents that should review before the chaos

165
00:12:23,912 --> 00:12:27,212
experiments. A policy is a guide to

166
00:12:27,266 --> 00:12:30,520
make decisions for achieving excellent outcomes.

167
00:12:30,680 --> 00:12:34,924
Policies are generally adopted by governance body within

168
00:12:34,962 --> 00:12:38,256
an communication, so my first recommendation is to

169
00:12:38,278 --> 00:12:41,600
include an asset that documents ks policies.

170
00:12:43,700 --> 00:12:47,660
Here are the sections an overview, the policy goals,

171
00:12:47,820 --> 00:12:51,590
a description of the meaning of the steady state in your services,

172
00:12:52,200 --> 00:12:56,000
the specification of your slos and slas.

173
00:12:56,160 --> 00:12:59,780
The description of the keys policies includes

174
00:13:01,420 --> 00:13:05,640
outage policies, escalation policies and related documents.

175
00:13:06,300 --> 00:13:09,572
These are the classical service level agreements

176
00:13:09,636 --> 00:13:13,160
famous in SRE. They used to include

177
00:13:13,760 --> 00:13:17,624
what is the target for measuring the user

178
00:13:17,672 --> 00:13:21,116
experience? What process will indicate success or

179
00:13:21,138 --> 00:13:25,144
failure by average user? What systems

180
00:13:25,192 --> 00:13:28,396
and piece of the infrastructure are used to conduct

181
00:13:28,428 --> 00:13:31,692
that process and meet the target? For each target

182
00:13:31,756 --> 00:13:35,708
or metric you should identify the source, the measurable

183
00:13:35,804 --> 00:13:39,972
aggregation duration, the threshold by

184
00:13:40,026 --> 00:13:43,892
which we can determine success and any

185
00:13:43,946 --> 00:13:47,620
explanation behind the target service. The selection

186
00:13:48,280 --> 00:13:51,896
finally, to this stage, the on call policies very important

187
00:13:51,998 --> 00:13:55,624
also which use include an overview and

188
00:13:55,662 --> 00:14:00,020
readiness, the training and scheduling. The chief details,

189
00:14:00,100 --> 00:14:04,244
the pager load compensations, tools and processes

190
00:14:04,292 --> 00:14:07,820
and communication standards. This is the real moment

191
00:14:07,890 --> 00:14:11,144
of truth in the following the documents that could be useful

192
00:14:11,192 --> 00:14:14,844
during the chaos experiment I think this is one

193
00:14:14,882 --> 00:14:19,072
of the most important assets in the framework. I know I have

194
00:14:19,126 --> 00:14:22,496
said that all documents are very important, but I think there

195
00:14:22,518 --> 00:14:26,080
is one most important assets in the framework because

196
00:14:26,150 --> 00:14:30,000
it describes the experiment. Here is registered what happened.

197
00:14:30,070 --> 00:14:33,612
The hypothesis very important that you will verify

198
00:14:33,676 --> 00:14:37,044
or refute. Then by domain in which the application is

199
00:14:37,082 --> 00:14:40,956
running the duration and load applied in the experiment.

200
00:14:41,088 --> 00:14:45,364
The result it is like an airplane black box. Your observability

201
00:14:45,492 --> 00:14:49,160
strategy and the actions that you will take from the results.

202
00:14:49,500 --> 00:14:52,836
The playbooks also called roombox.

203
00:14:53,028 --> 00:14:56,872
With them, the oncology engineers respond the alerts generated

204
00:14:56,936 --> 00:15:00,776
by service monitoring in the story, if jury had a playbook

205
00:15:00,888 --> 00:15:04,008
to tell her to do in case of failure,

206
00:15:04,104 --> 00:15:07,712
the incident could have been

207
00:15:07,766 --> 00:15:10,560
resolved in a matter of minutes.

208
00:15:10,710 --> 00:15:13,932
Playbooks reduce the time to mitigate an incident

209
00:15:13,996 --> 00:15:17,692
and they provide useful links to consults and procedures.

210
00:15:17,836 --> 00:15:21,536
Playbooks contains instructions for verification,

211
00:15:21,728 --> 00:15:25,168
troubleshooting and escalation for each alert generated

212
00:15:25,264 --> 00:15:28,224
from network monitoring processes.

213
00:15:28,352 --> 00:15:31,672
They contain commands and step to review for

214
00:15:31,726 --> 00:15:35,300
accuracy and incident management documents.

215
00:15:35,380 --> 00:15:39,268
Sometimes called an incident response plans or emergency

216
00:15:39,364 --> 00:15:42,756
management plans, they are documents that helps

217
00:15:42,788 --> 00:15:46,984
an organization return to normal as quickly as possible following

218
00:15:47,032 --> 00:15:50,456
an implied event. The sections

219
00:15:50,568 --> 00:15:54,328
here overview and readiness chief handsome

220
00:15:54,424 --> 00:15:57,904
escalation incident responsibilities very very

221
00:15:57,942 --> 00:16:02,560
important. If you remember, for example, jury is the reliability

222
00:16:03,060 --> 00:16:05,200
engineer in the exercise,

223
00:16:06,900 --> 00:16:10,790
but she's not the lead of the team.

224
00:16:11,240 --> 00:16:15,424
Prioritization key tools, dashboards and monitoring

225
00:16:15,472 --> 00:16:19,104
and finally the useful links. And finally the documents

226
00:16:19,152 --> 00:16:22,564
for after the chaos is a classic.

227
00:16:22,612 --> 00:16:26,788
As you know, I couldn't allow me to miss the postmortems.

228
00:16:26,884 --> 00:16:30,564
Remember, a software postmortem is analysis conducted

229
00:16:30,612 --> 00:16:34,312
after a system failure. The goal is to understand

230
00:16:34,446 --> 00:16:38,156
why an incident or error happened and to learn from the

231
00:16:38,178 --> 00:16:41,596
experience. The mission with

232
00:16:41,618 --> 00:16:45,272
this asset is that the future software becomes more robust.

233
00:16:45,416 --> 00:16:49,484
Remember that problems happen. By conducting

234
00:16:49,532 --> 00:16:52,956
a postmortem analysis you can ensure that they don't

235
00:16:52,988 --> 00:16:56,076
happen. Goin reliability reports

236
00:16:56,108 --> 00:16:59,764
are common assets to communication the results of KPIs to

237
00:16:59,802 --> 00:17:03,556
the management. Remember that the software reliability is

238
00:17:03,578 --> 00:17:07,152
the probability of failure free software operation

239
00:17:07,216 --> 00:17:11,056
for a period of time in an

240
00:17:11,098 --> 00:17:15,080
environment. Some sections that I think you can include

241
00:17:15,900 --> 00:17:19,076
are indicator name collection method,

242
00:17:19,188 --> 00:17:22,052
assessment formula, state criteria,

243
00:17:22,196 --> 00:17:25,816
target and performance threshold, source of data,

244
00:17:25,918 --> 00:17:29,656
data frequency data entries and finally

245
00:17:29,758 --> 00:17:33,690
expiration or revision date.

246
00:17:34,380 --> 00:17:37,984
And that is all. Thank you. Thank you so much. Thank you so much for

247
00:17:38,022 --> 00:17:41,644
being here. Remember, you can find me LinkedIn,

248
00:17:41,692 --> 00:17:45,644
Twitter and medium at Jorinino and that is my personal webpage

249
00:17:45,692 --> 00:17:46,430
journino at.

