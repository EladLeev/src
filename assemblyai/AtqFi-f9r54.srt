1
00:00:20,090 --> 00:00:23,598
Hi, everyone. My name is Josh Stella. I am

2
00:00:23,764 --> 00:00:27,558
the CTO and co founder of Fug. And what we do

3
00:00:27,564 --> 00:00:31,830
at Fug is we secure our customers cloud infrastructure

4
00:00:32,330 --> 00:00:36,310
and we spend a lot of time here picking apart

5
00:00:36,970 --> 00:00:40,790
how bad guys actually break in and steal stuff, how hackers

6
00:00:40,870 --> 00:00:44,954
exploit you in the cloud, which is a very

7
00:00:45,152 --> 00:00:48,938
common exploitation attack.

8
00:00:49,024 --> 00:00:52,282
Surface now is cloud misconfiguration.

9
00:00:52,426 --> 00:00:56,254
So what we're using to do today is first talk a little

10
00:00:56,292 --> 00:01:00,110
bit about what is cloud misconfiguration risk,

11
00:01:00,770 --> 00:01:04,162
and then iam going to break into one of my own cloud

12
00:01:04,216 --> 00:01:08,318
accounts and steal data out of it using the same techniques

13
00:01:08,494 --> 00:01:12,002
that we know a hacker used against

14
00:01:12,056 --> 00:01:15,518
a major bank last year by a DOJ filing. So I'm

15
00:01:15,534 --> 00:01:18,902
using to show you how a hacker thinks and

16
00:01:18,956 --> 00:01:22,406
how they go after your stuff. And it's a lot of

17
00:01:22,428 --> 00:01:26,198
fun and hopefully I won't fat finger anything because it's going

18
00:01:26,204 --> 00:01:29,638
to be a live, real demonstration. All right, then we're

19
00:01:29,654 --> 00:01:34,166
going to talk about some actionable steps to secure

20
00:01:34,358 --> 00:01:37,766
this as your customers to secure your cloud environments.

21
00:01:37,958 --> 00:01:41,406
And we're recording this so there won't be like live Q and

22
00:01:41,428 --> 00:01:44,622
A, but iam always happy to answer any

23
00:01:44,676 --> 00:01:48,206
questions offline or

24
00:01:48,308 --> 00:01:51,882
whatever mechanism we come up with. I'm just Josh at Fugue

25
00:01:51,946 --> 00:01:55,840
Co. I'll put my email address up at the end. All right.

26
00:01:56,290 --> 00:01:59,438
Not too many slides. Okay, we're going to have a few slides and then we're

27
00:01:59,454 --> 00:02:02,862
going to get into the fun stuff. But we do have a few slides.

28
00:02:03,006 --> 00:02:06,498
So what is cloud misconfiguration?

29
00:02:06,674 --> 00:02:10,610
Well, it's a major security risk. Cloud misconfiguration

30
00:02:10,770 --> 00:02:14,722
is having the cloud services in AWS

31
00:02:14,786 --> 00:02:18,598
or Azure or GCP, whatever cloud you're using

32
00:02:18,764 --> 00:02:22,682
configured in a way that bad guys can take advantage of and

33
00:02:22,736 --> 00:02:26,006
get to stuff you don't want them to get to. That's kind of our definition

34
00:02:26,038 --> 00:02:29,482
of misconfiguration and it is the main attack

35
00:02:29,536 --> 00:02:34,202
surface on the cloud. So every year we at fuge do a big survey

36
00:02:34,346 --> 00:02:37,998
of hundreds of organizations that are operating on the cloud.

37
00:02:38,164 --> 00:02:41,914
And the survey is just about how they're thinking about cloud misconfiguration

38
00:02:41,962 --> 00:02:45,730
and what their concerns are. So 84%

39
00:02:45,880 --> 00:02:48,020
this year, this was done in 2020,

40
00:02:48,550 --> 00:02:52,334
84% are concerned they've been hacked

41
00:02:52,382 --> 00:02:55,938
and don't know about it. This is

42
00:02:56,024 --> 00:02:59,126
good that people are worried about this. It's not

43
00:02:59,148 --> 00:03:02,534
good that it happens, because it does happen a lot, but it's good

44
00:03:02,572 --> 00:03:06,006
that people are concerned about it. The simulation I'm going to

45
00:03:06,028 --> 00:03:09,242
do is based on the capital one

46
00:03:09,296 --> 00:03:13,850
breach of last year. And in that breach,

47
00:03:14,270 --> 00:03:18,026
the only reason anyone found out about it was because the

48
00:03:18,048 --> 00:03:21,418
hacker bragged about it on social media, like,

49
00:03:21,504 --> 00:03:24,894
months after, or at least a month after nobody had

50
00:03:24,932 --> 00:03:28,686
noticed it. Well, why is that? That seems crazy. I'm going to explain to you

51
00:03:28,788 --> 00:03:32,334
why that is when I simulate the breach. So 84%

52
00:03:32,372 --> 00:03:34,980
are worried that's happened to them and they don't know it.

53
00:03:36,310 --> 00:03:39,906
You should be in that 84%, you should believe that this has

54
00:03:39,928 --> 00:03:42,900
happened to you, because it quite possibly has.

55
00:03:43,670 --> 00:03:47,406
92% are concerned they're vulnerable to a cloud breach.

56
00:03:47,518 --> 00:03:51,002
This is actually down 1% from the same survey

57
00:03:51,006 --> 00:03:54,582
we did a year before, where this is 93%. This should

58
00:03:54,636 --> 00:03:59,162
be 100%. You are almost certainly

59
00:03:59,296 --> 00:04:01,930
vulnerable to a major cloud breach.

60
00:04:02,270 --> 00:04:05,580
And I'm going CTO show you that the way hackers think.

61
00:04:06,030 --> 00:04:10,326
They don't care about your compliance policies. They don't care about the

62
00:04:10,368 --> 00:04:13,646
ways that you've predicted. They're going

63
00:04:13,668 --> 00:04:16,480
to come after you. They find ways.

64
00:04:16,930 --> 00:04:20,570
So you should be worried about it. Okay? They're clever.

65
00:04:20,730 --> 00:04:25,010
There's a reason we call hackers hackers. They are creative.

66
00:04:25,670 --> 00:04:29,330
The original term hacking meant, like, doing something really

67
00:04:29,400 --> 00:04:32,754
skilled on a computer. And now that means breaking into stuff.

68
00:04:32,792 --> 00:04:36,898
Because guess what? They're smart, they're clever, and it's

69
00:04:36,914 --> 00:04:41,122
also fun. All right, so misconfiguration

70
00:04:41,186 --> 00:04:45,382
risk will increase or stay the same this year. The 76%

71
00:04:45,436 --> 00:04:49,100
said increase. It is always increasing. Every time

72
00:04:49,550 --> 00:04:52,842
someone in your organization puts a resource in the cloud, that is

73
00:04:52,896 --> 00:04:56,154
additional attack surface. Every time a

74
00:04:56,192 --> 00:05:00,358
cloud service provider creates a new service type,

75
00:05:00,544 --> 00:05:04,490
that's new attack surface. So it is, by definition,

76
00:05:04,650 --> 00:05:07,822
objectively growing all the time.

77
00:05:07,956 --> 00:05:11,054
So this is an increasing problem, and it is not going to go

78
00:05:11,092 --> 00:05:14,522
away. All right, so Dave Lintecomb

79
00:05:14,666 --> 00:05:18,642
from Infoworld wrote an article in which he said, I'm seeing a lot of cloud

80
00:05:18,696 --> 00:05:21,826
misconfiguration in the real world, and it's scaring the hell out of

81
00:05:21,848 --> 00:05:25,174
me. It should be scaring all of us. We should be very

82
00:05:25,212 --> 00:05:29,480
concerned with this because it's really a new domain in security.

83
00:05:29,930 --> 00:05:34,386
Putting network monitors on your network endpoints

84
00:05:34,418 --> 00:05:38,114
and trying to create perimeters of defense and depth will fail

85
00:05:38,162 --> 00:05:42,314
you in the cloud. So the last 30 years of

86
00:05:42,352 --> 00:05:45,562
data center style security is going to help you

87
00:05:45,616 --> 00:05:49,306
only a little bit. There's a whole new way. You have to think about this,

88
00:05:49,408 --> 00:05:52,414
because the hackers are thinking about it a whole new way.

89
00:05:52,532 --> 00:05:56,510
Okay. In our survey, we asked the respondents,

90
00:05:56,930 --> 00:06:00,894
and these are all organizations operating at large scale and cloud. We asked

91
00:06:00,932 --> 00:06:04,654
them what kinds of misconfigurations are

92
00:06:04,692 --> 00:06:08,062
you worried about? And I was really impressed with the responses,

93
00:06:08,126 --> 00:06:11,486
actually. I didn't expect this, but I should have known. There's so many smart

94
00:06:11,518 --> 00:06:15,118
people in this field, it made me really happy. If you

95
00:06:15,144 --> 00:06:18,934
read the news who almost always get it wrong when

96
00:06:18,972 --> 00:06:22,518
it comes to cloud attacks, you would think that this object

97
00:06:22,604 --> 00:06:26,150
storage access policies, this third place

98
00:06:26,300 --> 00:06:30,182
contender would be number one. S three bucket gets breached.

99
00:06:30,246 --> 00:06:33,722
That's always what makes the news. What doesn't make the news is how

100
00:06:33,776 --> 00:06:37,926
they get breached. Okay, data got stolen,

101
00:06:38,118 --> 00:06:42,666
not usually because somebody just left an object storage

102
00:06:42,778 --> 00:06:46,238
bucket wide open, but because of things like

103
00:06:46,324 --> 00:06:50,142
misconfigured identity and access management. That was our number one

104
00:06:50,196 --> 00:06:53,230
answer from our respondents. So on point.

105
00:06:53,300 --> 00:06:56,846
IAM is itself a network in the

106
00:06:56,868 --> 00:07:00,114
cloud. It's not just about the identity of users, it's how

107
00:07:00,152 --> 00:07:03,246
the cloud resources talk to each other. And in the exploit

108
00:07:03,278 --> 00:07:07,246
I'm going to show you, I'm going to leverage IAM and our

109
00:07:07,288 --> 00:07:11,254
number two, bad security group rules. I'm going to leverage those two things

110
00:07:11,372 --> 00:07:15,462
to steal data out of s three. Okay, so it's all of them

111
00:07:15,596 --> 00:07:17,030
to do this hack.

112
00:07:19,230 --> 00:07:22,940
All right. Cloud misconfiguration is very often

113
00:07:23,310 --> 00:07:26,474
overlooked, and there are good

114
00:07:26,512 --> 00:07:30,234
reasons for this when I see cloud breaches in the news.

115
00:07:30,432 --> 00:07:33,806
But prior to founding fugue, I was at AWS as a

116
00:07:33,828 --> 00:07:37,982
principal solutions architect working in know

117
00:07:38,036 --> 00:07:41,534
national security stuff in the US. Okay. So my background for

118
00:07:41,572 --> 00:07:45,086
about a decade has just been around

119
00:07:45,188 --> 00:07:48,978
building functional and secure infrastructure in the

120
00:07:48,984 --> 00:07:52,082
cloud. And I'm really familiar with the whole evolution of it as a result,

121
00:07:52,136 --> 00:07:56,230
because I've been on the front lines and what I've seen is that

122
00:07:56,300 --> 00:08:00,642
many dangerous cloud misconfigurations are not recognized as misconfigurations

123
00:08:00,706 --> 00:08:03,926
at all. One of the reasons for

124
00:08:03,948 --> 00:08:07,586
this is the compliance frameworks that people rely

125
00:08:07,618 --> 00:08:11,670
upon, like NIST and Cis and

126
00:08:11,820 --> 00:08:15,900
HIPAA, GDPR. There's a long list. Soc two,

127
00:08:16,350 --> 00:08:19,962
they're behind the times, the bad

128
00:08:20,016 --> 00:08:23,502
guys. The hackers don't care about

129
00:08:23,556 --> 00:08:26,766
those things. They're really good to do. I mean,

130
00:08:26,788 --> 00:08:30,286
we at feud will let you see how you stack up against all those

131
00:08:30,308 --> 00:08:34,434
compliance frameworks. They're really good, but they're incomplete and

132
00:08:34,472 --> 00:08:38,146
they're losing the race with the bad guys.

133
00:08:38,248 --> 00:08:41,806
So the reason the security teams often aren't aware,

134
00:08:41,918 --> 00:08:46,210
or the engineering teams, DevOps teams aren't aware they have misconfigurations,

135
00:08:46,370 --> 00:08:49,974
is they're relying on experts building compliance frameworks to tell them

136
00:08:50,012 --> 00:08:52,920
what's dangerous. But those things are behind,

137
00:08:53,450 --> 00:08:57,430
and therefore these are exceedingly common

138
00:08:57,580 --> 00:08:59,510
in enterprise cloud environments.

139
00:09:01,630 --> 00:09:04,890
Neil McDonald at Gartner, we use this quote.

140
00:09:05,710 --> 00:09:09,210
I have mixed feelings about it. It's true. So the quote is, nearly all

141
00:09:09,280 --> 00:09:12,574
successful attacks on cloud services are the result of

142
00:09:12,612 --> 00:09:16,314
customer misconfiguration, mismanagement and mistakes.

143
00:09:16,442 --> 00:09:19,498
That sounds really kind of pejorative and punitive.

144
00:09:19,594 --> 00:09:23,146
Like, if you were smarter, you wouldn't have gotten breached.

145
00:09:23,338 --> 00:09:27,582
And while in theory that's true, in practice this is a vastly complex

146
00:09:27,646 --> 00:09:31,474
subject and people who are excellent at it, I mean,

147
00:09:31,592 --> 00:09:34,642
I have very good friends over at Capital one that are in their engine,

148
00:09:34,696 --> 00:09:38,246
and I know how good they are. They're very good, and they

149
00:09:38,268 --> 00:09:41,800
got breached. So this is nontrivial stuff.

150
00:09:42,570 --> 00:09:46,198
And yes, it is kind of glibbed to say

151
00:09:46,364 --> 00:09:49,514
a customer misconfiguration caused this,

152
00:09:49,632 --> 00:09:54,150
but when you have literally potentially billions of misconfigurations,

153
00:09:54,310 --> 00:09:57,020
it's really easy to miss them.

154
00:09:58,110 --> 00:10:02,750
Okay, a little bit about how hackers find

155
00:10:02,820 --> 00:10:06,510
you and find the door into your organization.

156
00:10:07,010 --> 00:10:10,606
So in the old days, in kind of the Hollywood version of

157
00:10:10,628 --> 00:10:14,046
a hack, right, the bad guys are the hackers. Like,

158
00:10:14,068 --> 00:10:16,798
okay, I want to go after this organization.

159
00:10:16,894 --> 00:10:20,482
I'm going to go after Acmecorp. And so I'm using to look

160
00:10:20,536 --> 00:10:24,162
at all of Acmecorp stuff and try to find a way in.

161
00:10:24,296 --> 00:10:27,080
And this does happen. It continues to happen.

162
00:10:28,010 --> 00:10:31,654
One famous example, a number of years back,

163
00:10:31,852 --> 00:10:35,320
know, Sony pictures made a movie that North Korea didn't like,

164
00:10:35,850 --> 00:10:38,958
and they used spear phishing and phishing techniques

165
00:10:38,994 --> 00:10:42,490
to steal all the email out of Sony and embarrass the executives.

166
00:10:42,830 --> 00:10:46,582
So that's like the classic, we're going to target Sony

167
00:10:46,726 --> 00:10:50,314
and find a way in and hit Sony. That is

168
00:10:50,352 --> 00:10:53,834
not how most of these happen anymore. That's mostly

169
00:10:53,882 --> 00:10:57,902
Hollywood, except for rare cases these days.

170
00:10:58,036 --> 00:11:02,186
What the bad guys do, what the hackers do is they have automation that's

171
00:11:02,218 --> 00:11:05,362
running twenty four seven, looking for

172
00:11:05,416 --> 00:11:08,580
any object that appears on the Internet, any IP address,

173
00:11:09,030 --> 00:11:12,558
anything with a DNS record. They're just hitting

174
00:11:12,574 --> 00:11:16,226
them all. Looking for anything they know is

175
00:11:16,248 --> 00:11:19,838
a misconfiguration, typically. Okay,

176
00:11:19,944 --> 00:11:23,090
well, John Breeden here in CSO online says skilled

177
00:11:23,170 --> 00:11:26,534
or well under hacker groups, or both, many are.

178
00:11:26,572 --> 00:11:29,994
Both are employing automation to discover and

179
00:11:30,032 --> 00:11:33,546
exploit misconfigured cloud assets within hours of their

180
00:11:33,568 --> 00:11:36,060
deployment. He's wrong. It's minutes.

181
00:11:37,150 --> 00:11:40,846
Typically somewhere around seven minutes is normal and it

182
00:11:40,868 --> 00:11:45,454
can be seconds. So you have basically zero time

183
00:11:45,652 --> 00:11:49,050
to react as a human being CTO, somebody finding

184
00:11:49,130 --> 00:11:53,022
and exploiting your cloud resources. So how it works now is

185
00:11:53,076 --> 00:11:56,938
the bad guys are running this automation runs 24/7 they

186
00:11:56,964 --> 00:12:00,546
get up in the morning, they grab a coffee, and they go look at the

187
00:12:00,568 --> 00:12:04,420
list of people's stuff they can steal and say, oh, that one looks good.

188
00:12:05,350 --> 00:12:08,038
And they already know the misconfiguration is there.

189
00:12:08,204 --> 00:12:12,022
Okay? So you have to be very concerned with this,

190
00:12:12,076 --> 00:12:15,654
not just being thorough, but using fast and being

191
00:12:15,692 --> 00:12:18,140
quick to breach, because that's what they're using.

192
00:12:20,270 --> 00:12:24,330
Okay? Therefore, your security strategy has to evolve.

193
00:12:25,150 --> 00:12:28,874
Before the cloud, the world worked

194
00:12:28,992 --> 00:12:32,634
roughly like this in the kind of data center world automation

195
00:12:32,682 --> 00:12:35,790
world, whatever you want to call it, pre cloud,

196
00:12:35,860 --> 00:12:39,390
pre API driven infrastructure. You would

197
00:12:39,460 --> 00:12:43,374
do procurements and you would go to

198
00:12:43,492 --> 00:12:47,042
vendors. You might talk to Dell and HPE and someone else

199
00:12:47,096 --> 00:12:51,406
for some servers or Cisco and someone else for some switches,

200
00:12:51,518 --> 00:12:55,422
and you would design something and you would build out your

201
00:12:55,496 --> 00:12:59,254
infrastructure. And that would run for somewhere around three to five

202
00:12:59,292 --> 00:13:02,978
years before any individual piece of equipment was recapitalized.

203
00:13:03,154 --> 00:13:07,250
So the network and security and operations teams would deliver

204
00:13:07,410 --> 00:13:10,306
this infrastructure to the application teams,

205
00:13:10,418 --> 00:13:13,274
right. And then they would live within it, and of course they would add to

206
00:13:13,312 --> 00:13:16,426
it or they would remove some things. But for the most part,

207
00:13:16,608 --> 00:13:20,460
that pre cloud is very slow moving.

208
00:13:21,310 --> 00:13:25,034
It takes weeks or months to go through these procurement

209
00:13:25,082 --> 00:13:28,794
cycles to build this stuff. And then apps are kind of stuffed

210
00:13:28,842 --> 00:13:31,614
into what was built. And so in this world,

211
00:13:31,732 --> 00:13:35,794
things like network analysis and threat detection tools were used

212
00:13:35,992 --> 00:13:38,942
as the primary mechanism to identify intrusions,

213
00:13:39,086 --> 00:13:42,578
and then humans would respond to them through some ticketing system

214
00:13:42,744 --> 00:13:46,340
that is totally inadequate to cloud. And here's why.

215
00:13:46,870 --> 00:13:50,594
In cloud, you don't go build all the infrastructure

216
00:13:50,642 --> 00:13:53,734
and then let your developers into it. The developers are building

217
00:13:53,772 --> 00:13:57,670
the infrastructure as they go. This whole thing is flipped on its head,

218
00:13:57,820 --> 00:14:01,510
right? Infrastructure is now or should be

219
00:14:01,660 --> 00:14:05,018
in cloud. If you're not doing it this way, you're losing a

220
00:14:05,024 --> 00:14:08,218
lot of the advantages of cloud. But the way it works now

221
00:14:08,304 --> 00:14:11,482
is when I go build an application, I'm a software developer,

222
00:14:11,546 --> 00:14:14,560
software architect for a long, long time,

223
00:14:16,130 --> 00:14:20,090
I'm going to, as part of building my app, build its infrastructure,

224
00:14:20,250 --> 00:14:23,534
or at least much of it. So that

225
00:14:23,572 --> 00:14:27,042
might be this morning. Earlier, I was building

226
00:14:27,096 --> 00:14:30,082
out a global network, and that took me a few minutes.

227
00:14:30,216 --> 00:14:34,094
To build a global network in the past would have taken large teams,

228
00:14:34,142 --> 00:14:37,990
months. Right? So this is a great thing because I can go really

229
00:14:38,060 --> 00:14:41,830
fast and I can deploy quickly, but it also

230
00:14:41,900 --> 00:14:45,366
means that I have to be worried about securing it along the way.

231
00:14:45,548 --> 00:14:49,154
So in this world, rather than there being this kind of network

232
00:14:49,202 --> 00:14:52,794
analysis and ids and all this stuff, you might want to do

233
00:14:52,832 --> 00:14:56,282
some of that still. But mainly what you're going to be worried about

234
00:14:56,336 --> 00:14:59,302
is checking the configuration of that cloud infrastructure.

235
00:14:59,366 --> 00:15:02,938
Remember those comments that most of these breaches are due

236
00:15:02,954 --> 00:15:06,974
to misconfiguration, not due to the

237
00:15:07,012 --> 00:15:10,942
traditional ways that hackers would get in. So you can use things like

238
00:15:10,996 --> 00:15:14,402
policy as code validation tools, okay?

239
00:15:14,456 --> 00:15:17,794
And you want automation on your side for detection and

240
00:15:17,832 --> 00:15:21,220
remediation as well. So what this really means is that

241
00:15:22,390 --> 00:15:25,880
cloud security is a software engineering problem.

242
00:15:26,250 --> 00:15:29,782
It's a computer science problem, not a

243
00:15:29,836 --> 00:15:33,080
security analysis problem in the traditional sense.

244
00:15:34,410 --> 00:15:37,410
All right, let's get to, I promise, not that many slides.

245
00:15:37,490 --> 00:15:40,954
That wasn't too many slides, but now we're going to break in

246
00:15:40,992 --> 00:15:44,266
and steal some stuff. All right,

247
00:15:44,448 --> 00:15:48,186
so this diagram is part of the

248
00:15:48,208 --> 00:15:51,338
product we make, and the reason I'm

249
00:15:51,354 --> 00:15:54,190
bringing it up is to show you what I'm going to do here.

250
00:15:54,260 --> 00:15:57,806
Okay, so over on the left is the

251
00:15:57,828 --> 00:16:01,054
Internet, and here are some

252
00:16:01,092 --> 00:16:04,350
VPC networks, virtual private cloud networks.

253
00:16:04,950 --> 00:16:08,866
I've got an Internet gateway. So this is a topology of

254
00:16:08,888 --> 00:16:12,366
a cloud infrastructure, and we at fuge like to automate

255
00:16:12,478 --> 00:16:16,238
the building of these diagrams so that you can understand what's

256
00:16:16,254 --> 00:16:20,258
going on, right? So what I'm going to do today is I'm

257
00:16:20,274 --> 00:16:23,746
going to break into a compute instance, in this case an EC

258
00:16:23,778 --> 00:16:27,510
two instance, and I want to steal data

259
00:16:27,660 --> 00:16:31,418
out of this s three bucket. That's my job. I want

260
00:16:31,424 --> 00:16:34,540
to get in and steal data, okay?

261
00:16:34,990 --> 00:16:38,406
If I'm a bad guy, I'm going to be using, and you can see I've

262
00:16:38,438 --> 00:16:41,760
given this EC two instance the

263
00:16:42,210 --> 00:16:46,010
very witty name. Not really. I've got a CVE.

264
00:16:46,170 --> 00:16:50,238
Okay, so what's a CVe? A CVE, I always forget what

265
00:16:50,244 --> 00:16:53,666
the e stands for, but it's a common vulnerability. There's a database of

266
00:16:53,688 --> 00:16:57,278
these, it means like this compute instance

267
00:16:57,454 --> 00:17:01,058
has vulnerable stuff on it. Remember,

268
00:17:01,144 --> 00:17:04,874
the bad guys are using automation to find vulnerabilities.

269
00:17:05,022 --> 00:17:08,066
Well, this server, this EC two instance,

270
00:17:08,258 --> 00:17:12,280
has one of those vulnerabilities. Now if I were doing

271
00:17:14,490 --> 00:17:17,000
100% accurate hacking demo,

272
00:17:17,390 --> 00:17:21,014
I would use some exploitative

273
00:17:21,062 --> 00:17:25,034
software to take advantage of a CVE. Maybe that

274
00:17:25,072 --> 00:17:29,334
is, for example, running scripts against the HTTP

275
00:17:29,382 --> 00:17:32,970
endpoint of the web server that has a known vulnerability,

276
00:17:33,130 --> 00:17:37,258
and shoving some data in there that allows me to shell that isn't

277
00:17:37,354 --> 00:17:40,462
too uncommon. Iam not going to do that today,

278
00:17:40,596 --> 00:17:44,766
because having worked at AWS, I know those guys are watching all the time,

279
00:17:44,948 --> 00:17:48,706
and that's the kind of thing they notice. And they will shut you out

280
00:17:48,888 --> 00:17:52,478
if they catch you. And I don't want to risk that, because then I won't

281
00:17:52,494 --> 00:17:55,790
be able to do my demo. Okay, so the very first part of

282
00:17:55,800 --> 00:17:59,958
this hack, I'm just going to kind of simulate by

283
00:18:00,044 --> 00:18:03,414
shelling in just getting shell. All right,

284
00:18:03,452 --> 00:18:07,366
so I've now shelled into that EC two instance, and what you're seeing

285
00:18:07,388 --> 00:18:11,174
is my terminal. If you're not used to working in terminals,

286
00:18:11,302 --> 00:18:15,178
don't worry about it. Every single step I take I'm going

287
00:18:15,184 --> 00:18:18,060
to explain in a way that you'll be able to understand.

288
00:18:18,590 --> 00:18:22,734
But I want to show you what it's really like to

289
00:18:22,772 --> 00:18:25,840
be the hacker trying to get in.

290
00:18:26,290 --> 00:18:29,946
I showed you that diagram a second ago. The hacker

291
00:18:29,978 --> 00:18:33,626
doesn't have that diagram. They just know they

292
00:18:33,668 --> 00:18:37,390
got to one little place in your cloud infrastructure.

293
00:18:37,550 --> 00:18:40,900
And this is a theme I'm going to repeat over and again.

294
00:18:41,270 --> 00:18:44,706
You need to be aware of everything in

295
00:18:44,728 --> 00:18:48,434
your cloud infrastructure and you need to be denying

296
00:18:48,562 --> 00:18:52,070
the hacker knowledge of as much as you can.

297
00:18:52,220 --> 00:18:55,986
Because 80% of the job in hacking

298
00:18:56,098 --> 00:18:57,480
is gaining information,

299
00:18:58,670 --> 00:19:02,474
is doing discovery. Okay? So you

300
00:19:02,512 --> 00:19:05,974
want total visibility. That's why few gives you those diagrams.

301
00:19:06,102 --> 00:19:09,938
And you want the hacker to have zero visibility

302
00:19:10,054 --> 00:19:13,870
if possible. Okay? So here

303
00:19:14,020 --> 00:19:17,758
is an indication right away. This is just the

304
00:19:17,844 --> 00:19:22,154
banner for the Amazon Linux distribution.

305
00:19:22,282 --> 00:19:25,790
Perfectly good Linux distribution. It's actually quite a good Linux distribution,

306
00:19:25,950 --> 00:19:30,130
but I have forgotten to update it.

307
00:19:30,280 --> 00:19:33,886
Okay, and by the way, if you go scan

308
00:19:33,918 --> 00:19:37,398
your whole environment using fugue or something like us, you're probably going

309
00:19:37,404 --> 00:19:41,366
to find stuff that you've forgotten about. And that is not up

310
00:19:41,388 --> 00:19:45,382
to current patch levels. So here you can see that 22

311
00:19:45,436 --> 00:19:49,146
packages need updating for security. Each one

312
00:19:49,168 --> 00:19:51,610
of those is a potential vulnerability.

313
00:19:51,950 --> 00:19:55,514
Okay? Out of almost 100 updates that are available.

314
00:19:55,632 --> 00:19:59,062
So this is why in the particular breach we're simulating,

315
00:19:59,126 --> 00:20:02,506
the bad guy first gets in. It's actually not a big part of the hack,

316
00:20:02,538 --> 00:20:05,760
it's a small part of the hack, but it's the first

317
00:20:06,130 --> 00:20:09,774
step in the door. There was an open ssh port,

318
00:20:09,892 --> 00:20:13,530
or an open dangerous port, an unpatched server

319
00:20:13,610 --> 00:20:17,042
with a known vulnerability. And now I'm into

320
00:20:17,096 --> 00:20:20,420
your account. I have no idea where your data lives.

321
00:20:21,590 --> 00:20:24,834
So I'm going to start exploring to see if I can find

322
00:20:24,872 --> 00:20:28,966
your data to steal. So iam a

323
00:20:28,988 --> 00:20:32,546
cloud hacker. So I know what I'm doing. So iam going to use the AWS

324
00:20:32,658 --> 00:20:35,826
command line interface command, which is AWS.

325
00:20:36,018 --> 00:20:39,766
I'm going to point to s three, which is

326
00:20:39,868 --> 00:20:42,154
where a lot of data is stored. That's what I want to get to.

327
00:20:42,192 --> 00:20:44,810
I want to get to s three and I'm just going to try to do

328
00:20:44,880 --> 00:20:48,186
a list of what s three buckets are

329
00:20:48,208 --> 00:20:50,734
out there. So AWS, s three.

330
00:20:50,852 --> 00:20:53,920
Ls is the command I'm going to run first.

331
00:20:56,290 --> 00:21:00,160
Interesting. So somebody did their job.

332
00:21:01,090 --> 00:21:04,580
I, as a bad guy have now run into a problem.

333
00:21:04,950 --> 00:21:08,498
I am getting an access denied on

334
00:21:08,664 --> 00:21:11,890
the s three list, so I don't have permission.

335
00:21:12,310 --> 00:21:15,862
CTO list s three from that Ec two

336
00:21:15,996 --> 00:21:19,894
instance. Now I'm going to switch back to my diagram here

337
00:21:19,932 --> 00:21:23,880
and show you why that is and how that works.

338
00:21:25,370 --> 00:21:29,014
Okay? If you notice, I just selected

339
00:21:29,142 --> 00:21:32,746
this Ec two instance, and the very first thing

340
00:21:32,768 --> 00:21:37,210
I see is that it has the IAM instance profile

341
00:21:37,550 --> 00:21:40,460
of maintenance role. Okay,

342
00:21:41,170 --> 00:21:45,054
just to explain what's going on here in AWS, remember we

343
00:21:45,092 --> 00:21:48,398
talked about IAm being a major attack

344
00:21:48,484 --> 00:21:52,854
service, being a dangerous service, and something that misconfigurations

345
00:21:53,002 --> 00:21:56,402
are really devastating if you have them in. A big part of the reason

346
00:21:56,456 --> 00:22:00,034
for that is IaM in AWS is more like

347
00:22:00,072 --> 00:22:03,490
a network than just identity.

348
00:22:03,910 --> 00:22:07,762
It determines when you assign resources,

349
00:22:07,826 --> 00:22:11,510
IAM roles, it determines what they're allowed to see

350
00:22:11,580 --> 00:22:14,322
elsewhere in the infrastructure.

351
00:22:14,466 --> 00:22:18,238
So this maintenance role here apparently

352
00:22:18,434 --> 00:22:22,522
does not have permission to see this s three stuff over

353
00:22:22,576 --> 00:22:26,090
here. So as a bad guy, I've got to start getting

354
00:22:26,240 --> 00:22:28,620
creative now.

355
00:22:31,650 --> 00:22:34,906
I don't know. I just showed you in the nice feud diagram,

356
00:22:35,018 --> 00:22:38,286
I'm copying some commands over here. I just

357
00:22:38,308 --> 00:22:43,090
showed you in the nice feud diagram that there

358
00:22:43,160 --> 00:22:46,974
is a maintenance role on that instance, but the hacker

359
00:22:47,022 --> 00:22:50,178
still doesn't know that. So Iam going to start

360
00:22:50,264 --> 00:22:53,810
exploring the infamous metadata service.

361
00:22:53,880 --> 00:22:57,670
This is another place where the press really

362
00:22:57,740 --> 00:23:01,266
gets things wrong. Okay? All I'm

363
00:23:01,298 --> 00:23:03,670
doing here is a command called Curl.

364
00:23:04,330 --> 00:23:07,926
Curl is like pointing your terminal at a

365
00:23:07,948 --> 00:23:11,330
website the same way you would type a web address into a

366
00:23:11,340 --> 00:23:15,162
browser. I'm going to do it at a terminal to get data back rather

367
00:23:15,216 --> 00:23:18,380
than to paint a web page. Okay? But it's the same thing.

368
00:23:18,750 --> 00:23:22,734
And I'm calling this special IP address one

369
00:23:22,772 --> 00:23:27,434
6925-416-9254 that's

370
00:23:27,482 --> 00:23:30,622
the same on every EC two instance and

371
00:23:30,676 --> 00:23:33,860
what it is. So when you think about what is cloud,

372
00:23:34,630 --> 00:23:37,870
cloud is made of things like virtual machines and containers

373
00:23:37,950 --> 00:23:41,314
and functions, but they're living underneath what's called a

374
00:23:41,352 --> 00:23:45,746
hypervisor, okay? And a hypervisor is what manages

375
00:23:45,858 --> 00:23:49,762
those virtual compute instances of various forms.

376
00:23:49,906 --> 00:23:55,430
Now in AWS one 6925-416-9254

377
00:23:55,580 --> 00:23:58,454
is the hypervisor, okay,

378
00:23:58,572 --> 00:24:02,314
you're asking the thing that's managing your compute instance for

379
00:24:02,352 --> 00:24:06,262
some information, and it knows some stuff about your compute instance.

380
00:24:06,326 --> 00:24:09,430
This is actually an awesome service and if used properly,

381
00:24:09,510 --> 00:24:13,066
will help your security. You should not be afraid of it, but you should know

382
00:24:13,088 --> 00:24:16,398
how to use it. Okay, so as a bad guy here, iam going to

383
00:24:16,404 --> 00:24:20,270
go look at this and I want to look at the latest

384
00:24:20,610 --> 00:24:23,060
metadata. Just give me a list.

385
00:24:24,310 --> 00:24:27,822
All right. There's a bunch of stuff here I can look at. The AMI

386
00:24:27,886 --> 00:24:31,540
ID, the machine image id, host name,

387
00:24:32,310 --> 00:24:36,106
whatever the Mac address, all kinds of data. Well, you can imagine

388
00:24:36,158 --> 00:24:40,194
how this stuff would be really helpful when you're building particularly

389
00:24:40,242 --> 00:24:43,560
immutable infrastructure, which is the only way to go on cloud

390
00:24:44,170 --> 00:24:47,298
applications, you have automatic access. You don't

391
00:24:47,314 --> 00:24:50,550
have to go figure it out. You don't have to go sending messages

392
00:24:50,630 --> 00:24:54,422
across services or anything like that. It's right there in the hypervisor.

393
00:24:54,486 --> 00:24:58,170
But what I'm looking for as the bad guy doing discovery

394
00:24:58,510 --> 00:25:02,490
is IAM looking for the IAM security credentials.

395
00:25:03,710 --> 00:25:07,226
And I happen to know where those live. Let me move my little zoom

396
00:25:07,258 --> 00:25:11,822
thing here. So again, one 6925-416-9254

397
00:25:11,956 --> 00:25:15,166
latest metadata. We went there, right? But now we're

398
00:25:15,198 --> 00:25:19,630
drilling down into IAM and we're looking at security credentials,

399
00:25:19,710 --> 00:25:23,730
and this will tell us what role we are running at.

400
00:25:23,880 --> 00:25:26,786
And you can see here, we showed this in the feud diagram, but I said

401
00:25:26,808 --> 00:25:29,762
the bad guy didn't know. Well, now the bad guy knows. It's maintenance role.

402
00:25:29,826 --> 00:25:33,958
Okay? Now I

403
00:25:33,964 --> 00:25:37,046
know the role I'm running under, and I know from when I did my s

404
00:25:37,068 --> 00:25:41,066
three ls command that maintenance role ain't going to help me get

405
00:25:41,088 --> 00:25:44,810
to s three. But I want to show you one more thing,

406
00:25:44,880 --> 00:25:48,838
because the press has often gotten this wrong and I've

407
00:25:48,854 --> 00:25:52,654
been disappointed. A lot of people have gotten this wrong. They said, oh, my God,

408
00:25:52,772 --> 00:25:56,046
if you get into the metadata service, bad guys can

409
00:25:56,068 --> 00:26:00,778
attack you. Not if you do it right. So I'm

410
00:26:00,794 --> 00:26:03,586
going to drill in further. So iam going to go the same place I went

411
00:26:03,608 --> 00:26:07,342
before using curl, and I'm going to go into the maintenance

412
00:26:07,406 --> 00:26:10,420
role itself. Okay, here we go.

413
00:26:11,190 --> 00:26:14,020
This looks scary, right?

414
00:26:15,110 --> 00:26:18,674
I've got an access key. I've got a secret

415
00:26:18,722 --> 00:26:22,038
access key. I've got a token. This is everything

416
00:26:22,124 --> 00:26:25,654
I need as a bad guy to still not

417
00:26:25,692 --> 00:26:27,320
have access to s three.

418
00:26:28,830 --> 00:26:31,834
So what? Right?

419
00:26:32,032 --> 00:26:35,210
The danger is when

420
00:26:35,360 --> 00:26:39,606
you can traverse the IAM network to s three. Well, we can't.

421
00:26:39,798 --> 00:26:43,142
So these credentials, as scary looking as this is,

422
00:26:43,296 --> 00:26:46,874
aren't going to help me as a bad guy one iota.

423
00:26:46,922 --> 00:26:50,894
In fact, I need to take a completely different approach now. So I know,

424
00:26:50,932 --> 00:26:55,010
I don't have access cto s three using maintenance role,

425
00:26:55,350 --> 00:26:58,994
but maybe, just maybe, I can get to some other

426
00:26:59,032 --> 00:27:02,418
stuff that perhaps people left open for me.

427
00:27:02,584 --> 00:27:06,280
So here I'm again using the AWS command line,

428
00:27:06,810 --> 00:27:09,670
but I'm not pointing at s three, I'm pointing at IAm,

429
00:27:10,570 --> 00:27:13,894
and I'm going to list the policies and

430
00:27:13,932 --> 00:27:17,606
I'm going to search that list for any policy name

431
00:27:17,708 --> 00:27:20,530
that has s three in it. Okay,

432
00:27:20,620 --> 00:27:23,606
so I'm not querying s three. I know I'm using to get again, access denied.

433
00:27:23,638 --> 00:27:25,850
There I'm instead looking at Iam.

434
00:27:26,830 --> 00:27:30,302
And all I'm doing right here, by the way, I don't need

435
00:27:30,356 --> 00:27:34,414
write permissions to Iam, I just need list permissions to

436
00:27:34,452 --> 00:27:38,542
Iam. All I'm trying to do is list policies. If you

437
00:27:38,596 --> 00:27:42,186
think list permissions aren't scary

438
00:27:42,378 --> 00:27:45,743
and bad guys and hackers can't exploit them, you are very,

439
00:27:46,243 --> 00:27:50,046
very wrong. I am trying to do discovery

440
00:27:50,238 --> 00:27:54,274
and I'm going to do that through list commands. Okay, let's hit

441
00:27:54,312 --> 00:27:57,630
enter on that. By the way, this is all real and live,

442
00:27:57,720 --> 00:28:01,078
okay? So if I screw something up, I'll tell you and

443
00:28:01,084 --> 00:28:04,854
I'll go back. But so far so good. We just executed that command against

444
00:28:04,892 --> 00:28:08,774
the AWS APIs. And I'm looking at this s three

445
00:28:08,812 --> 00:28:12,298
read write as a pretty attractive looking policy.

446
00:28:12,384 --> 00:28:15,210
You can see here a list of policy names.

447
00:28:15,630 --> 00:28:18,940
S three read write sounds like it would do what I want to do.

448
00:28:19,870 --> 00:28:23,790
So now I'm going to change tack again. I started out trying

449
00:28:23,860 --> 00:28:27,246
cto get

450
00:28:27,268 --> 00:28:30,734
to s three. I got an access denied. So I started looking around and doing

451
00:28:30,772 --> 00:28:34,386
discovery and IAM, but now I know, okay,

452
00:28:34,488 --> 00:28:39,620
the thing iam trying to do now is change this

453
00:28:40,470 --> 00:28:44,094
to the s three read write from the maintenance role.

454
00:28:44,222 --> 00:28:49,062
Well, in other words, I want different permissions that

455
00:28:49,116 --> 00:28:51,958
this compute instance, this EC two instance has.

456
00:28:52,124 --> 00:28:55,462
I want it to change its permissions to

457
00:28:55,516 --> 00:28:59,878
be able to see s three. And so I need to change what IAM

458
00:28:59,974 --> 00:29:03,898
role it is associated to, and that is called

459
00:29:03,984 --> 00:29:07,370
an IAM instance profile association.

460
00:29:08,670 --> 00:29:12,800
So back at the command line, AWS, EC two

461
00:29:13,250 --> 00:29:16,350
don't need IaM permissions to see this.

462
00:29:16,500 --> 00:29:19,838
I just need EC two permissions. Very often

463
00:29:19,924 --> 00:29:23,534
people think a lot of EC two permissions on EC two

464
00:29:23,572 --> 00:29:26,938
instances are safe. They are not. And again,

465
00:29:27,044 --> 00:29:30,050
this is not a read, this is not a write, it's a describe.

466
00:29:30,630 --> 00:29:33,950
So there's a theme here. As a bad guy, as a hackers,

467
00:29:34,030 --> 00:29:37,282
I'm going to use lists and describes. I'm going to be doing discovery,

468
00:29:37,346 --> 00:29:40,978
okay? Let's go look at the instance profile associations.

469
00:29:41,154 --> 00:29:44,694
All right, so all I'm doing here, if you think about that

470
00:29:44,732 --> 00:29:48,482
EC two instance having that connection to maintenance

471
00:29:48,546 --> 00:29:52,250
role, I'm looking at the thing that is the connection here,

472
00:29:52,320 --> 00:29:55,066
okay? The association of these.

473
00:29:55,248 --> 00:29:58,618
And there's a little bit of data in here. So the instance id

474
00:29:58,704 --> 00:30:02,138
here is the instance id of the EC two instance

475
00:30:02,234 --> 00:30:05,566
I'm working from the state is that it

476
00:30:05,588 --> 00:30:09,086
is in fact associated, so it's connected. And then what

477
00:30:09,108 --> 00:30:12,240
I'm really going for here is this automation id.

478
00:30:13,010 --> 00:30:16,386
I want to be able to point to this association so that

479
00:30:16,408 --> 00:30:19,986
I can change it. Okay? So I'm going to

480
00:30:20,008 --> 00:30:25,302
grab this and I'm going to go over to my text

481
00:30:25,356 --> 00:30:29,142
editor here off screen, because this next

482
00:30:29,196 --> 00:30:32,150
command is really a mouthful.

483
00:30:41,230 --> 00:30:46,442
And I'm going to explain the whole is

484
00:30:46,496 --> 00:30:50,254
if you read the DoJ filing on the

485
00:30:50,292 --> 00:30:53,566
capital one breach, you'll see there's a part in there in

486
00:30:53,588 --> 00:30:57,198
which the hacker says that they do an

487
00:30:57,284 --> 00:31:01,120
IaM assume role. That's this,

488
00:31:01,730 --> 00:31:05,226
okay? That's what this is. So it's a mouthful

489
00:31:05,338 --> 00:31:08,162
and it gets really verbose, but I want to walk through it so you really

490
00:31:08,216 --> 00:31:12,014
understand what I'm about to do. So AWS

491
00:31:12,062 --> 00:31:15,606
ClI command, again, we're pointing at ec two. All I need

492
00:31:15,628 --> 00:31:18,520
is ec two. I don't need iam. Right.

493
00:31:19,290 --> 00:31:23,074
Remember that when you're granting EC two permissions, there are some scary

494
00:31:23,122 --> 00:31:26,694
ones. So the EC two command here,

495
00:31:26,732 --> 00:31:30,582
the action is called replace IAM instance profile

496
00:31:30,646 --> 00:31:33,210
association. It's a mouthful.

497
00:31:33,710 --> 00:31:37,114
It does what it says. It replaces that association with

498
00:31:37,152 --> 00:31:40,454
another automation. So I need to know the automation.

499
00:31:40,502 --> 00:31:44,074
That's why I looked this up. So I pass that in here under association

500
00:31:44,122 --> 00:31:47,674
id, replace that one and then replace

501
00:31:47,722 --> 00:31:51,582
it with the IaM instance profile, whose name is

502
00:31:51,716 --> 00:31:55,086
s three readwrite. So you can see here we're pointing

503
00:31:55,118 --> 00:31:58,690
at maintenance role. I want to point at s three read write

504
00:31:58,760 --> 00:32:01,570
role. Okay, let's see if this flies.

505
00:32:04,230 --> 00:32:06,870
All right, that looks like victory.

506
00:32:08,890 --> 00:32:12,354
This is how sad we are as hackers,

507
00:32:12,402 --> 00:32:15,622
whether we're white hats or black hats. This is like this

508
00:32:15,676 --> 00:32:20,134
moment right here. Okay, you've now got a new association

509
00:32:20,182 --> 00:32:23,434
id. You can see that doesn't end in the same thing, right,

510
00:32:23,552 --> 00:32:26,970
as this one. And it's pointed at s three read

511
00:32:27,040 --> 00:32:30,622
write. So I

512
00:32:30,676 --> 00:32:33,614
should be able to see s three now. So let's go back to the very

513
00:32:33,652 --> 00:32:37,594
beginning and do our aws

514
00:32:37,722 --> 00:32:39,360
s three list.

515
00:32:41,730 --> 00:32:45,442
Now I can see data. Now I can list

516
00:32:45,496 --> 00:32:48,642
the data. Okay, so remember I said

517
00:32:48,776 --> 00:32:52,734
I was going to exploit an open firewall port. I was mostly

518
00:32:52,782 --> 00:32:56,238
going to be exploiting iam to get to s

519
00:32:56,264 --> 00:32:59,526
three to steal from s three. Okay,

520
00:32:59,708 --> 00:33:03,666
and I can see here this important records is an attractively

521
00:33:03,698 --> 00:33:06,838
named s three bucket. Sounds like stuff I

522
00:33:06,844 --> 00:33:09,930
might want to steal in there. So I'm going to do an AWS. S three.

523
00:33:10,000 --> 00:33:13,930
Ls of s three important records.

524
00:33:16,430 --> 00:33:20,214
And if I could type properly,

525
00:33:20,342 --> 00:33:23,658
and I typed s two, too, I just switched keyboards.

526
00:33:23,674 --> 00:33:27,018
I shouldn't have done that. All right, so now we're

527
00:33:27,034 --> 00:33:30,634
getting an enumeration of the data that's in that bucket.

528
00:33:30,682 --> 00:33:34,010
Now, in this case, these are some pictures I took in Iceland. No big deal,

529
00:33:34,100 --> 00:33:37,314
right? This is me just hacking around with my own account,

530
00:33:37,432 --> 00:33:41,122
trying out hacking techniques. But in the real world, this was

531
00:33:41,176 --> 00:33:45,038
like a lot of customer data out of

532
00:33:45,064 --> 00:33:48,294
that bank. A lot. So what I've done

533
00:33:48,332 --> 00:33:52,022
here, back to the diagram I got

534
00:33:52,076 --> 00:33:55,542
into here, and by using

535
00:33:55,676 --> 00:33:59,722
different API commands, looking at doing

536
00:33:59,776 --> 00:34:02,826
discovery via the metadata service. But that was tiny part

537
00:34:02,848 --> 00:34:06,694
of this hack, right? The big part of the hack is doing discovery

538
00:34:06,742 --> 00:34:10,414
via EC two and IAM of other

539
00:34:10,452 --> 00:34:14,058
IAM roles, and then exploiting a misconfiguration

540
00:34:14,154 --> 00:34:17,790
in the IAM role on the EC two instance

541
00:34:18,370 --> 00:34:21,454
to change the IAM role. And now I

542
00:34:21,492 --> 00:34:25,314
can see important records here. And what I'm going to do next is

543
00:34:25,352 --> 00:34:28,802
I'm going to steal all the data out of important records into

544
00:34:28,856 --> 00:34:32,994
my own s three bucket, called all your base. All right,

545
00:34:33,112 --> 00:34:36,694
so we know from the DoJ filing exactly how this

546
00:34:36,732 --> 00:34:40,006
was done. It was done using

547
00:34:40,108 --> 00:34:42,630
a command called sync.

548
00:34:43,290 --> 00:34:44,040
Now.

549
00:34:46,570 --> 00:34:48,890
So aws s three sync.

550
00:34:49,550 --> 00:34:52,330
Sync is not part of the s three API.

551
00:34:53,310 --> 00:34:57,062
Sync is only a convenience utility

552
00:34:57,126 --> 00:35:00,790
that's built into the command line. So we know the hacker

553
00:35:00,870 --> 00:35:04,426
was using the command line. A lot of the news stories on that breach

554
00:35:04,538 --> 00:35:08,160
thought she was doing something on some remote server somewhere else.

555
00:35:09,010 --> 00:35:12,154
We know she got in. We know she used an IAM assume

556
00:35:12,202 --> 00:35:15,806
role, just like I did, and then used sync. Now, the beauty

557
00:35:15,838 --> 00:35:19,074
of sync. So I'm going to do important records. Let's see. I'll watch

558
00:35:19,112 --> 00:35:22,850
myself type this time so I don't have typos.

559
00:35:23,910 --> 00:35:28,626
I'm going from s three important records

560
00:35:28,818 --> 00:35:31,910
to I need an extra slash.

561
00:35:33,930 --> 00:35:37,682
I always thought that slash slash thing was kind of goofy in

562
00:35:37,836 --> 00:35:41,210
Uris of all forms, from s three important

563
00:35:41,280 --> 00:35:44,618
records to s three, all your

564
00:35:44,784 --> 00:35:46,780
base. All right,

565
00:35:48,430 --> 00:35:50,140
I just stole all your data,

566
00:35:52,290 --> 00:35:55,870
and none of it traversed your network boundaries.

567
00:35:56,610 --> 00:36:00,826
Not a single bit of that data theft traversed

568
00:36:00,858 --> 00:36:04,514
any of your intrusion detection systems, traverse any

569
00:36:04,552 --> 00:36:08,478
of your packet monitors, your firewalls, your VPC

570
00:36:08,574 --> 00:36:11,666
gateways, nothing. It went straight from s

571
00:36:11,688 --> 00:36:14,210
three to s three on the AWS backplane.

572
00:36:15,530 --> 00:36:18,822
Okay, so this is why so many

573
00:36:18,876 --> 00:36:22,934
s three breaches go undetected. Because what

574
00:36:22,972 --> 00:36:26,422
evidence do you have that this was

575
00:36:26,476 --> 00:36:30,570
taking place? Really, the only thing you have are the log

576
00:36:30,640 --> 00:36:35,274
entries of that sync command performing gets right

577
00:36:35,312 --> 00:36:38,726
behind the scenes. All sync is doing is it's

578
00:36:38,758 --> 00:36:42,278
using s three list. Another reason you should not have s three list turned

579
00:36:42,294 --> 00:36:45,646
on anywhere in production. It's using s

580
00:36:45,668 --> 00:36:49,354
three list to get a list of things, and then it's doing parallelized copies

581
00:36:49,402 --> 00:36:52,538
to another s three behind the scenes. So you'll have some API calls,

582
00:36:52,554 --> 00:36:56,098
you'll have some gets. But what's s three's job? In the world? It's like

583
00:36:56,104 --> 00:36:59,906
a fourth of the Internet. It's really good at handling lots and

584
00:36:59,928 --> 00:37:03,458
lots of gets. So, finding that needle in

585
00:37:03,464 --> 00:37:06,486
the haystack, even if it's stealing all of your customer data,

586
00:37:06,588 --> 00:37:10,150
because what those s three buckets are probably doing all day is serving customer

587
00:37:10,220 --> 00:37:14,226
data to legitimate actors. So what's

588
00:37:14,258 --> 00:37:17,842
another million calls against your s three infrastructure?

589
00:37:17,906 --> 00:37:21,210
When you're doing 200 million calls a day against it?

590
00:37:21,280 --> 00:37:24,586
It's very hard to see. And so this is why getting the

591
00:37:24,608 --> 00:37:28,554
configuration right to begin with and then keeping it

592
00:37:28,592 --> 00:37:32,074
correct through automated remediation is so important. If I had had

593
00:37:32,112 --> 00:37:35,614
fugue turned on in this account doing

594
00:37:35,652 --> 00:37:38,942
automated remediation, it would have caught when I did that

595
00:37:38,996 --> 00:37:42,654
IAM role change, and it would have reverted it.

596
00:37:42,772 --> 00:37:46,654
Okay, so instead of my being able to go and break

597
00:37:46,692 --> 00:37:50,066
into s three and steal all your data, I might have momentarily been able

598
00:37:50,088 --> 00:37:53,394
to see a list of s three. But then fugue would put it back to

599
00:37:53,432 --> 00:37:57,398
maintenance role and shut down my ability to do the copy of the data.

600
00:37:57,564 --> 00:38:01,222
Okay, so that's the

601
00:38:01,276 --> 00:38:02,440
demo today.

602
00:38:04,650 --> 00:38:08,174
I think we've got a few closing slides here. Yeah, just CTo recap.

603
00:38:08,322 --> 00:38:11,306
So, the misconfiguration attack and review. First,

604
00:38:11,408 --> 00:38:14,460
there was a firewall misconfiguration I could get to,

605
00:38:14,830 --> 00:38:18,534
and I could use my automation tools to discover a vulnerable EC

606
00:38:18,582 --> 00:38:22,462
two instance. Number two. I had a vulnerable Ec two

607
00:38:22,516 --> 00:38:26,270
instance. Second mistake. So, usually,

608
00:38:26,420 --> 00:38:30,506
in this case, I believe it was due to what we call orphan

609
00:38:30,538 --> 00:38:34,414
or zombie infrastructure stuff you've forgotten to patch anymore.

610
00:38:34,542 --> 00:38:38,754
So, I break in, right? I get my toe hold.

611
00:38:38,952 --> 00:38:42,718
Number three. I needed to find a way to get an IAM role

612
00:38:42,734 --> 00:38:46,834
that could access s three. And the

613
00:38:46,872 --> 00:38:50,422
permissions on the IAM role that EC two instance had were such

614
00:38:50,476 --> 00:38:54,354
that I could do that. And then four I had to discover

615
00:38:54,482 --> 00:38:58,022
the s three buckets and list their contents and sync

616
00:38:58,086 --> 00:39:00,140
and steal their data.

617
00:39:01,790 --> 00:39:05,366
So some recommendations monitor

618
00:39:05,398 --> 00:39:10,800
all your access point misconfigurations. You should really

619
00:39:11,410 --> 00:39:15,054
have full visibility into your

620
00:39:15,092 --> 00:39:18,702
ingress ports to the Internet, or even not just

621
00:39:18,756 --> 00:39:22,462
to the Internet, to any kind of broad external under block, right?

622
00:39:22,516 --> 00:39:27,090
A lot of people miss that. Obviously you want to use least permissive

623
00:39:27,670 --> 00:39:30,830
permissions on all this stuff, but really apply that to IAM.

624
00:39:30,910 --> 00:39:33,140
Don't use star in IAM ever.

625
00:39:33,750 --> 00:39:37,250
You can use things like different endpoints with different IAM roles for

626
00:39:37,320 --> 00:39:40,100
read and write operations too, right?

627
00:39:40,730 --> 00:39:44,226
And get rid of anything in the production environment that relies on lists.

628
00:39:44,258 --> 00:39:47,880
In s three, shove that data in a database and query it there.

629
00:39:49,790 --> 00:39:53,766
IAM list permissions in production are extraordinarily

630
00:39:53,798 --> 00:39:56,860
dangerous, as I hope I just showed you.

631
00:39:57,470 --> 00:40:00,986
And yeah, don't allow Ec two instances

632
00:40:01,018 --> 00:40:05,262
CTO have IAM roles that allow role assumption gets

633
00:40:05,316 --> 00:40:08,842
game over. Get rid

634
00:40:08,906 --> 00:40:11,934
of unused cloud resources, especially EC two

635
00:40:11,972 --> 00:40:16,180
instances s three buckets. But also think about things like

636
00:40:16,790 --> 00:40:20,734
EBS, volume backups, and if any of those are public and unencrypted,

637
00:40:20,782 --> 00:40:23,922
because often they contain secrets you need to constantly clean

638
00:40:23,976 --> 00:40:27,554
up behind yourself and only have out

639
00:40:27,592 --> 00:40:30,338
there in cloud what you need to operate your business.

640
00:40:30,424 --> 00:40:32,806
And that means you have to know everything you have out there. And I can

641
00:40:32,828 --> 00:40:36,246
almost guarantee you you have stuff out there you don't know about if you're

642
00:40:36,268 --> 00:40:40,486
operating at scale. Include cloud misconfiguration

643
00:40:40,518 --> 00:40:43,834
and pen testing. I don't even love the term pen

644
00:40:43,872 --> 00:40:47,066
testing. What we tend to do is use things like

645
00:40:47,088 --> 00:40:51,034
hacker one CTo just get as to put bounties on

646
00:40:51,072 --> 00:40:54,250
finding stuff in our non prod environments and

647
00:40:54,400 --> 00:40:56,960
getting the cleverest bad guys out there.

648
00:40:57,490 --> 00:41:00,426
Everything in the hack I just showed you, none of it. I never got rude

649
00:41:00,458 --> 00:41:03,926
on the operating system. I didn't do any of the traditional hacker

650
00:41:03,978 --> 00:41:08,046
stuff. I completely exploited cloud misconfiguration,

651
00:41:08,158 --> 00:41:11,842
and good luck finding that in a single team.

652
00:41:11,976 --> 00:41:15,038
So you have to be creative there and find people who really know how CTO

653
00:41:15,064 --> 00:41:19,138
do it. Use automation remediation again, if we had had fugue

654
00:41:19,154 --> 00:41:22,450
turned on in that environment, in remediation mode,

655
00:41:22,530 --> 00:41:26,098
in automated remediation mode,

656
00:41:26,194 --> 00:41:29,510
enforcement mode, I would have been prevented from stealing the data.

657
00:41:29,580 --> 00:41:32,666
You want something like that, we have a free version you

658
00:41:32,688 --> 00:41:36,218
can use up to a certain scale, but you can do it other ways too.

659
00:41:36,304 --> 00:41:40,298
Obviously we think our approach is best, but do something

660
00:41:40,464 --> 00:41:44,158
right and then you can use things like open policy.

661
00:41:44,244 --> 00:41:48,382
Agent and I've got another talk in this series of sessions on open

662
00:41:48,436 --> 00:41:51,520
policy agent for finding these problems,

663
00:41:51,890 --> 00:41:55,386
but you need some kind of policy as code to tell you. And we bake

664
00:41:55,418 --> 00:41:58,994
into fug. When we learn how one of these exploits happens,

665
00:41:59,112 --> 00:42:02,866
we add rules into fug. I told you, the compliance frameworks don't really

666
00:42:02,888 --> 00:42:07,038
think about things like IAM role assumption. Well, the fug best practices

667
00:42:07,134 --> 00:42:10,886
does because we saw that bad guys are using this. So we

668
00:42:10,908 --> 00:42:14,998
build in the rule. All right, we're not going to do live Q A,

669
00:42:15,084 --> 00:42:18,280
but here's our web address. That's my personal email address.

670
00:42:18,730 --> 00:42:22,310
Feel free to reach out. I love talking to folks about this stuff.

671
00:42:22,460 --> 00:42:25,574
And yeah, thanks very much for your

672
00:42:25,612 --> 00:42:26,200
time.

