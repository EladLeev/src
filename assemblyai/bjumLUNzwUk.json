{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/74ca8b30-0b92-48bc-83ec-f31b6261d1c1", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["apache apisix ingress", "api", "apisix", "benefits", "can", "case", "cases", "cloud", "combination", "combine", "complex", "conf fourty two", "configuration", "follows", "from", "kubernetes", "requirements", "scenarios", "shares", "sharing", "software engineer", "wei", "wei jin"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "id": "4098cb4a-efe1-48a7-9cb6-c302805003c8", "status": "completed", "error": null, "text": "Hello everyone, this is Jin Wei. I'm very happy to introduce the Apache API six Ingress project. This is a simpler and easier kubernetes ingress have something about myself. I'm Apache API six PMC, Apache Skywalking committee, and the founder of Apache API Six Ingress controller. So what is Apache API six Ingress controller? It is another ingress controller implementation based on Apache API six, and it supports declarative configuration which can be configured through native ingress results or through custom results definition. We call it CRD. This picture tells us that the Apache API six Ingress controller is usually deployed at the age of the cluster, serving as a cluster entry and forwarding business request to the services. Well, we also need to introduce Apache API six. It is a high performance four dynamic real time API gateway and it is also a top level project of Apache foundation. This is the architecture diagram of Apache API six, and the left part show us Apache API six how to process business traffic with rich plugin functions. On the right is the controller plan of Apache API six. Here we mainly focus on admin APIs, through which ingress controller synchronize results to Apache API six. Okay, let's talk about the working mechanism of Apache API six Ingress controller. The Apache API six Ingress controller watches events from the Kubernetes API server, something like secret endpoints and Ingress in kubernetes, as well as custom results definition such as API six root API six, upstream API six tls and so on. And then the channel resource objects are covered, compared, and finally the results are synchronized to a patch API six cluster by invoking admin APIs. So this diagram fully shows the relationship between Ingress controller and Apache API six. Apache API six Ingress controller is used as a controller plan to calculate and synchronize restores configuration between Kubernetes and Apisix cluster. Well, what can we do with Apache Apisix in grace? I list many important features here such as dynamic configuration service discovery, flexible load balancing strategies, out of the box, health checks, traffic split and more than 70 official plugins, as well as the configuration of custom plugins, ability and so on. Welcome to watch the project and get more future information. Let me show the path of Apache API six Ingress controller in 2019. I wrote the first line of project and donated to the Apache foundation in December 2020 after half a year of community polishing. The first GA version was released in June 2021. Until the last version 1.4 release, Apache API Six Ingress has been used by more and more enterprises and working in production environments. Much has been learned along the way and soon we will be raising version 1.5 in midmain. This is contribute growth curve of the Apache API Six Ingress controller and its steady growth shows that the project has maintained a good level of activity. Well, there is a question I think you will ask. We know that there are many ingress implementations in kubernetes, but why we still create another ingress based on API six? Of course, as a gateway with excellent performance, Apache API six is necessary to implement ingress in order to help users to use it on Kubernetes platform. Apart from that, we certainly have other reasons that are why I recommend API six ingress to you. First. All configurations of API six take effect dynamically and there is no need to reload when the configuration is changed. Compared with some other ingress implementations, using API six ingredients has nature advantages. Apache API six ingredients is easier to use, the declarative configuration is more readable and complex scenarios can be defined in a single result. This example shows that an API is assigned to different upstream according to weights. Of course that certain condition must be made. Here we can see that the complete traffic split configuration are delivered into two parts, match and back end. The match part defines the root matching rules and the backend part defines the weight between upstreams. The whole configuration is very easy to read. Third, API six have strong scalability following the above configuration. If you want to add some features to this API, such as the ability to support cross domain and URIW, we can use plugins to empower the API. If you want to add more features, just add plugins. I'd like to say that the design of the plugin is very compatible with the declarative configuration and because of the in cap solution of plugin, you do not need to write code slaved in declarative configuration and no longer need to pay attention to these code logics. The only thing need to be case about is some simple variables which is more general and more readable. Okay, let's come back and talk about the flexibility of the architecture of Apache API six. Ingress controller Apache API six ingress does not combine controller and proxy like other ingresses. The advantage of this is that you can deploy them together or separately. When Ingress controller and API six are deployed together, they are used to handle ingress requests to a single Kubernetes cluster, no different from traditional Kubernetes ingress. You can also deploy them separately. This is awesome. As shown on the right, API six cluster is deployed outside the Kubernetes clusters and can manage the traffic on multiple Kubernetes clusters. In this way all resources be managed in unified API cluster and also reduce one traffic forwarding. The only thing you need to care about is the networking between the Kubernetes clusters. Here are some complaints using Apache API six more and more enterprise customers are using Apache API six for production environments. More and more user are adopting Apache API six Ingress solutions. That's what keeps our open source project going. Okay, I'd like to share with you the future plans of Apache API six Ingress controller. We are supporting the Kubernetes Gateway API and we are also preparing to support a new scenarios which is to support cluster deployment without etCD. I think users who mind etcd being stateful will be happy to hear about that. Why we made such changes because this needs from the community are very reasonable and this is the driving force for the project to continue. Okay, the above is the whole content of this sharing. Looking forward to build a patch API six community together with you. See you next time. Bye.", "words": [], "utterances": null, "confidence": 0.913451941391944, "audio_duration": 697.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- Apache API six Ingress controller is another ingress controller implementation based on Apache API six. Controller is used to calculate and synchronize restores configuration between Kubernetes and Apisix cluster. Welcome to watch the project and get more future information.\n- Apache API Six Ingress controller will be released in June 2021. Using API six ingredients has nature advantages. The declarative configuration is more readable and complex scenarios can be defined in a single result. If you want to add more features, just add plugins.\n-  Apache API six ingress does not combine controller and proxy like other ingresses. The advantage of this is that you can deploy them together or separately. More and more enterprise customers are using API six for production environments. That's what keeps our open source project going.", "auto_highlights_result": {"status": "success", "results": [{"count": 26, "rank": 0.13, "text": "Apache API", "timestamps": [{"start": 92716, "end": 93506}, {"start": 101322, "end": 102106}, {"start": 106052, "end": 106826}, {"start": 110116, "end": 110858}, {"start": 116136, "end": 117006}, {"start": 132716, "end": 133506}, {"start": 147446, "end": 148326}, {"start": 162116, "end": 162926}, {"start": 165800, "end": 166574}, {"start": 175548, "end": 176354}, {"start": 185372, "end": 186194}, {"start": 191072, "end": 191926}, {"start": 194112, "end": 194806}, {"start": 238220, "end": 239086}, {"start": 240032, "end": 240918}, {"start": 290656, "end": 291446}, {"start": 318878, "end": 319886}, {"start": 341776, "end": 342646}, {"start": 373854, "end": 374922}, {"start": 419910, "end": 420926}, {"start": 543696, "end": 544486}, {"start": 546910, "end": 547878}, {"start": 620360, "end": 621246}, {"start": 625160, "end": 626206}, {"start": 631570, "end": 632466}, {"start": 645120, "end": 646054}]}, {"count": 1, "rank": 0.1, "text": "unified API cluster", "timestamps": [{"start": 601088, "end": 603470}]}, {"count": 1, "rank": 0.1, "text": "upstream API", "timestamps": [{"start": 212920, "end": 214286}]}, {"count": 2, "rank": 0.09, "text": "Apache foundation", "timestamps": [{"start": 157476, "end": 158830}, {"start": 300500, "end": 301914}]}, {"count": 1, "rank": 0.09, "text": "Apache Apisix", "timestamps": [{"start": 256372, "end": 257482}]}, {"count": 1, "rank": 0.09, "text": "Apache Skywalking", "timestamps": [{"start": 103130, "end": 104202}]}, {"count": 10, "rank": 0.09, "text": "Apache API Six Ingress controller", "timestamps": [{"start": 106052, "end": 108590}, {"start": 110116, "end": 112358}, {"start": 132716, "end": 134930}, {"start": 191072, "end": 193622}, {"start": 194112, "end": 196054}, {"start": 240032, "end": 242310}, {"start": 290656, "end": 293210}, {"start": 341776, "end": 344570}, {"start": 543696, "end": 546250}, {"start": 645120, "end": 647930}]}, {"count": 1, "rank": 0.08, "text": "Apache Skywalking committee", "timestamps": [{"start": 103130, "end": 104890}]}, {"count": 14, "rank": 0.08, "text": "ingress controller", "timestamps": [{"start": 107220, "end": 108590}, {"start": 111156, "end": 112358}, {"start": 113320, "end": 114254}, {"start": 133836, "end": 134930}, {"start": 182492, "end": 183554}, {"start": 192320, "end": 193622}, {"start": 195136, "end": 196054}, {"start": 236620, "end": 237762}, {"start": 241280, "end": 242310}, {"start": 291776, "end": 293210}, {"start": 343040, "end": 344570}, {"start": 544880, "end": 546250}, {"start": 563256, "end": 564254}, {"start": 646416, "end": 647930}]}, {"count": 1, "rank": 0.08, "text": "Apache API six Ingress solutions", "timestamps": [{"start": 631570, "end": 634390}]}, {"count": 14, "rank": 0.08, "text": "Apache API Six Ingress", "timestamps": [{"start": 92716, "end": 94242}, {"start": 106052, "end": 107562}, {"start": 110116, "end": 111562}, {"start": 132716, "end": 134210}, {"start": 191072, "end": 192662}, {"start": 194112, "end": 195462}, {"start": 240032, "end": 241622}, {"start": 290656, "end": 292230}, {"start": 318878, "end": 320798}, {"start": 341776, "end": 343510}, {"start": 543696, "end": 545222}, {"start": 546910, "end": 548998}, {"start": 631570, "end": 633298}, {"start": 645120, "end": 646870}]}, {"count": 1, "rank": 0.08, "text": "Apache API six ingredients", "timestamps": [{"start": 419910, "end": 421934}]}, {"count": 1, "rank": 0.07, "text": "traditional Kubernetes ingress", "timestamps": [{"start": 574840, "end": 577350}]}, {"count": 1, "rank": 0.07, "text": "multiple Kubernetes clusters", "timestamps": [{"start": 593792, "end": 595850}]}, {"count": 4, "rank": 0.07, "text": "declarative configuration", "timestamps": [{"start": 119102, "end": 121070}, {"start": 425532, "end": 427602}, {"start": 507252, "end": 509150}, {"start": 518296, "end": 520238}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}