1
00:00:38,930 --> 00:00:42,882
Hi there, my name is Kevin. I'm Seth from change engineer

2
00:00:42,946 --> 00:00:46,998
in Brazil and I'm here today at Conf 42

3
00:00:47,084 --> 00:00:50,720
DevOps 2024. And and

4
00:00:51,090 --> 00:00:54,986
first of all, happy new year for all of us and I'm

5
00:00:55,018 --> 00:00:58,974
very happy, excited and a little bit nervous because this

6
00:00:59,012 --> 00:01:02,158
is my first international talk and

7
00:01:02,244 --> 00:01:06,050
my first english talk. So ignore this fact.

8
00:01:06,200 --> 00:01:09,918
But I'm grateful to be here talking about web workers

9
00:01:10,014 --> 00:01:13,502
and how we can handle with have processing

10
00:01:13,566 --> 00:01:18,342
on the client side. So let's begin and

11
00:01:18,396 --> 00:01:21,702
just to introduce myself and how I said before,

12
00:01:21,756 --> 00:01:25,474
my name is Kevin Uehara. I'm Stefan Change engineer

13
00:01:25,522 --> 00:01:29,422
at iFut. I will be talking about ifut

14
00:01:29,506 --> 00:01:32,986
in the next slide. I'm from Brazil, Sao Paulo. I'm a

15
00:01:33,008 --> 00:01:36,314
speaker and tech content creator at YouTube. You can find

16
00:01:36,352 --> 00:01:39,922
me there. I'm a community partner at Nodebr,

17
00:01:40,086 --> 00:01:42,480
that is Node Brazil community.

18
00:01:42,850 --> 00:01:45,566
I'm organizer of campiness from change.

19
00:01:45,668 --> 00:01:48,240
Campiness is the city where I live.

20
00:01:49,010 --> 00:01:53,342
One of my hobbies is trying to play cs contrast,

21
00:01:53,486 --> 00:01:57,566
but always I remember that I'm

22
00:01:57,598 --> 00:02:01,150
very bad and I didn't play it CSQ

23
00:02:01,230 --> 00:02:05,290
yet. I'm developer for about nine years and focused

24
00:02:05,310 --> 00:02:08,822
on the front chain for about five years and I'm very,

25
00:02:08,876 --> 00:02:11,800
very typescript somalier. I love it.

26
00:02:13,210 --> 00:02:15,910
So talking about ifuT,

27
00:02:16,810 --> 00:02:20,060
the current company where I work today,

28
00:02:20,910 --> 00:02:24,422
ifood is the most big tech food delivery in Brazil.

29
00:02:24,566 --> 00:02:28,218
I work in the ifood logistics tribal. I work

30
00:02:28,304 --> 00:02:31,690
in two chains, location areas and location

31
00:02:31,770 --> 00:02:35,706
gel. Together these two chains

32
00:02:35,818 --> 00:02:39,630
are called by Maps platform. We work

33
00:02:39,700 --> 00:02:44,158
with gel processing, geolocation, partner delivery areas,

34
00:02:44,254 --> 00:02:47,300
deliver routes and much more. Okay,

35
00:02:47,830 --> 00:02:51,186
so let's begin what I will be talking

36
00:02:51,288 --> 00:02:55,398
in this presentation I want to introduce you

37
00:02:55,484 --> 00:02:59,238
what is web workers? I want to show

38
00:02:59,404 --> 00:03:03,270
some application that I built and

39
00:03:03,420 --> 00:03:06,578
see how we can use webworkers,

40
00:03:06,674 --> 00:03:10,170
the results and if the time allow us.

41
00:03:10,240 --> 00:03:13,734
Let's write some code and let's

42
00:03:13,782 --> 00:03:17,050
finish with my contacts.

43
00:03:18,190 --> 00:03:22,030
So the application overview let's create

44
00:03:22,100 --> 00:03:26,174
application first without using web workers and

45
00:03:26,212 --> 00:03:30,378
then we will implement it and visualize the application performance.

46
00:03:30,474 --> 00:03:34,066
And after that we will refact the

47
00:03:34,088 --> 00:03:37,582
entire application using web workers and compare

48
00:03:37,646 --> 00:03:40,180
the results and the performance. Okay,

49
00:03:41,110 --> 00:03:43,890
so what is web Workers?

50
00:03:44,310 --> 00:03:47,742
Web workers is an API provided by the browser.

51
00:03:47,806 --> 00:03:50,774
By default we know that JavaScript itself,

52
00:03:50,892 --> 00:03:54,310
the vanilla JavaScript is single thread without

53
00:03:54,380 --> 00:03:58,418
going to the merits of node js with Lab UV.

54
00:03:58,594 --> 00:04:02,446
However, we note that we have the image

55
00:04:02,498 --> 00:04:07,062
loop callback query stack and this entire architecture

56
00:04:07,126 --> 00:04:10,606
is provided by engine V eight. And we

57
00:04:10,628 --> 00:04:13,966
can say that JavaScript can handle a synchronous process on

58
00:04:13,988 --> 00:04:17,434
demand. Okay, so the browser

59
00:04:17,482 --> 00:04:20,622
offers a series of API that can be used

60
00:04:20,676 --> 00:04:24,542
by development team like storage for example session

61
00:04:24,606 --> 00:04:26,862
storage, local storage,

62
00:04:27,006 --> 00:04:31,230
indexDB workers, PWe performance

63
00:04:31,310 --> 00:04:34,946
monitoring, lighthouse devtools and a

64
00:04:34,968 --> 00:04:38,694
lot of more of features. And one of

65
00:04:38,732 --> 00:04:42,594
the topics I want to address in this talk is web worker

66
00:04:42,722 --> 00:04:46,326
and how do they live, how do they survive, how do

67
00:04:46,348 --> 00:04:50,010
they reproduce? I'm kidding. But why to use

68
00:04:50,160 --> 00:04:53,740
what is the benefits? So let's see.

69
00:04:54,830 --> 00:04:59,130
Web worker are mechanisms that allow operations,

70
00:04:59,710 --> 00:05:04,390
usually large populations or huge operations

71
00:05:04,550 --> 00:05:08,574
to be executed from the main thread, making sure the main

72
00:05:08,612 --> 00:05:10,670
thread is not blocked.

73
00:05:11,730 --> 00:05:15,806
What I want is for a function to perform certain have processing

74
00:05:15,838 --> 00:05:18,420
that will block integrations with the page,

75
00:05:19,430 --> 00:05:22,722
the UI. So imagine that you

76
00:05:22,776 --> 00:05:27,160
have web app and you are

77
00:05:27,690 --> 00:05:30,998
making large or huge

78
00:05:31,084 --> 00:05:34,722
processing but you don't

79
00:05:34,786 --> 00:05:38,940
want your page is

80
00:05:40,670 --> 00:05:45,094
blocked. So the user can't interact

81
00:05:45,142 --> 00:05:48,922
with your page because you are making

82
00:05:48,976 --> 00:05:53,294
this large operation in the main thread. Okay, so this

83
00:05:53,332 --> 00:05:56,640
is a problem and how we can resolve this

84
00:05:57,010 --> 00:06:00,766
using web workers is one of the

85
00:06:00,948 --> 00:06:03,298
solutions that we can use.

86
00:06:03,464 --> 00:06:06,994
Okay, so I want to introduce you this

87
00:06:07,112 --> 00:06:11,390
API. I wrote this article

88
00:06:11,550 --> 00:06:15,786
where I did dive in the same topic

89
00:06:15,918 --> 00:06:19,782
and this concept that is web workers so

90
00:06:19,836 --> 00:06:23,590
you can search in Dev Chio

91
00:06:24,170 --> 00:06:28,490
by Kevin we had or introducing JavaScript web worker

92
00:06:28,990 --> 00:06:32,940
and how I said I deep dive in this same

93
00:06:34,830 --> 00:06:38,730
concept and the same example that I

94
00:06:38,800 --> 00:06:41,740
will reproduce with you. Okay,

95
00:06:43,550 --> 00:06:46,314
so let's choose the app.

96
00:06:46,432 --> 00:06:49,854
So the shown the code. So for our

97
00:06:49,892 --> 00:06:53,490
demo project we will not use any framework or lib.

98
00:06:55,110 --> 00:06:58,206
We're going to use just vanilla

99
00:06:58,238 --> 00:07:02,174
js to do this we will create our workspace

100
00:07:02,222 --> 00:07:05,650
with the following files, the index HTML,

101
00:07:05,730 --> 00:07:09,814
the index js and some styles for our

102
00:07:09,852 --> 00:07:13,634
application, okay, simple styles,

103
00:07:13,682 --> 00:07:17,830
okay, because I'm from James I'm kidding

104
00:07:18,830 --> 00:07:24,362
but we have the script files, okay and

105
00:07:24,496 --> 00:07:28,058
ignore this code here. But we have this

106
00:07:28,224 --> 00:07:32,030
extension here called live server. That is

107
00:07:32,180 --> 00:07:35,774
extension. If you don't know live

108
00:07:35,812 --> 00:07:39,294
server is extension of this code you can use just

109
00:07:39,332 --> 00:07:42,894
to provide a server. And we

110
00:07:42,932 --> 00:07:47,470
have the hot reload, okay so

111
00:07:47,620 --> 00:07:51,826
to the HTML we have this simple

112
00:07:51,928 --> 00:07:55,682
HTML here. We are importing

113
00:07:55,746 --> 00:07:59,426
the style here and the Javascript

114
00:07:59,538 --> 00:08:03,320
here. Okay, so I'm using async import.

115
00:08:04,090 --> 00:08:07,670
You can use defer or async.

116
00:08:08,330 --> 00:08:11,774
But for this example we need to use async.

117
00:08:11,842 --> 00:08:15,674
Okay important. So we have

118
00:08:15,792 --> 00:08:18,970
three elements here, two buttons.

119
00:08:19,550 --> 00:08:23,454
The first button will start a large operation and

120
00:08:23,492 --> 00:08:27,022
the second button will change the background color

121
00:08:27,156 --> 00:08:31,050
of our page. And this pretext

122
00:08:31,130 --> 00:08:35,186
is where I will print the result

123
00:08:35,288 --> 00:08:37,620
of the large operation. Okay,

124
00:08:38,870 --> 00:08:43,842
so this css I'm resetting the

125
00:08:43,896 --> 00:08:47,782
full styles and adding some

126
00:08:47,836 --> 00:08:50,914
styles for our button the paging

127
00:08:50,962 --> 00:08:54,546
background preserve. So that's

128
00:08:54,578 --> 00:08:58,678
it easy. Okay, so the Javascript

129
00:08:58,774 --> 00:09:02,522
file the index js we have this first

130
00:09:02,576 --> 00:09:06,218
function here, we have three functions. The first function

131
00:09:06,304 --> 00:09:10,006
will simulate the large operation. So we

132
00:09:10,048 --> 00:09:13,982
have the valley starting with zero and

133
00:09:14,116 --> 00:09:17,630
we going to increment this valley

134
00:09:18,770 --> 00:09:22,960
using the loop and start with zero and

135
00:09:23,910 --> 00:09:27,362
using the four until 1

136
00:09:27,416 --> 00:09:31,874
million, I think that is one and

137
00:09:31,992 --> 00:09:35,666
eight zeros, okay, and multiplying

138
00:09:35,698 --> 00:09:40,630
by 30

139
00:09:40,780 --> 00:09:44,118
and I return this value here.

140
00:09:44,204 --> 00:09:47,880
Okay and we have this two

141
00:09:48,570 --> 00:09:52,890
event listeners here. The first we will start the large process

142
00:09:53,040 --> 00:09:56,554
and call this function here just

143
00:09:56,592 --> 00:10:00,566
to simulate a large operation in the main thread.

144
00:10:00,678 --> 00:10:04,338
Okay. And console log here processing

145
00:10:04,374 --> 00:10:07,790
the value. And the second button

146
00:10:07,860 --> 00:10:12,160
will change the background color of our page.

147
00:10:12,470 --> 00:10:16,290
So if it's white I will change to dark and

148
00:10:16,360 --> 00:10:19,540
if it's dark I will change to white. Okay,

149
00:10:20,710 --> 00:10:24,514
so let's see the result of

150
00:10:24,552 --> 00:10:29,030
this application without using web worker. So notice

151
00:10:29,770 --> 00:10:33,206
that I will click in the first button that we

152
00:10:33,228 --> 00:10:36,422
will start the large operation and

153
00:10:36,556 --> 00:10:40,682
I will try to click on the second button that will

154
00:10:40,736 --> 00:10:44,634
change the background color, but I can't click because

155
00:10:44,752 --> 00:10:47,900
the main thread is blocked. So let's see,

156
00:10:48,430 --> 00:10:52,174
I clicked on the first button and I

157
00:10:52,212 --> 00:10:56,030
can't click on the second button because

158
00:10:56,100 --> 00:11:00,000
the main thread is blocked until the

159
00:11:00,770 --> 00:11:05,010
large process is finished and the main thread

160
00:11:05,830 --> 00:11:08,020
is free. Okay,

161
00:11:11,350 --> 00:11:15,670
so to resolve this problem I

162
00:11:15,820 --> 00:11:19,670
will use the web worker, so I will create

163
00:11:19,740 --> 00:11:22,866
this fileworker js.

164
00:11:22,978 --> 00:11:26,680
Okay, so I will change

165
00:11:28,910 --> 00:11:32,940
something here, I will move

166
00:11:33,390 --> 00:11:37,258
that function, handle large operation that

167
00:11:37,344 --> 00:11:41,022
was in the index HTML to here

168
00:11:41,156 --> 00:11:43,630
in the webworkers js.

169
00:11:44,130 --> 00:11:46,958
And we have this function here,

170
00:11:47,124 --> 00:11:50,414
this anonymous function called omessage that

171
00:11:50,452 --> 00:11:53,940
we receive as parameter the event,

172
00:11:55,190 --> 00:11:59,602
and we are comparing the

173
00:11:59,656 --> 00:12:02,994
name of our operation that I

174
00:12:03,032 --> 00:12:06,854
name it as operation. You can give any

175
00:12:06,892 --> 00:12:10,994
name you want, but I give operation

176
00:12:11,122 --> 00:12:16,166
and if I receive operation I

177
00:12:16,188 --> 00:12:18,760
will call the handle large operation function.

178
00:12:19,610 --> 00:12:23,542
And after that I will post message with

179
00:12:23,596 --> 00:12:29,266
the value, okay, so that's

180
00:12:29,298 --> 00:12:33,182
it, this is the file and

181
00:12:33,236 --> 00:12:36,266
let's refact the index js.

182
00:12:36,378 --> 00:12:40,826
Okay, so here I'm instantiating

183
00:12:40,938 --> 00:12:44,098
the worker and

184
00:12:44,264 --> 00:12:47,490
processing the path of our file, okay,

185
00:12:47,560 --> 00:12:51,970
worker js. So I create the worker

186
00:12:52,470 --> 00:12:55,878
and instantiation. And here

187
00:12:55,964 --> 00:12:59,702
I'm just creating this before and after just to bring

188
00:12:59,756 --> 00:13:04,210
the time in seconds. And here I'm

189
00:13:04,370 --> 00:13:07,802
calling the function of web

190
00:13:07,856 --> 00:13:11,418
worker, that is post message processing the name

191
00:13:11,504 --> 00:13:15,210
of the operation

192
00:13:15,630 --> 00:13:19,420
that I give operation. So it's the same name

193
00:13:19,970 --> 00:13:20,720
here,

194
00:13:22,690 --> 00:13:26,334
and after that I call

195
00:13:26,372 --> 00:13:29,598
this o message that will

196
00:13:29,764 --> 00:13:34,690
be listening if the large

197
00:13:34,760 --> 00:13:37,906
process, it will be

198
00:13:38,088 --> 00:13:41,202
created on worker from

199
00:13:41,256 --> 00:13:45,038
Maingrad and after the process

200
00:13:45,144 --> 00:13:47,510
on the worker is finished,

201
00:13:49,130 --> 00:13:52,726
it will call it

202
00:13:52,828 --> 00:13:56,562
callback. And this all message to print

203
00:13:56,706 --> 00:14:00,330
and you can use the data that you process

204
00:14:00,400 --> 00:14:03,642
it. Okay, and I'm getting

205
00:14:03,776 --> 00:14:07,530
the data here and printing in the text

206
00:14:07,600 --> 00:14:10,362
content tag, that is the pre tag.

207
00:14:10,426 --> 00:14:13,934
Okay, so this

208
00:14:13,972 --> 00:14:18,142
is the change that we

209
00:14:18,196 --> 00:14:21,680
have. Okay, so the result,

210
00:14:23,830 --> 00:14:27,790
I click it on the start button, large operation,

211
00:14:27,870 --> 00:14:31,410
but we can change the background color

212
00:14:31,560 --> 00:14:34,942
and the user can interact with your page

213
00:14:35,096 --> 00:14:38,694
without being blocked. So the main

214
00:14:38,732 --> 00:14:42,678
thread is not blocked. Okay, so this is

215
00:14:42,844 --> 00:14:46,870
one of the benefits to use the web worker you can

216
00:14:47,020 --> 00:14:50,730
use without blocking the UI.

217
00:14:51,710 --> 00:14:55,420
So that's it. This is our example.

218
00:14:58,510 --> 00:15:02,590
For large or huge operations you can use

219
00:15:02,740 --> 00:15:06,670
web workers and this is one of millions of

220
00:15:06,740 --> 00:15:08,880
solutions that you can use. Okay,

221
00:15:10,130 --> 00:15:15,442
so that's it in oh

222
00:15:15,576 --> 00:15:17,140
my YouTube channel.

223
00:15:18,710 --> 00:15:21,874
If you want to know me more,

224
00:15:21,992 --> 00:15:25,766
I have the YouTube channel, you can

225
00:15:25,788 --> 00:15:30,774
find me there by Kevin Mujara how

226
00:15:30,812 --> 00:15:34,790
I said before, I'm content creator,

227
00:15:36,010 --> 00:15:40,282
we have a lot of courses but I'm speaking

228
00:15:40,416 --> 00:15:43,450
Portuguese but you can use the captions.

229
00:15:46,590 --> 00:15:52,030
We have courses like Ratchi

230
00:15:52,370 --> 00:15:57,214
state management and lot

231
00:15:57,252 --> 00:16:01,134
of more of content. Okay, so you can find me there.

232
00:16:01,332 --> 00:16:04,558
And remember I have this

233
00:16:04,644 --> 00:16:09,674
article on dev tube that I did

234
00:16:09,732 --> 00:16:13,460
diving in this concept, the same example,

235
00:16:14,390 --> 00:16:18,662
but I explain in more

236
00:16:18,796 --> 00:16:22,374
details. Okay, so here are my

237
00:16:22,412 --> 00:16:26,466
contacts, okay, my linkaging, my Instagram,

238
00:16:26,578 --> 00:16:29,770
my twitter, I don't call x,

239
00:16:29,920 --> 00:16:32,410
so I call twitter,

240
00:16:33,390 --> 00:16:36,810
my GitHub, my dev co where

241
00:16:36,880 --> 00:16:39,882
I post some articles there,

242
00:16:40,016 --> 00:16:43,742
my YouTube channel and the SKR quote that

243
00:16:43,876 --> 00:16:47,582
you be redirect to my

244
00:16:47,636 --> 00:16:51,710
link tree that will have all my social medias here.

245
00:16:51,780 --> 00:16:54,660
So you can scan this QR code, okay,

246
00:16:55,670 --> 00:16:59,106
and let's hands on on the

247
00:16:59,128 --> 00:17:02,738
code, let's write this same example,

248
00:17:02,904 --> 00:17:07,014
okay, so I

249
00:17:07,052 --> 00:17:10,822
will open my terminal, I will create

250
00:17:10,956 --> 00:17:17,990
this directory

251
00:17:18,350 --> 00:17:22,060
and I will open my vs code, okay,

252
00:17:22,750 --> 00:17:26,090
so I will change

253
00:17:26,160 --> 00:17:29,980
my tab here and that's it.

254
00:17:34,210 --> 00:17:38,174
Close something here and

255
00:17:38,292 --> 00:17:42,590
let's create our files. So my index HTML,

256
00:17:43,650 --> 00:17:46,938
the index JS

257
00:17:47,114 --> 00:17:50,370
and the style CSS.

258
00:17:51,190 --> 00:17:55,194
So the HTML we have this autocomplete

259
00:17:55,262 --> 00:18:00,162
here, HTML five. So let's

260
00:18:00,226 --> 00:18:05,080
create the title with web worker example

261
00:18:07,450 --> 00:18:11,698
and let's add our elements,

262
00:18:11,794 --> 00:18:15,500
bottom start large process

263
00:18:16,670 --> 00:18:21,550
and the second button change

264
00:18:21,700 --> 00:18:26,894
background color and

265
00:18:26,932 --> 00:18:30,510
the pretext with IG

266
00:18:31,810 --> 00:18:34,240
output. Okay,

267
00:18:35,010 --> 00:18:38,740
so I will

268
00:18:39,750 --> 00:18:44,478
accelerate my desktop

269
00:18:44,654 --> 00:18:48,870
and using the copy paste just

270
00:18:49,020 --> 00:18:53,862
to be quickly because

271
00:18:53,916 --> 00:18:57,382
it's not so important. Okay, so we have this

272
00:18:57,436 --> 00:19:01,370
import of our style here

273
00:19:01,520 --> 00:19:05,466
and the index js, okay so for

274
00:19:05,568 --> 00:19:09,178
our index js, let's create

275
00:19:09,344 --> 00:19:11,120
our function here.

276
00:19:12,610 --> 00:19:16,410
So this function handle large operation

277
00:19:16,570 --> 00:19:20,714
and with the value starting with zero and increment

278
00:19:20,842 --> 00:19:25,300
this value and return it. Okay so

279
00:19:29,910 --> 00:19:33,780
let's add the elements here.

280
00:19:35,130 --> 00:19:38,774
So let's get the elements by id.

281
00:19:38,892 --> 00:19:42,866
So the BTN large operation and BTN

282
00:19:42,898 --> 00:19:46,870
change color and the output and I forgot,

283
00:19:47,630 --> 00:19:52,058
sorry, I forgot to add the class

284
00:19:52,224 --> 00:19:55,754
and the id for these

285
00:19:55,872 --> 00:19:59,980
elements here. So let's add and

286
00:20:00,290 --> 00:20:03,182
let's add for the second button.

287
00:20:03,316 --> 00:20:07,280
Okay so

288
00:20:09,090 --> 00:20:14,578
just adding the style here.

289
00:20:14,744 --> 00:20:18,194
So we have this body style and

290
00:20:18,232 --> 00:20:21,870
I'm resetting the css and adding

291
00:20:21,950 --> 00:20:25,670
some styles for our button. Okay so

292
00:20:25,820 --> 00:20:29,190
in the index going back to

293
00:20:29,260 --> 00:20:33,174
our index js, let's add the event

294
00:20:33,292 --> 00:20:36,280
listener for the second button.

295
00:20:38,190 --> 00:20:41,994
So if the background color is white I will

296
00:20:42,032 --> 00:20:46,502
change to black to dark, or if it's

297
00:20:46,646 --> 00:20:49,866
white I will change, if it's dark I will

298
00:20:49,888 --> 00:20:54,240
change white and if it white I will change to

299
00:20:55,570 --> 00:21:00,640
dark. Let's add another

300
00:21:01,170 --> 00:21:05,074
event listener here that will start this is

301
00:21:05,112 --> 00:21:08,290
a spoiler. So let's remove

302
00:21:08,710 --> 00:21:12,500
and just print a const

303
00:21:13,750 --> 00:21:17,970
valuable and receive the handle large operation

304
00:21:18,130 --> 00:21:22,022
here and print on

305
00:21:22,076 --> 00:21:26,040
text content the value.

306
00:21:27,050 --> 00:21:30,474
Okay so that's it. Let's start our

307
00:21:30,512 --> 00:21:34,122
application, use the live

308
00:21:34,176 --> 00:21:37,690
server. So I will click here and start

309
00:21:37,760 --> 00:21:41,950
the server and it will open my

310
00:21:42,020 --> 00:21:44,986
application. So there's two buttons,

311
00:21:45,098 --> 00:21:48,958
okay so I can change the background color but

312
00:21:49,044 --> 00:21:52,410
if I click on start sludge process,

313
00:21:52,580 --> 00:21:56,014
you can see that I'm clicking in the change background

314
00:21:56,062 --> 00:22:00,290
color but I can't change

315
00:22:00,440 --> 00:22:04,402
until the process is

316
00:22:04,456 --> 00:22:07,846
finished. So now I can change the

317
00:22:07,868 --> 00:22:11,398
background but if I click again I can click

318
00:22:11,484 --> 00:22:13,160
on the background color.

319
00:22:14,650 --> 00:22:19,658
So let's refact our

320
00:22:19,744 --> 00:22:23,050
application. So I will create the worker

321
00:22:23,550 --> 00:22:27,050
file, I will

322
00:22:27,200 --> 00:22:30,640
get this function here

323
00:22:32,530 --> 00:22:36,750
and move to worker and

324
00:22:36,900 --> 00:22:40,990
we have the

325
00:22:41,060 --> 00:22:45,794
function that call all message that

326
00:22:45,832 --> 00:22:48,660
will receive an event.

327
00:22:52,100 --> 00:22:55,792
And if event data

328
00:22:55,926 --> 00:22:59,284
equals for example, I will

329
00:22:59,322 --> 00:23:03,590
give another name, for example large

330
00:23:06,520 --> 00:23:09,784
and I will get the value

331
00:23:09,982 --> 00:23:14,520
calling the handle large operation and

332
00:23:14,670 --> 00:23:18,296
post calling the function post message

333
00:23:18,478 --> 00:23:22,184
with the value easy busy.

334
00:23:22,232 --> 00:23:25,928
Okay, and we finish our workers

335
00:23:26,024 --> 00:23:31,304
and let's refact our index js.

336
00:23:31,432 --> 00:23:34,700
So now let's remove

337
00:23:35,620 --> 00:23:41,250
this function of here and

338
00:23:42,500 --> 00:23:46,480
let's instantiate worker.

339
00:23:48,120 --> 00:23:52,452
Let's instantiate our web

340
00:23:52,506 --> 00:23:56,660
worker. So let's call worker and pass

341
00:23:56,730 --> 00:24:00,630
the path of our file that is

342
00:24:01,800 --> 00:24:04,180
worker js.

343
00:24:05,560 --> 00:24:09,764
So we are going

344
00:24:09,882 --> 00:24:13,884
call the the post message

345
00:24:14,002 --> 00:24:18,430
function with the same name large

346
00:24:20,000 --> 00:24:23,992
and we are going to

347
00:24:24,066 --> 00:24:28,176
called the all message function that we

348
00:24:28,198 --> 00:24:34,050
will receive I event and

349
00:24:34,980 --> 00:24:39,284
just calling the output text

350
00:24:39,402 --> 00:24:43,510
content with the event data.

351
00:24:45,720 --> 00:24:49,008
So that's it. Okay, let's see

352
00:24:49,194 --> 00:24:53,064
if it's working. I can change

353
00:24:53,102 --> 00:24:56,760
the background color but if I start the large

354
00:24:56,830 --> 00:25:00,490
process we can interact with our page

355
00:25:01,520 --> 00:25:05,628
while our large process is

356
00:25:05,794 --> 00:25:09,500
being executed on the

357
00:25:09,570 --> 00:25:12,908
web worker and the main thread is free to

358
00:25:13,074 --> 00:25:15,616
the user interact with your page.

359
00:25:15,718 --> 00:25:19,520
Okay so guys that's it.

360
00:25:19,670 --> 00:25:22,912
This is our example and how we can

361
00:25:22,966 --> 00:25:26,380
use the webhook worker. It's simple

362
00:25:26,470 --> 00:25:30,260
applications but that's it. It's very simple

363
00:25:30,330 --> 00:25:34,484
to use this API so you

364
00:25:34,522 --> 00:25:39,148
can use for your applications

365
00:25:39,264 --> 00:25:44,170
and again this is one of solutions. Okay so

366
00:25:44,540 --> 00:25:49,480
guys, thank you so much and I say

367
00:25:49,550 --> 00:25:53,224
in every video that I created

368
00:25:53,352 --> 00:25:56,684
so stay well always. Okay?

369
00:25:56,802 --> 00:26:00,412
So thank you so much. I appreciate if

370
00:26:00,466 --> 00:26:04,652
you like it and if you like it give me some

371
00:26:04,786 --> 00:26:08,030
feedback in my social medias okay?

372
00:26:08,400 --> 00:26:10,840
Here in my linkaging, Instagram,

373
00:26:10,920 --> 00:26:14,956
Twitter however and I

374
00:26:14,978 --> 00:26:18,548
hope you like it. Okay can thank you so much and

375
00:26:18,634 --> 00:26:19,620
see you soon.

