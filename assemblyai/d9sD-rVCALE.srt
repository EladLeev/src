1
00:00:23,290 --> 00:00:27,042
Hello friends, welcome to comf. I'm Alex

2
00:00:27,186 --> 00:00:30,786
from Barbara, the edge computing company. And today I'm

3
00:00:30,818 --> 00:00:34,406
going to be speaking about mlops at the edge. I would like

4
00:00:34,428 --> 00:00:38,534
to start with a very direct and very blunt statement for

5
00:00:38,572 --> 00:00:43,174
us at Barbara. The cloud is broken and

6
00:00:43,292 --> 00:00:46,726
you might be using the cloud a lot, probably.

7
00:00:46,828 --> 00:00:50,750
You might be loving it, especially if you are building this great

8
00:00:50,820 --> 00:00:54,574
models online and you might be deploying them online. So you

9
00:00:54,612 --> 00:00:58,270
might asking, hey, how come that a

10
00:00:58,340 --> 00:01:02,106
two digit growing industry might be broken? So what's

11
00:01:02,138 --> 00:01:05,982
the problem with it? So why do you say that the cloud is broken?

12
00:01:06,046 --> 00:01:10,542
Well, I bring today eight different reasons

13
00:01:10,606 --> 00:01:14,110
why we think here at Barbara that the cloud is broken.

14
00:01:14,270 --> 00:01:18,038
The first one is that it's too dependent on

15
00:01:18,044 --> 00:01:21,494
the Internet. So if you're running a cloud service,

16
00:01:21,692 --> 00:01:24,822
you obviously running all the workload somewhere else,

17
00:01:24,876 --> 00:01:28,802
not in your own infrastructure, not in your pc,

18
00:01:28,866 --> 00:01:32,618
not in your servers, you're doing it somewhere else. So you are relying on a

19
00:01:32,624 --> 00:01:36,362
good connection to perform anything that you want to do right.

20
00:01:36,416 --> 00:01:40,290
So you depend too much on the availability of that connection

21
00:01:40,470 --> 00:01:43,070
and that might be a problem for some applications.

22
00:01:43,970 --> 00:01:47,520
Secondly, there's a latency problem here.

23
00:01:47,970 --> 00:01:51,918
It doesn't matter how good your connection is. There is a

24
00:01:51,924 --> 00:01:56,130
round trip time of your petitions that

25
00:01:56,280 --> 00:01:59,570
go to the cloud and come back. So it takes a little bit of time

26
00:01:59,720 --> 00:02:03,374
and that might be not good enough for certain applications,

27
00:02:03,422 --> 00:02:07,230
especially for real time applications. So that round trip of the

28
00:02:07,240 --> 00:02:10,486
time that it takes for any data, any petition, anything to

29
00:02:10,508 --> 00:02:13,766
go to the cloud and come back might not be fast enough. You might

30
00:02:13,788 --> 00:02:15,800
have latency problems.

31
00:02:16,250 --> 00:02:19,490
Then there is also a problem of service availability,

32
00:02:19,570 --> 00:02:22,460
and this is related to the first one that I spoke about,

33
00:02:22,830 --> 00:02:26,246
because you over rely on the Internet, then if there's

34
00:02:26,278 --> 00:02:29,866
a downtime on the service or if there's an interruption on the

35
00:02:29,888 --> 00:02:33,006
service, you're going to suffer. Your service is going to get interrupted as

36
00:02:33,028 --> 00:02:36,320
well because you are over relying on the cloud.

37
00:02:37,810 --> 00:02:42,254
Then number four, there is a loss of control here because

38
00:02:42,292 --> 00:02:46,354
you don't own the infrastructure, which is great for some applications because

39
00:02:46,392 --> 00:02:49,742
obviously it will take a lot of money and effort to maintain

40
00:02:49,806 --> 00:02:53,154
those. But sometimes you might want to

41
00:02:53,192 --> 00:02:57,026
do things here and there. You might need to troubleshoot,

42
00:02:57,058 --> 00:03:00,614
to debug, and there's some

43
00:03:00,652 --> 00:03:04,898
situations where you're going to want to have that control of the infrastructure,

44
00:03:04,994 --> 00:03:08,774
that control of the underlying technology. So it

45
00:03:08,812 --> 00:03:12,006
might be difficult for you to optimize or to customize

46
00:03:12,118 --> 00:03:15,734
some services because you're not the owner of the infrastructure.

47
00:03:15,782 --> 00:03:19,260
So there is a loss of control that you need to take care of,

48
00:03:20,370 --> 00:03:23,630
then there is a problem

49
00:03:23,700 --> 00:03:28,106
with cost. I mean, the cloud is some sort of a luxury

50
00:03:28,298 --> 00:03:31,550
many times, and also the cost

51
00:03:31,620 --> 00:03:35,860
is not easy to manage other times because they usually

52
00:03:36,390 --> 00:03:40,242
bill you based on the usage that you do. And usage is something that

53
00:03:40,296 --> 00:03:43,826
changes a lot depending on the needs of your application,

54
00:03:44,008 --> 00:03:47,654
that might be a problem. But also if you deal with an application that

55
00:03:47,692 --> 00:03:50,834
takes a lot of data, such as computer vision, for instance,

56
00:03:50,882 --> 00:03:54,646
which is a very data greedy sort

57
00:03:54,668 --> 00:03:58,274
of service, then you're going to run into trouble

58
00:03:58,322 --> 00:04:01,846
if you want to upload all your video feeds

59
00:04:01,878 --> 00:04:05,546
to the cloud in order to process them there. So here,

60
00:04:05,648 --> 00:04:08,874
especially in data intensive tasks, you have

61
00:04:08,992 --> 00:04:12,494
to take care of cloud costs because they can become

62
00:04:12,612 --> 00:04:16,094
a liability. Then on number six,

63
00:04:16,132 --> 00:04:19,534
we have vendor locking. And many of these

64
00:04:19,572 --> 00:04:23,106
cloud tools, they usually impose you,

65
00:04:23,128 --> 00:04:27,266
they usually force you to do

66
00:04:27,288 --> 00:04:31,234
things their way, right, because they are different across different

67
00:04:31,272 --> 00:04:34,574
vendors. There's not like a standard way of doing things. So chances

68
00:04:34,622 --> 00:04:38,454
are that you will have to adapt to the way of this or

69
00:04:38,492 --> 00:04:42,002
this other cloud. And then if you want to move vendors,

70
00:04:42,066 --> 00:04:45,286
if you want to change vendors, so say that you want to, I don't know,

71
00:04:45,388 --> 00:04:49,234
leave AWS and move on to Google or move on to azure,

72
00:04:49,362 --> 00:04:53,114
then chances are that you will have to reprogram to change many

73
00:04:53,152 --> 00:04:56,858
things in order to be able to use this new platform.

74
00:04:56,944 --> 00:04:59,718
Right? So this sense of vendor locking,

75
00:04:59,814 --> 00:05:03,470
which makes it a little bit difficult to change providers.

76
00:05:04,690 --> 00:05:07,806
Then on number seven, there's always the

77
00:05:07,828 --> 00:05:11,982
problem of Security and privacy. It doesn't matter how good

78
00:05:12,036 --> 00:05:15,566
your encryptions are, whether you use vpns,

79
00:05:15,598 --> 00:05:19,780
whether you use whatever means of hiding and

80
00:05:20,150 --> 00:05:23,842
controlling what happens with your data, you are

81
00:05:23,896 --> 00:05:26,998
in the end sending them through the Internet, through the public

82
00:05:27,084 --> 00:05:30,742
Internet. So security and privacy is

83
00:05:30,796 --> 00:05:34,806
something that you should take care of, right? And breaches happen

84
00:05:34,988 --> 00:05:38,562
from time to time. So yeah, if you want your data

85
00:05:38,636 --> 00:05:42,730
completely protected and secure, probably the cloud is not the best

86
00:05:42,880 --> 00:05:46,586
way to go. And then on number eight, which is

87
00:05:46,608 --> 00:05:50,846
also related with number seven, we have compliance many times.

88
00:05:51,028 --> 00:05:54,382
There are some customers, there's some applications that we

89
00:05:54,436 --> 00:05:57,726
need to keep in a

90
00:05:57,748 --> 00:06:01,102
specific geographical area, for example, or to manage

91
00:06:01,156 --> 00:06:04,522
in a very specific way. So whenever we're dealing with sensitive

92
00:06:04,586 --> 00:06:07,774
data, there is this compliance where there are laws

93
00:06:07,822 --> 00:06:10,834
basically that we have to follow to control where

94
00:06:10,872 --> 00:06:14,530
our data is. So we might not be able to use the cloud for

95
00:06:14,680 --> 00:06:17,910
this other application. Right. So here the cloud

96
00:06:17,980 --> 00:06:21,238
is also a little bit, it gives a little bit

97
00:06:21,244 --> 00:06:25,190
of trouble when it comes to managing where your data is stored.

98
00:06:26,330 --> 00:06:30,460
So all these are the problems that we think

99
00:06:30,830 --> 00:06:33,994
you are going to encounter with the cloud, or probably you are already

100
00:06:34,112 --> 00:06:37,466
encountering at the cloud. But what is

101
00:06:37,488 --> 00:06:40,974
the solution? And as you can imagine for us here

102
00:06:41,012 --> 00:06:45,290
at Barbara, the solution is the edge. So edge

103
00:06:45,370 --> 00:06:47,440
is the new cloud.

104
00:06:48,450 --> 00:06:52,250
If we quote what the guys at garner say,

105
00:06:52,420 --> 00:06:56,718
the ability to create results through AI and edge computing

106
00:06:56,894 --> 00:07:00,366
is the most significant value refactoring

107
00:07:00,478 --> 00:07:04,606
since cloud computing. And that's a high statement.

108
00:07:04,798 --> 00:07:08,534
But what is edge computing anyway? So what

109
00:07:08,572 --> 00:07:12,070
is all about this edge computing stuff? How is it different

110
00:07:12,220 --> 00:07:15,922
from the cloud? Well, the idea is that if we have our typical

111
00:07:15,986 --> 00:07:20,018
application where we have a device

112
00:07:20,114 --> 00:07:23,734
that we are doing things with that's connected to a rotor

113
00:07:23,782 --> 00:07:27,686
or an antenna, and that takes the connection to an Internet provider

114
00:07:27,718 --> 00:07:31,562
through the Internet and then to some cloud services. So say that we are operating

115
00:07:31,626 --> 00:07:35,134
in the cloud, chances are that

116
00:07:35,172 --> 00:07:39,166
we're going to run into one or many of these problems

117
00:07:39,348 --> 00:07:42,446
that we just quoted, right? So the idea with

118
00:07:42,468 --> 00:07:46,238
edge computing is that rather than doing things in the Internet,

119
00:07:46,414 --> 00:07:49,762
we tried to bring the computing power.

120
00:07:49,896 --> 00:07:53,218
We try to do things closer to the place

121
00:07:53,304 --> 00:07:56,614
where all the data is being generated. So we try to

122
00:07:56,652 --> 00:08:01,062
bring it forward, ideally the

123
00:08:01,116 --> 00:08:04,374
closest we can to the place where the data

124
00:08:04,412 --> 00:08:08,060
is being generated, the closest to the device possible,

125
00:08:08,990 --> 00:08:13,290
ideally to a local network. Right? So by computing

126
00:08:14,670 --> 00:08:19,050
our data, by putting all our workloads,

127
00:08:19,390 --> 00:08:23,230
all our machine learning algorithms, all our AI,

128
00:08:24,610 --> 00:08:27,806
in a place that's close to the data, we're going

129
00:08:27,828 --> 00:08:31,662
to be overcoming all the problems that we spoke about

130
00:08:31,716 --> 00:08:35,582
a while ago. This is what we call edge computing, and we call it edge

131
00:08:35,646 --> 00:08:38,866
because we think that we are computing at the

132
00:08:38,888 --> 00:08:43,394
edge of the cloud. So if we think of this cloud like

133
00:08:43,432 --> 00:08:47,302
a stain that covers a huge place,

134
00:08:47,436 --> 00:08:50,806
then we are computing it at the edge of that stain. So at

135
00:08:50,828 --> 00:08:53,240
the very border of the cloud.

136
00:08:55,210 --> 00:08:58,694
Okay, so that's edge computing. But what does

137
00:08:58,732 --> 00:09:02,726
it give to us? What's so good about edge

138
00:09:02,758 --> 00:09:06,406
computing? Well, here we have to speak about the edge computing drivers,

139
00:09:06,438 --> 00:09:09,754
and we have four main drivers here, the first being low

140
00:09:09,792 --> 00:09:13,406
latency. Remember that we spoke about latency before being a

141
00:09:13,428 --> 00:09:17,054
problem of the cloud? Well, edge computing doesn't have that problem because

142
00:09:17,092 --> 00:09:20,446
we're computing things very close to where the data is

143
00:09:20,468 --> 00:09:24,202
being generated and usually very close to where actions

144
00:09:24,266 --> 00:09:28,034
can be taken. So I don't know, we might be capturing data from

145
00:09:28,072 --> 00:09:31,966
a water management system. So if we need to open a valve

146
00:09:31,998 --> 00:09:35,870
or close a valve or do something in that system as a consequence

147
00:09:35,950 --> 00:09:40,214
of a piece of data that we have captured that says that there's a problem

148
00:09:40,332 --> 00:09:43,190
somewhere, then you could do that very,

149
00:09:43,260 --> 00:09:47,266
very quickly because you are computing very close to where the data

150
00:09:47,388 --> 00:09:50,858
originated. Right? So this is key

151
00:09:50,944 --> 00:09:54,886
for real time needs. Real time applications can benefit

152
00:09:54,918 --> 00:09:58,106
a lot from edge computing. The second driver of

153
00:09:58,128 --> 00:10:01,946
edge computing is lower bandwidth consumption.

154
00:10:01,978 --> 00:10:05,790
And here we can go back to the example that we said before,

155
00:10:05,940 --> 00:10:10,126
where we have this computer vision system that

156
00:10:10,148 --> 00:10:14,606
we need to process in real time. So bringing

157
00:10:14,638 --> 00:10:18,274
all the camera feeds online onto the cloud

158
00:10:18,472 --> 00:10:23,074
is going to be very costly because

159
00:10:23,112 --> 00:10:26,454
it's going to take a lot of bandwidth. And you know that these cloud services

160
00:10:26,572 --> 00:10:31,842
are going to be invoicing us for all that usage

161
00:10:31,906 --> 00:10:35,126
of bandwidth. So if we do this in the

162
00:10:35,148 --> 00:10:38,602
edge, we're reducing dramatically the amount of data

163
00:10:38,736 --> 00:10:42,970
that we need to send to the cloud, right? So this will lower our cloud

164
00:10:43,040 --> 00:10:46,726
costs dramatically as well. So lower bandwidth

165
00:10:46,758 --> 00:10:50,022
consumption. With edge computing, the third

166
00:10:50,096 --> 00:10:52,640
driver is privacy and security.

167
00:10:53,410 --> 00:10:57,162
Because our data doesn't live our premises,

168
00:10:57,306 --> 00:11:00,526
it's in devices that are very close to where the data has

169
00:11:00,548 --> 00:11:04,490
been generated. So ideally in our locations,

170
00:11:04,570 --> 00:11:07,726
in our offices, or in our manufacturing sites,

171
00:11:07,758 --> 00:11:11,346
or depending on the industry, we can call them different ways, but they

172
00:11:11,368 --> 00:11:15,070
are just locally to us. Then it's very easy for us

173
00:11:15,080 --> 00:11:19,186
to protect that data. If it doesn't leave the factory, then it's

174
00:11:19,218 --> 00:11:23,400
very difficult to get hacked. And then

175
00:11:24,490 --> 00:11:28,150
we have boost on autonomy and a boost on availability,

176
00:11:28,650 --> 00:11:31,658
because these systems, any edge computing system,

177
00:11:31,744 --> 00:11:35,882
is going to continue operating no matter

178
00:11:36,016 --> 00:11:40,322
if there's been a problem with the Internet connection,

179
00:11:40,486 --> 00:11:43,402
no matter if the service in the cloud is broken,

180
00:11:43,466 --> 00:11:47,562
it's unavailable. They have this autonomous system operation

181
00:11:47,706 --> 00:11:51,680
fashion to them, which is very nice for

182
00:11:52,550 --> 00:11:57,054
critical infrastructure or for critical industries that can't stop operating

183
00:11:57,182 --> 00:12:00,314
no matter what. So if we think of, I don't know,

184
00:12:00,372 --> 00:12:04,286
as Margaret or water management, then it's

185
00:12:04,318 --> 00:12:07,526
very nice that if they lose connection to the cloud, they continue

186
00:12:07,628 --> 00:12:11,538
operating because these are high reliability

187
00:12:11,634 --> 00:12:14,774
sites. All right?

188
00:12:14,892 --> 00:12:19,066
But there are different types of edge. And if we look at

189
00:12:19,168 --> 00:12:22,534
the diagram here by Gartner, they usually depict

190
00:12:22,582 --> 00:12:26,522
this in five layers. So we have five different types of

191
00:12:26,576 --> 00:12:30,534
edge. At the top of the pyramid

192
00:12:30,582 --> 00:12:34,446
here, we have the cloud sort of services, and at the bottom we

193
00:12:34,468 --> 00:12:38,586
have the people and the things, right? So the site. And then depending

194
00:12:38,618 --> 00:12:41,918
on where we place our workloads, we will be speaking about

195
00:12:42,004 --> 00:12:46,050
regional dc. So the cloud is like these huge data

196
00:12:46,120 --> 00:12:49,218
centers that are usually in the big cities. I don't

197
00:12:49,224 --> 00:12:51,822
know, here in Europe, you might find them in London,

198
00:12:51,886 --> 00:12:55,834
Paris, in Frankfurt, or maybe Madrid.

199
00:12:55,982 --> 00:12:59,126
So the idea is that we move from those

200
00:12:59,228 --> 00:13:02,578
huge data centers to smaller data centers

201
00:13:02,674 --> 00:13:06,280
that we call regional data centers. We could move a little bit

202
00:13:06,730 --> 00:13:10,026
down to local data centers. So the idea is that you're going to be

203
00:13:10,048 --> 00:13:13,866
computing your workloads, your ML models or

204
00:13:13,888 --> 00:13:17,498
whatever, you're computing very close to your infrastructure, but you're

205
00:13:17,504 --> 00:13:21,530
going to be doing in someone else's rented infrastructure in a DC,

206
00:13:22,110 --> 00:13:25,626
if you go down, then you start to bring the computing

207
00:13:25,658 --> 00:13:28,846
power in house. And here we arrive at the

208
00:13:28,868 --> 00:13:32,586
compute edge. So the idea here is that we have an edge server,

209
00:13:32,698 --> 00:13:36,242
usually locally, not in a data center where you compute things,

210
00:13:36,296 --> 00:13:39,554
right? So we have compute edge, usually big

211
00:13:39,592 --> 00:13:43,518
servers. You have gateway edge, which is usually small machines,

212
00:13:43,694 --> 00:13:47,074
more portable sort of machines, and you have device edge,

213
00:13:47,122 --> 00:13:50,546
which is workloads that are being executed

214
00:13:50,658 --> 00:13:54,754
usually in embedded systems. So very, very small systems

215
00:13:54,802 --> 00:13:58,630
such as plcs, wearables, small devices.

216
00:13:59,210 --> 00:14:02,378
The idea is as you go down, you're going to

217
00:14:02,384 --> 00:14:05,962
get less latency, which is good. If you're looking for a real time

218
00:14:06,016 --> 00:14:09,206
system, you're going to be more scalable and you're going to be more secure.

219
00:14:09,318 --> 00:14:12,510
Right? So this is in line with what we just spoke about,

220
00:14:12,580 --> 00:14:16,270
about the drivers, the four big drivers of edge computing.

221
00:14:17,570 --> 00:14:21,054
Now, which of these edges is

222
00:14:21,092 --> 00:14:24,458
going to be the one that's going to have more business? Well, the deal here

223
00:14:24,484 --> 00:14:27,620
is, according to Gardner, that the lower you go,

224
00:14:27,990 --> 00:14:31,618
the better it's going to be in terms of business, which makes a

225
00:14:31,624 --> 00:14:35,346
lot of sense because original DC is something very

226
00:14:35,448 --> 00:14:39,014
close to the cloud, or local dc is something very

227
00:14:39,052 --> 00:14:42,710
similar to the cloud. Right. So if you want to really get

228
00:14:42,780 --> 00:14:46,754
to enjoy all the good things about edge computing,

229
00:14:46,882 --> 00:14:50,262
then the further you are from the cloud, the more

230
00:14:50,316 --> 00:14:53,754
edge computing you're going to be doing. Then for

231
00:14:53,792 --> 00:14:57,018
those applications that really make sense in the edge, it's going

232
00:14:57,024 --> 00:15:00,766
to be better. So here we can see that gateway edge and device edge are

233
00:15:00,788 --> 00:15:04,542
probably the two that are going to make it in terms of being more

234
00:15:04,596 --> 00:15:06,240
used by companies.

235
00:15:08,210 --> 00:15:11,882
If we look to this impact, rather by garner,

236
00:15:11,946 --> 00:15:15,090
again, we can see that edge computing is usually

237
00:15:15,240 --> 00:15:18,974
at the center, and we can visit many of these diagrams

238
00:15:19,102 --> 00:15:23,202
and we'll see edge in one of other fashion, appearing always very,

239
00:15:23,256 --> 00:15:27,202
very centralized. Here you have edge computing vision

240
00:15:27,346 --> 00:15:30,694
just at the center of the radar, but you also have edge AI very

241
00:15:30,732 --> 00:15:34,086
close to it down there, edge AI, which is also an up and

242
00:15:34,108 --> 00:15:35,590
coming discipline.

243
00:15:37,610 --> 00:15:40,278
Okay, so this is our index today.

244
00:15:40,444 --> 00:15:43,994
We've gone already through the two first points. So what

245
00:15:44,032 --> 00:15:47,062
are the challenges of cloud computing and why the edge

246
00:15:47,126 --> 00:15:51,002
is, for us, the solution now we're going to jump on to point number three,

247
00:15:51,056 --> 00:15:54,842
edge computing plus AI. And the idea is that we invite

248
00:15:54,986 --> 00:15:58,254
this new friend AI into the mix and see

249
00:15:58,292 --> 00:16:01,726
what happens, because edge computing is a very powerful technology,

250
00:16:01,908 --> 00:16:04,994
but when it couples with AI, then it just

251
00:16:05,032 --> 00:16:08,302
becomes a massive commoditization,

252
00:16:08,366 --> 00:16:11,458
a massive team. I'm going to

253
00:16:11,464 --> 00:16:14,690
see how we could do that. And for this,

254
00:16:14,760 --> 00:16:17,490
I've brought a couple of examples,

255
00:16:17,930 --> 00:16:21,782
real examples of projects that we've done with real companies

256
00:16:21,916 --> 00:16:25,126
here in Spain. And the first case is Akfiona. This is

257
00:16:25,148 --> 00:16:28,314
a company that they do many, many things. In this case, we worked

258
00:16:28,352 --> 00:16:31,514
with the water management side of the company,

259
00:16:31,632 --> 00:16:36,358
and they usually manage many water treatment plants globally.

260
00:16:36,534 --> 00:16:39,910
And they usually spend a lot of

261
00:16:40,000 --> 00:16:44,206
money in chemicals because they

262
00:16:44,228 --> 00:16:48,734
have to ensure that the quality of the water is

263
00:16:48,772 --> 00:16:52,346
the best to be distributed. But when you put chemicals

264
00:16:52,378 --> 00:16:55,906
on the water to treat that water, usually you have

265
00:16:55,928 --> 00:16:59,314
to wait for some time, because there's some dynamics there. It takes some

266
00:16:59,352 --> 00:17:03,506
time for the water to stabilize. So it

267
00:17:03,528 --> 00:17:07,554
is always a matter of trial and error. So you would just put

268
00:17:07,592 --> 00:17:11,062
some chemicals on the water, wait for a while, analyze it,

269
00:17:11,116 --> 00:17:14,662
then put some other chemicals on the water, wait for some time, analyze it,

270
00:17:14,716 --> 00:17:18,834
and there's this up and down sort of approaching the ideal

271
00:17:18,882 --> 00:17:22,714
level. That takes a lot of time and

272
00:17:22,752 --> 00:17:26,586
also takes a lot of money because you might be using more chemicals than you

273
00:17:26,608 --> 00:17:30,394
should. So what they did is they come up with a predictive

274
00:17:30,442 --> 00:17:33,758
system where they would, with machine learning,

275
00:17:33,844 --> 00:17:37,950
predict the amount of chemicals that they would need from the start,

276
00:17:38,020 --> 00:17:42,138
right? So they would avoid this going forwards and backs

277
00:17:42,314 --> 00:17:46,094
with adding more chemicals and retesting. Right. And for that,

278
00:17:46,132 --> 00:17:49,442
they created a model that they trained with all the data

279
00:17:49,496 --> 00:17:52,834
that they had of past interactions, and they

280
00:17:52,872 --> 00:17:56,374
wanted to deploy it in the edge. Why does it make sense

281
00:17:56,412 --> 00:17:59,878
to deploy this in the edge? Well, because they have many

282
00:18:00,044 --> 00:18:04,210
water treatment plants globally. Each plant

283
00:18:04,370 --> 00:18:07,400
depends or belongs to a different company.

284
00:18:08,730 --> 00:18:12,102
They're very wary of data, so they want their data to be

285
00:18:12,236 --> 00:18:15,986
kept in the plant. So we have this privacy driver

286
00:18:16,018 --> 00:18:19,902
here. But also, usually these algorithms are fine

287
00:18:19,996 --> 00:18:23,438
tuned for each plant, right? So we have like this general

288
00:18:23,524 --> 00:18:27,774
model that gets fine tuned down to the level

289
00:18:27,812 --> 00:18:30,746
of the sensor, right. And in one plant,

290
00:18:30,778 --> 00:18:33,860
they might have several sensors, 12, 20,

291
00:18:34,470 --> 00:18:37,826
30 sensors. We have to train a model for each

292
00:18:37,928 --> 00:18:40,260
sensor. And you know that with time,

293
00:18:40,630 --> 00:18:44,146
those models come somehow decoupled from the

294
00:18:44,168 --> 00:18:47,974
sensors. So somehow, because we are using

295
00:18:48,012 --> 00:18:51,746
the model to predict things, we are somehow changing

296
00:18:51,778 --> 00:18:55,506
the environment. And then the sensors might not be as coupled

297
00:18:55,538 --> 00:18:59,170
to the environment. So we have to retrain the algorithm.

298
00:18:59,250 --> 00:19:02,918
Also the sensors, they sort of change with time,

299
00:19:03,004 --> 00:19:06,130
so they change their capacities,

300
00:19:06,210 --> 00:19:08,070
they change their accuracies,

301
00:19:09,370 --> 00:19:12,606
they get out of sync. So we have to

302
00:19:12,628 --> 00:19:15,930
retrain the models to make sure that they are relevant

303
00:19:16,090 --> 00:19:18,430
at that moment in time with that sensor.

304
00:19:19,170 --> 00:19:22,942
Obviously you could do all this in the cloud, but probably it wouldn't make sense

305
00:19:22,996 --> 00:19:26,558
because you would be training many different models for specific devices

306
00:19:26,654 --> 00:19:30,274
down there in the cloud. It kind of makes more

307
00:19:30,312 --> 00:19:34,178
sense to have an edge device in the plant and

308
00:19:34,264 --> 00:19:37,286
train all those models locally. It's going to

309
00:19:37,308 --> 00:19:40,390
give you a faster throughput and also it's going to be

310
00:19:40,460 --> 00:19:44,040
more careful in terms of data. Right. So here

311
00:19:45,930 --> 00:19:49,878
we also have some of the other drivers that we spoke about that

312
00:19:50,044 --> 00:19:52,646
probably make the cloud not the best choice.

313
00:19:52,838 --> 00:19:56,282
So this is one of the cases that I bring you, but we have another

314
00:19:56,336 --> 00:20:00,534
one based on energy. And energy is especially these self consumption

315
00:20:00,582 --> 00:20:03,370
markets that are emerging everywhere,

316
00:20:03,530 --> 00:20:07,562
but also smart grids, which is more of a medium

317
00:20:07,626 --> 00:20:11,262
term bet, but it's something that is going to arrive as well.

318
00:20:11,396 --> 00:20:14,786
So in energy we have loads of edge computing applications, because if

319
00:20:14,808 --> 00:20:18,766
you think of it, smart grids are usually highly distributed

320
00:20:18,798 --> 00:20:22,158
infrastructure, the critical infrastructure.

321
00:20:22,254 --> 00:20:25,470
So data and private and security is very important.

322
00:20:25,560 --> 00:20:29,602
But also autonomy. You need all those transformation centers

323
00:20:29,666 --> 00:20:34,242
or substations, you need them to work independently.

324
00:20:34,386 --> 00:20:37,834
But also it would be very nice if you could manage for them to talk

325
00:20:37,872 --> 00:20:41,130
to each other and somehow negotiate.

326
00:20:43,870 --> 00:20:48,262
Where should they route the energy through so they ensure

327
00:20:48,406 --> 00:20:52,326
the best usage of energy, right? So we avoid throwing

328
00:20:52,358 --> 00:20:56,330
away energy on one side of the network while we are producing

329
00:20:56,490 --> 00:21:00,014
more energy that we need on the other side of the network, right? Just because

330
00:21:00,052 --> 00:21:03,586
we haven't rooted it good enough.

331
00:21:03,688 --> 00:21:07,634
So if we could get all these nodes to speak to each other

332
00:21:07,752 --> 00:21:11,890
and find the best way

333
00:21:11,960 --> 00:21:15,854
to balance the network, that'd be great

334
00:21:15,912 --> 00:21:19,590
from a smart grid perspective. But the case that I bring you today is

335
00:21:19,660 --> 00:21:23,480
a case for EDP. And EDP wanted to work,

336
00:21:24,170 --> 00:21:28,182
they usually work in this auto consumption space,

337
00:21:28,316 --> 00:21:31,594
and they wanted to give their

338
00:21:31,632 --> 00:21:34,858
customers at home a system that would allow them

339
00:21:34,944 --> 00:21:38,346
to make an intelligent use of the energy. So they

340
00:21:38,368 --> 00:21:40,460
will have these solar panels on top,

341
00:21:41,490 --> 00:21:45,646
they will have these batteries to

342
00:21:45,668 --> 00:21:48,190
get all the energy from the inverters.

343
00:21:48,930 --> 00:21:52,894
They will also have probably charger for

344
00:21:52,932 --> 00:21:56,306
their electric car, and they will also be connected to the

345
00:21:56,328 --> 00:21:59,458
grid. So the idea will be here to make an intelligent use of the

346
00:21:59,464 --> 00:22:03,554
energy. So wherever we have available energy, that's green

347
00:22:03,592 --> 00:22:07,462
energy, we should use that. But we should also maybe take care

348
00:22:07,516 --> 00:22:11,430
of when we charge our car or

349
00:22:11,580 --> 00:22:15,286
when we use our dishwasher or whatever. So the idea is that you

350
00:22:15,308 --> 00:22:19,254
make an intelligent use of all the energy, so you maximize

351
00:22:19,302 --> 00:22:23,100
the amount of renewable energy that you use at home.

352
00:22:23,630 --> 00:22:27,402
So this is a project, again, that makes sense in the edge, because we're speaking

353
00:22:27,456 --> 00:22:31,266
of many households. So you can imagine

354
00:22:31,398 --> 00:22:35,258
if you had to do in the cloud the computations for the models

355
00:22:35,274 --> 00:22:38,398
of each home, that'd be a mess.

356
00:22:38,564 --> 00:22:42,314
Also, we have here the problem of data and privacy.

357
00:22:42,442 --> 00:22:45,586
So it really makes sense to do it in the edge. So we created a

358
00:22:45,608 --> 00:22:49,154
system based on Barbara where they could do all

359
00:22:49,192 --> 00:22:52,834
this distribution of energy, intelligent distribution of energy

360
00:22:52,952 --> 00:22:57,254
internally in each home, using an

361
00:22:57,292 --> 00:23:01,126
ML algorithm to ensure the

362
00:23:01,148 --> 00:23:05,046
best usage of energy. The nice thing about this application is that it

363
00:23:05,068 --> 00:23:08,634
can also be taken one level up. So what if all the

364
00:23:08,672 --> 00:23:12,666
homes could speak to each other and somehow get

365
00:23:12,688 --> 00:23:16,106
in touch and exchange all the energy that they

366
00:23:16,128 --> 00:23:20,182
don't need anymore? Or probably take turns to charge

367
00:23:20,246 --> 00:23:22,998
their cars, their electric cars.

368
00:23:23,094 --> 00:23:27,214
So, I don't know. One charges from 10:00 p.m. To 11:00 p.m.

369
00:23:27,252 --> 00:23:30,398
Then the next home charges from 11:00 p.m. To 12:00 p.m. And so on and

370
00:23:30,404 --> 00:23:33,614
so forth. So we would avoid the peak in consumption,

371
00:23:33,662 --> 00:23:36,526
and we'll have more of a distributed,

372
00:23:36,718 --> 00:23:39,954
flat usage of energy in

373
00:23:39,992 --> 00:23:43,330
a community, what we could call an energy community.

374
00:23:43,480 --> 00:23:46,994
So we can see many applications of edge computing

375
00:23:47,042 --> 00:23:50,790
in this space. This is one example, but you could see

376
00:23:50,860 --> 00:23:54,006
how it makes sense to run all those algorithms in the

377
00:23:54,028 --> 00:23:57,606
edge. Now, all these, the two

378
00:23:57,628 --> 00:24:01,274
examples I spoke about, they were very industrial, and that's because we,

379
00:24:01,312 --> 00:24:04,598
at Barbara, we work in industrial edge computing.

380
00:24:04,694 --> 00:24:08,074
But I want to come back to a sort of

381
00:24:08,112 --> 00:24:11,866
broad example that everyone knows, a more consumer example.

382
00:24:11,968 --> 00:24:15,486
I want to speak about Alexa, the smart speaker that many of us have at

383
00:24:15,508 --> 00:24:18,686
home. And the idea with Alexa is that there

384
00:24:18,708 --> 00:24:22,106
is some edge computing in play, but there's also some cloud computing

385
00:24:22,138 --> 00:24:25,250
in play. And I think this is a good example on how

386
00:24:25,320 --> 00:24:29,246
we will see edge computing complement cloud computing.

387
00:24:29,358 --> 00:24:33,550
So with Alexa, we have this flow here. We have a user.

388
00:24:33,710 --> 00:24:37,078
We have the device that's connected to our network, usually through the

389
00:24:37,084 --> 00:24:40,806
router. Then it goes to the Internet provider. And there are some services that are

390
00:24:40,828 --> 00:24:45,110
usually cloud services. So whenever the user speaks,

391
00:24:45,690 --> 00:24:50,166
Alexa takes the audio and digitalizes

392
00:24:50,198 --> 00:24:54,058
it. Right? And here they use what they call a

393
00:24:54,064 --> 00:24:57,514
keyword spotting algorithm, which is a small algorithm that

394
00:24:57,552 --> 00:25:01,374
runs locally in the Alexa device that

395
00:25:01,412 --> 00:25:04,894
is always looking for the keyword, in this

396
00:25:04,932 --> 00:25:08,350
case, Alexa. Right. So whenever it spots it,

397
00:25:08,420 --> 00:25:12,522
then it connects to the audio that's being spoken,

398
00:25:12,666 --> 00:25:15,890
so it could digitalize it and send the petition to the cloud.

399
00:25:15,960 --> 00:25:19,138
So here we have an ML algorithm running

400
00:25:19,224 --> 00:25:22,878
locally. So we could somehow speak of edge computing

401
00:25:22,974 --> 00:25:26,162
because we are running this algorithm in the edge,

402
00:25:26,226 --> 00:25:29,654
right. Then that audio that's captured is

403
00:25:29,692 --> 00:25:33,330
usually streamed towards the Internet, and that's

404
00:25:33,410 --> 00:25:37,330
going to fly over the Internet. It's going to travel through the Internet,

405
00:25:37,490 --> 00:25:41,682
and it's going to arrive at Amazon's server in the cloud.

406
00:25:41,836 --> 00:25:45,146
And the first thing that's going to happen is the audio is going to be

407
00:25:45,168 --> 00:25:48,534
converted into text, and that's going to be done through a voice

408
00:25:48,582 --> 00:25:52,498
to text algorithm. So here we have an ML

409
00:25:52,534 --> 00:25:56,238
algorithm that's working in the cloud. Then that petition is going

410
00:25:56,244 --> 00:25:59,354
to get analyzed and a response is going to be prepared.

411
00:25:59,402 --> 00:26:02,926
And usually here there might be other ais that

412
00:26:02,948 --> 00:26:06,626
come into play. Again, these ais are going to be executed in the

413
00:26:06,648 --> 00:26:10,206
cloud, right? So we saw how we started with an edge

414
00:26:10,238 --> 00:26:14,066
computing algorithm, and then that was somehow sent to the

415
00:26:14,088 --> 00:26:17,574
cloud for several cloud computing algorithms to come into

416
00:26:17,612 --> 00:26:20,818
play. Next steps would be preparing

417
00:26:20,834 --> 00:26:24,502
the response. Usually it's either a text

418
00:26:24,556 --> 00:26:27,826
or an action. If it's a text, it's going to get converted into audio,

419
00:26:27,858 --> 00:26:31,686
it's going to get streamed, backed through the Internet to the

420
00:26:31,708 --> 00:26:35,334
device, and the audio is going to be converted in analog

421
00:26:35,382 --> 00:26:38,714
sound, and it's going to be played back to the user. So the user gets

422
00:26:38,832 --> 00:26:42,042
the answer. Summarizing what has just

423
00:26:42,096 --> 00:26:45,706
happened is we've had a little bit of edge computing

424
00:26:45,898 --> 00:26:49,146
with this keyword spotting ML algorithm, and then we've

425
00:26:49,178 --> 00:26:53,006
had a lot of cloud computing with this voice and text conversion with

426
00:26:53,028 --> 00:26:56,500
these other ais that come into play. So because

427
00:26:56,870 --> 00:27:00,066
most of the computation is done in the cloud, we tend to think

428
00:27:00,088 --> 00:27:04,002
that Alexa is a cloud computing solution. But truth is

429
00:27:04,056 --> 00:27:08,086
that there's a little bit of machine learning also going on locally in

430
00:27:08,108 --> 00:27:16,006
the edge, right? So this is really

431
00:27:16,188 --> 00:27:19,802
truthful. This is the combination of edge plus

432
00:27:19,856 --> 00:27:23,338
cloud computing, right? And here I want to speak about

433
00:27:23,424 --> 00:27:27,418
this edge to cloud continuum, which for us is key,

434
00:27:27,504 --> 00:27:30,958
right? There's not a single application.

435
00:27:31,124 --> 00:27:34,986
Probably there are, but there are many applications

436
00:27:35,098 --> 00:27:38,398
that make sense at some point between the cloud

437
00:27:38,484 --> 00:27:41,226
and the edge. So we don't think that there's,

438
00:27:41,258 --> 00:27:44,158
like cloud, all cloud applications,

439
00:27:44,254 --> 00:27:47,422
or probably there's not all edge applications.

440
00:27:47,566 --> 00:27:52,078
Many applications, they need to distribute their workloads

441
00:27:52,174 --> 00:27:56,194
in this edge to cloud continuum. And we

442
00:27:56,232 --> 00:27:59,938
think that one of the most important things that you have to do when you're

443
00:27:59,954 --> 00:28:03,846
designing a system is trying to find in

444
00:28:03,868 --> 00:28:07,698
which place you're going to put these or that computation,

445
00:28:07,794 --> 00:28:11,462
right? So if you need low latency, if you need to protect

446
00:28:11,516 --> 00:28:15,162
your data, if you need to be autonomous, then probably you should put things

447
00:28:15,216 --> 00:28:19,226
on the edge. But that will probably be complemented with other things in

448
00:28:19,248 --> 00:28:22,638
the cloud that will give you some centralized point of view,

449
00:28:22,724 --> 00:28:25,962
that will give you some additional power of computation.

450
00:28:26,106 --> 00:28:30,122
So the idea is to work with this continuum and be intelligent

451
00:28:30,186 --> 00:28:33,970
about where you put your usually microservices.

452
00:28:37,590 --> 00:28:40,882
And here I have to take my words back just a little bit.

453
00:28:41,016 --> 00:28:44,834
So maybe the cloud is not broken. Maybe it

454
00:28:44,872 --> 00:28:47,938
just needs some friends. So maybe it just feels

455
00:28:48,034 --> 00:28:51,702
a little bit lonely. And edge computing is one of those friends

456
00:28:51,756 --> 00:28:55,670
that comes to the rescue. Probably the other big friend is

457
00:28:55,740 --> 00:28:59,578
AI. Right? So if we combine these three guys,

458
00:28:59,744 --> 00:29:02,630
edge plus cloud plus AI,

459
00:29:02,790 --> 00:29:06,826
we have a very powerful team that's capable of almost

460
00:29:06,928 --> 00:29:09,260
anything. Almost anything.

461
00:29:14,610 --> 00:29:18,240
All right, so we've just seen how

462
00:29:18,610 --> 00:29:22,634
we should be deploying many models in different places from the edge

463
00:29:22,682 --> 00:29:26,414
to the cloud. How do we manage this complexity? I mean, if we have

464
00:29:26,452 --> 00:29:30,226
an application that's been deployed at several points, maybe we have

465
00:29:30,248 --> 00:29:33,618
a microservice running in the edge, maybe we have another microservice running in the cloud.

466
00:29:33,704 --> 00:29:37,554
Maybe we have a microservice running somewhere in between in a local data center,

467
00:29:37,672 --> 00:29:41,074
or maybe we have an embedded part and then we have a gateway

468
00:29:41,122 --> 00:29:44,258
part. So how do we manage this complexity?

469
00:29:44,434 --> 00:29:47,946
Well, mlops comes to the rescue, as you

470
00:29:47,968 --> 00:29:51,450
have imagined. It's all about mlops.

471
00:29:52,030 --> 00:29:55,462
You know what mlops mean? It's about maintaining

472
00:29:55,526 --> 00:29:59,066
machine learning models in production so you could

473
00:29:59,088 --> 00:30:03,040
trust them and you can make sure that they're always there and doing their job.

474
00:30:03,810 --> 00:30:07,198
But the idea here is that we should be able to

475
00:30:07,284 --> 00:30:11,054
not only put them in production, but also monitor them and

476
00:30:11,092 --> 00:30:15,502
also keep collecting data and also retrain

477
00:30:15,566 --> 00:30:18,514
them and also redeploy them.

478
00:30:18,712 --> 00:30:22,290
And obviously that becomes a little bit messy when you're dealing with,

479
00:30:22,360 --> 00:30:25,950
I don't know, a deployment of 1000 devices

480
00:30:26,030 --> 00:30:29,286
in the field. You might be used to do this in

481
00:30:29,308 --> 00:30:32,882
the cloud with a single model or maybe with 1020 models,

482
00:30:32,946 --> 00:30:35,560
but models that are centralized in the cloud,

483
00:30:35,930 --> 00:30:40,006
you can imagine how messy that can come when

484
00:30:40,108 --> 00:30:44,006
you move to the edge and you have 1000 devices,

485
00:30:44,198 --> 00:30:47,622
different devices in different locations, some of them are very remote,

486
00:30:47,686 --> 00:30:52,046
so very difficult to reach. Well, that can become really

487
00:30:52,148 --> 00:30:55,514
a problem. And it's actually a problem. I mean, if you think of the challenges

488
00:30:55,562 --> 00:30:58,910
of mlops, according to AI Infrastructure alliance,

489
00:31:00,130 --> 00:31:03,726
one of the biggest challenges that we have when we want to deploy

490
00:31:03,758 --> 00:31:07,586
models in the edge is that usually more

491
00:31:07,688 --> 00:31:11,602
companies than not take from

492
00:31:11,656 --> 00:31:15,502
two months to a year to put their models in production.

493
00:31:15,566 --> 00:31:19,010
So from the moment that they have everything validated,

494
00:31:19,090 --> 00:31:22,086
so they have the model, the model works and they just want to put them

495
00:31:22,108 --> 00:31:25,782
in production. It takes up to a year,

496
00:31:25,916 --> 00:31:29,862
between two months and a year for them to just deploy

497
00:31:29,926 --> 00:31:33,910
them. Right. And that's especially due to the complexity

498
00:31:34,070 --> 00:31:37,386
of deploying models. Then one

499
00:31:37,408 --> 00:31:41,354
of the biggest mlops challenges is usually deploying and

500
00:31:41,392 --> 00:31:45,390
also monitoring. Right. If we're going to do this in the edge,

501
00:31:46,850 --> 00:31:50,526
well, we need a platform in the

502
00:31:50,548 --> 00:31:53,726
same way that if we are doing cloud computing, we tend

503
00:31:53,758 --> 00:31:57,710
to use a commercial platform. So we either go to AwS

504
00:31:57,790 --> 00:32:01,138
or we go to Azure or to Google or to

505
00:32:01,224 --> 00:32:04,626
whichever provider we like, we need

506
00:32:04,648 --> 00:32:07,590
a platform to do that also with edge computing.

507
00:32:08,010 --> 00:32:11,174
So that takes us to point number four,

508
00:32:11,292 --> 00:32:13,430
architecture and frameworks.

509
00:32:14,410 --> 00:32:17,990
So here we have different providers,

510
00:32:18,590 --> 00:32:22,090
starting with traditional providers such as AWS.

511
00:32:22,430 --> 00:32:25,626
AWS provides you with basically anything that you would

512
00:32:25,648 --> 00:32:29,270
need. They are famous for not deprecating

513
00:32:29,350 --> 00:32:33,150
any service, so they have many services running

514
00:32:33,300 --> 00:32:36,526
and the stack is just huge. So if you wanted to do

515
00:32:36,548 --> 00:32:40,046
edge computing with aws, chances are that you would be able to

516
00:32:40,068 --> 00:32:43,680
do it. We also have Azure, which is

517
00:32:44,290 --> 00:32:48,030
probably the other big contender in terms of traditional

518
00:32:48,110 --> 00:32:51,842
cloud platforms that go down to the edge. Again, there's a huge

519
00:32:51,896 --> 00:32:55,434
stack of products here, so if you wanted to use Azor,

520
00:32:55,582 --> 00:32:59,014
there's very high possibilities that you would end up being able

521
00:32:59,052 --> 00:33:01,430
to do whatever you want in the edge.

522
00:33:02,010 --> 00:33:05,362
However, there are some traditional players,

523
00:33:05,426 --> 00:33:09,286
such as Google, that are shutting

524
00:33:09,318 --> 00:33:12,934
down their IoT edge computing offering.

525
00:33:12,982 --> 00:33:16,954
Right? So there's a little bit of confusion in the market where we have

526
00:33:16,992 --> 00:33:21,126
some big players that are betting on IoT and edge computing

527
00:33:21,158 --> 00:33:24,934
and some others don't. Right. And this is a recent

528
00:33:24,982 --> 00:33:27,840
news that they will be discontinuing that this year.

529
00:33:28,610 --> 00:33:31,770
We also have IBM who have also retired

530
00:33:31,850 --> 00:33:34,994
their IoT cloud services.

531
00:33:35,192 --> 00:33:39,202
So again, there's a little bit of confusion here. It's not

532
00:33:39,256 --> 00:33:43,442
clear why they have decided to do that, probably because

533
00:33:43,496 --> 00:33:46,946
it's so complex, because the good thing about the

534
00:33:46,968 --> 00:33:50,914
cloud is that they manage to offer like a standardized,

535
00:33:51,042 --> 00:33:54,614
horizontal sort of service, whereas when we go

536
00:33:54,652 --> 00:33:58,762
down to the edge, it becomes a mess because you have many different devices with

537
00:33:58,816 --> 00:34:02,954
different hardware providers, different specs in

538
00:34:02,992 --> 00:34:06,986
remote locations. So that might have been a

539
00:34:07,008 --> 00:34:09,500
difficult problem to solve for these guys.

540
00:34:10,770 --> 00:34:14,826
The idea here to me is that these traditional cloud providers,

541
00:34:14,938 --> 00:34:18,782
they have seen the edge as a way to just go

542
00:34:18,836 --> 00:34:22,346
there and get data to pump their

543
00:34:22,468 --> 00:34:26,318
cloud services. So they're not native in the edge,

544
00:34:26,414 --> 00:34:30,014
they're more of someone that finds

545
00:34:30,062 --> 00:34:33,614
convenient to go to the edge to try and recruit

546
00:34:33,742 --> 00:34:37,446
some workloads or to recruit some data that

547
00:34:37,468 --> 00:34:40,886
they can use to bring customers

548
00:34:40,988 --> 00:34:43,160
onto their services online.

549
00:34:44,170 --> 00:34:47,998
Apart from these traditional guys, there's some native providers.

550
00:34:48,114 --> 00:34:51,980
These are usually new breed companies that

551
00:34:52,430 --> 00:34:56,154
have come alive, usually startups, usually in

552
00:34:56,192 --> 00:34:59,962
their three to five year

553
00:35:00,016 --> 00:35:03,838
of life. And they have come to life

554
00:35:04,004 --> 00:35:07,566
just to do edge computing. So their only objective is

555
00:35:07,588 --> 00:35:11,226
to do edge computing. So there are different breed of companies in comparison

556
00:35:11,258 --> 00:35:15,074
to the big cloud providers, but they're also small. Right?

557
00:35:15,192 --> 00:35:18,834
So we have CDA, which is an american company. We have crosser, we have

558
00:35:18,872 --> 00:35:22,046
sunlight, we have Avasa, we have six XQ,

559
00:35:22,238 --> 00:35:25,678
and we also have Barbara. Right. And today I'm

560
00:35:25,694 --> 00:35:29,254
going to speak about Barbara because obviously that's the company I

561
00:35:29,292 --> 00:35:32,598
work in and that's the platform. I believe it's going to become the

562
00:35:32,604 --> 00:35:36,114
new standard. But also because speaking about Barbara

563
00:35:36,242 --> 00:35:40,058
in a way means speaking about all the other guys

564
00:35:40,224 --> 00:35:44,166
because we tend to do things in a similar fashion,

565
00:35:44,278 --> 00:35:48,150
give it or take. Right? So if you think of the technological stack

566
00:35:48,230 --> 00:35:51,950
that you can find with these providers, you're going to

567
00:35:52,020 --> 00:35:56,282
always find a different flavor

568
00:35:56,426 --> 00:36:00,046
of this, more or less. So we

569
00:36:00,068 --> 00:36:03,694
can see in the right side of this slide that we

570
00:36:03,732 --> 00:36:07,154
have the stack divided in the cloud part and

571
00:36:07,192 --> 00:36:10,850
in the edge part that's below. The idea is that the cloud part

572
00:36:10,920 --> 00:36:14,434
is unique. We only have one cloud for all

573
00:36:14,472 --> 00:36:18,546
the edges because the edge part is just thousands or tens

574
00:36:18,578 --> 00:36:21,974
of thousands, has many devices as you have in your

575
00:36:22,012 --> 00:36:25,766
deployment. Right. And each of those boxes is one device in

576
00:36:25,788 --> 00:36:29,362
a remote location that's doing things autonomously,

577
00:36:29,506 --> 00:36:32,746
but is being managed by the cloud. Right. So we usually have like

578
00:36:32,768 --> 00:36:37,238
a centralized point of view of all the decentralized distributed

579
00:36:37,334 --> 00:36:41,190
devices. And the way it works is as follows.

580
00:36:41,270 --> 00:36:44,574
In each device we have, first we have an OS. In our

581
00:36:44,612 --> 00:36:48,494
case it's Barbara OS you could use usually any

582
00:36:48,532 --> 00:36:51,774
breed of Linux. If you think of CDA for example,

583
00:36:51,892 --> 00:36:55,380
they have Evo s, it's their own operating system as well.

584
00:36:55,910 --> 00:36:59,346
And many other companies, they just use regular ubuntu or

585
00:36:59,368 --> 00:37:02,926
debian or any sort of open source distribution.

586
00:37:03,038 --> 00:37:06,626
So you have your os at the bottom side

587
00:37:06,728 --> 00:37:10,562
of the device which is controlling the underlying

588
00:37:10,626 --> 00:37:13,894
hardware. Then one step above that

589
00:37:14,012 --> 00:37:17,658
you have what we call the Barbara node manager and that's the name that

590
00:37:17,664 --> 00:37:21,610
we've given to it. But usually this is called

591
00:37:21,680 --> 00:37:24,650
an agent in some spaces.

592
00:37:25,710 --> 00:37:29,446
But what it really is is a piece of software that's

593
00:37:29,558 --> 00:37:34,090
installed in the device and that manages all the connections

594
00:37:34,170 --> 00:37:37,454
and all the commands and the relationship of the

595
00:37:37,492 --> 00:37:41,690
device with the cloud sort of motherboard,

596
00:37:41,770 --> 00:37:45,770
right? So sort of this centralized

597
00:37:45,850 --> 00:37:50,114
point where all the command and commoditization and

598
00:37:50,312 --> 00:37:53,938
all that should happen. So this note manager is

599
00:37:54,104 --> 00:37:57,810
a small piece of software that runs internally and that ensures

600
00:37:57,890 --> 00:38:01,698
that anything that should be executed in the device gets executed,

601
00:38:01,794 --> 00:38:04,902
that anything important that's produced in the device gets

602
00:38:04,956 --> 00:38:09,334
communicated to the cloud, and that ensures that the system

603
00:38:09,532 --> 00:38:13,126
remains safe and working and autonomous and

604
00:38:13,148 --> 00:38:16,586
that everything's fine. That's the node manager. Then on

605
00:38:16,608 --> 00:38:20,474
the device we have also the workload, and I

606
00:38:20,512 --> 00:38:24,110
usually run inside docker containers.

607
00:38:24,690 --> 00:38:27,934
I'm not going to go into what a docker container is, but it's basically just

608
00:38:27,972 --> 00:38:30,922
a way of packaging applications, a very comfortable,

609
00:38:31,066 --> 00:38:35,106
convenient way of packaging applications. So we have there some

610
00:38:35,288 --> 00:38:39,246
purple workloads and also some white workloads,

611
00:38:39,358 --> 00:38:43,138
those small boxes that you find just there, the purple ones

612
00:38:43,224 --> 00:38:46,382
is because they usually run off the marketplace.

613
00:38:46,446 --> 00:38:50,486
We at Barbara, we have a marketplace where we offer pre built and

614
00:38:50,508 --> 00:38:54,086
pre tested and validated applications that the

615
00:38:54,108 --> 00:38:57,670
users can just deploy to their edge devices without

616
00:38:57,740 --> 00:39:00,594
having to program a single line of code.

617
00:39:00,732 --> 00:39:04,506
And then the white ones are the ones that users themselves can upload to

618
00:39:04,528 --> 00:39:08,506
the system. Right? So you can either use pre built applications and

619
00:39:08,528 --> 00:39:12,558
deploy them, or build your own applications and deploy them.

620
00:39:12,724 --> 00:39:16,298
So all that is happening in each separate device.

621
00:39:16,474 --> 00:39:19,886
Then when we come to the cloud, we usually have an

622
00:39:19,908 --> 00:39:23,682
API. So it's like the central point where all the commands are

623
00:39:23,736 --> 00:39:27,538
thrown and that also receives all the

624
00:39:27,624 --> 00:39:30,994
monitoring feedback from all the devices. And then

625
00:39:31,032 --> 00:39:34,274
on top of that we have what we call Barbara panel, which is

626
00:39:34,312 --> 00:39:37,814
just a front end. It's a visualization panel where you could

627
00:39:37,852 --> 00:39:41,906
see all the monitoring information, but also you could issue commands,

628
00:39:41,938 --> 00:39:45,158
right? So that's the architecture you're going

629
00:39:45,164 --> 00:39:48,938
to find in different providers. The idea is to manage

630
00:39:49,024 --> 00:39:53,274
different edge remotely located devices from

631
00:39:53,312 --> 00:39:56,602
a centralized point, but also maintaining them

632
00:39:56,736 --> 00:40:00,574
safe, maintaining them with low

633
00:40:00,612 --> 00:40:03,760
latency, maintaining them with

634
00:40:04,690 --> 00:40:08,350
being autonomous, so fulfilling every

635
00:40:08,420 --> 00:40:11,806
promise that the edge gives you, but also allowing you to control all

636
00:40:11,828 --> 00:40:14,560
those from a centralized cloud platform.

637
00:40:16,050 --> 00:40:19,970
All right, so let me show you an example of how these platforms work.

638
00:40:20,040 --> 00:40:23,666
In this case, we're going to log in into Barbara with my account,

639
00:40:23,768 --> 00:40:26,466
and you're going to see a list of devices that I have here. This is

640
00:40:26,488 --> 00:40:30,278
my demo account. So most of these devices are just for

641
00:40:30,364 --> 00:40:33,942
demonstration purposes. But the idea here is that you could have as

642
00:40:33,996 --> 00:40:37,830
many devices as you wanted. So you could have huge deployments

643
00:40:38,490 --> 00:40:41,626
in the thousands if you wanted to. And the idea is that

644
00:40:41,648 --> 00:40:45,562
you could group them by groups. So here I have three groups, you could

645
00:40:45,616 --> 00:40:49,050
have many, many more. Each group has several devices,

646
00:40:49,390 --> 00:40:53,078
and then you could also visualize them altogether, or you

647
00:40:53,104 --> 00:40:57,050
could maybe also visualize them by groups. So, I don't know, all the demo devices

648
00:40:57,210 --> 00:41:00,414
or maybe all the AI models, I don't know,

649
00:41:00,452 --> 00:41:04,222
you could just browse through them. And for each

650
00:41:04,276 --> 00:41:07,602
device, you have to think that these devices, in this case,

651
00:41:07,656 --> 00:41:11,198
they are in our laboratory, in our offices in Madrid,

652
00:41:11,294 --> 00:41:14,706
but they could be just anywhere in the world, right? They cloud be in

653
00:41:14,728 --> 00:41:17,974
remote spaces running algorithms without even

654
00:41:18,012 --> 00:41:21,394
a connection to the Internet, or just a very sketchy

655
00:41:21,442 --> 00:41:25,174
connection that comes on and off quite

656
00:41:25,212 --> 00:41:28,678
often. Right? So the idea here is that you have all those devices and you

657
00:41:28,684 --> 00:41:31,846
cloud do things to them. You could operate them individually.

658
00:41:31,958 --> 00:41:35,558
So, I don't know, I can go to this artificial vision edge node,

659
00:41:35,734 --> 00:41:39,082
and in this case, we can see all the workloads that are being

660
00:41:39,136 --> 00:41:42,234
executed here. I could collapse all the cards.

661
00:41:42,282 --> 00:41:45,674
So all these light blue cards,

662
00:41:45,722 --> 00:41:49,194
they are apps that are being run in the device.

663
00:41:49,322 --> 00:41:52,766
In this case, we have an image recognition model here.

664
00:41:52,948 --> 00:41:56,146
We could see the logs of that model and see how

665
00:41:56,168 --> 00:41:59,986
it's doing. But also there's other things running in

666
00:42:00,008 --> 00:42:03,534
there. We have the Grafana, that's a graphical interface.

667
00:42:03,582 --> 00:42:07,202
We have an influx that's storing all the data that

668
00:42:07,256 --> 00:42:10,822
is being read by the camera, but also all the data

669
00:42:10,876 --> 00:42:14,518
that's being produced by the model. Again here,

670
00:42:14,604 --> 00:42:17,880
you could also visualize the log and see what's going on in there.

671
00:42:18,410 --> 00:42:21,898
You could easily remove things from here. So if I want to

672
00:42:21,904 --> 00:42:25,606
remove the model, I could just click on here and remove

673
00:42:25,638 --> 00:42:29,930
it. So I've deleted this card. It's going to disappear

674
00:42:31,170 --> 00:42:32,240
in a moment.

675
00:42:35,090 --> 00:42:37,070
Yeah, it's disappearing.

676
00:42:38,370 --> 00:42:42,094
Yeah. So it's gone, but now I cloud add it

677
00:42:42,132 --> 00:42:45,118
again. So sending workloads,

678
00:42:45,214 --> 00:42:48,446
machine learning algorithms or anything to your edge

679
00:42:48,478 --> 00:42:53,186
devices is very easy. You just have to just

680
00:42:53,288 --> 00:42:56,518
select the app you want to send. In this case, we're going to

681
00:42:56,524 --> 00:42:59,334
be sending the algorithm. I don't know,

682
00:42:59,372 --> 00:43:01,880
I have the image recognition algorithm model,

683
00:43:02,570 --> 00:43:06,006
and then in this version, I would just send it

684
00:43:06,028 --> 00:43:09,430
to the device. It should be shown in the same space

685
00:43:09,500 --> 00:43:13,258
that it was. So now we have it again, and we'll be running

686
00:43:13,344 --> 00:43:17,174
in a moment. So the idea is that you could handle

687
00:43:17,222 --> 00:43:20,870
them individually, so you could ensure that your models,

688
00:43:20,950 --> 00:43:24,270
your visualization systems, your databases, anything is running

689
00:43:24,340 --> 00:43:27,982
on that particular device. So we are on this device that I have

690
00:43:28,036 --> 00:43:31,674
selected, but this could also be done massively.

691
00:43:31,722 --> 00:43:35,362
So if we go back to our nodes, we could

692
00:43:35,416 --> 00:43:39,650
do this in batch, so we could just select different devices,

693
00:43:40,630 --> 00:43:44,546
we could select the batch operation that we want to do and we cloud just

694
00:43:44,648 --> 00:43:48,262
launch that and we will be doing that

695
00:43:48,316 --> 00:43:52,006
for all those devices. So we could install a model in

696
00:43:52,028 --> 00:43:55,670
many different devices with just a couple of clicks.

697
00:43:56,010 --> 00:43:59,538
You could also update those models, you could also install other types of

698
00:43:59,564 --> 00:44:03,366
applications. So it's very handy when you have thousands

699
00:44:03,398 --> 00:44:06,570
of devices to be able to do that on batch.

700
00:44:07,070 --> 00:44:10,406
Then there's another view that's very interesting here, which is the spaces

701
00:44:10,438 --> 00:44:14,222
view, and that will allow us to see all the workloads that are

702
00:44:14,276 --> 00:44:18,030
running in our system, right? So application per application,

703
00:44:18,180 --> 00:44:22,078
models per model. So here we can see that in

704
00:44:22,084 --> 00:44:26,414
this case we have three image recognition models running in

705
00:44:26,452 --> 00:44:29,406
different devices. So one of them is running in this edge node,

706
00:44:29,438 --> 00:44:32,546
VR. Another one is running in the artificial vision edge node, which is the one

707
00:44:32,568 --> 00:44:36,418
that I showed. This is online, it's running at

708
00:44:36,424 --> 00:44:40,358
the moment. We could stop if we wanted, we could just

709
00:44:40,524 --> 00:44:43,798
see the logs in a new screen. So this

710
00:44:43,804 --> 00:44:47,286
is also very neat and easy way

711
00:44:47,388 --> 00:44:50,906
to see all the workloads that you're running in the edge. So you have to

712
00:44:50,928 --> 00:44:54,026
imagine that this is not a cloud environment where you

713
00:44:54,048 --> 00:44:57,562
are running everything centrally. Each of these

714
00:44:57,616 --> 00:45:01,098
apps is going to be running in a different device, or maybe they are

715
00:45:01,104 --> 00:45:05,642
grouped into a specific device that's somewhere

716
00:45:05,786 --> 00:45:09,642
remotely. And the nice thing about this is that if they lose connection

717
00:45:09,706 --> 00:45:13,342
for some reason, they're going to keep on going and they're going to keep doing

718
00:45:13,396 --> 00:45:16,750
the magic that they're doing, right? So if they're routing

719
00:45:17,090 --> 00:45:20,386
traffic in a, I don't know if they're routing energy, maybe in

720
00:45:20,408 --> 00:45:23,746
a smart grid, they're going to keep doing that. So they're very

721
00:45:23,848 --> 00:45:27,202
resilient to any problem with connections

722
00:45:27,266 --> 00:45:29,830
and with cloud systems.

723
00:45:32,890 --> 00:45:36,614
Point number five is about applications. We already spoke about

724
00:45:36,652 --> 00:45:40,322
two applications, if you remember, in the water management space

725
00:45:40,396 --> 00:45:44,182
and also in the smart grid, sort of auto consumption

726
00:45:44,246 --> 00:45:48,218
energy space. There are many more. I'm not going to go into them because

727
00:45:48,304 --> 00:45:51,886
I am running out of time, but you could check them out

728
00:45:51,908 --> 00:45:55,742
in our website, which is www.barbara.com.

729
00:45:55,876 --> 00:45:59,806
There you have a section devoted to many different use cases and

730
00:45:59,828 --> 00:46:03,386
you're going to see why it makes sense in these spaces

731
00:46:03,418 --> 00:46:06,906
to use edge computing. You're going to get some smart grids examples,

732
00:46:06,938 --> 00:46:10,586
you're going to get some smart water examples. Also smart manufacturing,

733
00:46:10,698 --> 00:46:14,142
computer vision, and many, many more. So if you want to know more

734
00:46:14,196 --> 00:46:16,738
about what Apple applications make sense in the edge,

735
00:46:16,834 --> 00:46:21,586
just go to our website and we've

736
00:46:21,618 --> 00:46:23,910
reached the end of the presentation.

737
00:46:24,730 --> 00:46:28,630
I hope that you've liked it. I hope that it's been useful.

738
00:46:29,290 --> 00:46:33,174
If you need anything else from us, just please reach out and

739
00:46:33,292 --> 00:46:36,790
I hope to see you soon at the next conference.

