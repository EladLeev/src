1
00:00:20,410 --> 00:00:23,758
Hello everyone. Today we'll ble discussing about

2
00:00:23,844 --> 00:00:28,050
attacking Bluetooth, le design and implementation in mobile

3
00:00:28,130 --> 00:00:31,974
and also wearing Lego system. Before starting with our

4
00:00:32,012 --> 00:00:34,630
presentation, I would like to introduce ourselves.

5
00:00:35,450 --> 00:00:39,254
I am Ananya Mkauda. I work as a security analyst at

6
00:00:39,292 --> 00:00:43,830
Deep Armor. Today I have with me my colleague Megana Vidarali

7
00:00:43,910 --> 00:00:47,942
who also works as a security analyst and deeparmer.

8
00:00:48,086 --> 00:00:52,010
So coming to deeparmer we are a cybersecurity

9
00:00:52,090 --> 00:00:56,234
forms based in Bengaluru. So we have got consulting

10
00:00:56,282 --> 00:01:00,122
services and cloud security as our two platforms.

11
00:01:00,266 --> 00:01:04,066
Coming to consulting services, we provide secure design

12
00:01:04,168 --> 00:01:07,234
and threat modeling, vulnerability assessment bands,

13
00:01:07,272 --> 00:01:10,606
penetration testing, and the third one is certifications

14
00:01:10,638 --> 00:01:14,210
and regulatory compliances. So coming to cloud

15
00:01:14,280 --> 00:01:17,894
platforms we have got two in house products that is

16
00:01:17,932 --> 00:01:22,034
gauntlet and recon. So let's get into the agenda

17
00:01:22,082 --> 00:01:25,794
of a presentation. So we'll be discussing about blueprint

18
00:01:25,922 --> 00:01:29,798
of an IoT available ecosystem. Also challenges

19
00:01:29,894 --> 00:01:33,814
faced in securing these kind of modern day gadgets.

20
00:01:33,942 --> 00:01:37,946
Also introduction to bluetooth and ble security. And finally,

21
00:01:38,048 --> 00:01:41,174
we will be showing a demo about attacking

22
00:01:41,222 --> 00:01:45,146
bluetooth and ble networks. So after the demo we'll

23
00:01:45,178 --> 00:01:48,846
be also providing the recommendation for this ecosystem security.

24
00:01:49,028 --> 00:01:51,710
With that we'll be summarizing our presentation.

25
00:01:52,050 --> 00:01:55,570
So let's start with our presentation. So as you can see,

26
00:01:55,640 --> 00:01:59,182
the first slide is about IoT or wearable ecosystem.

27
00:01:59,326 --> 00:02:03,314
So this is how the typical Iot wearable ecosystem looks

28
00:02:03,352 --> 00:02:07,154
like. So it has got four components. So as you can

29
00:02:07,192 --> 00:02:10,822
see in the picture, there's a backend services that is nothing but a cloud,

30
00:02:10,956 --> 00:02:15,106
and there's a smartphone and there are protocols

31
00:02:15,138 --> 00:02:18,586
and also there's a gateway. These all like four

32
00:02:18,688 --> 00:02:23,142
components make up a wearable ecosystems or IoT ecosystem.

33
00:02:23,286 --> 00:02:26,630
So let's take an example of home automation

34
00:02:26,710 --> 00:02:30,634
system. So coming to home automation system, there will be

35
00:02:30,672 --> 00:02:34,554
devices which are called as nodes, and these nodes

36
00:02:34,602 --> 00:02:38,554
will be having sensors. And these sensors could be deployed

37
00:02:38,602 --> 00:02:42,254
across the house. So what are these sensors going to do?

38
00:02:42,292 --> 00:02:45,246
So they would collect information like temperature,

39
00:02:45,358 --> 00:02:49,602
fire alarm, and also fire security alarm. So the same information

40
00:02:49,736 --> 00:02:53,314
is sent back to backend services. That is nothing but a cloud

41
00:02:53,432 --> 00:02:57,106
which could be private or public. So you

42
00:02:57,128 --> 00:03:00,310
will know. Most of the examples like have to talk about cloud

43
00:03:00,380 --> 00:03:03,970
could be AWS or Microsoft Azure,

44
00:03:04,050 --> 00:03:07,686
many more. So the same whatever the

45
00:03:07,708 --> 00:03:10,966
information is sent to cloud could be viewed

46
00:03:10,998 --> 00:03:14,742
on your smartphones too. So as you can see in the diagram

47
00:03:14,806 --> 00:03:18,518
that there are nodes present and there's gateways

48
00:03:18,614 --> 00:03:22,474
of present show. So based on the requirement, there can be

49
00:03:22,512 --> 00:03:26,190
multiple nodes and multiple gateways. And it is not restricted to

50
00:03:26,260 --> 00:03:29,886
one or two like how we have given. So based on the requirement, you can

51
00:03:29,908 --> 00:03:33,562
have your own nodes there. So coming to next slide

52
00:03:33,626 --> 00:03:37,390
here we are mainly taken fitness trackers

53
00:03:37,470 --> 00:03:41,300
as an example and we have given a case study about them.

54
00:03:42,150 --> 00:03:45,982
So everybody would want to buy us

55
00:03:46,136 --> 00:03:49,510
fitness tracker like nothing but smartwatches.

56
00:03:51,210 --> 00:03:54,546
The main reason is because they're very comfortable.

57
00:03:54,658 --> 00:03:58,054
When I talk about comfortable, it's nothing but they

58
00:03:58,092 --> 00:04:01,258
don't have wires around them that makes

59
00:04:01,344 --> 00:04:04,634
IoT easier and simpler for a user to use them.

60
00:04:04,752 --> 00:04:08,134
Also they're smart enough to take user commands

61
00:04:08,182 --> 00:04:11,702
and also give the required output to the user.

62
00:04:11,846 --> 00:04:15,482
And also they're into continuous

63
00:04:15,546 --> 00:04:19,582
learning, they keep learning bands, they keep evolving as

64
00:04:19,636 --> 00:04:23,434
the user requirement. So this overall improves

65
00:04:23,482 --> 00:04:26,754
the quality of a user. So as I told

66
00:04:26,792 --> 00:04:30,194
you in the previous slide, that why anyone would want to buy

67
00:04:30,232 --> 00:04:34,322
a wearable device, why they would want to use it in the daily life.

68
00:04:34,456 --> 00:04:37,830
So now let us talk about the challenges

69
00:04:38,170 --> 00:04:40,950
in securing this modern day gadget.

70
00:04:43,210 --> 00:04:47,014
Here we would mainly using

71
00:04:47,052 --> 00:04:50,946
to understand what kind of challenges they're

72
00:04:50,978 --> 00:04:54,830
facing today's world. So these variable advisors

73
00:04:54,930 --> 00:04:58,586
are prone to attacks like the many attacks that has been

74
00:04:58,688 --> 00:05:02,446
taken place on these kind of wearable devices. So therefore it

75
00:05:02,468 --> 00:05:06,554
is very quite challenging to secure these kind of gadgets,

76
00:05:06,682 --> 00:05:11,018
mainly because the traditional STLC frameworks

77
00:05:11,114 --> 00:05:14,482
are applied to products which are having a long shelf life

78
00:05:14,536 --> 00:05:18,402
with constant requirement. But whereas with these type of

79
00:05:18,536 --> 00:05:22,274
gadgets, time to market would be very less and the

80
00:05:22,312 --> 00:05:25,918
requirement will ble continuously evolving. So that

81
00:05:25,944 --> 00:05:29,478
is one of the reason one

82
00:05:29,484 --> 00:05:32,982
of the main challenge. And the other one would be like there are 30

83
00:05:33,036 --> 00:05:36,774
to 40 protocols and to choose the right one

84
00:05:36,892 --> 00:05:40,826
by a developer would be very difficult. And the fourth one is like

85
00:05:40,848 --> 00:05:44,186
there's not much privacy. And last one would be,

86
00:05:44,208 --> 00:05:47,478
there's no much research made on IoT security. So there's

87
00:05:47,494 --> 00:05:49,980
a lack of research that is being done.

88
00:05:50,370 --> 00:05:53,886
So next, as we saw the

89
00:05:54,068 --> 00:05:57,710
challenges in those devices, there could be even

90
00:05:57,780 --> 00:06:01,358
technical challenges. So if I have to take an example

91
00:06:01,444 --> 00:06:06,062
of these wearables devices, these wearable devices contain

92
00:06:06,126 --> 00:06:10,034
lots of information, they have lots of data in them. So it could be

93
00:06:10,072 --> 00:06:13,330
geolocation information, or it could be biometric data,

94
00:06:13,480 --> 00:06:17,046
or it could be sensor data, or it could be payment services.

95
00:06:17,228 --> 00:06:20,614
So it is must for

96
00:06:20,652 --> 00:06:24,918
us to secure these kind of gadgets because they have lots of information

97
00:06:25,084 --> 00:06:28,602
stored in them. So one of the challenge is because

98
00:06:28,736 --> 00:06:32,390
these gadgets will be running with limited software stack,

99
00:06:32,550 --> 00:06:38,250
which makes it very difficult for us to provide

100
00:06:38,320 --> 00:06:41,930
them with asymmetric key cryptos because

101
00:06:42,000 --> 00:06:44,954
they're heavy on these kind of limited software.

102
00:06:45,002 --> 00:06:48,814
Stack. So because of which the security will obviously get

103
00:06:48,852 --> 00:06:52,190
compromised in the same way. Coming to cloud,

104
00:06:52,260 --> 00:06:55,742
there could be cross domain flows or it could be multiple exposure

105
00:06:55,806 --> 00:06:59,518
points is because of this kind of limitations.

106
00:06:59,694 --> 00:07:03,394
So along with the hardware part, we need to

107
00:07:03,432 --> 00:07:06,774
also protect cloud and mobile applications as

108
00:07:06,812 --> 00:07:10,578
well. So coming to today's agenda, so we'll

109
00:07:10,594 --> 00:07:14,006
be mainly using on two protocols, that is

110
00:07:14,108 --> 00:07:17,494
Bluetooth and the other one is ble. BLE is nothing

111
00:07:17,532 --> 00:07:22,898
but Bluetooth low energy. So let's get into so

112
00:07:23,004 --> 00:07:26,858
ble and Bluetooth. So coming to them,

113
00:07:26,944 --> 00:07:30,330
there are various protocol for short read data

114
00:07:30,400 --> 00:07:33,706
exchange. So coming to Bluetooth, it is having a range

115
00:07:33,738 --> 00:07:36,714
of one to 100 meters. And blE,

116
00:07:36,762 --> 00:07:40,222
which is nothing but Bluetooth low energy, is having

117
00:07:40,276 --> 00:07:44,134
a range of ten to 600 meters. So this ble

118
00:07:44,202 --> 00:07:48,494
is a lightweight subset of classic bluetooth with low power consumption.

119
00:07:48,622 --> 00:07:52,670
So these are used where there's less throughput and less power consumption.

120
00:07:52,830 --> 00:07:56,194
And also they're having a frequency of range from 2.4

121
00:07:56,232 --> 00:07:59,618
to 2.45 ghz. So this ble,

122
00:07:59,714 --> 00:08:03,142
Bluetooth and all are maintained and governed by Bluetooth Special

123
00:08:03,196 --> 00:08:07,238
interest group. Any updates that are being made is done by the same

124
00:08:07,324 --> 00:08:10,198
group. So coming to popular use cases,

125
00:08:10,294 --> 00:08:13,180
there could be wearables devices, smartphone system.

126
00:08:14,830 --> 00:08:18,486
You also heard about Alexa is a famous devices

127
00:08:18,598 --> 00:08:21,886
being used. These are all few of the examples where Bluetooth is

128
00:08:21,908 --> 00:08:25,514
being used. So coming to Bluetooth

129
00:08:25,562 --> 00:08:28,926
security. So Bluetooth security mainly depends on

130
00:08:28,948 --> 00:08:32,462
pairing mechanism, like how they are getting paired, like how

131
00:08:32,516 --> 00:08:34,750
the variable device bands, the Bluetooth,

132
00:08:36,210 --> 00:08:39,470
which is like via phone is getting paired.

133
00:08:39,630 --> 00:08:43,202
So let's discuss more on that. So there are like four

134
00:08:43,256 --> 00:08:47,386
of them, four methods. First one is deskworks. Coming to deskwork,

135
00:08:47,438 --> 00:08:51,270
it's very limited bands is having no user interface and

136
00:08:51,340 --> 00:08:54,982
by default IoT will have four or six zeros. And the second

137
00:08:55,036 --> 00:08:58,434
one is numeric comparison. Coming to numeric comparison,

138
00:08:58,482 --> 00:09:02,042
we are having a device with a display which will have

139
00:09:02,096 --> 00:09:05,754
yes or no button. When you have to pair your device, you have to type

140
00:09:05,792 --> 00:09:09,190
in s. And the third one is pass key entry,

141
00:09:09,270 --> 00:09:12,838
wherein you will be provided with six digit pin.

142
00:09:12,934 --> 00:09:16,186
You have to enter the same pin in order to pair

143
00:09:16,218 --> 00:09:19,438
your device with that of a Bluetooth. And the

144
00:09:19,604 --> 00:09:23,054
fourth one is out of bands. And I can tell this is the most secure

145
00:09:23,102 --> 00:09:27,074
one because here the user authentication is being done

146
00:09:27,192 --> 00:09:31,406
using other protocols like WiFi, direct or NSC.

147
00:09:31,598 --> 00:09:34,990
And once the pairing is done,

148
00:09:35,160 --> 00:09:39,330
the network traffic between the two will be encrypted

149
00:09:39,490 --> 00:09:43,682
via AdS 128 algorithm.

150
00:09:43,826 --> 00:09:47,378
So we understood about the pairing mechanism,

151
00:09:47,474 --> 00:09:50,682
that is like four of them. And once the pairing is done.

152
00:09:50,736 --> 00:09:54,362
The network traffic is being encrypted. So now let us

153
00:09:54,416 --> 00:09:58,374
understand more about the weaknesses in this bluetooth

154
00:09:58,422 --> 00:10:02,250
or ble. So coming to the weaknesses,

155
00:10:02,410 --> 00:10:06,142
I just spoke about the pairing algorithm. Simply the

156
00:10:06,196 --> 00:10:10,746
algorithm we're

157
00:10:10,778 --> 00:10:14,354
compromising with our security. The first one is

158
00:10:14,392 --> 00:10:18,382
the same thing. That is security of the communication

159
00:10:18,446 --> 00:10:21,730
link depends on pairing algorithm. So if it's more

160
00:10:21,800 --> 00:10:25,602
complex then the security is also good enough.

161
00:10:25,736 --> 00:10:29,346
And the third one is as I told dustworks

162
00:10:29,378 --> 00:10:32,610
method will take keys by default

163
00:10:32,690 --> 00:10:36,178
and it will have these four or six zeros. So it will be prone

164
00:10:36,194 --> 00:10:39,942
to man in the middle attacks. So also there is key exchange

165
00:10:40,006 --> 00:10:43,866
that is taking place between the two during

166
00:10:43,968 --> 00:10:47,782
pairing mechanism that could lead to eavesdropping.

167
00:10:47,926 --> 00:10:51,286
The fourth one and the most important one is the app

168
00:10:51,318 --> 00:10:54,602
on the fourth. So the more about it we'll be discussing further

169
00:10:54,666 --> 00:10:58,590
in our slides. Thank you Ananya. Hello everyone,

170
00:10:58,660 --> 00:11:02,430
I'm Meghana Rao. I work as security analyst at Deep Armor.

171
00:11:02,870 --> 00:11:06,014
As we now understood the problems and weaknesses

172
00:11:06,062 --> 00:11:10,462
of Bluetooth IoT ecosystems, let's dive into practical exploitations

173
00:11:10,526 --> 00:11:14,242
of ble system. Here we are going to attack

174
00:11:14,296 --> 00:11:17,350
wearables device with the help of mobile ecosystems.

175
00:11:18,650 --> 00:11:22,358
So for today's demo we'll be using Mi bands. It is a

176
00:11:22,364 --> 00:11:26,850
fitness tracking device, performs activities like sending app notifications,

177
00:11:27,010 --> 00:11:30,202
calculating calories, step count, heart rate,

178
00:11:30,336 --> 00:11:34,650
sleep rate, et cetera. Let's see how this device can be breached.

179
00:11:35,550 --> 00:11:39,002
And this is the ecosystems overview. Similar to

180
00:11:39,056 --> 00:11:42,362
IoT ecosystems, this overview is specific to wearable

181
00:11:42,426 --> 00:11:46,302
device. It comprises of wearable device, mobile application,

182
00:11:46,436 --> 00:11:50,378
cloud and here wearable device communicates

183
00:11:50,554 --> 00:11:54,094
with its application via Bluetooth. That is ble

184
00:11:54,142 --> 00:11:58,370
protocol. Sometimes wearable device and mobile app communicates

185
00:11:58,790 --> 00:12:02,130
with cloud directly using HTTPs protocol.

186
00:12:02,550 --> 00:12:06,666
In today's presentation, our main focus is on the communication

187
00:12:06,718 --> 00:12:10,280
that is happening between the band and the app.

188
00:12:10,890 --> 00:12:14,886
This is how a device communication looks like. We can see that there

189
00:12:14,908 --> 00:12:18,234
is lot of data exchange happening from mobile to device and

190
00:12:18,272 --> 00:12:22,074
back. So mobile sends information like put device into

191
00:12:22,112 --> 00:12:25,386
recovery mode, firmware update, social app

192
00:12:25,408 --> 00:12:29,062
notifications, et cetera and band sends notifications

193
00:12:29,126 --> 00:12:33,182
about user activity, data profile update and response to

194
00:12:33,316 --> 00:12:36,874
social app notifications. So the traffic

195
00:12:36,922 --> 00:12:40,522
between the band and its app is encrypted using LTK.

196
00:12:40,586 --> 00:12:43,902
That is the long term key. When attacker is in this vicinity

197
00:12:43,966 --> 00:12:47,118
bands, he's trying to sniff this traffic.

198
00:12:47,294 --> 00:12:51,300
Then he would be ending up with the garbage data that is encrypted data.

199
00:12:52,150 --> 00:12:56,274
Then where does the problem exactly occur? The problem mainly

200
00:12:56,322 --> 00:13:00,214
occurs when we have a malicious application residing on our

201
00:13:00,252 --> 00:13:03,394
phone because whenever encrypted data from variable

202
00:13:03,442 --> 00:13:06,546
device reaches the Bluetooth layer. The Bluetooth

203
00:13:06,578 --> 00:13:09,802
layer decrypts the encrypted BLE data which

204
00:13:09,856 --> 00:13:13,206
will be forwarded to mobile app to display

205
00:13:13,238 --> 00:13:17,420
the actual content in user readable format. Just like if

206
00:13:18,190 --> 00:13:21,486
encrypted data says XYZ and it

207
00:13:21,508 --> 00:13:25,614
would be decrypted as calories count is 30. During this

208
00:13:25,652 --> 00:13:28,654
data transfer, any app residing on the

209
00:13:28,772 --> 00:13:31,886
phone can sniff and fetch all the data that

210
00:13:31,908 --> 00:13:35,810
is being exchanged. For this demo, I'll be

211
00:13:35,960 --> 00:13:39,342
pairing my Mi band with its companion

212
00:13:39,406 --> 00:13:43,058
application. That is mifit app which

213
00:13:43,144 --> 00:13:46,454
is installed on my smartphone. As an

214
00:13:46,492 --> 00:13:49,858
attacker, I'll try to sniff the traffic, steal step counts

215
00:13:49,874 --> 00:13:53,174
and calories using the farmer's custom malware app.

216
00:13:53,372 --> 00:13:57,030
Okay, so let's get started. The white screen

217
00:13:57,100 --> 00:14:01,046
here is from Android Studios. It is a cat window.

218
00:14:01,078 --> 00:14:04,906
It displays all the logs on the phone. I've added a filter here to

219
00:14:04,928 --> 00:14:08,486
display logs from malware application and I'm casting

220
00:14:08,518 --> 00:14:12,510
my phone using wiser app. We can see that I've installed both

221
00:14:12,580 --> 00:14:16,510
mifit app and ble malware app to begin

222
00:14:16,580 --> 00:14:19,822
with. So to begin

223
00:14:19,876 --> 00:14:23,026
with, I've launched my malware app which

224
00:14:23,048 --> 00:14:27,038
is configured with band's Bluetooth address. Now I'll

225
00:14:27,134 --> 00:14:30,894
access this MIF tab which is paired with my Mi

226
00:14:30,942 --> 00:14:35,138
band. I'm trying to perform

227
00:14:35,224 --> 00:14:38,662
certain activities so that I can add step

228
00:14:38,716 --> 00:14:42,614
counts or I can simulate step counts. I'm rotating my hand,

229
00:14:42,732 --> 00:14:46,358
I'm performing a few activities. We can see that

230
00:14:46,524 --> 00:14:50,822
step counts are getting updated on MI application and

231
00:14:50,876 --> 00:14:54,474
we can also see that it is getting updated on malware app

232
00:14:54,512 --> 00:14:57,882
due to data traffic sniffing. So the latest or

233
00:14:57,936 --> 00:15:01,502
the last updated value I see is 1026.

234
00:15:01,636 --> 00:15:05,662
It is same on Lockcat Window as well because Lockcat Window is

235
00:15:05,716 --> 00:15:10,160
capturing the logs from malware app and it says the

236
00:15:10,610 --> 00:15:14,260
step count is 1026 and calories are 30.

237
00:15:14,710 --> 00:15:18,818
A quick recap, we paired our Mi bands to phone,

238
00:15:18,984 --> 00:15:22,754
tried sniffing the traffic between phone and the device where

239
00:15:22,792 --> 00:15:26,200
we were able to steal step counts and calories information.

240
00:15:26,970 --> 00:15:31,026
This is the Gat profile and these are the UUIds.

241
00:15:31,058 --> 00:15:34,854
That is universal unique ids that are responsible for heart rate

242
00:15:34,892 --> 00:15:38,994
and step count and the universal unique

243
00:15:39,042 --> 00:15:42,342
id or uuId that is ending with f nine

244
00:15:42,396 --> 00:15:46,202
b 34. FB is responsible for heart

245
00:15:46,256 --> 00:15:50,042
rate bands. One that is ending with seven

246
00:15:50,096 --> 00:15:54,080
double zero is responsible for step count.

247
00:15:54,930 --> 00:15:58,986
So coming to root cause of this issue the root

248
00:15:59,018 --> 00:16:02,518
cause of this issue is app. On any app on Android

249
00:16:02,554 --> 00:16:07,006
or iOS that is subscribed to Bluetooth services can rewrite

250
00:16:07,118 --> 00:16:10,414
or fetch all the Bluetooth data just like a legitimate

251
00:16:10,462 --> 00:16:14,366
app all that app needs is Bluetooth and Bluetooth

252
00:16:14,398 --> 00:16:17,894
admin permission. Bluetooth admin permission is needed to

253
00:16:17,932 --> 00:16:21,782
make device discoverable or to find a device that is

254
00:16:21,836 --> 00:16:25,222
discoverable. And Android documentation has

255
00:16:25,276 --> 00:16:29,034
clearly added this clause that all

256
00:16:29,072 --> 00:16:32,682
the apps will have. Like all the apps with these

257
00:16:32,736 --> 00:16:36,314
permissions will have this extra feature but application

258
00:16:36,432 --> 00:16:39,754
using it should not misuse this power and

259
00:16:39,792 --> 00:16:43,354
it goes same with the iOS as well in which we need core

260
00:16:43,402 --> 00:16:46,830
Bluetooth framework permission. As we

261
00:16:46,900 --> 00:16:49,630
previously discussed,

262
00:16:50,050 --> 00:16:53,806
LTK encrypted data gets decrypted on reaching Bluetooth

263
00:16:53,838 --> 00:16:57,986
layer and in order to mitigate this malware attack

264
00:16:58,168 --> 00:17:01,746
we have to encrypt this data with app specific

265
00:17:01,848 --> 00:17:05,306
key bands Bluetooth layer so that only legitimate

266
00:17:05,358 --> 00:17:09,510
application can access it. And problem with this trust model

267
00:17:09,580 --> 00:17:12,774
is device is trusting entire phone and all the

268
00:17:12,812 --> 00:17:16,278
apps on it and the only solution to this

269
00:17:16,364 --> 00:17:20,220
problem is confining the trust boundary. That is the

270
00:17:20,750 --> 00:17:24,342
trust boundary should ble from device to its companion

271
00:17:24,406 --> 00:17:26,380
application or legitimate application.

272
00:17:27,310 --> 00:17:31,002
Let's quickly summarize the next generation IoT device

273
00:17:31,066 --> 00:17:34,590
has next generation problem and entire IoT

274
00:17:34,930 --> 00:17:39,418
security comprises of device, phone, communication protocol

275
00:17:39,434 --> 00:17:42,734
and cloud. So all these components has to be

276
00:17:42,772 --> 00:17:46,094
included in SDLC process that is

277
00:17:46,132 --> 00:17:50,050
secure development lifecycle process a development phase itself

278
00:17:50,120 --> 00:17:53,554
and continuous security should be including as

279
00:17:53,592 --> 00:17:57,234
part of CI CD pipeline. And today privacy

280
00:17:57,282 --> 00:18:00,662
is of bigger concern. So privacy security bands

281
00:18:00,716 --> 00:18:04,726
legal has to be oven from the development cycle itself.

282
00:18:04,908 --> 00:18:09,250
We also have to consider integration and interoperability

283
00:18:09,410 --> 00:18:13,622
problem while finding solution to the existing problems and

284
00:18:13,676 --> 00:18:17,350
make sure the entire Iot security is like

285
00:18:17,420 --> 00:18:20,070
entire Iot ecosystems is secure.

286
00:18:20,690 --> 00:18:21,260
Thank you.

