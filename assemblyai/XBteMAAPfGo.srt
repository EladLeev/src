1
00:00:00,250 --> 00:00:01,630
Are you an SRE,

2
00:00:03,570 --> 00:00:07,358
a developer, a quality

3
00:00:07,444 --> 00:00:11,162
engineer who wants to tackle the challenge of improving reliability

4
00:00:11,226 --> 00:00:15,294
in your DevOps? You can enable your DevOps for reliability with

5
00:00:15,332 --> 00:00:18,654
chaos native. Create your free account at

6
00:00:18,692 --> 00:01:17,126
chaos native. LiTmUS cloud hello

7
00:01:17,228 --> 00:01:21,250
and welcome to my talk. Incident response, incident management

8
00:01:21,330 --> 00:01:25,506
and alerts. And where do they fit in cloud operations.

9
00:01:25,698 --> 00:01:29,320
Now, if you just read that and you're thinking to yourself,

10
00:01:29,850 --> 00:01:33,610
aren't all of those the same thing, then you've come to the right

11
00:01:33,680 --> 00:01:37,622
place, because they are not the same thing. And that's exactly the purpose

12
00:01:37,686 --> 00:01:41,242
of these talk. I'm very passionate about the idea that

13
00:01:41,296 --> 00:01:44,734
these are not the same thing. Before we begin,

14
00:01:44,852 --> 00:01:48,462
I want to use a little analogy. This analogy comes

15
00:01:48,516 --> 00:01:51,726
from the fact that I really want a Tesla. And some

16
00:01:51,748 --> 00:01:55,082
of my coworkers recently got Teslas, and I'm a little bit jealous.

17
00:01:55,146 --> 00:01:59,218
So maybe I want to more emphasize the power of these Tesla than

18
00:01:59,304 --> 00:02:02,446
this particular analogy, but really, it's applicable.

19
00:02:02,558 --> 00:02:05,986
So when I was growing up, one of my first cars was, it wasn't

20
00:02:06,018 --> 00:02:09,314
a Honda Accord, it was actually the Acura, but it's

21
00:02:09,362 --> 00:02:13,586
very similar. And with the 1998 Honda

22
00:02:13,618 --> 00:02:17,462
Accord, when something breaks, it's pretty

23
00:02:17,596 --> 00:02:20,874
clear. And we have a good understanding of what to

24
00:02:20,912 --> 00:02:24,522
do when that happens. And the types of things that can

25
00:02:24,576 --> 00:02:28,186
break in the 1998 Honda are.

26
00:02:28,368 --> 00:02:31,614
There's a lot of things that can go wrong, but they're nothing

27
00:02:31,732 --> 00:02:34,730
compared to what we see in the Tesla.

28
00:02:34,890 --> 00:02:38,926
Why is that? Well, technology has changed. So in

29
00:02:38,948 --> 00:02:42,254
the Tesla, not only are we dealing with

30
00:02:42,292 --> 00:02:45,578
the same mechanical challenges or some

31
00:02:45,604 --> 00:02:49,026
of the same mechanical challenges you find in the Honda, we have a

32
00:02:49,048 --> 00:02:52,066
whole bunch of other technologies that

33
00:02:52,088 --> 00:02:55,874
are bundled in here. So, yes, things can go wrong with your brakes and

34
00:02:55,912 --> 00:03:00,082
your tires and your motor. Even though the nature of the motor is extremely

35
00:03:00,146 --> 00:03:03,782
different, the Tesla is also running a whole bunch more

36
00:03:03,836 --> 00:03:08,006
software that you never found in the Honda. And the complexity

37
00:03:08,038 --> 00:03:11,722
of that software is such that it also is running in

38
00:03:11,856 --> 00:03:15,594
a cloud native type way, with containers and

39
00:03:15,632 --> 00:03:19,046
microservices, et cetera. So when something breaks

40
00:03:19,078 --> 00:03:22,430
in your Tesla, finding out

41
00:03:22,500 --> 00:03:26,686
exactly what went wrong, you can't just rely on

42
00:03:26,788 --> 00:03:30,062
an alert or a check engine light. You have to dig

43
00:03:30,116 --> 00:03:34,234
deeper. And to dig deeper, you need better tools

44
00:03:34,282 --> 00:03:37,266
for it. So that's what this talk is all about.

45
00:03:37,448 --> 00:03:41,006
The nature of applications has changed

46
00:03:41,118 --> 00:03:44,226
to be similar to the nature of cars. If you think of your

47
00:03:44,248 --> 00:03:47,990
1998 Honda as your monolith and your 2020

48
00:03:48,060 --> 00:03:51,842
Tesla as your microservices cloud native

49
00:03:51,906 --> 00:03:56,034
application. And as a result, how we approach fixing

50
00:03:56,082 --> 00:03:59,698
those problems also has to change. So my

51
00:03:59,724 --> 00:04:03,466
name is Chris Riley. I am a senior technology advocate at Splunk. What does

52
00:04:03,488 --> 00:04:07,078
that mean? It's basically I was a developer.

53
00:04:07,174 --> 00:04:10,714
I really enjoyed software development, but it wasn't my forte.

54
00:04:10,762 --> 00:04:14,430
So I'm a bad coder turned advocate. I couldn't give

55
00:04:14,500 --> 00:04:17,710
up the lifecycle and what it takes to build

56
00:04:17,780 --> 00:04:20,974
better applications faster. So now

57
00:04:21,012 --> 00:04:24,478
I talk about it. If you scan that QR code, you'll get access

58
00:04:24,564 --> 00:04:27,698
to other information about me. Please connect.

59
00:04:27,784 --> 00:04:31,262
I love to hear from people who have attended my sessions,

60
00:04:31,406 --> 00:04:34,610
both good and bad. If you have feedback on how to do better,

61
00:04:34,680 --> 00:04:37,910
please let me know. That's how I improve, but also

62
00:04:37,980 --> 00:04:41,734
just reach out to say hi. And there's a few fun

63
00:04:41,772 --> 00:04:44,920
little games I have on my social profile there.

64
00:04:45,530 --> 00:04:49,994
So back to what we were talking about, and that is that

65
00:04:50,192 --> 00:04:53,562
transformation is a given in the technology

66
00:04:53,696 --> 00:04:57,898
space. It is hard even in a these six

67
00:04:57,984 --> 00:05:01,630
month span to keep current on all the things

68
00:05:01,700 --> 00:05:05,674
that are going on in the DevOps and the application development

69
00:05:05,722 --> 00:05:09,214
market. So as a result, we have to think

70
00:05:09,252 --> 00:05:12,786
about change as a constant. Now we

71
00:05:12,808 --> 00:05:16,690
can't just expect to do what we did historically

72
00:05:17,270 --> 00:05:20,482
with modern applications. That also

73
00:05:20,536 --> 00:05:24,286
has to change. And ideally the way we monitor

74
00:05:24,318 --> 00:05:28,182
and support our applications should be ahead of

75
00:05:28,236 --> 00:05:32,386
the transformation of the application itself. Most organizations

76
00:05:32,418 --> 00:05:35,650
we find are currently in this lift and shift

77
00:05:35,810 --> 00:05:38,920
and refactor stage of application

78
00:05:39,370 --> 00:05:43,162
development with a lot of companies are in that cloud native world

79
00:05:43,216 --> 00:05:46,826
and they're born cloud native and they kind of have all the

80
00:05:46,848 --> 00:05:50,182
practices I'm talking about today kind of ironed down

81
00:05:50,256 --> 00:05:53,322
from day one where they've actually embedded

82
00:05:53,386 --> 00:05:56,640
their monitoring as a feature of their application.

83
00:05:57,250 --> 00:06:02,362
But most people don't have that luxury. We're going from shifting

84
00:06:02,426 --> 00:06:05,726
our workloads to the cloud and then breaking

85
00:06:05,758 --> 00:06:09,602
them apart with the strategies pattern and making them more like

86
00:06:09,656 --> 00:06:12,930
a cloud native application. So because

87
00:06:13,000 --> 00:06:17,382
this is happening, we have to acknowledge the fact that as

88
00:06:17,436 --> 00:06:20,786
we transform, we can't just think about supporting

89
00:06:20,818 --> 00:06:24,390
our applications the same way. What used to be

90
00:06:24,460 --> 00:06:28,390
in monolithic application architecture is we could always go to that

91
00:06:28,460 --> 00:06:32,326
one server and we could look at the alerts

92
00:06:32,438 --> 00:06:36,790
on that server, pull up the alerts, kind of see what's going on. And generally

93
00:06:36,870 --> 00:06:40,060
because these servers were set it and forget it,

94
00:06:41,170 --> 00:06:44,074
the things that went wrong were predictable.

95
00:06:44,202 --> 00:06:47,902
Like the 1998 Honda. I don't know if

96
00:06:47,956 --> 00:06:51,774
you've experienced this, but back when I was maintaining servers and

97
00:06:51,812 --> 00:06:55,214
data centers, we always had like one server,

98
00:06:55,262 --> 00:06:58,786
the Billy Bob server, and that Billy Bob server. Every two

99
00:06:58,888 --> 00:07:02,674
weeks we had to restart. And when we restarted it, everything was

100
00:07:02,712 --> 00:07:06,054
magically better. Again, did you try turning it off and

101
00:07:06,092 --> 00:07:08,806
on? And we did, and it fixed the problem.

102
00:07:08,988 --> 00:07:12,440
We weren't really looking at what was happening at the application,

103
00:07:13,690 --> 00:07:17,554
and alerts actually were enough

104
00:07:17,692 --> 00:07:21,590
context to address these problem, because that infrastructure

105
00:07:21,670 --> 00:07:25,690
never changed. The number of things that could go wrong were fairly limited.

106
00:07:26,350 --> 00:07:30,522
Now we're talking about applications with distributed architectures,

107
00:07:30,586 --> 00:07:34,590
microservices based architectures. So instead of one

108
00:07:34,660 --> 00:07:38,670
server, we have many, many services, all doing

109
00:07:38,740 --> 00:07:42,398
very small, very specific things, and each service

110
00:07:42,564 --> 00:07:45,570
has a contract to the rest of the organization,

111
00:07:46,230 --> 00:07:50,498
but the service itself doesn't care really.

112
00:07:50,664 --> 00:07:54,254
So all they care is these take in some sort of input

113
00:07:54,302 --> 00:07:57,654
and they output some sort of data. But anybody can

114
00:07:57,772 --> 00:08:01,286
consume that service. Well, because the web of

115
00:08:01,308 --> 00:08:05,110
these things can interconnected in unknown ways.

116
00:08:05,260 --> 00:08:08,818
It's not possible for me as an operator to go to these Billy

117
00:08:08,834 --> 00:08:12,986
Bob server, because there is no equivalent in

118
00:08:13,008 --> 00:08:16,698
the Billy Bob service. There is no one service that

119
00:08:16,704 --> 00:08:19,690
I can just always go to look at the events for that service,

120
00:08:19,760 --> 00:08:23,342
restart the service, and be good. We are not able

121
00:08:23,396 --> 00:08:27,374
to conceptualize and hold in our minds the

122
00:08:27,412 --> 00:08:31,326
architecture of these applications and the

123
00:08:31,348 --> 00:08:35,360
entire nature of the application like we could in monolithic days.

124
00:08:35,830 --> 00:08:38,898
So we can't expect to go and find the problem.

125
00:08:38,984 --> 00:08:42,386
The problem has to find us, and it has to find us

126
00:08:42,408 --> 00:08:46,166
in a way that has good enough context that we can resolve the

127
00:08:46,188 --> 00:08:47,880
incident quickly.

128
00:08:49,130 --> 00:08:52,454
So that's where, when we start to look at the relationship

129
00:08:52,572 --> 00:08:56,280
between the services, we more have a visual, kind of like these.

130
00:08:57,530 --> 00:09:01,334
And again, if we were to approach it with an alerting

131
00:09:01,462 --> 00:09:05,146
approach, we could probably go and find an alert that would

132
00:09:05,168 --> 00:09:08,890
give us some sort of detail. But it may be the wrong source,

133
00:09:09,230 --> 00:09:13,274
because we can have an API gateway throw an alert and

134
00:09:13,312 --> 00:09:17,262
say things are broken, only to come to find out way

135
00:09:17,316 --> 00:09:20,554
too long down the road that it had nothing to do with these API

136
00:09:20,602 --> 00:09:23,874
gateway. It wasn't the API gateway that was

137
00:09:24,072 --> 00:09:27,586
causing the problem at all, it just has cascaded down. And the

138
00:09:27,608 --> 00:09:30,580
API gateway was the first to scream at us.

139
00:09:31,830 --> 00:09:35,162
So this becomes very complicated.

140
00:09:35,326 --> 00:09:39,730
And as you can see, alerts are not sufficient

141
00:09:39,810 --> 00:09:43,640
in this type of scenario. But also

142
00:09:44,010 --> 00:09:47,890
because of the complexity of these modern applications,

143
00:09:48,050 --> 00:09:51,482
the life of those who are on call becomes more

144
00:09:51,536 --> 00:09:55,226
difficult. Nobody wants to be paged at night.

145
00:09:55,328 --> 00:09:58,970
Being on call sucks. You could be a developer who's on call,

146
00:09:59,040 --> 00:10:02,190
you could be an SRE, a cloud operations engineer.

147
00:10:02,770 --> 00:10:06,586
Everything we do, and we are very guilty about talking about features

148
00:10:06,618 --> 00:10:10,350
and functionalities of technology, but everything we do

149
00:10:10,420 --> 00:10:14,500
is in the service of making the on call experience

150
00:10:15,350 --> 00:10:18,754
better. That's ultimately what we're trying to do

151
00:10:18,792 --> 00:10:22,206
here so we can get all convoluted about monitoring

152
00:10:22,238 --> 00:10:25,474
and observability and all that stuff. Really all we're trying to do is

153
00:10:25,512 --> 00:10:28,902
make that on call experience better. What does better

154
00:10:28,956 --> 00:10:32,262
mean? Well, first of all, it means hopefully you're never woken up at night.

155
00:10:32,396 --> 00:10:35,846
That may still happen. Second means if you

156
00:10:35,868 --> 00:10:38,780
are oncall and you are woken up,

157
00:10:39,150 --> 00:10:42,650
you're the right person. It actually gets to the person who

158
00:10:42,720 --> 00:10:46,134
should be resolving the problem. If you aren't

159
00:10:46,182 --> 00:10:50,254
the right person, hopefully you're giving enough data that

160
00:10:50,292 --> 00:10:53,566
you can resolve it yourself or know exactly

161
00:10:53,668 --> 00:10:56,640
who to go to to resolve it.

162
00:10:57,890 --> 00:11:01,642
So logs simply are not enough. You cannot

163
00:11:01,706 --> 00:11:05,890
be on call, go from an alert to logs.

164
00:11:06,310 --> 00:11:09,282
Everything has to change. Well,

165
00:11:09,336 --> 00:11:12,526
because of that, we get this beautiful new term

166
00:11:12,718 --> 00:11:16,978
and it's called observability. And if you're really cool, you abbreviate

167
00:11:16,994 --> 00:11:20,482
it eleven y. Maybe even pronounce it Ollie.

168
00:11:20,626 --> 00:11:24,598
That's the upper echelon of the terminology club there.

169
00:11:24,764 --> 00:11:28,058
If you're a good curmudgeon like me, and you hear these terms,

170
00:11:28,224 --> 00:11:31,798
first thing you do is say, no, we don't need another term,

171
00:11:31,894 --> 00:11:34,762
it's just monitoring. Yes, you're right,

172
00:11:34,896 --> 00:11:38,406
observability is just monitoring.

173
00:11:38,598 --> 00:11:41,834
But the reason we use the term observability is the nature

174
00:11:41,882 --> 00:11:45,374
of monitoring has changed, which means the things that we

175
00:11:45,412 --> 00:11:50,510
need to do to support our applications better has also changed.

176
00:11:51,570 --> 00:11:53,950
And in the world of observability,

177
00:11:54,450 --> 00:11:58,446
alerts are not incidents and incidents

178
00:11:58,558 --> 00:12:02,082
are not tickets. Now, if you remember at the very beginning I said,

179
00:12:02,136 --> 00:12:05,166
you're in the right place if you think that these are the same things,

180
00:12:05,288 --> 00:12:09,334
because they're not. They are fundamentally different and

181
00:12:09,372 --> 00:12:13,218
they need to be different because whereas alerts

182
00:12:13,314 --> 00:12:16,600
potentially got us to a log, that was good enough,

183
00:12:17,210 --> 00:12:20,390
we now have to live in this world of incidents.

184
00:12:20,550 --> 00:12:24,202
But incidents imply something that are completely different than

185
00:12:24,256 --> 00:12:26,620
ticketing and using a ticketing system.

186
00:12:27,230 --> 00:12:30,734
Well, let's go back to the car analogy and see how this comes

187
00:12:30,772 --> 00:12:34,094
together. So alerts are

188
00:12:34,132 --> 00:12:38,110
like your check engine light. Your car has told you something is wrong,

189
00:12:38,180 --> 00:12:41,722
a system inside of your vehicle has screamed

190
00:12:41,786 --> 00:12:45,378
I am broken or something is not correct. Here,

191
00:12:45,544 --> 00:12:49,186
tell them something is wrong. That's all you generally get with an

192
00:12:49,208 --> 00:12:51,940
alert. You get a pointer to an issue.

193
00:12:52,550 --> 00:12:55,826
Now that's valuable. If you're driving down the

194
00:12:55,848 --> 00:12:59,442
road, check engine light comes on, you're probably going to be more hyper

195
00:12:59,506 --> 00:13:02,806
aware of your environment and maybe start to

196
00:13:02,828 --> 00:13:06,840
think about taking action. So you pull over to the side of the road

197
00:13:07,210 --> 00:13:10,794
what's the next step? Well, the alert itself, unless you have

198
00:13:10,832 --> 00:13:14,726
smoke coming from your hood and you know you're overheating or there's

199
00:13:14,758 --> 00:13:18,406
something else obviously obvious that you can address. You don't

200
00:13:18,438 --> 00:13:22,314
know enough to fix the problem, so you need help. Well that's

201
00:13:22,362 --> 00:13:25,610
incident response. Incident response is your roadside

202
00:13:25,690 --> 00:13:29,294
assistance. It's who you call to come and

203
00:13:29,332 --> 00:13:33,438
support you in finding the problem and resolving it.

204
00:13:33,604 --> 00:13:36,754
Now maybe they get there and they can jump your

205
00:13:36,792 --> 00:13:40,446
battery, they can replace your battery, they can give you coolant,

206
00:13:40,638 --> 00:13:44,318
whatever it is, maybe they can fix these problem. That's ideal

207
00:13:44,414 --> 00:13:48,358
scenario. Or maybe with their

208
00:13:48,524 --> 00:13:52,326
expertise they understand that this has escalated and they

209
00:13:52,348 --> 00:13:56,006
need to bring in help. How do they do that? They take you to the

210
00:13:56,028 --> 00:13:59,606
shop. So you go into the shop and they plug

211
00:13:59,638 --> 00:14:03,014
you into a computer and they get diagnostic codes.

212
00:14:03,062 --> 00:14:07,114
Or in the case of these Tesla, they get a whole flood of information

213
00:14:07,232 --> 00:14:10,794
coming out of the system. So incident response

214
00:14:10,842 --> 00:14:14,446
is that whole lifecycle of mobilization and you

215
00:14:14,468 --> 00:14:17,726
want it to happen as quickly has possible so you can

216
00:14:17,748 --> 00:14:21,102
resolve the incident. Well where does that put

217
00:14:21,156 --> 00:14:24,782
incident management? Well the foundation of incident management

218
00:14:24,846 --> 00:14:28,926
came from ITSM practices and it's driven

219
00:14:29,038 --> 00:14:32,274
with a ticketing system. In the states we have

220
00:14:32,312 --> 00:14:36,322
something called Carfax. Carfax is the equivalent of

221
00:14:36,376 --> 00:14:40,086
incident management. It is a history of all

222
00:14:40,108 --> 00:14:43,206
the things that has happened to your automobile. So once your

223
00:14:43,228 --> 00:14:46,518
car has been brought into the shop, a Carfax record

224
00:14:46,604 --> 00:14:50,454
will be created, an incidents will be created, and it will be historical

225
00:14:50,502 --> 00:14:53,674
details of everything that has happened, what happened,

226
00:14:53,792 --> 00:14:57,578
and potentially you can use that information in the future.

227
00:14:57,744 --> 00:15:01,614
That is what incident management is and should be.

228
00:15:01,732 --> 00:15:05,534
Although many organizations will try to use incident management and

229
00:15:05,572 --> 00:15:09,226
ticketing as their incident response tool, and that's

230
00:15:09,258 --> 00:15:13,086
not the most effective way to do it. And the reason it's not

231
00:15:13,108 --> 00:15:16,306
the most effective way to do it is a lot

232
00:15:16,488 --> 00:15:20,190
happens in the lifecycle of an incident,

233
00:15:20,350 --> 00:15:23,902
from the alert to the operations of an incident,

234
00:15:23,966 --> 00:15:27,734
which is not just an alert. As a matter of fact, an incident can

235
00:15:27,772 --> 00:15:31,878
be many alerts put together to

236
00:15:31,964 --> 00:15:35,302
paging escalation, getting to the right person at the right time,

237
00:15:35,356 --> 00:15:38,870
giving them all the context, and then finally moving

238
00:15:38,940 --> 00:15:43,210
that into maybe chat ops or a ticketing system or

239
00:15:43,280 --> 00:15:45,994
whatever it is to keep that system of record.

240
00:15:46,192 --> 00:15:49,754
Now if this view didn't look complex, this view looks even more

241
00:15:49,792 --> 00:15:53,882
complex. This is an entire architecture of the lifecycle

242
00:15:53,946 --> 00:15:57,310
of an alert, from some sort of system,

243
00:15:57,460 --> 00:16:00,730
a tool, to creating an incidents

244
00:16:00,810 --> 00:16:04,434
and mobilizing a responder and

245
00:16:04,472 --> 00:16:07,698
potentially taking action within side the

246
00:16:07,704 --> 00:16:11,662
incident itself. So what we get with an incident

247
00:16:11,726 --> 00:16:15,518
over alerts is less noise, hopefully depending

248
00:16:15,534 --> 00:16:18,946
on the nature of your systems. I still am blown away by the fact of

249
00:16:18,968 --> 00:16:22,086
the number of systems. I see where they're like oh yeah, we get

250
00:16:22,108 --> 00:16:25,926
1000 alerts a day and we just kind of ignore that.

251
00:16:26,028 --> 00:16:30,090
Why don't you go fix them? That should be your first effort.

252
00:16:30,990 --> 00:16:34,454
But the idea of an incident is less noise

253
00:16:34,502 --> 00:16:38,614
because incidents are aggregation of alerts.

254
00:16:38,662 --> 00:16:41,790
There's rules and logic associated of when something

255
00:16:41,860 --> 00:16:45,166
actually becomes an incident, when it is significant enough to

256
00:16:45,188 --> 00:16:48,538
be an incident. Incidents also give us more context.

257
00:16:48,634 --> 00:16:52,730
Alert are triggering off of something

258
00:16:52,820 --> 00:16:56,798
very specific in an application or these infrastructure.

259
00:16:56,894 --> 00:17:00,834
So the amount of detail is very limited. Where an incident can be based

260
00:17:00,872 --> 00:17:04,798
on a history of incidents can be linked

261
00:17:04,894 --> 00:17:08,130
and correlated with confluence articles,

262
00:17:08,210 --> 00:17:11,446
run books, et cetera. Which gets us to the

263
00:17:11,468 --> 00:17:15,446
point where incidents can drive action. Because there is more context and

264
00:17:15,468 --> 00:17:19,622
detail as a part of the incident, then there can be greater

265
00:17:19,686 --> 00:17:22,746
action and greater execution as a part of

266
00:17:22,768 --> 00:17:26,074
that. Now again, all we're really trying

267
00:17:26,112 --> 00:17:30,146
to do here is make the life of on call suck

268
00:17:30,198 --> 00:17:34,350
less, which is great because it also makes the application

269
00:17:34,500 --> 00:17:37,802
run better. So in a typical incidents

270
00:17:37,866 --> 00:17:41,626
lifecycle we have the process of acknowledgment.

271
00:17:41,818 --> 00:17:44,790
You touch a whole bunch of tools, you might reach out to a whole bunch

272
00:17:44,810 --> 00:17:48,654
of people. Usually there's two methods of interacting

273
00:17:48,702 --> 00:17:52,606
with other people. The first method is what we call spray and pray,

274
00:17:52,718 --> 00:17:56,382
where you blast out to the entire organization. You hope somebody picks it up.

275
00:17:56,536 --> 00:17:59,910
Very common in the knock type environment.

276
00:18:00,410 --> 00:18:04,834
And it used to work okay, but it was never super effective.

277
00:18:04,962 --> 00:18:08,758
What happened is there's a lot of back and forth between people. You're touching a

278
00:18:08,764 --> 00:18:12,474
lot of tools to find the information you need and the amount of touch

279
00:18:12,512 --> 00:18:15,834
points was tremendous. So it usually lasted about

280
00:18:15,872 --> 00:18:19,046
6 hours and five reroutes, et cetera.

281
00:18:19,238 --> 00:18:22,838
This is totally based on the nature of your application, but this is actually a

282
00:18:22,864 --> 00:18:26,000
consistent average we have seen with customers.

283
00:18:26,690 --> 00:18:29,950
Then once you get to the source of the data, you found the right person,

284
00:18:30,020 --> 00:18:33,634
or maybe you do what's called lazy mobilization. These you always find that one

285
00:18:33,672 --> 00:18:36,994
person who fixes everything, but you quickly are

286
00:18:37,032 --> 00:18:40,594
on the path of burning them out and you start towards

287
00:18:40,712 --> 00:18:44,146
resolution. Resolution is not just,

288
00:18:44,248 --> 00:18:47,702
oh, we need to restart the service, resolution is,

289
00:18:47,836 --> 00:18:51,638
we restarted the service and now everything is green. Because usually,

290
00:18:51,724 --> 00:18:55,186
and especially in a microservices world, the source

291
00:18:55,218 --> 00:18:58,682
of the problem will cascade into other services and cause

292
00:18:58,736 --> 00:19:03,100
issues down the road. And it takes time for those all to come online.

293
00:19:04,190 --> 00:19:07,930
So with true incident response, and that was driven by

294
00:19:08,080 --> 00:19:11,654
a ticketing system. We're trying to normalize and flatten that curve.

295
00:19:11,702 --> 00:19:15,690
We're trying to get acknowledgment to be as quick has possible. That's the mobilization

296
00:19:15,770 --> 00:19:19,550
roadside assistant. We're trying to touch as few tools as possible.

297
00:19:19,620 --> 00:19:23,198
That's context, understanding, getting to the right person,

298
00:19:23,364 --> 00:19:27,102
and then having the tools like run tools to resolve

299
00:19:27,166 --> 00:19:29,300
the incident has quickly as possible.

300
00:19:30,470 --> 00:19:33,540
So this is all how this comes together.

301
00:19:33,990 --> 00:19:37,074
Our observability practices, which is monitoring,

302
00:19:37,122 --> 00:19:41,458
is what gives these alerts and the context

303
00:19:41,634 --> 00:19:45,782
to our incident responding practice, which is mobilization and

304
00:19:45,836 --> 00:19:49,674
action to our incident management and

305
00:19:49,712 --> 00:19:53,402
ticketing process, which is our record

306
00:19:53,536 --> 00:19:57,260
and tracking of incidents over a long period of time.

307
00:19:57,790 --> 00:20:01,438
And another way to look at this is kind of this

308
00:20:01,524 --> 00:20:05,198
hierarchy of knowledge or insight or success

309
00:20:05,364 --> 00:20:08,474
ultimately, which is the alerts.

310
00:20:08,602 --> 00:20:12,394
We get tons of alerts, and some of them are useful,

311
00:20:12,442 --> 00:20:15,774
some are not. But these can roll up into incidents

312
00:20:15,822 --> 00:20:19,806
where we have more meaning and we can start to mobilize

313
00:20:19,918 --> 00:20:23,522
and do something with the alerts that is meaningful and

314
00:20:23,576 --> 00:20:27,586
get that in front of the right person. Then through troubleshooting,

315
00:20:27,698 --> 00:20:31,346
the incident links us directly to a dashboard.

316
00:20:31,458 --> 00:20:35,510
And once we are at that dashboard, we start to get insights of what's actually

317
00:20:35,580 --> 00:20:39,434
going on, where we may dive into a log at that

318
00:20:39,472 --> 00:20:42,870
point, we may be going to a log in a microservices

319
00:20:42,950 --> 00:20:46,182
environments. We may be looking at traces and spans

320
00:20:46,246 --> 00:20:49,114
for the details of what's gone wrong.

321
00:20:49,312 --> 00:20:53,338
Everything should be right there that we need to resolve

322
00:20:53,354 --> 00:20:57,406
these incident as quickly as possible. Once we have insight and

323
00:20:57,428 --> 00:21:01,166
we know what's going on, we take action. So we

324
00:21:01,188 --> 00:21:04,590
want to compress the time between all of these steps,

325
00:21:04,750 --> 00:21:08,434
and we also want to reduce these noise, which would be shrinking this

326
00:21:08,472 --> 00:21:12,274
way of all of these steps. So if you

327
00:21:12,312 --> 00:21:15,602
came here thinking that incident response alerts and

328
00:21:15,656 --> 00:21:19,158
incidents and tickets were all kind of one and the same,

329
00:21:19,324 --> 00:21:23,046
hopefully you now understand that they are not. And what

330
00:21:23,068 --> 00:21:27,154
I'm encouraging you to do is if you have not established a practice

331
00:21:27,282 --> 00:21:30,682
of incident response versus just

332
00:21:30,736 --> 00:21:34,582
being your monitoring tools and staring at dashboards, and hoping

333
00:21:34,646 --> 00:21:38,282
that at some point in time something interesting happens

334
00:21:38,336 --> 00:21:42,186
on your dashboards, or you're using a ticketing system, and hoping

335
00:21:42,218 --> 00:21:45,454
that somebody is really fast at typing tickets and they

336
00:21:45,492 --> 00:21:49,710
put enough detail in there that somebody will grab it and resolve the incident.

337
00:21:50,130 --> 00:21:53,926
Building a true incident responding strategy is necessary

338
00:21:53,978 --> 00:21:57,554
for the SRe practice. It's necessary for any sort

339
00:21:57,672 --> 00:22:01,378
of cloud operations, because the nature of applications in

340
00:22:01,384 --> 00:22:05,006
the cloud have changed. They're distributed. You don't have the billy bob

341
00:22:05,038 --> 00:22:08,354
server that you can always go to to resolve the problem

342
00:22:08,472 --> 00:22:12,322
in the same way that you always resolve it. You don't have the 1998 Honda.

343
00:22:12,386 --> 00:22:16,166
You are now driving the Tesla. Congratulations. Now you

344
00:22:16,188 --> 00:22:19,926
have to support it in a different way. So hopefully that

345
00:22:19,948 --> 00:22:23,958
was compelling. Please again, reach out if it makes sense.

346
00:22:24,124 --> 00:22:26,520
And thank you so much for enjoying me.

347
00:22:27,290 --> 00:22:31,358
Hopefully you enjoyed it. Join me at

348
00:22:31,444 --> 00:22:35,022
another virtual event. The content here is fantastic. I know

349
00:22:35,076 --> 00:22:38,414
there's a ton of information out there, so for you to take a little

350
00:22:38,452 --> 00:22:41,854
bit of your time and spend it with me means a lot.

351
00:22:41,972 --> 00:22:45,180
So I hope to see you at another event and have a great day.

