1
00:00:35,410 --> 00:00:38,950
Everyone, this is solving migration pipelines.

2
00:00:39,770 --> 00:00:41,750
When we talk about migration,

3
00:00:42,730 --> 00:00:47,814
there are, this is a nuanced topic in

4
00:00:47,852 --> 00:00:52,174
some shape or form, all the backend develop person, the administrators of course,

5
00:00:52,292 --> 00:00:56,414
will be going into this

6
00:00:56,612 --> 00:01:00,346
long migration projects that might seem

7
00:01:00,458 --> 00:01:04,306
like it has no end. How to think about a

8
00:01:04,328 --> 00:01:07,746
migration and what are all the types out there in

9
00:01:07,768 --> 00:01:11,666
the pinot wild and how to have

10
00:01:11,688 --> 00:01:14,834
a Zen approach towards it. That's what my talk is all

11
00:01:14,872 --> 00:01:18,162
about. And it's not too technical.

12
00:01:18,306 --> 00:01:21,590
That's the first thing I would say.

13
00:01:21,660 --> 00:01:25,814
This is fully process driven. And how to think about a migration project

14
00:01:25,932 --> 00:01:29,674
is what we'll be focusing on. So what is

15
00:01:29,712 --> 00:01:33,546
considered migration? When you say migration data.

16
00:01:33,648 --> 00:01:37,242
Migration is a process of transferring one

17
00:01:37,296 --> 00:01:41,050
data from the source system to the target system.

18
00:01:41,200 --> 00:01:45,002
Throughout the talk I'll be mentioning source as the database

19
00:01:45,066 --> 00:01:49,402
or the system that you are using currently in the destination target.

20
00:01:49,546 --> 00:01:53,066
That is the new system that you will be switching on

21
00:01:53,108 --> 00:01:57,422
to. So whenever

22
00:01:57,566 --> 00:02:00,882
this kind of migrations happens, it is

23
00:02:00,936 --> 00:02:04,334
pure chaos. So how to solve

24
00:02:04,382 --> 00:02:07,830
those problems ahead of time and how to think about

25
00:02:07,900 --> 00:02:11,970
all this in a very organized,

26
00:02:12,050 --> 00:02:15,270
systematic manner. That's what we are going to talk about.

27
00:02:15,420 --> 00:02:19,094
So let's get into it then.

28
00:02:19,292 --> 00:02:22,426
There are a lot of types of migrations out there.

29
00:02:22,528 --> 00:02:25,866
You will know database migration directly. Most of

30
00:02:25,888 --> 00:02:28,794
us would have worked in some shape or form in that.

31
00:02:28,912 --> 00:02:32,766
So that's from one database to another.

32
00:02:32,948 --> 00:02:36,174
Either it could be due to an upgrade or through

33
00:02:36,212 --> 00:02:39,902
a cloud or anything of that sort. And cloud

34
00:02:39,956 --> 00:02:43,374
migration itself is a very big topic when you

35
00:02:43,412 --> 00:02:46,946
say you have on premise and you have running those application for a long

36
00:02:46,968 --> 00:02:50,290
time in on premise and it is moving to cloud now,

37
00:02:50,360 --> 00:02:54,482
right? And there are application migrations and

38
00:02:54,616 --> 00:02:57,650
new type of migration is business process migration.

39
00:02:57,730 --> 00:03:00,886
That's my specialty as well. And it

40
00:03:00,908 --> 00:03:04,822
is because of all these SaaS tools that are out there.

41
00:03:04,956 --> 00:03:09,702
And the last but not

42
00:03:09,756 --> 00:03:12,390
the complicated one, is the storage migration.

43
00:03:13,130 --> 00:03:15,640
So well that said,

44
00:03:16,410 --> 00:03:19,934
all the migration has same type of

45
00:03:20,012 --> 00:03:24,122
problems and the same type of systematic

46
00:03:24,186 --> 00:03:28,222
solutions will apply for any types I have set.

47
00:03:28,356 --> 00:03:32,074
So what are the systematic

48
00:03:32,122 --> 00:03:36,354
solutions that you are proposing here? So when

49
00:03:36,472 --> 00:03:40,420
assess first and then plan next.

50
00:03:40,870 --> 00:03:45,070
So when you think about cloud migration, especially assessing

51
00:03:45,150 --> 00:03:48,338
what you have currently, what are all the environments,

52
00:03:48,434 --> 00:03:51,574
what are all the dependencies, what are all the type of servers, what are all

53
00:03:51,612 --> 00:03:55,926
the CI CD pipelines? And the different

54
00:03:56,028 --> 00:04:00,010
aspect of how you currently run your system

55
00:04:00,160 --> 00:04:05,050
is going to help you very much in

56
00:04:05,120 --> 00:04:09,270
planning the migration itself without assessing.

57
00:04:09,350 --> 00:04:13,086
If you go in stating this is my front

58
00:04:13,108 --> 00:04:16,782
end, this is my back end, and that's it. There could be some

59
00:04:16,836 --> 00:04:19,902
script that is vital to your project that is

60
00:04:19,956 --> 00:04:23,938
running currently and serving the system will not be thought about.

61
00:04:24,104 --> 00:04:28,594
So how you are going to think about that

62
00:04:28,632 --> 00:04:32,498
particular small script that is running in your system and keeping it up.

63
00:04:32,664 --> 00:04:36,450
How would you think about that when you already

64
00:04:36,520 --> 00:04:40,514
have a live system running and if it is mission critical,

65
00:04:40,642 --> 00:04:44,422
you have to have it listed, of course. But even

66
00:04:44,476 --> 00:04:48,198
if it is not, you have to have it in your assessment

67
00:04:48,374 --> 00:04:52,074
so you will know its importance in how you are going

68
00:04:52,112 --> 00:04:55,526
to onboard such lesser

69
00:04:55,558 --> 00:05:00,018
used systems also in your new environment. So assess

70
00:05:00,134 --> 00:05:03,710
first assess what you have and then plan

71
00:05:03,780 --> 00:05:07,806
for the next plan end to end. When I say plan end to

72
00:05:07,828 --> 00:05:11,694
end, do not just think about down the

73
00:05:11,732 --> 00:05:15,314
line. I want to just move

74
00:05:15,352 --> 00:05:18,834
all the things to target and just connect my

75
00:05:19,032 --> 00:05:22,658
application to my target, the new target, right?

76
00:05:22,744 --> 00:05:26,534
The new system that you have, but that's not going to help you,

77
00:05:26,652 --> 00:05:30,530
right? So you have to think about your BAU

78
00:05:30,610 --> 00:05:33,782
currently running in your source system and

79
00:05:33,836 --> 00:05:37,366
what is going to be bau that will be running in

80
00:05:37,388 --> 00:05:41,194
your target system, that is the destination system and how

81
00:05:41,232 --> 00:05:45,082
you are going to optimize and solve the problems that are

82
00:05:45,136 --> 00:05:48,058
here in your current source system.

83
00:05:48,224 --> 00:05:51,886
So thinking but end to end of

84
00:05:51,908 --> 00:05:55,934
it and making sure your BAU runs after

85
00:05:56,132 --> 00:05:59,802
that correctly is very crucial,

86
00:05:59,946 --> 00:06:04,030
especially in terms of databases and applications

87
00:06:04,110 --> 00:06:07,838
and very, very crucial for cloud based migration.

88
00:06:08,014 --> 00:06:11,650
So plan it end to end. Have a plan

89
00:06:11,720 --> 00:06:15,346
for CI CD pipelines. Have a plan for how many users

90
00:06:15,378 --> 00:06:18,886
are going to use it and how many users will

91
00:06:18,908 --> 00:06:22,840
be onboarded on the migration phase, how many of them

92
00:06:24,010 --> 00:06:27,474
will be testing that in the destination system.

93
00:06:27,612 --> 00:06:31,018
And when the BAU starts with the destination system,

94
00:06:31,104 --> 00:06:34,630
how will I onboard the application users,

95
00:06:34,710 --> 00:06:39,174
the database user, how will I make sure the entire structure

96
00:06:39,222 --> 00:06:42,634
that is there in the current system

97
00:06:42,832 --> 00:06:46,362
is not damaged when I go into the target

98
00:06:46,426 --> 00:06:49,694
system, that's what you will be planning and you will

99
00:06:49,732 --> 00:06:54,478
always be keeping security and governance

100
00:06:54,654 --> 00:06:57,986
as your pillars to decide any

101
00:06:58,168 --> 00:07:01,970
and all decisions, right? When you're choosing a product

102
00:07:02,040 --> 00:07:05,534
out there, when you're building a pipeline,

103
00:07:05,662 --> 00:07:09,842
whatever you do, even physically moving

104
00:07:09,896 --> 00:07:13,670
the storage disk to one place to another, you will be thinking

105
00:07:13,740 --> 00:07:16,520
about security and governance first,

106
00:07:17,710 --> 00:07:21,066
right? And then yes,

107
00:07:21,248 --> 00:07:24,870
that's the next thing, right? You develop some pipeline.

108
00:07:24,950 --> 00:07:28,410
How will you test it? So testing can occur in

109
00:07:28,480 --> 00:07:34,454
multiple different phases. Always plan for intermediate

110
00:07:34,502 --> 00:07:38,414
testing phases where you will build a pipeline, do some

111
00:07:38,452 --> 00:07:43,086
transformation, put it out there and have the UAT user

112
00:07:43,198 --> 00:07:47,074
based testing as well onboard simple beta users to

113
00:07:47,192 --> 00:07:51,186
make sure your target is performing all the

114
00:07:51,208 --> 00:07:55,354
way through every Persona that is the database

115
00:07:55,422 --> 00:07:58,822
administrator and the application administrators and

116
00:07:58,876 --> 00:08:02,150
your end users are able to use the target system

117
00:08:02,300 --> 00:08:05,718
with the test amount of data, at least to the

118
00:08:05,804 --> 00:08:09,466
BAU level, not to the disaster level. We will

119
00:08:09,488 --> 00:08:13,094
get into that, but at least to run the BAU.

120
00:08:13,222 --> 00:08:16,522
Will the target be efficient enough? What are

121
00:08:16,576 --> 00:08:20,306
the things I have to do next? So test in phases,

122
00:08:20,438 --> 00:08:24,234
test for all personas and have a foolproof

123
00:08:24,282 --> 00:08:27,866
testing mechanism for even if it is a storage,

124
00:08:27,978 --> 00:08:29,710
have a byte level testing.

125
00:08:31,570 --> 00:08:34,834
Have a way to test any

126
00:08:34,872 --> 00:08:37,380
kind of scripts that you are running, right?

127
00:08:38,550 --> 00:08:42,660
Any kind of intelligence that you are learning and any kind of

128
00:08:43,990 --> 00:08:46,710
business reports that you are running.

129
00:08:46,860 --> 00:08:50,390
Just try to open that and

130
00:08:50,460 --> 00:08:53,650
see what is happening. Is this adequate?

131
00:08:53,810 --> 00:08:57,366
Just try two see in the layman level as well

132
00:08:57,468 --> 00:09:00,060
and write up to the administrator level.

133
00:09:00,430 --> 00:09:03,834
So that's the testing mechanism in post

134
00:09:03,872 --> 00:09:08,390
migration audits. So of course every migration

135
00:09:08,470 --> 00:09:13,598
should follow with an audit to make sure whatever process

136
00:09:13,684 --> 00:09:17,322
that is followed throughout the case is done correctly.

137
00:09:17,466 --> 00:09:20,990
Right. Most fundamental problem that you run into

138
00:09:21,060 --> 00:09:24,494
in a migration project is can data capture,

139
00:09:24,622 --> 00:09:28,206
right? How will you make sure your source

140
00:09:28,238 --> 00:09:31,634
system and target system are almost on par and

141
00:09:31,672 --> 00:09:34,962
you are going to go live within like two

142
00:09:35,016 --> 00:09:39,190
days or so? How will you boot those two days data? Two here.

143
00:09:39,340 --> 00:09:43,222
I'm of course taking a vanilla example, but actually

144
00:09:43,356 --> 00:09:47,414
it could be running in parallel for months or end and

145
00:09:47,612 --> 00:09:50,986
you have a change data capturing mechanism to

146
00:09:51,008 --> 00:09:54,954
make sure all your systems, whole systems data

147
00:09:55,072 --> 00:09:58,490
move to target. So of course there are a lot of products

148
00:09:58,560 --> 00:10:02,202
out there to attempt. Two solve this in different aspects,

149
00:10:02,266 --> 00:10:05,790
but mainly those are in two categories,

150
00:10:06,290 --> 00:10:08,800
log based and query based.

151
00:10:09,970 --> 00:10:13,682
Log based will take the logs from the source system,

152
00:10:13,816 --> 00:10:17,506
reverse engineer it and produce the data in

153
00:10:17,528 --> 00:10:21,220
your destination system. Query based will happen

154
00:10:22,230 --> 00:10:26,134
with a time based query. So I have done a

155
00:10:26,172 --> 00:10:31,080
migration by second

156
00:10:32,490 --> 00:10:36,294
and I'll go 1 hour 50

157
00:10:36,332 --> 00:10:39,794
five second. And between these timestamps,

158
00:10:39,922 --> 00:10:43,926
whatever happened in your source system has to be copied

159
00:10:43,958 --> 00:10:47,980
to target system. So these are the main

160
00:10:49,890 --> 00:10:53,790
can data capture aspects in different

161
00:10:53,860 --> 00:10:57,466
kind of databases. It is handled

162
00:10:57,578 --> 00:11:01,002
differently. If you see Oracle,

163
00:11:01,146 --> 00:11:04,350
you'll be able to transfer two

164
00:11:04,420 --> 00:11:07,546
a pipeline and most of the cloud projects

165
00:11:07,658 --> 00:11:11,886
has pre built pipelines for making sure CDC

166
00:11:11,918 --> 00:11:15,620
is captured right. So think about

167
00:11:16,470 --> 00:11:21,350
really, really in a zen manner. You will not never

168
00:11:21,420 --> 00:11:24,678
be on par with your source system ever.

169
00:11:24,844 --> 00:11:27,978
You will always lag behind and how two

170
00:11:28,064 --> 00:11:31,402
smartly lag behind and how to make sure

171
00:11:31,536 --> 00:11:35,034
the switching off of your

172
00:11:35,072 --> 00:11:38,986
old system and moving to the new system

173
00:11:39,168 --> 00:11:41,760
happens little bit,

174
00:11:42,610 --> 00:11:46,000
might be minutes or seconds at least.

175
00:11:47,330 --> 00:11:50,474
There could be a minimum data loss.

176
00:11:50,602 --> 00:11:54,770
So think about that and design your system accordingly.

177
00:11:55,510 --> 00:11:59,294
One way to think about it is offline.

178
00:11:59,422 --> 00:12:03,362
Taking it offline. So I mean about taking

179
00:12:03,416 --> 00:12:07,522
it offline is that taking the source system offline

180
00:12:07,586 --> 00:12:11,398
and then bringing the destination system online

181
00:12:11,564 --> 00:12:15,638
and making sure the intermediate data

182
00:12:15,724 --> 00:12:19,674
is being transferred here, otherwise doing online,

183
00:12:19,792 --> 00:12:23,238
then you might have to think about approaching

184
00:12:23,334 --> 00:12:26,826
all the service by service. And there

185
00:12:26,848 --> 00:12:30,734
are plenty of ways to bring up the system

186
00:12:30,932 --> 00:12:32,240
online. Also,

187
00:12:34,130 --> 00:12:37,950
CDC is a mathematical problem, so there is

188
00:12:38,020 --> 00:12:41,360
no way you will get equal to or

189
00:12:43,590 --> 00:12:47,314
ahead of target. So that

190
00:12:47,352 --> 00:12:50,980
is not possible. Not at least

191
00:12:52,070 --> 00:12:55,300
if we are not talking about quantum computers, right,

192
00:12:56,890 --> 00:13:00,454
quantum computers and those kind

193
00:13:00,492 --> 00:13:04,226
of unrealistically small realm.

194
00:13:04,418 --> 00:13:09,334
There could be instantaneous data transfer, but technically

195
00:13:09,382 --> 00:13:12,486
that is not possible in our reality.

196
00:13:12,678 --> 00:13:16,538
So let's focus on

197
00:13:16,624 --> 00:13:20,154
database migration. So in database migrations, the key

198
00:13:20,192 --> 00:13:24,570
things you are looking at are the data has to be transferred

199
00:13:24,730 --> 00:13:28,110
completely. There shouldn't be any problem

200
00:13:28,180 --> 00:13:31,966
in bits or bytes. Then your database will not come up,

201
00:13:32,068 --> 00:13:35,490
of course, and duplicate free. So every time

202
00:13:35,560 --> 00:13:39,026
when you think of a migration, you also think of

203
00:13:39,048 --> 00:13:42,674
a cleanup and what is not currently working well

204
00:13:42,712 --> 00:13:46,946
in my database, shall I redesign and improve

205
00:13:46,978 --> 00:13:50,710
the indices or any other schema level changes

206
00:13:50,860 --> 00:13:53,560
to make sure the quality gets better?

207
00:13:54,170 --> 00:13:58,046
And when you try that kind of refactoring

208
00:13:58,098 --> 00:14:02,330
aspect of it, you have to think about data

209
00:14:02,400 --> 00:14:05,898
being duplicate free. And the order order

210
00:14:05,984 --> 00:14:10,894
is really important. So the timestamp wise or

211
00:14:11,012 --> 00:14:14,542
alphabetic, whichever business sense it makes,

212
00:14:14,676 --> 00:14:18,458
those order has two be maintained consistently

213
00:14:18,634 --> 00:14:21,886
in the source to destination. Right?

214
00:14:22,068 --> 00:14:25,074
So that's a very brief thing

215
00:14:25,112 --> 00:14:28,814
about database migration. You have plenty of ETL

216
00:14:28,862 --> 00:14:32,594
tools out there you can choose from, all the way from

217
00:14:32,792 --> 00:14:38,722
freeware to most developed ETL

218
00:14:38,786 --> 00:14:43,686
pipelines that can be adapted for

219
00:14:43,708 --> 00:14:47,794
your use. Case cloud migrations cloud migrations,

220
00:14:47,842 --> 00:14:51,954
of course is a relatively

221
00:14:52,002 --> 00:14:55,514
new thing for enterprise scale. But for

222
00:14:55,552 --> 00:14:58,970
a startup, if you are not developing in cloud,

223
00:14:59,120 --> 00:15:02,960
where are you developing? That's the question, right? So yeah,

224
00:15:03,890 --> 00:15:07,694
in cloud migrations you have to think about

225
00:15:07,732 --> 00:15:12,080
a lot of things. So migration project

226
00:15:12,550 --> 00:15:16,658
itself is mainly thought about with this six

227
00:15:16,744 --> 00:15:20,738
r's, right? These six r's will carry forward

228
00:15:20,824 --> 00:15:23,614
in application migration, database migration everywhere.

229
00:15:23,742 --> 00:15:27,574
But in cloud migration, it's the soul of

230
00:15:27,612 --> 00:15:31,494
it. That's how you decide from doing one

231
00:15:31,532 --> 00:15:35,142
thing or the other. So everything comes

232
00:15:35,196 --> 00:15:38,518
from your six odds. Once you explore

233
00:15:38,614 --> 00:15:42,122
assets, what are the source system it has?

234
00:15:42,256 --> 00:15:46,394
You will go into six r's, assign the

235
00:15:46,432 --> 00:15:51,114
respective r to this list of systems.

236
00:15:51,162 --> 00:15:57,182
You have found out that it is there in your source. So in

237
00:15:57,236 --> 00:16:00,010
that you see rehost,

238
00:16:00,170 --> 00:16:02,910
replatform, repurchase,

239
00:16:03,330 --> 00:16:07,310
retain, retire, or refactor

240
00:16:07,730 --> 00:16:11,354
so rehosting is left

241
00:16:11,412 --> 00:16:15,640
the entire thing. Put it in your cloud platform

242
00:16:16,010 --> 00:16:19,650
and start it back so the rehosting

243
00:16:19,810 --> 00:16:23,334
will have lift and shift approach. It's a very

244
00:16:23,372 --> 00:16:27,880
basic strategy may not apply for the

245
00:16:28,910 --> 00:16:32,540
quality improvement on any specific cloud

246
00:16:33,870 --> 00:16:37,658
based solution. If you are thinking about then

247
00:16:37,744 --> 00:16:40,834
rehosting may not be the right solution.

248
00:16:40,982 --> 00:16:44,014
But if you are going from one cloud provider to another,

249
00:16:44,132 --> 00:16:47,886
lift and shift could be very good. Like the

250
00:16:47,908 --> 00:16:51,886
same solution, the equivalent service will be provided by

251
00:16:51,988 --> 00:16:55,860
another cloud platform as well and rehost can work

252
00:16:56,470 --> 00:17:01,394
replatform to make

253
00:17:01,432 --> 00:17:04,562
sure the platform is more

254
00:17:04,616 --> 00:17:08,118
in line with cloud principle like thinking about can

255
00:17:08,204 --> 00:17:11,346
CD and automatic testing

256
00:17:11,538 --> 00:17:16,578
deployment strategies and your kubernetes

257
00:17:16,674 --> 00:17:20,360
containers, all those kind of things when you think about

258
00:17:20,890 --> 00:17:24,930
these will be replatform structure repurchase.

259
00:17:25,090 --> 00:17:28,726
When you have old ecommerce kind

260
00:17:28,748 --> 00:17:32,254
of software running and you want to move to cloud

261
00:17:32,372 --> 00:17:36,366
at that time, you will have same kind of SaaS options. Why not

262
00:17:36,388 --> 00:17:38,830
go for that? That is repurchase.

263
00:17:40,210 --> 00:17:43,566
Sell the like, stop the

264
00:17:43,588 --> 00:17:48,074
services of your old ecommerce solution

265
00:17:48,202 --> 00:17:50,620
and use something that is more in line with.

