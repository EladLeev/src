1
00:00:26,370 --> 00:00:29,798
Hey, this is Aakash Gupta and in this talk we'll discuss

2
00:00:29,884 --> 00:00:33,858
how we can use earth observation data or satellite images

3
00:00:34,034 --> 00:00:37,938
to quantify and measure economic activity.

4
00:00:38,114 --> 00:00:41,654
I am the CEO of and co founder of

5
00:00:41,692 --> 00:00:44,918
Thinkevolve Consultancy. We are building products

6
00:00:45,004 --> 00:00:48,290
for the next billion users. One of our projected

7
00:00:48,370 --> 00:00:52,414
involves creating global infrastructure to

8
00:00:52,532 --> 00:00:56,618
track and identify changes in economic

9
00:00:56,714 --> 00:01:00,510
activity at a global scale. We are using

10
00:01:00,580 --> 00:01:04,238
satellite images, social media and other alternative data sets

11
00:01:04,254 --> 00:01:08,290
for this purpose. If you have any questions or doubts you

12
00:01:08,360 --> 00:01:12,466
can reach me at LinkedIn or on my

13
00:01:12,568 --> 00:01:16,578
work email Id which is akash Thinkevolve consulting.com.

14
00:01:16,664 --> 00:01:20,082
During this talk I will try to simplify the concepts but if you have doubts,

15
00:01:20,146 --> 00:01:23,778
drop me a mail and I will be happy to answer your queries.

16
00:01:23,954 --> 00:01:27,962
For measuring economic activity we generally use proxies like

17
00:01:28,016 --> 00:01:31,622
measuring air pollution over major industrial belts,

18
00:01:31,766 --> 00:01:35,574
measuring the quality of water. Or you could look at some ESG

19
00:01:35,622 --> 00:01:39,430
parameters like the rate of change in deforestation levels.

20
00:01:39,590 --> 00:01:42,842
Look at surface water monitoring to identify

21
00:01:42,986 --> 00:01:46,206
water levels. Or you could look at the change

22
00:01:46,308 --> 00:01:49,502
in or the destruction of mangroves across the

23
00:01:49,556 --> 00:01:53,358
shorelines. Another means is looking at highways

24
00:01:53,454 --> 00:01:57,538
and airports which some consider as the lifeline of

25
00:01:57,624 --> 00:02:01,550
today's connected economies. Measuring the car density

26
00:02:01,630 --> 00:02:04,986
of vehicle population in these areas

27
00:02:05,118 --> 00:02:08,482
give very important economic indicators.

28
00:02:08,626 --> 00:02:12,194
During this talk we will mostly use openly

29
00:02:12,242 --> 00:02:16,274
available data which can be accessed via AWS

30
00:02:16,322 --> 00:02:18,710
or Google data belts.

31
00:02:19,130 --> 00:02:22,782
I have two of my colleagues, Abha and Absal

32
00:02:22,946 --> 00:02:26,982
who will discuss two interesting use cases.

33
00:02:27,126 --> 00:02:31,226
Abha will talk about how she used open satellite data

34
00:02:31,408 --> 00:02:35,770
to detect and count the number of vehicles on highways

35
00:02:36,110 --> 00:02:39,674
while Absal will discuss how we used Google Earth

36
00:02:39,722 --> 00:02:43,930
engine to measure the change in surface water monitoring

37
00:02:44,010 --> 00:02:47,938
as well has count the number of water bodies in any given area of interest.

38
00:02:48,104 --> 00:02:51,522
I hope you will find this interesting. So our first

39
00:02:51,576 --> 00:02:55,702
use case is where we have suggested that

40
00:02:55,756 --> 00:03:00,210
economic activity causes pollution, especially manufacturing activities

41
00:03:00,290 --> 00:03:03,986
like steel production, steel or cement production,

42
00:03:04,098 --> 00:03:07,954
leather industry fertilizers due to their

43
00:03:08,012 --> 00:03:11,818
manufacturing they release a lot of pollutants in

44
00:03:11,824 --> 00:03:14,906
the air. In the same manner, high number of

45
00:03:14,928 --> 00:03:18,806
vehicles on roads causes pollution. This leads

46
00:03:18,838 --> 00:03:22,826
to an increase in high no two levels in the atmosphere

47
00:03:22,938 --> 00:03:26,750
and we can use sensors on sentinel five p

48
00:03:26,900 --> 00:03:30,814
satellites to identify changes in the no

49
00:03:30,852 --> 00:03:34,194
two levels in the upper atmosphere. Let me show you this

50
00:03:34,232 --> 00:03:37,902
composite image of the indian subcontinent.

51
00:03:38,046 --> 00:03:41,826
The red areas that you see are areas of high concentration of

52
00:03:41,848 --> 00:03:45,602
no two. You can see these red areas over

53
00:03:45,736 --> 00:03:49,634
New Delhi Gazia belt which is quite an industrial

54
00:03:49,682 --> 00:03:53,126
belt out there to the south of Varanasi which has lot

55
00:03:53,148 --> 00:03:56,770
of leather and tanning industries the village Jamshedpur belt,

56
00:03:56,850 --> 00:04:00,150
which is a major steel production and coal producing

57
00:04:00,230 --> 00:04:04,054
area in east India, as well as over Mumbai

58
00:04:04,182 --> 00:04:07,930
and Gujarat, which are major cities.

59
00:04:08,350 --> 00:04:11,806
Similarly, we can see red spots over Hyderabad and

60
00:04:11,828 --> 00:04:15,214
Karachi in Pakistan. This was taken in

61
00:04:15,252 --> 00:04:18,542
April 2019. A similar composite taken

62
00:04:18,596 --> 00:04:22,522
in April 2020 showed a major reduction

63
00:04:22,586 --> 00:04:25,790
in pollution levels across the indian subcontinent.

64
00:04:25,950 --> 00:04:29,454
This was because in late March there was a strict

65
00:04:29,502 --> 00:04:33,234
lockdown which was initiated. This led to many factories being

66
00:04:33,272 --> 00:04:36,514
shut down. Small and medium enterprises

67
00:04:36,642 --> 00:04:40,290
had stopped working. There was quarantine measures

68
00:04:40,370 --> 00:04:44,390
and hence less traffic on the roads. And has seen

69
00:04:44,460 --> 00:04:48,290
in this image there's very less projections.

70
00:04:48,450 --> 00:04:52,806
In fact, we did a small experiment with a lot of countries across different continents

71
00:04:52,918 --> 00:04:56,534
and found out that there was a significant change in no two levels

72
00:04:56,662 --> 00:05:00,106
post a lockdown being implemented. This was observed in

73
00:05:00,128 --> 00:05:03,626
Germany as well as in the chinese province

74
00:05:03,658 --> 00:05:07,514
of Wuhan. But if the country has lax implementation

75
00:05:07,562 --> 00:05:11,210
of a lockdown, we didn't see this effect. Measuring pollution

76
00:05:11,290 --> 00:05:14,766
can be a very good measure of identifying

77
00:05:14,958 --> 00:05:18,242
ongoing economic activity. Let's look

78
00:05:18,296 --> 00:05:21,934
at measuring the quality of rivers during the lockdown.

79
00:05:21,982 --> 00:05:25,594
There was a lot of chatter on social media regarding

80
00:05:25,742 --> 00:05:29,334
sighting of wildlife in the canals of Venice. This was

81
00:05:29,372 --> 00:05:32,854
mostly fake news. But if you look

82
00:05:32,892 --> 00:05:36,578
at the satellite images that we have, you'll notice

83
00:05:36,754 --> 00:05:40,986
that before the lockdown, you could see belts which

84
00:05:41,168 --> 00:05:44,538
are using the Venice channels. But post the

85
00:05:44,544 --> 00:05:48,202
lockdown, since no boats were going were

86
00:05:48,256 --> 00:05:52,106
transversing channels, you do not see them. You see less turbidity

87
00:05:52,138 --> 00:05:56,414
in the water and hence less pollution. This used

88
00:05:56,532 --> 00:05:59,902
high resolution imagery over the city

89
00:05:59,956 --> 00:06:03,858
of Venice, but we can also use sentinel data.

90
00:06:03,944 --> 00:06:07,166
Sentinel data to calculate the floating algae

91
00:06:07,198 --> 00:06:10,878
indicator, which indicators the presence of aquatic

92
00:06:10,974 --> 00:06:14,830
life in the waters. This false color image

93
00:06:14,910 --> 00:06:18,978
shows the waters of Lake Victoria in Africa.

94
00:06:19,154 --> 00:06:22,178
The green color shows the floating algae indicator,

95
00:06:22,274 --> 00:06:25,814
which is calculated using multispectral images. Opt in from

96
00:06:25,852 --> 00:06:30,166
sentinel to l two a images. The red color over here shows turbid

97
00:06:30,198 --> 00:06:33,706
water, but most of these sensors that

98
00:06:33,728 --> 00:06:37,670
we have used till now in the optical spectrum.

99
00:06:37,830 --> 00:06:41,550
So if you have cloudy weather or

100
00:06:41,620 --> 00:06:45,246
bad weather conditions, most of these satellite images are of

101
00:06:45,268 --> 00:06:49,098
no use. It's here where we can use SAR

102
00:06:49,194 --> 00:06:53,350
or synthetic aperture radar, which can penetrate

103
00:06:53,530 --> 00:06:57,874
through bad weather conditions. This is useful to

104
00:06:57,912 --> 00:07:00,994
track building construction, road construction and

105
00:07:01,032 --> 00:07:05,118
military establishments. In fact, we use Saab

106
00:07:05,214 --> 00:07:09,298
for tracking the construction of a field hospital in Spain as

107
00:07:09,304 --> 00:07:12,870
well as in Wuhan, even in bad weather conditions.

108
00:07:13,370 --> 00:07:16,934
Let's look at some ESG parameters, like the rate

109
00:07:16,972 --> 00:07:20,282
of deforestation during the planet Hack 2020.

110
00:07:20,336 --> 00:07:23,654
Last year, my team had created can app, which helped

111
00:07:23,702 --> 00:07:27,210
users to quickly identify in real time

112
00:07:27,360 --> 00:07:30,050
logging events taking place in the Amazon.

113
00:07:30,230 --> 00:07:33,850
This is very useful for countries like brazil,

114
00:07:33,930 --> 00:07:37,374
which are struggling between having

115
00:07:37,572 --> 00:07:41,114
economic activity and protecting the environment.

116
00:07:41,242 --> 00:07:45,234
This is a dicey and a political subject for them, and they

117
00:07:45,272 --> 00:07:48,818
are also facing budgetary constraints because of which number of

118
00:07:48,904 --> 00:07:52,626
indicators have reduced and available

119
00:07:52,728 --> 00:07:56,194
resources are less. And this causes a lot of strain

120
00:07:56,242 --> 00:08:00,598
on their existing resources. But our app was able to provide

121
00:08:00,684 --> 00:08:04,006
them quick insights on which, so that

122
00:08:04,028 --> 00:08:08,154
they can identify areas where they could focus

123
00:08:08,272 --> 00:08:11,850
their limited resources. As we

124
00:08:11,920 --> 00:08:15,718
discussed earlier, highways and airports

125
00:08:15,814 --> 00:08:19,370
are the lifeline of most economies.

126
00:08:19,890 --> 00:08:24,222
As such, we can use the

127
00:08:24,356 --> 00:08:27,598
detection of cars or vehicle density in

128
00:08:27,604 --> 00:08:31,582
this area to understand the vitality of that region we can

129
00:08:31,636 --> 00:08:35,042
use cars and vehicles are normally very

130
00:08:35,096 --> 00:08:38,702
small in size, so we need to use very high resolution

131
00:08:38,766 --> 00:08:42,590
imagery like those provided by planet scope satellites,

132
00:08:42,670 --> 00:08:46,562
which provides imagery in the 30 centimeter resolution.

133
00:08:46,706 --> 00:08:50,034
This helps us to identify cars

134
00:08:50,082 --> 00:08:54,166
which are parked in parking lots. We used high resolution imagery and

135
00:08:54,188 --> 00:08:57,762
then we used open source model which allowed us to detect

136
00:08:57,826 --> 00:09:01,030
more than 60 different classes of vehicles.

137
00:09:01,370 --> 00:09:04,874
A similar approach can be used to

138
00:09:04,912 --> 00:09:08,518
count the number of airplanes which are parked

139
00:09:08,694 --> 00:09:12,378
as well as in flight. Analyzing temporal

140
00:09:12,394 --> 00:09:16,314
signals can be used to identify anomalies and any unexpected

141
00:09:16,362 --> 00:09:18,750
changes have their economic signals.

142
00:09:19,570 --> 00:09:23,346
We also use pictera, which is

143
00:09:23,448 --> 00:09:27,662
a low code platform for training and deployment

144
00:09:27,726 --> 00:09:31,438
of machine learning models. It's specifically suited

145
00:09:31,534 --> 00:09:35,506
for training machine learning models for detecting objects

146
00:09:35,538 --> 00:09:39,618
and satellite images. And if you are a can

147
00:09:39,714 --> 00:09:43,046
of low code no code approach, I would

148
00:09:43,068 --> 00:09:46,902
suggest having a look at their platform, which is

149
00:09:46,956 --> 00:09:51,318
very easy to use. But in many cases,

150
00:09:51,494 --> 00:09:55,034
citizen data scientists and researchers do not have

151
00:09:55,072 --> 00:09:58,726
the budget to access very high resolution imaging.

152
00:09:58,918 --> 00:10:02,222
All that you have is getting access to open

153
00:10:02,276 --> 00:10:06,074
data sets which are often of low resolution,

154
00:10:06,202 --> 00:10:09,770
especially sentinel data has a resolution of 10 meters,

155
00:10:09,930 --> 00:10:13,586
around 10 meters, ten to 14 70 meters and 10

156
00:10:13,608 --> 00:10:16,994
meters depending upon the sensors. And at

157
00:10:17,032 --> 00:10:21,150
such low resolution you cannot really detect commercial

158
00:10:21,230 --> 00:10:24,398
vehicles or even count the number of cars.

159
00:10:24,574 --> 00:10:27,922
So we have used a very unique approach

160
00:10:28,066 --> 00:10:31,186
to this problem and we have Abha

161
00:10:31,218 --> 00:10:34,882
who will discuss about it. Hello everyone. Before diving

162
00:10:34,946 --> 00:10:38,438
I would like to introduce myself first. I'm Abha Purval and

163
00:10:38,444 --> 00:10:41,254
I am an intern at thinkevolve consulting.

164
00:10:41,382 --> 00:10:45,226
Currently I am pursuing my undergraduate degree in bachelor's of

165
00:10:45,248 --> 00:10:48,666
technology. I have a been interest in machine learning and want

166
00:10:48,688 --> 00:10:52,474
to research about its use in defense as well as in remote

167
00:10:52,522 --> 00:10:56,174
sensing. This projected is based on that only. Have you

168
00:10:56,212 --> 00:10:59,854
ever heard that we can use open earth observations to find

169
00:10:59,892 --> 00:11:03,694
the change in economic activities based on the detection of

170
00:11:03,732 --> 00:11:07,458
various elements? So today I would like to discuss the project

171
00:11:07,544 --> 00:11:10,626
on which I have worked as an intern. Let me give

172
00:11:10,648 --> 00:11:14,782
you a quick introduction. First, as we know that the earth observations

173
00:11:14,846 --> 00:11:18,454
is delivering significant insights that help us to understand the

174
00:11:18,492 --> 00:11:22,018
consequences and the drastic crisis on the environment,

175
00:11:22,114 --> 00:11:25,606
the people and the economy. And going forward to that,

176
00:11:25,708 --> 00:11:29,286
we are going to use sentinel two data from the sentinel hub to

177
00:11:29,308 --> 00:11:32,666
detect the number of drugs present at a particular time on

178
00:11:32,688 --> 00:11:36,646
a particular place. Sentinel two carries a push broom sensor

179
00:11:36,758 --> 00:11:40,514
to cover the 290 kilometer field of view. Twelve detectors

180
00:11:40,582 --> 00:11:44,106
are arranged in two parallel arrays on a focal plane.

181
00:11:44,218 --> 00:11:47,530
Those detectors, acquiring the visual and the near infrared,

182
00:11:47,610 --> 00:11:51,354
cover ten spectral bands each. This configuration causes

183
00:11:51,402 --> 00:11:55,854
two main effects, namely interdetector and interband parallax

184
00:11:55,902 --> 00:11:59,518
angle. In simple words, consider a single pixel.

185
00:11:59,614 --> 00:12:03,714
The parallax angle results in a band specific viewing geometry of

186
00:12:03,752 --> 00:12:07,014
this pixel and the multispectral instrument see it

187
00:12:07,052 --> 00:12:10,566
at slightly different times depending on the band. With the

188
00:12:10,588 --> 00:12:14,806
help of these two effects, the satellite detects the moving object.

189
00:12:14,988 --> 00:12:18,486
The offset of different wavelengths that moving objects have in

190
00:12:18,508 --> 00:12:22,150
sentinel two data causes a reflectance in RGB

191
00:12:22,230 --> 00:12:26,266
which looks like a rainbow. Now, moving ahead, we will

192
00:12:26,288 --> 00:12:29,834
directly jump to the working and the results for our process we

193
00:12:29,872 --> 00:12:33,054
have used a Python library named Xcube that has been

194
00:12:33,092 --> 00:12:36,522
developed to provide earth observation data and an analysis

195
00:12:36,586 --> 00:12:40,362
ready form to users. An Xcube dataset

196
00:12:40,426 --> 00:12:43,774
contains one or more variables whose values are

197
00:12:43,812 --> 00:12:47,726
stored in cells of a common multi dimensional spatial temporal

198
00:12:47,758 --> 00:12:50,674
grid. The dimensions are usually time,

199
00:12:50,792 --> 00:12:54,142
latitude and longitude, however, other dimensions

200
00:12:54,206 --> 00:12:57,714
may also present. It is based on a popular data science

201
00:12:57,762 --> 00:13:01,718
packages such as tsaR, xray and dask. At first

202
00:13:01,804 --> 00:13:05,394
we generate an Xcube compatible TsaR data cube.

203
00:13:05,522 --> 00:13:09,406
For accessing sentinel two data. We are using Xcubessets

204
00:13:09,458 --> 00:13:13,238
plugin that adds support for the Sentinel hub cloud API.

205
00:13:13,334 --> 00:13:17,242
It extends xcube by a new Python API function,

206
00:13:17,376 --> 00:13:21,502
xcubessage cube Opencube to create data

207
00:13:21,556 --> 00:13:24,702
cubes from Sentinel hub on the fly. It also

208
00:13:24,756 --> 00:13:28,522
adds a new CLI command to generate and write data cubes

209
00:13:28,586 --> 00:13:32,094
created from Sentinel hub into the file system.

210
00:13:32,292 --> 00:13:36,322
This will be the overview of the process. Moving towards our

211
00:13:36,376 --> 00:13:39,954
first step, we are going to select the region of interest and

212
00:13:39,992 --> 00:13:43,358
then find out the bounding box coordinates of that region

213
00:13:43,454 --> 00:13:47,042
with the help of bbox finder as well as the Sentinel hub

214
00:13:47,106 --> 00:13:51,746
request builder. Here I took the example of Vishakhapatnam.

215
00:13:51,858 --> 00:13:55,330
Next we are going to extract the OSM roadmap.

216
00:13:55,410 --> 00:13:59,494
OpenStreetMap has an API for fetching and saving rodzeo

217
00:13:59,542 --> 00:14:03,254
data from or to the OpenStreetMap database.

218
00:14:03,382 --> 00:14:07,242
The overpass API is a read only API that serves a

219
00:14:07,296 --> 00:14:10,406
custom selected path of the OSM data map.

220
00:14:10,518 --> 00:14:13,866
It acts as a database over the web. The client

221
00:14:13,898 --> 00:14:17,198
sends a query to the API and gets back the data set

222
00:14:17,284 --> 00:14:21,354
that corresponds to the query. We can use various keywords for obtaining

223
00:14:21,402 --> 00:14:24,494
a different maps like roadmap, water body map,

224
00:14:24,542 --> 00:14:28,194
etc. For our sake we are using the keywords like

225
00:14:28,232 --> 00:14:31,982
highway, motorway, roads, etc. Which are predefined

226
00:14:32,046 --> 00:14:35,522
in OSM so as to obtain the roadmap of our

227
00:14:35,576 --> 00:14:39,214
region of interest. We are going to build a query using overpass

228
00:14:39,262 --> 00:14:42,854
API which is especially to extract and obtain the

229
00:14:42,892 --> 00:14:46,294
OSM maps for our region of interest. With the help

230
00:14:46,332 --> 00:14:50,442
of Python library and the plugin xcubessage, we are going to make

231
00:14:50,496 --> 00:14:54,406
and configure a cube. A cube is basically a data set contains

232
00:14:54,438 --> 00:14:58,150
the required features and parameters. Generating a cube

233
00:14:58,230 --> 00:15:01,470
simply means that extracting a part of a particular data

234
00:15:01,540 --> 00:15:05,534
with required features. Thus, we pass the parameters like

235
00:15:05,572 --> 00:15:08,810
the data set that is s two, l two, a time range,

236
00:15:08,890 --> 00:15:12,346
time period, a special resolution bands, et cetera.

237
00:15:12,458 --> 00:15:15,662
The satellite has a minimum resolution of 10 meters

238
00:15:15,726 --> 00:15:19,102
and we are going to extract that. We are extracting

239
00:15:19,166 --> 00:15:22,910
six different bands named b two that is blue band,

240
00:15:22,990 --> 00:15:26,722
b three that is green band, b four that is red

241
00:15:26,776 --> 00:15:30,822
band, b eight near infrared red band believes short

242
00:15:30,876 --> 00:15:34,946
wave infrared band and SCL that is scene classification

243
00:15:35,058 --> 00:15:39,278
map. After that we are going to process the obtained timestamps

244
00:15:39,314 --> 00:15:42,794
and then calculate the thresholds. At first we are

245
00:15:42,832 --> 00:15:46,506
going to obtain the road mask by masking the OSM map to

246
00:15:46,528 --> 00:15:49,974
the sentinel images. After that by using

247
00:15:50,032 --> 00:15:53,674
these values and formulas, we are going to calculate the different band

248
00:15:53,722 --> 00:15:56,650
values like NDVI, NDWI,

249
00:15:56,730 --> 00:16:00,090
NDSI so as to avoid the vegetation index,

250
00:16:00,170 --> 00:16:03,726
water body index and snow index. After that we

251
00:16:03,748 --> 00:16:07,714
are calculating the blue green ratio and the blue red ratio to

252
00:16:07,752 --> 00:16:11,454
find out the rainbowish reflectance and then we compare

253
00:16:11,502 --> 00:16:15,554
it with the threshold to detect whether the truck is present

254
00:16:15,672 --> 00:16:19,222
or not. Its truck is going to be represented by

255
00:16:19,276 --> 00:16:22,998
two to three pixels in the images. To visualize this,

256
00:16:23,084 --> 00:16:26,726
we are going to rasterize the image and then we count the

257
00:16:26,748 --> 00:16:29,942
number of trucks for that day and the ROI for the date

258
00:16:29,996 --> 00:16:33,146
19 June, the number of truck is 195.

259
00:16:33,248 --> 00:16:37,162
For a given ROI, we have analyzed this for different

260
00:16:37,216 --> 00:16:41,162
region of interest and thus got to know that for a particular month

261
00:16:41,216 --> 00:16:47,566
in 2019, the number of trucks in Vishaka Putnam is

262
00:16:47,668 --> 00:16:51,578
it's 771. That is, the number of trucks will reduce

263
00:16:51,674 --> 00:16:55,338
up to 26% during the lockdown. This is the

264
00:16:55,364 --> 00:16:59,038
comparison chart for the number of vehicles in 2019,

265
00:16:59,134 --> 00:17:02,306
that is before pandemic and during pandemic that is

266
00:17:02,328 --> 00:17:06,062
2020. Like this we have an economic analysis

267
00:17:06,126 --> 00:17:10,022
based on the number of vehicles in different years. The major

268
00:17:10,076 --> 00:17:13,846
drawback is cloud acquisition so we have to select the

269
00:17:13,868 --> 00:17:17,206
dates carefully, having less amount of clouds to get the

270
00:17:17,228 --> 00:17:21,078
proper results. Also, the number of trucks on the road obtained

271
00:17:21,174 --> 00:17:24,230
are not accurate as minimum special resolution

272
00:17:24,310 --> 00:17:27,894
is of 10 meters. But yes we can get the approximate

273
00:17:27,942 --> 00:17:31,914
number which can let us know about the relative truck density.

274
00:17:32,042 --> 00:17:35,502
Thus this will be very helpful in the pandemic like

275
00:17:35,556 --> 00:17:39,166
Covid to analyze the lockdown situation. Thank you.

276
00:17:39,348 --> 00:17:42,902
Hello, I'm April. I'm an interns think world consultant.

277
00:17:42,986 --> 00:17:46,286
I'm a computer science engineering student from Kerala.

278
00:17:46,398 --> 00:17:50,334
My area of interest are mostly NLP and privacy

279
00:17:50,382 --> 00:17:54,206
preserving machine learning. Currently my works are around geospatial

280
00:17:54,238 --> 00:17:58,038
data. I'm here to discuss about a project to

281
00:17:58,124 --> 00:18:01,320
monitor surface water using Google Earth engine.

282
00:18:01,770 --> 00:18:05,670
We are working with Google Earth Engine which is a cloud computing platform

283
00:18:05,820 --> 00:18:09,494
for processing satellite imagery and other geospatial

284
00:18:09,542 --> 00:18:13,126
and observation data. It provides access to a large database

285
00:18:13,158 --> 00:18:16,650
of satellite imagery and computational power needed to

286
00:18:16,720 --> 00:18:20,434
analyze those images. It has also got a Python and JavaScript

287
00:18:20,502 --> 00:18:23,774
API which helps to bring these facilities into our

288
00:18:23,812 --> 00:18:28,042
applications. Another resource we found quite useful was GeMap

289
00:18:28,186 --> 00:18:32,074
which is a python wrapper around the Google Earthengine API,

290
00:18:32,202 --> 00:18:35,630
making use of IPY leaflet and IPI widget.

291
00:18:35,790 --> 00:18:38,914
If you want to integrate earth engine with your Jupyter node, check out

292
00:18:38,952 --> 00:18:41,010
GE map. It's so helpful.

293
00:18:42,790 --> 00:18:46,502
We use the NDWI metric to calculate the surface water

294
00:18:46,556 --> 00:18:50,226
area. The NDW normalized Difference water index

295
00:18:50,338 --> 00:18:54,514
method is an index for delineating and monitoring contract

296
00:18:54,562 --> 00:18:58,354
changes in surface water has water bodies strongly

297
00:18:58,402 --> 00:19:02,470
absorb light in the visible to infrared electromagnetic spectrum.

298
00:19:02,630 --> 00:19:05,642
Green and short wave infrared waves are used for this.

299
00:19:05,776 --> 00:19:10,220
In case of lancet eight, they are represented by band three and band six.

300
00:19:11,090 --> 00:19:14,878
NDWA values lies between minus one and one and

301
00:19:15,044 --> 00:19:18,346
generally water bodies have an NTWA value greater

302
00:19:18,378 --> 00:19:21,214
than 0.3. Let's see how this works.

303
00:19:21,332 --> 00:19:24,434
Okay, so a rectangle is drawn in the map using the

304
00:19:24,472 --> 00:19:28,370
Jupiter widget around the required area and then there appears a

305
00:19:28,440 --> 00:19:32,494
layer on top of the rectangle where the deep blue shades indicators surface

306
00:19:32,542 --> 00:19:36,274
water. The normalized difference of band three and band six

307
00:19:36,312 --> 00:19:39,762
is calculated to get the NDW value of pixels.

308
00:19:39,906 --> 00:19:43,202
And then we get the number of pixels having the NDWI

309
00:19:43,266 --> 00:19:46,326
value greater than threshold and multiply it with

310
00:19:46,348 --> 00:19:49,474
the area of a single pixel to get the total surface

311
00:19:49,522 --> 00:19:53,462
water area. Can NDWI value created than zero indicates

312
00:19:53,526 --> 00:19:56,746
water and threshold value can be anything more than

313
00:19:56,768 --> 00:20:01,600
that. Conventionally it's 0.2 or 0.3 and

314
00:20:02,530 --> 00:20:05,934
here is a plot of water area

315
00:20:06,052 --> 00:20:09,822
during January to May of this year and this can be used to

316
00:20:09,876 --> 00:20:13,486
monitor the change in water area during any period of time.

317
00:20:13,588 --> 00:20:17,010
For any area. The same can be done with different

318
00:20:17,080 --> 00:20:20,382
bands to get the vegetation index or moisture index.

319
00:20:20,526 --> 00:20:24,254
A limitation of this method is that NDWI is sensitive to filter

320
00:20:24,302 --> 00:20:28,310
plant and can result in an overestimation of water bodies.

321
00:20:30,890 --> 00:20:34,166
And the next part of a project is to count the number of

322
00:20:34,188 --> 00:20:38,102
water bodies. We use OpenCV and scikitlearn for this.

323
00:20:38,236 --> 00:20:42,106
First we download the NDWI image of the required area from the

324
00:20:42,128 --> 00:20:45,734
previous process and then it is converted to grayscale

325
00:20:45,782 --> 00:20:49,062
and some smoothing is done to reduce the high frequency

326
00:20:49,126 --> 00:20:52,506
noise. After thresholding the image, we get an image

327
00:20:52,538 --> 00:20:55,694
like this where the water bodies are in white and rest in

328
00:20:55,732 --> 00:20:59,882
black, and then we apply a method called connected component analysis.

329
00:21:00,026 --> 00:21:03,766
Connected component labeling is used in computer vision to detect

330
00:21:03,818 --> 00:21:07,022
connected regions in binary digital images,

331
00:21:07,166 --> 00:21:10,814
and it solves the problem of finding out parts of an image that are connected

332
00:21:10,862 --> 00:21:14,686
physically, irrespective of its color. The connected components,

333
00:21:14,718 --> 00:21:18,546
also known as blobs, can be counted and filtered.

334
00:21:18,738 --> 00:21:22,054
The nearest neighbors of a pixel are labeled the same to

335
00:21:22,092 --> 00:21:25,634
form a blob. If the number of pixels exceeds a predefined

336
00:21:25,682 --> 00:21:29,114
threshold, then we consider the blob large enough

337
00:21:29,312 --> 00:21:32,966
and it is added as a water body. This approach

338
00:21:32,998 --> 00:21:36,474
has limitations when used to count water bodies having an

339
00:21:36,512 --> 00:21:39,370
area smaller than a threshold. Also,

340
00:21:39,440 --> 00:21:43,146
complex shapes and irregular areas of water bodies may also affect the

341
00:21:43,168 --> 00:21:46,910
accuracy. Although the accuracy of the technique isn't perfect,

342
00:21:47,060 --> 00:21:50,606
it can still be used to analyze the change in number of water bodies in

343
00:21:50,628 --> 00:21:52,720
a region between a period of time.

344
00:21:54,070 --> 00:21:57,940
That's it from my part. I hope you guys enjoyed it. Thank you.

345
00:21:58,470 --> 00:22:02,466
So that was very cool, and I hope a

346
00:22:02,488 --> 00:22:05,610
lot of you found that interesting and inspiring.

347
00:22:05,790 --> 00:22:09,270
Maybe it inspired you to work on your own projects.

348
00:22:09,770 --> 00:22:13,094
However, before finishing this talk, I would like

349
00:22:13,132 --> 00:22:15,874
to highlight some of the assumptions,

350
00:22:16,002 --> 00:22:19,174
like when you start working very closely with

351
00:22:19,212 --> 00:22:23,194
these data sets to understand the assumptions and the limitations that come

352
00:22:23,232 --> 00:22:26,906
with it. So let me just talk about a

353
00:22:26,928 --> 00:22:30,890
few of them. The most important of them is, of course, the availability

354
00:22:30,970 --> 00:22:34,254
of data. You may notice a

355
00:22:34,292 --> 00:22:38,382
large gap during revisit times and you may

356
00:22:38,436 --> 00:22:42,234
not get an image for the period

357
00:22:42,282 --> 00:22:46,050
of interest. This is because a single satellite is

358
00:22:46,120 --> 00:22:49,374
revolving around the world and taking images,

359
00:22:49,502 --> 00:22:52,814
and it's moving as well as on the equatorial

360
00:22:52,862 --> 00:22:56,674
led, especially for rural areas or for remote region,

361
00:22:56,802 --> 00:23:00,834
you might not have good revisit times or historical

362
00:23:00,882 --> 00:23:04,530
data sets to work on. Sometimes the sensors

363
00:23:04,610 --> 00:23:08,326
do not work properly. Most of the satellites

364
00:23:08,358 --> 00:23:11,974
which are in the open access are openly

365
00:23:12,022 --> 00:23:15,706
accessible. They are quite old. The sensors may

366
00:23:15,728 --> 00:23:19,322
not work properly and you have bad

367
00:23:19,376 --> 00:23:22,874
data. You need to use some kind of anomaly detection algorithms

368
00:23:22,922 --> 00:23:26,494
to ensure that you have valid information. And of course,

369
00:23:26,532 --> 00:23:29,838
as we discussed earlier, cloud cover can cause

370
00:23:29,924 --> 00:23:33,338
problems, especially around the equatorial belts

371
00:23:33,434 --> 00:23:37,166
or over rainforests, especially in the Southeast

372
00:23:37,198 --> 00:23:40,942
Asia, like Indonesia, Myanmar, Cambodia.

373
00:23:41,086 --> 00:23:44,706
You have cloud cover for most part of here and

374
00:23:44,728 --> 00:23:48,306
it becomes difficult to acquire optical imagery.

375
00:23:48,498 --> 00:23:52,262
Data providers are for profit organization. They do work

376
00:23:52,316 --> 00:23:56,018
with a lot of agios, but since they are for profit,

377
00:23:56,114 --> 00:23:59,722
they have to ensure that they are covering areas of interest which

378
00:23:59,776 --> 00:24:03,446
are in Tiban. And these are mostly industrial

379
00:24:03,558 --> 00:24:07,702
regions, urban areas, high density urban areas,

380
00:24:07,846 --> 00:24:11,898
and industrial complexes like oil and gas facilities

381
00:24:12,074 --> 00:24:14,042
and of course defense facilities.

382
00:24:14,186 --> 00:24:17,962
NDWI is a very sensitive

383
00:24:18,026 --> 00:24:21,966
index. So if there's a built up land which can cause

384
00:24:22,148 --> 00:24:26,274
overestimation of the water bodies, you should be aware of

385
00:24:26,472 --> 00:24:29,474
the disadvantage of any index that you choose.

386
00:24:29,672 --> 00:24:32,910
Complex shapes and irregular areas of water bodies

387
00:24:32,990 --> 00:24:36,414
and a lot of other object detection algorithms can fail,

388
00:24:36,462 --> 00:24:39,746
give a lot of false positives. The precision

389
00:24:39,778 --> 00:24:43,014
might be low. So these limitations should

390
00:24:43,052 --> 00:24:46,966
be known. And you should understand that when you start working on

391
00:24:46,988 --> 00:24:50,362
any project. And of course there's bureaucracy and access

392
00:24:50,416 --> 00:24:53,654
to sensitive data sets, because like in India,

393
00:24:53,702 --> 00:24:58,374
we have a national remote sensing organization which regulates

394
00:24:58,422 --> 00:25:02,462
the flow of high resolution data sets. So if you need access to

395
00:25:02,516 --> 00:25:06,618
anything, any images of higher than 50 centimeter

396
00:25:06,794 --> 00:25:10,202
resolution, lower than, sorry, lower than 50 centimeter resolution,

397
00:25:10,266 --> 00:25:13,658
you need to route your request to them.

398
00:25:13,844 --> 00:25:17,854
And of course, if your area of interest involves

399
00:25:17,902 --> 00:25:21,570
a defense establishment, that needs to be blurred out.

400
00:25:21,720 --> 00:25:25,086
So the other thing is, of course, you should be aware of the

401
00:25:25,128 --> 00:25:28,534
local laws and regulations which may differ from region to

402
00:25:28,572 --> 00:25:32,162
region. Each country has its own laws

403
00:25:32,226 --> 00:25:35,142
which govern it. But in any case,

404
00:25:35,196 --> 00:25:39,090
there is a lot of openly available data sets

405
00:25:39,250 --> 00:25:42,678
and you can use it at

406
00:25:42,684 --> 00:25:46,498
quickly get started and gain good insights.

407
00:25:46,674 --> 00:25:50,206
So, yeah, thanks for listening and have of

408
00:25:50,228 --> 00:25:51,260
tea. Thank you.

