1
00:00:23,170 --> 00:00:26,674
Hi everyone. My name is Arunddeep and I'm a solutions architect

2
00:00:26,722 --> 00:00:29,966
manager at AWS. I lead the developer experience

3
00:00:30,068 --> 00:00:33,354
team for AWS amplify. In today's

4
00:00:33,402 --> 00:00:37,242
session, we will talk about how to turn on easy mode

5
00:00:37,306 --> 00:00:41,002
for full stack app development with the most popular design tool,

6
00:00:41,076 --> 00:00:44,526
Figma and AWS amplify. So let's

7
00:00:44,558 --> 00:00:47,826
dive right in. I'm going to

8
00:00:47,848 --> 00:00:51,122
dive into the design to app workflow now.

9
00:00:51,176 --> 00:00:54,626
Our expectation is that we have an idea or a project that

10
00:00:54,648 --> 00:00:58,146
we start off with and we are going to work with the designer,

11
00:00:58,338 --> 00:01:01,734
and the designer is going to work with frontend developers to get their

12
00:01:01,772 --> 00:01:05,254
changes implemented, and then they work with back

13
00:01:05,292 --> 00:01:08,940
end devs to get the cloud logic in there and the infrastructure up there.

14
00:01:09,310 --> 00:01:12,426
And we expect customers are happy and everybody's having

15
00:01:12,448 --> 00:01:16,598
a great experience, right? But unfortunately,

16
00:01:16,774 --> 00:01:20,490
that does not happen. In reality, it does not go smooth.

17
00:01:21,230 --> 00:01:24,526
There's likely additional changes that is coming in from the designer to

18
00:01:24,548 --> 00:01:28,474
the front end developer and the frontend developers and designers

19
00:01:28,522 --> 00:01:31,902
go back and forth with changes to the UI, and some changes

20
00:01:31,956 --> 00:01:35,250
are not possible and it creates additional communication overhead.

21
00:01:36,310 --> 00:01:39,794
Then there's more changes that is required to the back end that the front

22
00:01:39,832 --> 00:01:43,898
end engineers are dependent on. This starts to slowly

23
00:01:43,934 --> 00:01:47,960
lead to disjoint processes and it spirals out of control

24
00:01:48,650 --> 00:01:52,850
and eventually it leads to a lot of chaos. And unfortunately,

25
00:01:52,930 --> 00:01:56,774
this is the reality that we live in. And we have

26
00:01:56,812 --> 00:01:59,786
deeply analyzed why there is a little bit of friction here,

27
00:01:59,968 --> 00:02:03,654
especially on the front end developer side. They spend months pixel

28
00:02:03,702 --> 00:02:07,274
pushing. For those not familiar, pixel pushing is like

29
00:02:07,312 --> 00:02:11,102
literally making tiny minute UI changes just

30
00:02:11,156 --> 00:02:14,526
so that it looks pixel perfect in the end. And we have

31
00:02:14,628 --> 00:02:18,618
deeply analyzed on the other side that designers

32
00:02:18,714 --> 00:02:22,194
are not happy and about 50% of the designers are

33
00:02:22,232 --> 00:02:24,210
not satisfied with the implementation.

34
00:02:25,430 --> 00:02:29,010
So designers are not happy and developers are frustrated.

35
00:02:29,670 --> 00:02:33,882
So there must be a way where designers can provide Figma designs

36
00:02:33,966 --> 00:02:37,314
and a magic solution converts it into functional

37
00:02:37,362 --> 00:02:41,490
react code. And this solution is amplify

38
00:02:41,570 --> 00:02:45,590
studio. So let's take a look at Amplify studio.

39
00:02:46,910 --> 00:02:50,614
Amplify Studio helps you to convert designs

40
00:02:50,662 --> 00:02:54,086
built in Figma to reusable react components,

41
00:02:54,198 --> 00:02:57,674
saving you from writing thousands of lines of code, and it

42
00:02:57,712 --> 00:03:01,354
eliminates the design development gap. Now, it comes

43
00:03:01,392 --> 00:03:04,654
with a pre built UI component library where you can select from

44
00:03:04,692 --> 00:03:08,522
a dozen of popular react components such as feeds, contact forms,

45
00:03:08,586 --> 00:03:11,594
e commerce cards, primitives, such AWS, buttons,

46
00:03:11,642 --> 00:03:15,566
text fields, you name it. You can then easily bind

47
00:03:15,598 --> 00:03:19,566
that to data so you can visually connect your UI components to your backend

48
00:03:19,598 --> 00:03:22,610
data model using a point to click interface.

49
00:03:23,530 --> 00:03:26,694
And finally, you can improve team collaboration. You can

50
00:03:26,732 --> 00:03:30,342
bridge the gap between designers, front end developers and

51
00:03:30,396 --> 00:03:34,354
product teams with centralized workflows that mitigate costly

52
00:03:34,402 --> 00:03:37,734
rework. You can easily build your app

53
00:03:37,772 --> 00:03:41,930
front end with AWS, amplify and the Figma to code plugin.

54
00:03:42,350 --> 00:03:45,926
Now these are coming in from the Amplify UI

55
00:03:45,958 --> 00:03:49,594
components which are built with plain react and CSS

56
00:03:49,722 --> 00:03:53,642
to provide a solid foundation for building uis and design systems.

57
00:03:53,786 --> 00:03:57,162
Now these components are themable, responsive,

58
00:03:57,306 --> 00:04:00,906
composable and accessible. They play very nicely

59
00:04:00,938 --> 00:04:03,570
with other UI components or styling frameworks.

60
00:04:04,790 --> 00:04:08,146
These components have accessibility built in

61
00:04:08,248 --> 00:04:10,930
with the popular standards of WChe.

62
00:04:11,590 --> 00:04:15,474
Now amplify consists of connected components that accelerates

63
00:04:15,522 --> 00:04:18,402
the development of common workflows like authentication,

64
00:04:18,546 --> 00:04:21,906
which can have like sign up, sign in and location

65
00:04:22,018 --> 00:04:25,000
saving developers hours of development time.

66
00:04:25,690 --> 00:04:29,174
Amplify UI also includes UI components like newsfeeds,

67
00:04:29,222 --> 00:04:33,066
contact forms and e commerce cards. And you could also use

68
00:04:33,088 --> 00:04:36,454
the primitives such as buttons, text fields,

69
00:04:36,582 --> 00:04:39,982
cards, layouts, etc. Now before

70
00:04:40,036 --> 00:04:43,322
we jump into a cool demo on the ability

71
00:04:43,386 --> 00:04:46,874
of how you can actually build an app which is fully

72
00:04:46,922 --> 00:04:50,286
responsive using Amplify studio, let's take

73
00:04:50,308 --> 00:04:53,442
a quick look into the overview of amplify and what

74
00:04:53,496 --> 00:04:57,310
it offers. If you take a look at Amplify,

75
00:04:57,390 --> 00:05:01,234
it is a suite and tools that are built for front

76
00:05:01,272 --> 00:05:05,154
end developers to build rich and performant web and mobile

77
00:05:05,202 --> 00:05:08,834
applications. It has five main categories.

78
00:05:08,962 --> 00:05:12,982
The Amplify libraries are use case centric libraries to

79
00:05:13,036 --> 00:05:17,110
provide the ability to build cloud powered mobile and web applications.

80
00:05:17,950 --> 00:05:21,462
Amplify Studio, which we just spoke about, is a visual interface.

81
00:05:21,526 --> 00:05:25,318
Think about it as any visual development environment for setting

82
00:05:25,334 --> 00:05:28,806
up your app backend, and you can easily connect figma

83
00:05:28,838 --> 00:05:32,466
designs into your app backend. Now amplify CLI

84
00:05:32,518 --> 00:05:35,994
essentially does the same thing, but it's a CLI tool chain rather than a visual

85
00:05:36,042 --> 00:05:39,706
development environment. And then you've got the Amplify UI

86
00:05:39,738 --> 00:05:43,218
library, which is an open source design system that is

87
00:05:43,304 --> 00:05:47,140
composed of like connected components, primitives and

88
00:05:47,910 --> 00:05:51,650
other pre built components that are actually themable.

89
00:05:52,150 --> 00:05:55,822
And last but not the least, we've got amplify hosting,

90
00:05:55,886 --> 00:05:59,826
which is a fully managed CI CD hosting provider

91
00:05:59,938 --> 00:06:03,590
for easily being able to ship your app into production.

92
00:06:04,010 --> 00:06:08,010
Now, features that you can build with AWS Amplify. You can interact with

93
00:06:08,080 --> 00:06:11,766
multiple data sources amongst AWS databases. With the data modeling

94
00:06:11,878 --> 00:06:16,006
that amplify provides, you can have low latency content delivery.

95
00:06:16,038 --> 00:06:19,754
With amplify hosting you can have multi factor Auth sign up,

96
00:06:19,792 --> 00:06:23,150
sign in and forgot password workflows easily built within

97
00:06:23,220 --> 00:06:26,782
minutes rather than hours of development time. You can also build

98
00:06:26,836 --> 00:06:30,814
real time interactive experiences using websockets that is based off

99
00:06:30,852 --> 00:06:34,474
of the backend data modeling. You can have stored user

100
00:06:34,522 --> 00:06:38,066
content such AWS photos and videos, which we will take a look at it in

101
00:06:38,088 --> 00:06:42,334
the cat application. You can also have aipowered chatbots

102
00:06:42,382 --> 00:06:46,254
in your web or mobile applications, and text translation that is easily provided

103
00:06:46,302 --> 00:06:48,950
through amplify use case centric libraries.

104
00:06:49,690 --> 00:06:53,286
Now, what are the benefits of AWS amplify? With all of these features, you can

105
00:06:53,308 --> 00:06:57,306
get to market faster. You can build feature rich applications, and the

106
00:06:57,328 --> 00:07:01,382
best part about it is you can scale. It's global, it's reliable,

107
00:07:01,446 --> 00:07:04,714
and it's secure. Now, in order

108
00:07:04,752 --> 00:07:08,346
to showcase the endless possibilities, we'll go ahead and build an

109
00:07:08,368 --> 00:07:11,754
end to end cat reviews application. Imagine if you had

110
00:07:11,792 --> 00:07:15,166
to work on a cool app that could take images of

111
00:07:15,188 --> 00:07:18,666
cat and review it, and you could customize it to a greater

112
00:07:18,698 --> 00:07:21,870
extent. But we'll see how you can get started with AWS amplify.

113
00:07:22,930 --> 00:07:26,562
Now here's what we'll build. So let's quickly build an app to review

114
00:07:26,616 --> 00:07:30,206
cats. Imagine you had a farm where you can review pet cat images.

115
00:07:30,318 --> 00:07:34,290
You can extend this app to also take real time can

116
00:07:34,360 --> 00:07:37,902
photos, and upload it with reviews for fun things such AWS like

117
00:07:37,976 --> 00:07:41,622
parability, friendliness, et cetera. For the purposes of this demo,

118
00:07:41,676 --> 00:07:45,314
we'll input the URL of cat images. You can see that the feed

119
00:07:45,362 --> 00:07:48,806
has been populated with the images of the cat and with the description I've

120
00:07:48,838 --> 00:07:52,026
just taken a space cat, for example, you can

121
00:07:52,048 --> 00:07:55,802
wrap the app with amplify UI authenticator to easily add

122
00:07:55,856 --> 00:07:59,406
authentication capabilities as well. What I'm doing is

123
00:07:59,508 --> 00:08:02,746
just building a feed of wants and adding

124
00:08:02,778 --> 00:08:04,720
in ratings for all of them.

125
00:08:05,810 --> 00:08:09,790
The left portion of the screen actually

126
00:08:09,860 --> 00:08:13,946
showcases the form build component of amplify studio,

127
00:08:14,058 --> 00:08:17,506
and on the right hand, we have added some UI code to go

128
00:08:17,528 --> 00:08:20,734
ahead and build the feed that goes ahead and renders the component

129
00:08:20,782 --> 00:08:23,940
that's been generated for you through figma design.

130
00:08:24,550 --> 00:08:27,558
Let's go ahead and add the third cat in there, and then you should be

131
00:08:27,564 --> 00:08:31,654
able to see that we also have a confidence cat that is

132
00:08:31,852 --> 00:08:35,270
finally looking really cute.

133
00:08:35,690 --> 00:08:39,282
All right, so the first main step is to get started

134
00:08:39,356 --> 00:08:43,014
with building a new app in amplify studio. So you go into the AWS

135
00:08:43,062 --> 00:08:47,018
console, go to AWS amplify and give the name for your app.

136
00:08:47,184 --> 00:08:51,386
And in the backend it is going to start setting up the resources

137
00:08:51,418 --> 00:08:54,574
for AWS Amplify Studio, which will just be done

138
00:08:54,612 --> 00:08:58,094
in a couple of minutes. But in the meantime, you can also go

139
00:08:58,132 --> 00:09:01,470
ahead and install a create next apps,

140
00:09:01,540 --> 00:09:04,400
which is the starter template to create a next application.

141
00:09:05,330 --> 00:09:08,782
You can go ahead and input the parameters

142
00:09:08,846 --> 00:09:11,554
to build out your next app. In this particular case, I'm not going to use

143
00:09:11,592 --> 00:09:15,714
typescript and I'm still going to use the sources

144
00:09:15,762 --> 00:09:19,334
and pages directory for building my app so

145
00:09:19,372 --> 00:09:22,486
that it's easier for us. And then the

146
00:09:22,508 --> 00:09:26,478
backend environment is now being initialized with Amplify

147
00:09:26,594 --> 00:09:29,580
Studio, and once that's complete,

148
00:09:30,110 --> 00:09:33,130
you should be able to launch Amplify studio.

149
00:09:33,710 --> 00:09:37,046
Now in the interim, what we'll

150
00:09:37,078 --> 00:09:40,830
do is we will enter into the directory of the new app that we just

151
00:09:40,900 --> 00:09:44,574
built, and we

152
00:09:44,612 --> 00:09:47,902
will go ahead and set that up. So the second

153
00:09:47,956 --> 00:09:51,394
step is to install the amplify packages and build your

154
00:09:51,432 --> 00:09:54,674
data model. So I'm installing a bunch of dependencies for

155
00:09:54,712 --> 00:09:58,382
AWS amplify. The most common one is the Amplify

156
00:09:58,446 --> 00:10:00,690
UI react dependency.

157
00:10:01,190 --> 00:10:04,350
And once Amplify

158
00:10:04,430 --> 00:10:08,262
Studio has been launched, you can actually go into the data

159
00:10:08,316 --> 00:10:11,702
section to build your data model. Now in this particular cat review

160
00:10:11,756 --> 00:10:15,286
application, my data model consists of a reviews model and it needs

161
00:10:15,308 --> 00:10:18,486
to have the name of the can, a description for the cat,

162
00:10:18,588 --> 00:10:22,166
and a rating for the cat, which is set to float

163
00:10:22,198 --> 00:10:27,130
because you could have a cat with a rating of 4.7 and optionally

164
00:10:27,550 --> 00:10:31,158
the image of the cat AWS, well, you would typically include an image of

165
00:10:31,184 --> 00:10:34,606
cat. And once you've defined your data model,

166
00:10:34,708 --> 00:10:38,286
you just go ahead and click save and deploy. Now it's going to deploy this

167
00:10:38,308 --> 00:10:42,114
data model into the backend. Now this abstracts the

168
00:10:42,152 --> 00:10:45,314
complexity of the underlying GraphQL API that

169
00:10:45,352 --> 00:10:49,054
is powered by AWS app sync and amplify

170
00:10:49,102 --> 00:10:52,580
studio makes it real easy for front end developers to define this.

171
00:10:53,450 --> 00:10:57,080
Now let's go back to studio and let's go ahead and

172
00:10:59,210 --> 00:11:02,646
use the UI library to

173
00:11:02,668 --> 00:11:06,422
go ahead and sync in with Figma. So you can actually use the

174
00:11:06,476 --> 00:11:09,926
pre built Figma template. And that opens up the Figma

175
00:11:09,958 --> 00:11:13,420
to code plugin and choose your Figma account.

176
00:11:14,030 --> 00:11:18,234
And once you enter into the Figma account, you can actually see that it

177
00:11:18,272 --> 00:11:21,310
contains themes, primitives and components.

178
00:11:21,730 --> 00:11:25,102
So I'm actually going into the component section here

179
00:11:25,156 --> 00:11:28,846
straight away and there's a pre built component called

180
00:11:28,948 --> 00:11:32,290
review card that I can go ahead and reuse.

181
00:11:32,710 --> 00:11:36,558
Now this is the one that amplify has built for you, but I'm

182
00:11:36,574 --> 00:11:40,898
going to make some changes. I'm going to remove the

183
00:11:40,984 --> 00:11:44,646
description to just be a single description of the

184
00:11:44,668 --> 00:11:45,240
product.

185
00:11:48,730 --> 00:11:52,438
I'm also going to go ahead and remove the pricing because

186
00:11:52,604 --> 00:11:56,182
you don't necessarily attach a price to a cat. I'm also

187
00:11:56,236 --> 00:11:59,594
going to ensure that you can have a

188
00:11:59,632 --> 00:12:03,206
button to favorite the can based on the reviews.

189
00:12:03,398 --> 00:12:07,226
And because it's not properly aligned, I'm just

190
00:12:07,248 --> 00:12:11,002
going to make sure that the name of the cat and the icon

191
00:12:11,066 --> 00:12:14,750
to favorite the cat is in a single row.

192
00:12:15,490 --> 00:12:18,910
And while I'm doing this,

193
00:12:19,060 --> 00:12:22,786
I'm also going to ensure that the whole

194
00:12:22,968 --> 00:12:26,654
card component is actually a little bit nicer

195
00:12:26,702 --> 00:12:30,180
and it looks curvy on the end. So I'm just going to

196
00:12:31,910 --> 00:12:35,750
add a value there. I'm going to clip content to ensure that

197
00:12:35,820 --> 00:12:39,350
we have rounded corners. Going to leave the

198
00:12:39,420 --> 00:12:43,126
rating component as it is just cleaning up the

199
00:12:43,148 --> 00:12:47,010
divider there. And I'm going to copy

200
00:12:47,090 --> 00:12:50,742
the Figma file URL and paste it into amplify

201
00:12:50,806 --> 00:12:54,038
studio. And then I'm going to say sync with Figma.

202
00:12:54,134 --> 00:12:57,274
Now what this does is it's going to fetch all the components and

203
00:12:57,312 --> 00:12:59,370
the primitives from Figma.

204
00:13:00,110 --> 00:13:03,834
Now you can click on accept all to accept all of the themes,

205
00:13:03,882 --> 00:13:07,486
primitives and components. And then let's take

206
00:13:07,508 --> 00:13:11,134
a look at the review card and you can actually see it looks exactly like

207
00:13:11,172 --> 00:13:14,978
how we made the changes in Figma. And in the

208
00:13:14,984 --> 00:13:18,434
meantime, our data model that has already been

209
00:13:18,472 --> 00:13:22,206
deployed has created certain forms. But we'll

210
00:13:22,238 --> 00:13:25,438
talk about it in just a second. For the image,

211
00:13:25,534 --> 00:13:28,230
we'll set it to reviews image.

212
00:13:28,970 --> 00:13:32,882
And for the title,

213
00:13:33,026 --> 00:13:36,294
we're going to set that to reviews name.

214
00:13:36,492 --> 00:13:40,170
And for the description, we will map it to the reviews description.

215
00:13:40,750 --> 00:13:44,442
And finally, for the rating, we're going to set the

216
00:13:44,496 --> 00:13:47,900
value of the rating to be

217
00:13:48,670 --> 00:13:52,202
reviews rating. Now this showcases

218
00:13:52,266 --> 00:13:55,486
the power as to how easy it is to make all

219
00:13:55,508 --> 00:13:59,374
of these changes and bind your UI components to data through

220
00:13:59,412 --> 00:14:01,390
the visual development environment.

221
00:14:03,910 --> 00:14:07,140
Okay. All right,

222
00:14:07,590 --> 00:14:10,898
so next we're going to create the form and

223
00:14:10,984 --> 00:14:14,498
associate the form with data. So this is

224
00:14:14,504 --> 00:14:18,198
the form builder component. So here we have

225
00:14:18,284 --> 00:14:21,766
the name description that has automatically been generated by you based

226
00:14:21,788 --> 00:14:25,314
on the data model that we defined. But the description has been modified

227
00:14:25,362 --> 00:14:28,726
to a text area. The rating, I just changed that to a stepper

228
00:14:28,758 --> 00:14:31,978
field so that it's easier for users to come in and use the

229
00:14:31,984 --> 00:14:35,370
stepper field to input the data. The image is

230
00:14:35,440 --> 00:14:39,466
again optionally containing a placeholder. I'm just adding

231
00:14:39,498 --> 00:14:43,102
a descriptive placeholder text that says enter

232
00:14:43,156 --> 00:14:47,694
the image of your cat here, and that

233
00:14:47,732 --> 00:14:51,662
should be it. Now these changes are automatically saved in

234
00:14:51,796 --> 00:14:55,220
studio as and when you are making them.

235
00:14:55,670 --> 00:14:58,914
All right, now once you go into the data section, you have

236
00:14:58,952 --> 00:15:02,466
the code to pull the code locally. So once

237
00:15:02,488 --> 00:15:06,518
you do amplify pull with the optional application id

238
00:15:06,604 --> 00:15:09,538
as well as the environment name of staging,

239
00:15:09,634 --> 00:15:13,350
it is going to pull all of the code that is there in

240
00:15:13,500 --> 00:15:16,662
studio to your local development environment so that we can continue

241
00:15:16,716 --> 00:15:20,106
to function locally. Now once that's done, it will ask

242
00:15:20,128 --> 00:15:23,594
you to log into amplify CLI and you can log

243
00:15:23,632 --> 00:15:26,886
into amplify CLI and then you can pass into the workflow

244
00:15:26,918 --> 00:15:30,794
about choosing the basics of a JavaScript application with the source directory

245
00:15:30,842 --> 00:15:34,560
build directory, and then you will let it complete

246
00:15:36,210 --> 00:15:38,750
after the app is pulled down locally.

247
00:15:39,890 --> 00:15:43,502
You should be able to open that in an editor of your choice.

248
00:15:43,646 --> 00:15:47,486
In this particular example I'm choosing vs

249
00:15:47,518 --> 00:15:51,394
code and you can say that you plan

250
00:15:51,432 --> 00:15:54,626
on modifying the backend AWS. Well, although for the purposes of this demo we are

251
00:15:54,648 --> 00:15:57,686
not going to be modifying the backend. And you can see now

252
00:15:57,708 --> 00:16:01,206
it's generating the UI components. So all of the UI components that we had

253
00:16:01,228 --> 00:16:04,146
defined earlier, it is going to convert them into functional,

254
00:16:04,178 --> 00:16:08,230
reusable react code and components that can be extended,

255
00:16:08,650 --> 00:16:12,106
right? And then now we're going to set up the application

256
00:16:12,208 --> 00:16:16,010
code and we're going to create a collection in order to render the components.

257
00:16:16,510 --> 00:16:19,786
You can go and say yarn dev or any

258
00:16:19,808 --> 00:16:23,326
package manager of your choice run the local server and you should

259
00:16:23,348 --> 00:16:27,166
see the default create next apps. This is a next 14 app because now that

260
00:16:27,188 --> 00:16:30,302
next JS has released next 14, that's the default that comes through.

261
00:16:30,436 --> 00:16:33,886
And right after that I'm going into app js file

262
00:16:33,918 --> 00:16:38,334
and I'm defining the amplify imports

263
00:16:38,382 --> 00:16:41,954
along with the configuration that is required. I'm also adding the

264
00:16:41,992 --> 00:16:45,762
interfont that is required by this particular application. You can optionally

265
00:16:45,826 --> 00:16:49,254
choose not to if you're okay with the default fonts that are being

266
00:16:49,292 --> 00:16:52,982
used. And then now I go ahead and build

267
00:16:53,116 --> 00:16:57,110
my actual application. I'm going to import the reviews create

268
00:16:57,180 --> 00:17:01,686
form from amplify UI components and I'm going to export the default

269
00:17:01,878 --> 00:17:05,238
function. I'm just going to name that as home. And then I'm

270
00:17:05,254 --> 00:17:08,090
going to call the reviews create form component.

271
00:17:11,170 --> 00:17:14,640
Let's wait for that to be complete.

272
00:17:15,010 --> 00:17:18,234
And once that's done, I'm just going to rerun

273
00:17:18,282 --> 00:17:21,566
the server and you can now see the same form that we designed on

274
00:17:21,588 --> 00:17:24,930
amplify studio is running on your local environment.

275
00:17:25,590 --> 00:17:28,786
Now let's go back into the reviews card component and we

276
00:17:28,808 --> 00:17:32,542
can create a collection. Now collection is a group of components

277
00:17:32,686 --> 00:17:36,354
and studio automatically gives you this ability. Now you can actually

278
00:17:36,392 --> 00:17:40,022
see that there's dummy data in there already. Now, these are not production data

279
00:17:40,076 --> 00:17:43,398
just yet, but you can also have a look and feel as

280
00:17:43,404 --> 00:17:46,438
to how your data is going to look like. Now, any changes that you're going

281
00:17:46,444 --> 00:17:49,430
to make on studio, you need to pull them locally. So I run an amplify

282
00:17:49,510 --> 00:17:53,146
pull just to ensure that all the

283
00:17:53,168 --> 00:17:57,146
components are pulled in locally. And now I'm going

284
00:17:57,168 --> 00:18:01,854
to go ahead and finalize my app code with

285
00:18:01,972 --> 00:18:05,806
the theme provider and I'm going to have a

286
00:18:05,828 --> 00:18:09,786
couple of imports in here. I'm going to be importing the reviews

287
00:18:09,898 --> 00:18:13,166
card collection. I'm also going to be importing

288
00:18:13,198 --> 00:18:17,266
the API category from AWS amplify. I'm also going to

289
00:18:17,288 --> 00:18:20,962
go ahead and import subscriptions because you would

290
00:18:21,016 --> 00:18:24,214
want to go ahead and look at the changes that

291
00:18:24,252 --> 00:18:27,970
happen in real time. And the data modeling capability

292
00:18:28,050 --> 00:18:31,606
of AWS amplify creates the model in the

293
00:18:31,628 --> 00:18:35,302
backend, which is powered by GraphQL APIs that

294
00:18:35,356 --> 00:18:39,386
come through from AWS appsync. And this

295
00:18:39,488 --> 00:18:42,998
provides the ability to go ahead and utilize

296
00:18:43,014 --> 00:18:46,714
the subscriptions feature where you can listen to real

297
00:18:46,752 --> 00:18:50,654
time events through websockets. And once

298
00:18:50,692 --> 00:18:55,070
you subscribe to the event of any changes in this particular model

299
00:18:55,140 --> 00:18:58,942
that I have, I'm actually going ahead and subscribing to on

300
00:18:58,996 --> 00:19:03,700
create reviews. So you can actually see that

301
00:19:05,270 --> 00:19:09,902
I'll be subscribing to the on create reviews

302
00:19:09,966 --> 00:19:14,178
here. And as soon as a new item is created,

303
00:19:14,274 --> 00:19:18,514
I'm going to be displaying that item through collections

304
00:19:18,562 --> 00:19:21,958
here. And in order to

305
00:19:22,044 --> 00:19:25,094
make the styles, the look and feel better,

306
00:19:25,212 --> 00:19:29,500
I'm actually importing certain predefined components from

307
00:19:29,870 --> 00:19:32,870
the UI react library and primitives.

308
00:19:32,950 --> 00:19:36,426
So there are like view text and flexbox that

309
00:19:36,448 --> 00:19:39,822
is provided by amplify UI library. And I'm going to

310
00:19:39,876 --> 00:19:45,054
build my application code here and

311
00:19:45,092 --> 00:19:48,446
that's it. Before you can know, you have already build

312
00:19:48,548 --> 00:19:52,720
the app that we looked at, which is the cat reviews application.

313
00:19:53,730 --> 00:19:57,374
So in a typical workflow for an app

314
00:19:57,412 --> 00:20:01,038
that would have taken multiple hours

315
00:20:01,124 --> 00:20:05,986
or days or months of effort is now reduced to potentially

316
00:20:06,098 --> 00:20:09,590
less than an hour or minutes with AWS amplify studio.

317
00:20:10,330 --> 00:20:14,006
So with that, thank you so much for listening in and hope you all

318
00:20:14,028 --> 00:20:17,398
enjoy the rest of your conference and have a wonderful day.

319
00:20:17,484 --> 00:20:17,782
Thanks,

