1
00:00:23,530 --> 00:00:27,574
Hey, everyone, thanks very much for having me. This is the first time

2
00:00:27,612 --> 00:00:31,062
I've been invited to comfort into Python and, well,

3
00:00:31,116 --> 00:00:34,406
yeah, it's great to be here. I'm going to talk to you about how you

4
00:00:34,428 --> 00:00:38,018
can build animated interactive reports and dashboards

5
00:00:38,114 --> 00:00:41,446
within streamlit using the technology that

6
00:00:41,468 --> 00:00:43,670
we created, ipyvizzu,

7
00:00:44,010 --> 00:00:46,518
integrated into the app platform,

8
00:00:46,684 --> 00:00:49,946
streamlit. So first, I'm going to give you a quick overview

9
00:00:50,018 --> 00:00:53,742
about Vizzu and the technology that we built. Then about

10
00:00:53,796 --> 00:00:57,450
the open source package that we created for data scientists

11
00:00:57,530 --> 00:01:01,434
called IPy Vizzu, and then about the bi directional

12
00:01:01,482 --> 00:01:05,134
component and its use that a senior data scientist

13
00:01:05,262 --> 00:01:10,062
from Streamlit called Zachary Blackwood created

14
00:01:10,206 --> 00:01:13,906
for us. We are really grateful for Zachary for

15
00:01:14,008 --> 00:01:18,054
investing so much into this, and we think that it's a great

16
00:01:18,172 --> 00:01:21,190
step forward and that this integration has some

17
00:01:21,260 --> 00:01:24,710
superb implications and a lot of potential.

18
00:01:25,210 --> 00:01:28,646
Actually, this is an important moment for us because this is the first time

19
00:01:28,668 --> 00:01:32,026
we talk about this integration publicly. There is still some

20
00:01:32,048 --> 00:01:35,866
work to do, but it has such a huge potential that we

21
00:01:35,888 --> 00:01:39,146
didn't want to wait any longer and get you

22
00:01:39,328 --> 00:01:43,134
involved. And we're actually actively looking for people

23
00:01:43,172 --> 00:01:46,974
who want to contribute to the success of this by using

24
00:01:47,012 --> 00:01:50,842
the tool, by giving us feedback, creating examples,

25
00:01:50,906 --> 00:01:54,234
or by even helping us implement new features. So if you're

26
00:01:54,282 --> 00:01:58,302
that kind of person, we'd be welcome you very happily

27
00:01:58,366 --> 00:02:02,066
on board. There's a repo with all the necessary links and

28
00:02:02,088 --> 00:02:05,606
materials you would need to follow along and to start experimenting with

29
00:02:05,628 --> 00:02:12,162
what we built. You can find it at bit Lyvizuf

30
00:02:12,226 --> 00:02:16,280
42. So without further ado, let's get started.

31
00:02:19,550 --> 00:02:22,682
Okay, so if you follow the link, you will end up in this

32
00:02:22,736 --> 00:02:26,714
repo folder. And yeah,

33
00:02:26,912 --> 00:02:31,098
friendly welcome here. And as I said, you have all the necessary lines

34
00:02:31,274 --> 00:02:36,106
that you will need to follow along. And there's also the notebooks

35
00:02:36,218 --> 00:02:39,742
folder, where you will find a couple of notebooks that help

36
00:02:39,796 --> 00:02:42,826
you get acquainted with Ipy Vizzu.

37
00:02:42,938 --> 00:02:46,482
And also there are a couple that I just prepared for you

38
00:02:46,536 --> 00:02:50,066
to just play around with and have

39
00:02:50,088 --> 00:02:53,634
a sense of how this tool works. Basically, I come

40
00:02:53,672 --> 00:02:57,814
from a company called Vizzu, and what we created there is

41
00:02:57,932 --> 00:03:01,734
an animated charting engine that building all

42
00:03:01,772 --> 00:03:05,362
the different kinds of charts using the same logic.

43
00:03:05,506 --> 00:03:08,986
And because of this, it can morph between the

44
00:03:09,008 --> 00:03:12,266
charts that are expressed on its interface. So basically we have

45
00:03:12,288 --> 00:03:14,950
a generic chart morpher,

46
00:03:15,110 --> 00:03:18,362
and that's something very

47
00:03:18,416 --> 00:03:21,882
unique. As you can see, this is just an animation right now within the Jupyter

48
00:03:21,946 --> 00:03:25,306
notebook. So how our technology evolved.

49
00:03:25,418 --> 00:03:29,162
We have the core engine that was developed

50
00:03:29,306 --> 00:03:33,374
in C Plus plus. We used it already a couple of years back in

51
00:03:33,412 --> 00:03:37,022
house. We built stories and interactives with it. And then in September

52
00:03:37,086 --> 00:03:41,054
2021, we released our first open source product, a JavaScript charting

53
00:03:41,102 --> 00:03:45,038
library for JavaScript developers. We're using WebAssembly to

54
00:03:45,064 --> 00:03:48,738
compile the library so the engine in the browser,

55
00:03:48,834 --> 00:03:52,040
and we just built a JavaScript API for that,

56
00:03:52,490 --> 00:03:55,702
and it helped developers. And then last

57
00:03:55,756 --> 00:03:59,522
year we turned our attention to data scientists and we released

58
00:03:59,586 --> 00:04:03,126
ipyvizzu, which is an extension,

59
00:04:03,238 --> 00:04:07,622
an opensource extension for Jupyter notebook and similar computational notebooks.

60
00:04:07,686 --> 00:04:11,038
And it enabled people like, I assume yourself

61
00:04:11,204 --> 00:04:14,510
to build animated charts and data stories in

62
00:04:14,580 --> 00:04:18,266
notebooks using Python. And then last July,

63
00:04:18,378 --> 00:04:22,186
actually on Europython, we announced ipyvizzu

64
00:04:22,218 --> 00:04:26,478
Story, which is a presentation extension of

65
00:04:26,644 --> 00:04:30,466
ipyvizzu that enables you to build, present and share

66
00:04:30,568 --> 00:04:34,350
interactive animated presentations within Jupyter

67
00:04:34,430 --> 00:04:38,054
notebook. We already have a ton of integrations. This open

68
00:04:38,092 --> 00:04:41,766
source approach really helps us to make our

69
00:04:41,788 --> 00:04:45,254
technology embeddable. As you can see, it's available in

70
00:04:45,292 --> 00:04:48,738
many different notebooks and then other platforms such

71
00:04:48,764 --> 00:04:52,422
as panel or it's already pyscript,

72
00:04:52,566 --> 00:04:56,106
and then vehicles like mode and obviously streamlit that we're going

73
00:04:56,128 --> 00:04:59,706
to talk to you about. There's actually a long list on our

74
00:04:59,728 --> 00:05:03,374
website. So if you actually go to

75
00:05:03,412 --> 00:05:07,114
ipyvizzu.com and go to the environments tab,

76
00:05:07,162 --> 00:05:11,002
then you can see all these ids, notebooks,

77
00:05:11,066 --> 00:05:14,180
platforms and the lines where you can use our technology.

78
00:05:15,190 --> 00:05:18,530
So going down to how it works,

79
00:05:18,680 --> 00:05:22,158
basically, ifi Vizzu has only one method,

80
00:05:22,254 --> 00:05:26,100
the animate method, which has three

81
00:05:27,190 --> 00:05:30,738
parameters. The data that you add on the chart,

82
00:05:30,834 --> 00:05:34,294
the configuration of the charts, and the styling of the charts that you need to

83
00:05:34,332 --> 00:05:37,442
add. And then there are the optional animation

84
00:05:37,506 --> 00:05:41,186
options that determine how to animate

85
00:05:41,218 --> 00:05:44,694
from one stick to the other. And basically, if you call the animate method

86
00:05:44,742 --> 00:05:47,990
once with the right settings, then you will draw one chart.

87
00:05:48,070 --> 00:05:51,566
If you call it again, then ipyvizzu will

88
00:05:51,588 --> 00:05:55,166
automatically morph the original chart, the first chart to

89
00:05:55,188 --> 00:05:57,280
the second one, and that's it.

90
00:05:58,130 --> 00:06:01,646
So let's see an example that I'm going

91
00:06:01,668 --> 00:06:06,254
to show you on the Titanic data set. So it's a titanic csv,

92
00:06:06,382 --> 00:06:10,066
and we're using pandas to

93
00:06:10,088 --> 00:06:13,950
read the csv to a data frame. And then we add the data frame

94
00:06:14,110 --> 00:06:17,606
to the iPad chart. This is just a

95
00:06:17,628 --> 00:06:21,094
vanilla Jupyter notebook. I just hacked the CSS a little bit so that

96
00:06:21,132 --> 00:06:25,574
we are going to have the

97
00:06:25,612 --> 00:06:28,934
result of the

98
00:06:28,972 --> 00:06:32,762
output of a cell next to the cell itself. So we can see the code

99
00:06:32,816 --> 00:06:37,210
and the output side by side. So, yeah, this is the Titanic data set.

100
00:06:37,360 --> 00:06:40,506
And I'm going to building the first chart. I'm going

101
00:06:40,528 --> 00:06:43,934
to say how wide and high it should be.

102
00:06:44,052 --> 00:06:47,146
I add the data to it. I call the animate method,

103
00:06:47,178 --> 00:06:50,366
and then I configure the chart by adding the count,

104
00:06:50,548 --> 00:06:54,382
which is lines, a value that we added to the data set. That's one

105
00:06:54,436 --> 00:06:57,554
for each passenger to the x axis and

106
00:06:57,592 --> 00:07:00,670
then the sex of the passengers y axis.

107
00:07:00,750 --> 00:07:04,398
And we also add the count to the label channel and we add a title

108
00:07:04,414 --> 00:07:08,294
to the chart. So if I run this cell, I'm going to draw a

109
00:07:08,332 --> 00:07:11,558
simple bar chart where I have the male and the

110
00:07:11,564 --> 00:07:15,094
female passengers and the number of them represented by

111
00:07:15,212 --> 00:07:19,254
the width of the bars, but it's also written on it. So x

112
00:07:19,292 --> 00:07:22,922
and y are access. And label is a channel that you can attach data

113
00:07:22,976 --> 00:07:25,498
series to, such as count,

114
00:07:25,584 --> 00:07:28,906
sex. And next, in the next phase, I'm going

115
00:07:28,928 --> 00:07:32,734
to just add the survived category to

116
00:07:32,772 --> 00:07:36,478
the x axis and also to the color channel. That is

117
00:07:36,564 --> 00:07:39,870
what determines whether the passengers survived

118
00:07:40,690 --> 00:07:44,034
the Titanic tragedy or not. And if I do that,

119
00:07:44,072 --> 00:07:47,874
then as you can see, these bars has

120
00:07:47,912 --> 00:07:51,358
been split and they become stack bars,

121
00:07:51,454 --> 00:07:55,486
where we can see the number of people for

122
00:07:55,528 --> 00:07:58,610
each sex who died and who survived the crash.

123
00:07:58,770 --> 00:08:02,582
And, yeah, I have a ton of other

124
00:08:02,636 --> 00:08:06,310
options if I call the animate method over and over again.

125
00:08:06,460 --> 00:08:09,946
So let's first just remove the

126
00:08:10,048 --> 00:08:13,302
survived category from the x axis

127
00:08:13,366 --> 00:08:15,290
and add it to the y axis.

128
00:08:17,310 --> 00:08:20,890
I'm adding it to the y axis and I removed it from the x axis.

129
00:08:20,970 --> 00:08:24,426
As you can see, ipvisor remembers everything from the previous phase,

130
00:08:24,458 --> 00:08:27,694
so I only need to determine what to change.

131
00:08:27,892 --> 00:08:31,582
And here, instead of the stack bar

132
00:08:31,636 --> 00:08:35,426
chart, I ended up having a grouped bar chart. So now

133
00:08:35,448 --> 00:08:38,658
I can see the numbers side by side.

134
00:08:38,744 --> 00:08:42,514
And there are a couple of other configuration options. I can change

135
00:08:42,552 --> 00:08:46,120
the geometry so the geometric elements used to represent data,

136
00:08:46,650 --> 00:08:49,160
like circle, for example.

137
00:08:49,610 --> 00:08:53,462
And then I can add the same

138
00:08:53,516 --> 00:08:57,570
number that's on the label and that's on the vertical position

139
00:08:57,660 --> 00:09:01,210
on the markers to the

140
00:09:01,280 --> 00:09:04,540
size of the markers. So now

141
00:09:04,990 --> 00:09:09,162
the circles have different size, and I can even change the coordinate system to

142
00:09:09,216 --> 00:09:15,258
polar instead of euclidean. So now it's

143
00:09:15,274 --> 00:09:19,086
getting into this polar coordinate system. There are a

144
00:09:19,108 --> 00:09:22,330
couple of other configuration options,

145
00:09:22,500 --> 00:09:26,466
like the alignment, the sorting. You can

146
00:09:26,488 --> 00:09:30,046
add a title, as you saw, you can split the values.

147
00:09:30,158 --> 00:09:33,570
And we actually encourage you to just

148
00:09:33,720 --> 00:09:37,134
play with it. It has so much freedom.

149
00:09:37,262 --> 00:09:40,486
And whatever you do, iPadiza will

150
00:09:40,508 --> 00:09:44,294
take care of animating to the new state. So it's really easy

151
00:09:44,332 --> 00:09:48,038
to use, or at least that's what we're working towards.

152
00:09:48,124 --> 00:09:51,786
If you have any comments on why you think it or how you

153
00:09:51,808 --> 00:09:55,162
think it should be easier to use our tool,

154
00:09:55,216 --> 00:09:58,426
then please let us know. But that's the case.

155
00:09:58,448 --> 00:10:02,030
We have access and channels and you can just add and remove

156
00:10:02,450 --> 00:10:06,030
data series on those. To give you another

157
00:10:06,100 --> 00:10:09,360
example, before turning our attention to

158
00:10:09,810 --> 00:10:13,394
the integrated version of iPad streamlit to have

159
00:10:13,432 --> 00:10:17,278
a better understanding of how this thing works. So here's

160
00:10:17,294 --> 00:10:21,186
another example. It uses data about shows

161
00:10:21,208 --> 00:10:25,170
much money, how much revenue different music formats generated

162
00:10:25,670 --> 00:10:29,186
over the years. Let me just clear the output

163
00:10:29,298 --> 00:10:32,546
of the cells and run this notebook

164
00:10:32,658 --> 00:10:36,486
from the start so that clean we

165
00:10:36,508 --> 00:10:38,794
are going to use presets here.

166
00:10:38,912 --> 00:10:43,850
So as you saw in the previous notebook,

167
00:10:44,910 --> 00:10:48,630
we just added data series to access and channels.

168
00:10:48,710 --> 00:10:52,666
And now we're going to use a preset and we are going to determine

169
00:10:52,698 --> 00:10:55,070
that. What we want to build is a bar chart.

170
00:10:57,090 --> 00:11:01,630
We found that it's easier actually for the users to

171
00:11:01,780 --> 00:11:05,214
use iPad visit. This way we have a ton of

172
00:11:05,252 --> 00:11:08,786
presets that you can also find on our site.

173
00:11:08,888 --> 00:11:12,322
If you go to ipivisit.com, you'll end up in our documentation site

174
00:11:12,376 --> 00:11:16,438
and then within the examples, you can find a preset. As you

175
00:11:16,444 --> 00:11:19,974
can see, we have plenty of those. And if you click on any

176
00:11:20,012 --> 00:11:23,458
of the presets or thumbnails for that preset,

177
00:11:23,634 --> 00:11:27,250
you'll end up checking out the code

178
00:11:27,420 --> 00:11:30,474
of that specific preset that you clicked on.

179
00:11:30,592 --> 00:11:34,294
And you can play it here, you can copy

180
00:11:34,342 --> 00:11:37,914
the code and use it right away in

181
00:11:37,952 --> 00:11:41,926
your notebook, and you can even copy

182
00:11:41,958 --> 00:11:45,694
the whole thing and start fiddling with it.

183
00:11:45,892 --> 00:11:48,974
So right now, we built this bar chart here.

184
00:11:49,012 --> 00:11:52,154
There are a couple of issues, so I don't really like that all the bars

185
00:11:52,202 --> 00:11:55,938
have the same color. And actually the numbers here are really huge.

186
00:11:56,104 --> 00:11:59,298
So what I'm going to do is, first of all, I'm going to

187
00:11:59,304 --> 00:12:03,154
use instead a group bar chart where I say that this

188
00:12:03,192 --> 00:12:07,842
is data is grouped by the same category,

189
00:12:07,906 --> 00:12:11,414
the format that's on

190
00:12:11,452 --> 00:12:14,934
the y axis. So now each bar has a different

191
00:12:14,972 --> 00:12:18,422
color because that's how group bar charts look like.

192
00:12:18,556 --> 00:12:21,942
And I'm going to play and fiddle a little bit with the styling.

193
00:12:22,006 --> 00:12:25,590
I'm going to add a new color palette. So I'm just listing

194
00:12:25,670 --> 00:12:29,670
color codes here and I basically assign it to the different categories.

195
00:12:29,830 --> 00:12:33,326
I'll change the number format, how many digits I

196
00:12:33,348 --> 00:12:36,574
want, and I'm going to use

197
00:12:36,612 --> 00:12:40,558
a number scale. This is a fairly new development, so I have to add it

198
00:12:40,564 --> 00:12:44,466
to the x and the y axis. Now we're going to make it

199
00:12:44,488 --> 00:12:47,874
easier for you later on. So what happens is

200
00:12:47,912 --> 00:12:51,698
that we have a different color scheme right now and we have

201
00:12:51,784 --> 00:12:54,942
the US short scale and the numbers are

202
00:12:55,016 --> 00:12:58,466
shorter and easier to read. And now I'm

203
00:12:58,498 --> 00:13:02,594
going to use yet another preset, the splitted column

204
00:13:02,642 --> 00:13:06,642
chart, and also fill with the styling

205
00:13:06,706 --> 00:13:10,870
a little bit. And here's just yet another transformation

206
00:13:10,950 --> 00:13:14,060
happening automatically where I can see

207
00:13:14,430 --> 00:13:18,090
how the revenue changed over time

208
00:13:18,160 --> 00:13:22,174
from these music formats side by side. And also

209
00:13:22,212 --> 00:13:27,258
you can add events to override

210
00:13:27,354 --> 00:13:30,686
certain behaviors. So for example, I don't like that all

211
00:13:30,708 --> 00:13:33,966
the years are written here next to the x axis.

212
00:13:34,078 --> 00:13:38,050
And there's this short event that will

213
00:13:38,120 --> 00:13:41,890
basically enable only every

214
00:13:41,960 --> 00:13:45,720
fifth year or like year that's divisible by five

215
00:13:47,050 --> 00:13:50,790
to be drawn the number for it. So I run the cell

216
00:13:50,940 --> 00:13:54,482
and if I touch the chart then boom,

217
00:13:54,626 --> 00:13:58,394
all the unnecessary years have gone.

218
00:13:58,592 --> 00:14:02,294
And so there are a couple of other examples

219
00:14:02,342 --> 00:14:05,900
here to go to stream graph for example.

220
00:14:06,750 --> 00:14:10,282
Then to switch on the splitting feature, which is

221
00:14:10,336 --> 00:14:13,974
really nice. Again, it's great for stack charts

222
00:14:14,022 --> 00:14:17,886
to see them, the component side by side.

223
00:14:18,068 --> 00:14:21,870
Then I'm going to just use the data

224
00:14:21,940 --> 00:14:25,770
filter option, which is also really great when you have animation.

225
00:14:25,850 --> 00:14:30,062
So we're going to just zoom into vinyl

226
00:14:30,126 --> 00:14:32,340
and streaming as you can see.

227
00:14:33,590 --> 00:14:37,314
And yeah, since all the transition is

228
00:14:37,352 --> 00:14:41,106
animated, it's really like zooming in and everybody understands what's

229
00:14:41,138 --> 00:14:44,214
going on, so you don't have to explain what we're looking at.

230
00:14:44,332 --> 00:14:47,858
And in the next phase I'm just going to switch off the filter and the

231
00:14:47,884 --> 00:14:52,266
splitting as well. So I'm going to get back to the

232
00:14:52,288 --> 00:14:55,814
stream graph. This is the phase that my wife calls

233
00:14:55,862 --> 00:14:59,420
when the elephants kiss. Now you know why.

234
00:14:59,890 --> 00:15:03,086
And yeah, yet another preset is the

235
00:15:03,108 --> 00:15:07,630
line chart, which enables us to compare

236
00:15:10,370 --> 00:15:14,510
the revenue from these formats side by side. So basically

237
00:15:14,580 --> 00:15:18,286
these were the only examples that I want to just show you with notebooks,

238
00:15:18,318 --> 00:15:21,666
at least from ipyvizzu. And as I

239
00:15:21,688 --> 00:15:25,090
said, they are here in the repo folder within the notebooks. This was

240
00:15:25,160 --> 00:15:28,594
number one and number. And the

241
00:15:28,632 --> 00:15:32,306
third one is an example of IPY. Visit story there's

242
00:15:32,338 --> 00:15:35,606
like a longer code here. I'm not

243
00:15:35,628 --> 00:15:39,660
going to go into more detail, but basically that was the first

244
00:15:40,030 --> 00:15:43,702
implementation of our technology when we enabled

245
00:15:43,846 --> 00:15:47,594
the use of interactive animations. And here you

246
00:15:47,632 --> 00:15:50,966
basically set your views and yeah, I'm just using my buttons

247
00:15:50,998 --> 00:15:54,574
on my keyboard and you cannot see it. Sorry about that. But basically you have

248
00:15:54,612 --> 00:15:58,938
these buttons beneath the chart

249
00:15:59,034 --> 00:16:03,646
that you can use, but you can also use a clicker or

250
00:16:03,668 --> 00:16:07,122
your keyboard, just like I did initially to move

251
00:16:07,176 --> 00:16:11,170
back and forth. And basically it means that you can have a lines

252
00:16:11,240 --> 00:16:14,626
presentation of your findings. This is again just

253
00:16:14,648 --> 00:16:18,054
a great example of zooming into certain areas and

254
00:16:18,092 --> 00:16:21,686
to grouping and rearranging certain elements to

255
00:16:21,708 --> 00:16:25,542
show how they changed over time while making

256
00:16:25,596 --> 00:16:29,970
everyone crystal clear what's going on and not having to iterate

257
00:16:30,050 --> 00:16:32,422
all over again, like what we're looking at.

258
00:16:32,556 --> 00:16:36,058
So yeah, this is iPad as a story. There's an example of that in

259
00:16:36,064 --> 00:16:39,500
the repo. Take a look at it if you're interested.

260
00:16:40,590 --> 00:16:43,754
So that was the part of

261
00:16:43,792 --> 00:16:46,794
IPiV running in notebooks and other platforms.

262
00:16:46,842 --> 00:16:50,720
And now let's focus on streamlit first.

263
00:16:51,650 --> 00:16:56,226
Basically, this is the

264
00:16:56,248 --> 00:16:59,506
streamlit Vizzu repository is something that

265
00:16:59,528 --> 00:17:03,090
we built together with Zachary. If you

266
00:17:03,240 --> 00:17:07,026
go and visit it in the readme, there's like

267
00:17:07,048 --> 00:17:10,078
a short description of what this is. This is the bi

268
00:17:10,104 --> 00:17:14,114
directional component that Zachary built, the installation instructions.

269
00:17:14,162 --> 00:17:17,926
As you can see, it's available on PiP. By the way, iPad is an

270
00:17:17,948 --> 00:17:22,010
iPad story as well. And here's documentation

271
00:17:22,750 --> 00:17:26,298
written also by Zachary. Great job, Zachary. Thank you

272
00:17:26,304 --> 00:17:30,154
very much for that. And you can just

273
00:17:30,272 --> 00:17:33,726
check out how to get started with stream with

274
00:17:33,748 --> 00:17:37,040
Vizzu. There is a sample code that we're going to show you anyway.

275
00:17:37,650 --> 00:17:41,626
But if you go to this repo, then you're

276
00:17:41,658 --> 00:17:45,090
in good hands and

277
00:17:45,160 --> 00:17:49,026
that's the best place to start. So basically, this is the

278
00:17:49,048 --> 00:17:52,980
first app that I'm going to show you. Let me quickly

279
00:17:53,590 --> 00:17:57,046
bring up. Yeah, so this is the app on

280
00:17:57,068 --> 00:18:00,102
the right side and the code for that on the left side.

281
00:18:00,236 --> 00:18:03,346
As you can see, we imported pandas and streamlit.

282
00:18:03,378 --> 00:18:07,814
And then there's the streamlit visual component from

283
00:18:07,852 --> 00:18:11,306
which we are going to use config data and visual chart. It's almost the

284
00:18:11,328 --> 00:18:15,226
same as it is with ipyvizzu. And so we

285
00:18:15,248 --> 00:18:18,762
create a Vizzu chart. We build a very

286
00:18:18,816 --> 00:18:22,480
simple data frame. We add the data.

287
00:18:24,050 --> 00:18:27,374
So we create the data object. We add

288
00:18:27,412 --> 00:18:31,226
the data frame to the data object. We first call chart

289
00:18:31,258 --> 00:18:35,038
animate data that just sets up an empty chart. And then we

290
00:18:35,124 --> 00:18:38,278
add some configuration to IpI Vizzu

291
00:18:38,394 --> 00:18:42,210
to tell how to display the data. And initially it's going to be that

292
00:18:42,360 --> 00:18:45,826
the a series. So the XYZ is

293
00:18:45,928 --> 00:18:49,150
on the x axis and then the b series, which is lines one,

294
00:18:49,160 --> 00:18:52,726
two, three is on the b axis. And there's the title. Look at my

295
00:18:52,748 --> 00:18:55,446
plot. So this is what we're looking at. X, y and z. And one,

296
00:18:55,468 --> 00:18:59,990
two, three. Here is an interactive element

297
00:19:00,150 --> 00:19:03,334
from streamlit, a checkbox called swap.

298
00:19:03,462 --> 00:19:06,906
And if it's true, so if I click on the

299
00:19:06,928 --> 00:19:11,066
checkbox, then notice that the configuration of

300
00:19:11,088 --> 00:19:14,182
the chart changes. So now the y axis,

301
00:19:14,246 --> 00:19:17,614
we're going to have the series a, and the axis is going to have

302
00:19:17,652 --> 00:19:21,022
the series b. It's basically just. And the title is going to change.

303
00:19:21,076 --> 00:19:24,286
So it's just swapping the configuration. And as

304
00:19:24,308 --> 00:19:29,378
you can see, ivz automatically does

305
00:19:29,464 --> 00:19:33,794
this and changes the configuration of

306
00:19:33,832 --> 00:19:37,522
the chart. And the other thing that it does,

307
00:19:37,576 --> 00:19:41,174
and that's why it's bi directional, is that if you click on

308
00:19:41,212 --> 00:19:45,334
any of the markers, for example, it reads some data and

309
00:19:45,372 --> 00:19:49,322
it says that the value of the click bar is two.

310
00:19:49,456 --> 00:19:53,340
And here's the code for that. So basically, if the data

311
00:19:54,990 --> 00:19:58,074
is not known and marker in data,

312
00:19:58,272 --> 00:20:02,060
the data is what basically we read from

313
00:20:02,910 --> 00:20:06,926
the chart. If it's not known, then it just writes here the value of

314
00:20:06,948 --> 00:20:11,118
the click bar, and it reads the values from

315
00:20:11,284 --> 00:20:15,490
the b series or array and

316
00:20:15,560 --> 00:20:19,278
writes it out right beneath the chart. So it's

317
00:20:19,294 --> 00:20:22,514
a very simple, great example built by

318
00:20:22,552 --> 00:20:26,566
Zachary, which shows how you can manipulate the

319
00:20:26,588 --> 00:20:29,810
configuration of the chart using the interactive elements from streamlit,

320
00:20:29,890 --> 00:20:33,398
and also do something with the data that

321
00:20:33,484 --> 00:20:36,310
comes out of the interactive chart.

322
00:20:37,130 --> 00:20:39,910
So this app actually have more pages?

323
00:20:41,370 --> 00:20:44,874
We have five altogether. We're going to check out all five

324
00:20:44,912 --> 00:20:48,394
of these. The last one is pretty complicated, so I'm not going to go into

325
00:20:48,432 --> 00:20:51,178
more details, but it's always there for you to explore.

326
00:20:51,354 --> 00:20:54,830
And the second one. So this is again, the data

327
00:20:54,900 --> 00:20:58,670
from about the revenue generated music format.

328
00:20:59,010 --> 00:21:02,782
I used group bar chart. As you can see, I actually,

329
00:21:02,916 --> 00:21:06,130
in the code, used the group bar chart

330
00:21:07,910 --> 00:21:11,714
preset, which is really

331
00:21:11,832 --> 00:21:15,246
easy to use. I added styling as well.

332
00:21:15,288 --> 00:21:19,400
So it's basically the same thing that we used

333
00:21:20,250 --> 00:21:23,542
within ifi vizzu. And the only difference is that

334
00:21:23,676 --> 00:21:27,126
I have here a slider that tells you to pick a

335
00:21:27,148 --> 00:21:30,518
year. And if you change the year, you can either do it

336
00:21:30,524 --> 00:21:34,410
by your mouse, or again, you can change to whatever

337
00:21:34,480 --> 00:21:37,660
you want, or you can move year by year

338
00:21:39,630 --> 00:21:43,086
from one year to the other. For example, this is

339
00:21:43,108 --> 00:21:46,782
the early 90s, where CD was really

340
00:21:46,836 --> 00:21:50,174
high. But if we go backwards one by one, we can

341
00:21:50,212 --> 00:21:55,120
see that actually it was around 1990.

342
00:21:57,430 --> 00:22:01,554
In 1990, cassette was still raging. And then in

343
00:22:01,592 --> 00:22:05,554
1991, CD became the most popular or music

344
00:22:05,592 --> 00:22:08,818
format, or at least the one that generated the most revenue.

345
00:22:08,994 --> 00:22:13,362
And, yeah, it's just an easy interaction.

346
00:22:13,426 --> 00:22:17,014
Again, basically, the upper part of the code is pretty much

347
00:22:17,052 --> 00:22:20,954
the same. There's just one thing here, the chart feature tooltip is

348
00:22:20,992 --> 00:22:24,874
set to true, it results that there is this

349
00:22:24,992 --> 00:22:29,946
tooltip that appears on top of the markers if

350
00:22:29,968 --> 00:22:31,760
you hover your mouse over them,

351
00:22:32,770 --> 00:22:36,142
which is great to read, values that might not be

352
00:22:36,196 --> 00:22:39,486
visible. In this case, I think all the data is

353
00:22:39,508 --> 00:22:42,800
visible, but there can be more complex cases, obviously.

354
00:22:43,890 --> 00:22:46,560
Yeah. And that's about it.

355
00:22:48,710 --> 00:22:52,642
The racing bar charts were so

356
00:22:52,696 --> 00:22:56,214
popular a couple of years ago. I think it's a little bit

357
00:22:56,252 --> 00:22:59,430
better that you have the chance to control them.

358
00:22:59,580 --> 00:23:03,320
And it's just, again, a simple example. Okay, third example,

359
00:23:03,770 --> 00:23:07,400
again, built by Zachary. It's a drill down example.

360
00:23:08,250 --> 00:23:12,106
It's a little more complicated, but not the data part, because this

361
00:23:12,128 --> 00:23:16,054
is the whole of the data frame that you can see here, but the interaction

362
00:23:16,102 --> 00:23:19,754
part, it's actually, I'm just going to set

363
00:23:19,792 --> 00:23:23,440
it back to the original state. So this is

364
00:23:23,890 --> 00:23:27,562
how it's set. Originally, we have three series,

365
00:23:27,626 --> 00:23:31,102
a, b and c. Two of them are categories a and c,

366
00:23:31,156 --> 00:23:34,254
and b is a number. So what we have

367
00:23:34,292 --> 00:23:39,006
here is you

368
00:23:39,028 --> 00:23:42,458
call the chart get event, the marker

369
00:23:42,554 --> 00:23:46,760
categories a. So basically it reads what,

370
00:23:47,290 --> 00:23:51,030
what category has been clicked on

371
00:23:51,180 --> 00:23:54,886
from the values within a. And then

372
00:23:55,068 --> 00:24:00,026
it basically applies a filter here so

373
00:24:00,048 --> 00:24:04,314
that it only includes the

374
00:24:04,352 --> 00:24:08,070
records where the category

375
00:24:08,150 --> 00:24:11,260
of a equals the one that you clicked on.

376
00:24:11,870 --> 00:24:15,466
And it also changes the configuration. So originally it's the

377
00:24:15,488 --> 00:24:19,342
a on the x axis and the b on the y axis, but then

378
00:24:19,396 --> 00:24:23,438
it changes to the c being on the x axis. And while

379
00:24:23,524 --> 00:24:27,566
actually b stays on the y axis. This is actually unnecessary

380
00:24:27,758 --> 00:24:31,330
since it remains the same. And so

381
00:24:31,400 --> 00:24:34,900
it means that, again, this is a really short

382
00:24:35,610 --> 00:24:39,334
code, as you can see, like 45

383
00:24:39,372 --> 00:24:45,890
lines. But here you have an interactive drill down functionality

384
00:24:45,970 --> 00:24:49,130
that if you click on any of the markers,

385
00:24:49,710 --> 00:24:53,766
it will just zoom in on that marker

386
00:24:53,798 --> 00:24:57,014
and drills down automatically. And if you click anywhere

387
00:24:57,062 --> 00:25:00,394
else, then it will move back to the

388
00:25:00,432 --> 00:25:03,950
original state. I think it's a great example, and again,

389
00:25:04,020 --> 00:25:07,578
very simple to use and to implement.

390
00:25:07,754 --> 00:25:11,198
We actually did a very popular piece in one of

391
00:25:11,204 --> 00:25:15,300
the local online newspapers where you could zoom into a data set,

392
00:25:15,750 --> 00:25:19,490
seeing the big arrangements

393
00:25:19,910 --> 00:25:22,334
that a company made or big agreements,

394
00:25:22,462 --> 00:25:26,294
and see more details about it. But there are plenty of

395
00:25:26,332 --> 00:25:30,566
examples when you've been drilling down, it makes sense. And this

396
00:25:30,588 --> 00:25:34,386
is a very intuitive way for any business user to drill

397
00:25:34,418 --> 00:25:38,614
down and check for more details. All right.

398
00:25:38,812 --> 00:25:42,506
The fourth example is actually one

399
00:25:42,528 --> 00:25:45,338
of the explorers that I wanted to show you.

400
00:25:45,424 --> 00:25:48,922
I'm going to also show you the code. So the title of the talk

401
00:25:48,976 --> 00:25:52,334
was let them explore. And basically, I think this

402
00:25:52,372 --> 00:25:56,426
is the strongest benefit

403
00:25:56,618 --> 00:26:00,330
of Vizzu Streamlit. So ipizu

404
00:26:00,410 --> 00:26:04,980
being used in streamlit, that now

405
00:26:05,990 --> 00:26:09,122
you can build these explorers using

406
00:26:09,176 --> 00:26:13,262
this technology, which enables basic business users

407
00:26:13,326 --> 00:26:16,642
to just explore, maybe even complex

408
00:26:16,706 --> 00:26:21,090
data sets on their own. Always understanding

409
00:26:21,250 --> 00:26:24,630
where they are, always keeping track of the context,

410
00:26:26,090 --> 00:26:29,238
but still have a lot of different opportunities

411
00:26:29,414 --> 00:26:33,210
for exploration and for applying their business expertise

412
00:26:33,550 --> 00:26:36,970
in finding solutions and finding

413
00:26:37,630 --> 00:26:41,374
new insights. So this is actually a

414
00:26:41,412 --> 00:26:44,974
very simple data set that contains four

415
00:26:45,172 --> 00:26:48,320
products. Sales data, about four products.

416
00:26:49,490 --> 00:26:53,106
How many sales were there? How many units were sold? This is what

417
00:26:53,128 --> 00:26:57,170
we see right now, let's say just last year.

418
00:26:57,320 --> 00:27:01,154
And we can also see

419
00:27:01,192 --> 00:27:05,134
on the chart a couple of interactive

420
00:27:05,182 --> 00:27:08,982
elements. And what we can do here is, for example, switch from

421
00:27:09,036 --> 00:27:12,674
the number of sales to the revenue

422
00:27:12,722 --> 00:27:16,722
that's been generated. We can order the items

423
00:27:16,786 --> 00:27:18,700
alphabetically or by value,

424
00:27:20,270 --> 00:27:23,578
just with the click of a button. We can even

425
00:27:23,744 --> 00:27:27,162
filter categories like this

426
00:27:27,216 --> 00:27:31,262
and whatever vanishes will vanish in an animated sense.

427
00:27:31,316 --> 00:27:34,558
So it's always straightforward what happened?

428
00:27:34,724 --> 00:27:39,998
What changed. We can also check

429
00:27:40,084 --> 00:27:43,706
the data by region or both by region

430
00:27:43,738 --> 00:27:47,102
and product. Now we have four regions,

431
00:27:47,166 --> 00:27:51,214
west southeast, and we can actually just aggregate

432
00:27:51,342 --> 00:27:55,734
the data by region and see

433
00:27:55,772 --> 00:27:59,030
it without the product itself. But still,

434
00:27:59,100 --> 00:28:02,454
I can just remove the accessories. And now I have information

435
00:28:02,572 --> 00:28:06,070
about the revenue generated from these three products

436
00:28:06,220 --> 00:28:10,282
in these

437
00:28:10,336 --> 00:28:14,342
four regions. And I can actually switch

438
00:28:14,486 --> 00:28:18,394
polar coordinates, which in this setting might

439
00:28:18,432 --> 00:28:21,414
not be that crucially important,

440
00:28:21,552 --> 00:28:25,646
but still, it's an opportunity you have there. I think actually

441
00:28:25,748 --> 00:28:29,646
these polar charts work better on mobile because they take up less space.

442
00:28:29,828 --> 00:28:33,266
And yeah, you can actually use stream as

443
00:28:33,288 --> 00:28:36,706
interactive elements to change the styling of the

444
00:28:36,728 --> 00:28:40,050
chart. So you can set the background color, for example,

445
00:28:40,200 --> 00:28:42,740
to a really ugly color.

446
00:28:44,150 --> 00:28:47,654
Luckily you can also change it back quite

447
00:28:47,692 --> 00:28:51,640
easily. You can even write here

448
00:28:52,170 --> 00:28:55,766
code. It looks better with the

449
00:28:55,788 --> 00:29:01,498
original color. Yeah, here we go. But there

450
00:29:01,504 --> 00:29:04,554
are a plethora of different styling options and you can use any

451
00:29:04,592 --> 00:29:08,090
of those. So what happens here code wise is, again,

452
00:29:08,160 --> 00:29:11,946
you read the data, you create the chart, you set

453
00:29:11,968 --> 00:29:15,454
the toolkit to true, and now you have list of

454
00:29:15,492 --> 00:29:18,622
items that you add to a multi select

455
00:29:18,756 --> 00:29:21,982
control, that here you have

456
00:29:22,116 --> 00:29:26,302
five columns where you add radio buttons and color picker.

457
00:29:26,446 --> 00:29:29,874
And basically you just add the options there. These are,

458
00:29:29,912 --> 00:29:34,178
I think, very straightforward to anyone who actually used film it

459
00:29:34,264 --> 00:29:38,338
at any point in time. You set the style

460
00:29:38,434 --> 00:29:42,326
here so that it uses the background color red from

461
00:29:42,348 --> 00:29:45,922
this color picker. I guess the filter

462
00:29:45,986 --> 00:29:51,274
might be the most complicated one, where you need to join the

463
00:29:51,312 --> 00:29:55,898
items here from the products list. And then

464
00:29:56,064 --> 00:30:00,374
the title is also a bit complicated, so it always reflects,

465
00:30:00,422 --> 00:30:04,078
for example, if I remove the handbags from this

466
00:30:04,164 --> 00:30:07,534
chart, then it will vanish from the title as well.

467
00:30:07,652 --> 00:30:11,258
So it's another way of helping the user

468
00:30:11,354 --> 00:30:13,858
always keep track of what they're looking at.

469
00:30:14,024 --> 00:30:17,522
And so the most important part is this if,

470
00:30:17,576 --> 00:30:21,874
else if and else part where basically if the comfort buy

471
00:30:21,992 --> 00:30:27,090
is by product, then let's

472
00:30:27,170 --> 00:30:32,470
show it on the cartesian

473
00:30:32,970 --> 00:30:36,694
coordinate system because it's easier to follow. So then the

474
00:30:36,732 --> 00:30:40,498
product is on the y axis. So shoes and gloves and the measure,

475
00:30:40,594 --> 00:30:43,754
which is either the revenue or the sales, is on the

476
00:30:43,792 --> 00:30:47,706
x axis. It's pretty straightforward and there's nothing on the

477
00:30:47,728 --> 00:30:50,862
color. If the compromise is set to

478
00:30:50,916 --> 00:30:54,334
region, then we

479
00:30:54,372 --> 00:30:57,658
will have the region on the x axis.

480
00:30:57,754 --> 00:31:01,438
West, south, northeast, we have color

481
00:31:01,604 --> 00:31:06,350
data also there. It's also region and measure revenue

482
00:31:06,430 --> 00:31:10,146
or sales independently. So basically whatever you select

483
00:31:10,248 --> 00:31:13,842
is on the y axis. And when

484
00:31:13,896 --> 00:31:17,718
you have both, which is the else option here, then product

485
00:31:17,804 --> 00:31:21,346
is on the y axis, the measure,

486
00:31:21,458 --> 00:31:26,166
and the region is on the x axis and

487
00:31:26,268 --> 00:31:29,862
the region is still on the color. That's why

488
00:31:29,916 --> 00:31:33,900
we get to these stacked bar charts where

489
00:31:34,270 --> 00:31:37,786
the measure and the regions are on the same axis. That's why

490
00:31:37,808 --> 00:31:41,294
it's stacked. And now we build

491
00:31:41,412 --> 00:31:45,134
this config object with all the parameters that

492
00:31:45,172 --> 00:31:49,738
has been set before. You can actually set some opportunities

493
00:31:49,834 --> 00:31:53,218
independently. So if chords are set to color,

494
00:31:53,304 --> 00:31:57,870
then you just add more attributes

495
00:31:57,950 --> 00:32:01,858
to this object coordinate system

496
00:32:01,944 --> 00:32:05,234
and sorting. And then basically you call

497
00:32:05,272 --> 00:32:08,806
this one single line where you call the

498
00:32:08,828 --> 00:32:12,322
animate method, you add the data filter

499
00:32:12,386 --> 00:32:15,762
with the filter that set so far the config. With the config,

500
00:32:15,826 --> 00:32:20,058
the style that's basically just the background color and even

501
00:32:20,224 --> 00:32:23,514
you set a delay to 0.1, you can set

502
00:32:23,552 --> 00:32:26,854
it to zero. Basically it helps

503
00:32:26,902 --> 00:32:30,486
you to be the chart to be more reactive. By default,

504
00:32:30,518 --> 00:32:34,426
the delay is like 1 second. So whenever anything changes, the chart

505
00:32:34,458 --> 00:32:38,302
would only react after a second. And in this interactive setup, it's better

506
00:32:38,356 --> 00:32:42,286
to make delay as short as possible. So this

507
00:32:42,308 --> 00:32:44,180
already belongs to the animation options.

508
00:32:47,270 --> 00:32:50,530
That's about it. If you click on this is again

509
00:32:50,680 --> 00:32:53,986
an example of the bi directional component. If you click on any of

510
00:32:54,008 --> 00:32:57,714
the markers, you have the details about the positions,

511
00:32:57,842 --> 00:33:01,334
about the coordinates, about the market that you clicked, if there's any,

512
00:33:01,372 --> 00:33:04,630
and the value of that marker, and there's even an id

513
00:33:04,700 --> 00:33:08,870
to it. So it's really easy to

514
00:33:09,020 --> 00:33:12,554
get data out of your ifi visual charts and

515
00:33:12,592 --> 00:33:15,690
reuse them within an app. We're actually really looking forward

516
00:33:15,760 --> 00:33:20,586
to have some examples when this capability and

517
00:33:20,688 --> 00:33:24,586
the last app that I wanted to show you is a more complicated explorer.

518
00:33:24,618 --> 00:33:27,822
The code is there, but I don't think it would be a good idea to

519
00:33:27,876 --> 00:33:31,758
go through it in much detail right now.

520
00:33:31,924 --> 00:33:35,682
I'm just going to show you how the explorer works. It again uses the music

521
00:33:35,736 --> 00:33:39,314
history data. I thought it's easier for you to have the

522
00:33:39,432 --> 00:33:43,060
same data set in three different examples. And here

523
00:33:44,230 --> 00:33:47,806
you have two lines. So like it's

524
00:33:47,918 --> 00:33:52,178
a slider with two interactive elements,

525
00:33:52,354 --> 00:33:56,310
which helps you set the years that are being shown

526
00:33:57,710 --> 00:34:01,706
as you can, I'm sure. Imagine it utilizes the

527
00:34:01,728 --> 00:34:05,574
filter option. You can actually adjust the revenue

528
00:34:05,622 --> 00:34:09,190
for inflation or change to volume,

529
00:34:09,270 --> 00:34:12,590
just like with the sales data. And as you can see, it shows a completely

530
00:34:12,660 --> 00:34:16,526
different picture. We use the sidebar now, not only

531
00:34:16,628 --> 00:34:20,286
interactive element on the chart, you can add all the formats that

532
00:34:20,308 --> 00:34:23,646
are in the data set. You can split

533
00:34:23,678 --> 00:34:27,694
the values. You can switch between column chart and streamlit

534
00:34:27,742 --> 00:34:31,822
graph. You can stack

535
00:34:31,886 --> 00:34:35,250
things by year or by format.

536
00:34:35,750 --> 00:34:37,460
So you can even.

537
00:34:39,750 --> 00:34:43,942
Yeah, and now you're going to end up having bar

538
00:34:43,996 --> 00:34:47,720
chart. You can sort these by value.

539
00:34:50,750 --> 00:34:54,346
There are plenty of different opportunities for anyone

540
00:34:54,448 --> 00:34:58,314
actually being really interested, and you can narrow this

541
00:34:58,352 --> 00:35:02,478
down and focus on a smarter period or

542
00:35:02,564 --> 00:35:06,014
just a single year. Lines, basically what you

543
00:35:06,052 --> 00:35:09,870
were also able to do with

544
00:35:10,020 --> 00:35:13,586
the original slider, but you can

545
00:35:13,608 --> 00:35:17,746
also switch between what is being shown and. Yeah, so for

546
00:35:17,768 --> 00:35:22,100
example, what was there with the story

547
00:35:23,510 --> 00:35:25,780
within the notebook that I showed you?

548
00:35:28,570 --> 00:35:32,198
Yeah, the area chart doesn't work very well with a

549
00:35:32,204 --> 00:35:33,160
single year.

550
00:35:38,590 --> 00:35:43,050
So, for example, if I leave

551
00:35:43,120 --> 00:35:49,914
only lines and the

552
00:35:49,952 --> 00:35:50,780
other one,

553
00:35:54,130 --> 00:35:57,694
so we

554
00:35:57,732 --> 00:36:01,726
can get to the

555
00:36:01,748 --> 00:36:05,966
same chart that we saw before and do the same transitions

556
00:36:06,078 --> 00:36:11,502
that we did in the notebook splitting

557
00:36:11,566 --> 00:36:15,474
off. Okay, so basically you're free

558
00:36:15,512 --> 00:36:19,426
to play with it. As you could see, there were some minor

559
00:36:19,458 --> 00:36:22,230
issues with some of the transitions.

560
00:36:23,770 --> 00:36:27,542
You can sometimes, rarely have

561
00:36:27,596 --> 00:36:31,290
these kind of issues. I was actually quite unlucky to click

562
00:36:31,440 --> 00:36:35,258
these buttons in this order, but that's the beauty of

563
00:36:35,344 --> 00:36:38,060
doing a live demo of your technology, I guess.

564
00:36:39,150 --> 00:36:43,054
Okay, so that's about it. I hope you're still

565
00:36:43,092 --> 00:36:46,480
with me. And this is what I wanted to show you.

566
00:36:46,930 --> 00:36:50,590
Please visit the repository if you want to learn

567
00:36:50,660 --> 00:36:54,546
more. As I said, there are a lot of things,

568
00:36:54,728 --> 00:36:58,674
links, useful links for the apps, for the source code

569
00:36:58,712 --> 00:37:03,086
of the app, for the documentation that's

570
00:37:03,118 --> 00:37:06,674
listed here. And so there are two things I really want

571
00:37:06,712 --> 00:37:11,622
to ask you. First one is to spend two, three minutes of your time and

572
00:37:11,676 --> 00:37:15,414
fill out a short Google form that I prepared for.

573
00:37:15,612 --> 00:37:18,200
Just. I would love to know you better.

574
00:37:19,290 --> 00:37:22,358
What do you do, what you think about this presentation,

575
00:37:22,454 --> 00:37:26,278
what you think about this integration of our tool into streamlit?

576
00:37:26,454 --> 00:37:30,954
What kind of ideas you would have? What do you need us

577
00:37:30,992 --> 00:37:34,166
to improve in order to use it? This is all

578
00:37:34,208 --> 00:37:37,754
very much interesting, but still, I can promise you that it wouldn't

579
00:37:37,802 --> 00:37:41,166
take more than two, three minutes of your time. And if you want to

580
00:37:41,188 --> 00:37:44,866
join our community, you'd be, as I said in

581
00:37:44,888 --> 00:37:48,686
the beginning, very welcome. We have a slack workspace.

582
00:37:48,798 --> 00:37:52,930
Here's the link. Just come and join us and

583
00:37:53,080 --> 00:37:56,914
just test our tool or contribute

584
00:37:56,962 --> 00:38:00,806
to it. Both of them are very fine.

585
00:38:00,988 --> 00:38:05,686
So thanks again for your time and again for the invitation from

586
00:38:05,708 --> 00:38:08,674
the comfort of T team. It's been a pleasure,

587
00:38:08,802 --> 00:38:12,278
and I'm looking forward to your questions either

588
00:38:12,364 --> 00:38:16,230
on Discord or on the conference. Discord or

589
00:38:16,380 --> 00:38:20,406
yeah, on Slack, in email at any social network you

590
00:38:20,428 --> 00:38:22,700
can track us down. Thank you very much.

