1
00:00:26,290 --> 00:00:30,402
Hello everyone. Welcome this session and today we're going to talk about these malware hunting

2
00:00:30,466 --> 00:00:33,142
using Python as an attack weapon, right?

3
00:00:33,196 --> 00:00:37,750
So this is my contact at Twitter, at Philippiers

4
00:00:38,570 --> 00:00:41,958
and my contact on social media. If you like, send me a message.

5
00:00:42,044 --> 00:00:45,398
This is my homepage, philippirs.com and my GitHub by the

6
00:00:45,404 --> 00:00:49,414
way. So I have some project there and my link is in and

7
00:00:49,612 --> 00:00:53,840
if you'd like to change some message with me. So I really

8
00:00:54,290 --> 00:00:58,222
appreciate that. Okay. And by the way, in my Twitter usually

9
00:00:58,276 --> 00:01:01,774
I like to share some tools, open source tools, by the way,

10
00:01:01,892 --> 00:01:06,226
about some focus on cybersecurity and

11
00:01:06,328 --> 00:01:10,386
program languages and different products. And by the way about the security

12
00:01:10,488 --> 00:01:14,580
stuffs, right? So let me introduce myself. I'm secure to research at

13
00:01:15,110 --> 00:01:19,240
Sapporo is a company from Switzerland and

14
00:01:19,610 --> 00:01:23,622
this company is responsible to provide a visibility of

15
00:01:23,676 --> 00:01:27,320
the attack surface in different

16
00:01:27,690 --> 00:01:30,886
cloud environments. And not only cloud environments, but on premise

17
00:01:30,918 --> 00:01:34,346
as well. And Box and Microsoft and Azure, Google Cloud

18
00:01:34,448 --> 00:01:38,390
and by the way in Azure

19
00:01:38,470 --> 00:01:41,966
as well. And the idea behind of this product is to look in

20
00:01:41,988 --> 00:01:45,374
more about these isograph vision and

21
00:01:45,412 --> 00:01:48,350
how the attacker can explore different organization.

22
00:01:48,770 --> 00:01:51,806
So I'm security advocates for Onsen Segura San Segura is

23
00:01:51,828 --> 00:01:55,570
a global company responsible to provide some pen

24
00:01:55,640 --> 00:01:58,910
solution pen. It's acronym of the privileged access management,

25
00:01:58,990 --> 00:02:02,222
right. And I'm advocate from hack is not a crime.

26
00:02:02,286 --> 00:02:06,020
It's an awesome project. By the way, it started in us.

27
00:02:06,570 --> 00:02:10,118
The idea behind of this project is to talk more about this concept called

28
00:02:10,204 --> 00:02:13,830
hacking, right? Because when you read some information

29
00:02:13,980 --> 00:02:18,002
on the newspaper or on tv, usually this term

30
00:02:18,066 --> 00:02:20,994
is related to about cybercriminal.

31
00:02:21,122 --> 00:02:24,934
But it's wrong. The idea behind these talk about the hacking,

32
00:02:24,982 --> 00:02:28,666
it's about how you can use in your creative mind when

33
00:02:28,688 --> 00:02:32,990
you're looking for some software and how you can improve this specifically

34
00:02:33,330 --> 00:02:37,246
software, and how you can help the companies of

35
00:02:37,268 --> 00:02:40,366
course, into looking or a security perspective. But when

36
00:02:40,388 --> 00:02:43,758
you look about the exposure of the information, it's not a

37
00:02:43,764 --> 00:02:47,134
hacking, it's about these threat actors, it's about these Cybercriminal.

38
00:02:47,182 --> 00:02:50,500
Okay, so we can find more information in my web page,

39
00:02:51,110 --> 00:02:54,686
in web page from this specific project, okay. And I'm

40
00:02:54,718 --> 00:02:58,406
a coordinator of the Defcon group, one of these coordinator of the DEfcoN groups in

41
00:02:58,428 --> 00:03:01,446
Sao Paul. And by the way, I'm talking not from Brazil, but I'm talking from

42
00:03:01,468 --> 00:03:05,842
Portugal. I'm living here, there. And I'm

43
00:03:05,906 --> 00:03:09,666
leaving now, actually. And I'm instructor, writer and heavier,

44
00:03:09,778 --> 00:03:13,510
those three magazines, Fantastic magazine, hack 90 and forensic.

45
00:03:13,590 --> 00:03:17,274
And you can find my course about the Maura attack type with Q

46
00:03:17,312 --> 00:03:20,666
chain in the Pentasy magazine. Okay, so just information about me.

47
00:03:20,768 --> 00:03:24,062
So let's talk about our main topic. I would like to

48
00:03:24,116 --> 00:03:27,518
explain to all of you about what is exactly

49
00:03:27,604 --> 00:03:30,942
a threat because it's very important to put all those people on the same

50
00:03:30,996 --> 00:03:34,466
page, okay? So it's not definition from flip, it's definition from

51
00:03:34,488 --> 00:03:37,906
these specifically ISO, okay. Threat is defined as

52
00:03:37,928 --> 00:03:39,970
a potential cause of the incident.

53
00:03:41,110 --> 00:03:45,090
I mean in something that happened in specifically company

54
00:03:45,160 --> 00:03:48,434
organization or is

55
00:03:48,472 --> 00:03:52,406
a potential cause in these specific incident. Of course they

56
00:03:52,428 --> 00:03:56,086
need to be the users or the

57
00:03:56,108 --> 00:03:59,526
security team maybe needs to investigate more about that, but it's

58
00:03:59,558 --> 00:04:04,054
specifically about the software attacks or about these death of intellectual

59
00:04:04,102 --> 00:04:07,740
property or maybe identity death. It's very important.

60
00:04:08,430 --> 00:04:11,882
And sabotage, it's another kind of threat.

61
00:04:12,026 --> 00:04:15,966
And information, or all those information distortion are

62
00:04:15,988 --> 00:04:19,838
example of information security threats. It's very important to understand those difference,

63
00:04:19,924 --> 00:04:23,666
okay? Because today we are talking

64
00:04:23,768 --> 00:04:28,898
about how you can use in pipe scripts in more attack

65
00:04:28,984 --> 00:04:32,274
perspective. And because of that it's very important to understand

66
00:04:32,392 --> 00:04:35,734
what is exactly a threat and how

67
00:04:35,932 --> 00:04:39,238
is important we improve our code,

68
00:04:39,404 --> 00:04:42,966
our applications, okay? As a

69
00:04:42,988 --> 00:04:46,626
result, many and many organizations chose active

70
00:04:46,658 --> 00:04:50,154
thready hunting practice. I mean they need to look in more

71
00:04:50,192 --> 00:04:55,722
deeply about how the networks exactly

72
00:04:55,856 --> 00:04:59,226
work in the organization and they need to

73
00:04:59,248 --> 00:05:03,070
investigate more about all those aspects inside

74
00:05:03,140 --> 00:05:06,746
of this specifically network, okay? And let me invite

75
00:05:06,778 --> 00:05:10,266
you to think more about me within this specific brainstorming,

76
00:05:10,298 --> 00:05:13,514
right. So today

77
00:05:13,572 --> 00:05:18,078
when we talk about the threads, it's very important because we have many different researches.

78
00:05:18,254 --> 00:05:20,050
And if you are a developer,

79
00:05:21,750 --> 00:05:25,378
if you're working for example in DevOps team, maybe when you

80
00:05:25,384 --> 00:05:28,886
need to apply something, we need to create some infrastructure, for example,

81
00:05:28,988 --> 00:05:32,920
we need to research more about that. And when you talk about the security,

82
00:05:33,450 --> 00:05:37,206
we can work in different ways. We can working with the research of

83
00:05:37,228 --> 00:05:40,954
threads, we can discovery new kind

84
00:05:40,992 --> 00:05:44,538
of attacks or specifically different in

85
00:05:44,544 --> 00:05:47,914
a different views from the attacker perspective, you can

86
00:05:47,952 --> 00:05:51,760
improve your team in a proactive line

87
00:05:52,290 --> 00:05:55,998
of defense against advanced threads. It's acronym of

88
00:05:56,004 --> 00:05:58,990
the Advanced Persistent threads in apts,

89
00:05:59,970 --> 00:06:03,650
in this case, what that means in this case using

90
00:06:03,720 --> 00:06:07,506
offensive techniques, because if you are again a

91
00:06:07,528 --> 00:06:10,770
developer or if you are a programmer or

92
00:06:10,920 --> 00:06:14,194
no matter the specifically name, you can use.

93
00:06:14,312 --> 00:06:17,710
But if you know how this works in web applications

94
00:06:17,790 --> 00:06:22,114
and the mobile, for example applications,

95
00:06:22,162 --> 00:06:25,762
for example, you know how these applications

96
00:06:25,826 --> 00:06:29,530
works. So basically you can found different

97
00:06:29,680 --> 00:06:33,414
possibility to explore this specifically

98
00:06:33,462 --> 00:06:37,066
software. So this is you can use in your offensive techniques, okay?

99
00:06:37,168 --> 00:06:39,978
And you can work with vulnerability research.

100
00:06:40,144 --> 00:06:43,946
It's the same case in the same way you can find some web applications,

101
00:06:43,978 --> 00:06:47,854
you can investigate more how this application works. If you find some

102
00:06:47,892 --> 00:06:52,106
bugs. If these bugs, you can explore inside of this specifically

103
00:06:52,138 --> 00:06:55,954
bug, you can find a specifically vulnerability and

104
00:06:55,992 --> 00:07:00,414
you can work for example with the development of exploits specifically

105
00:07:00,462 --> 00:07:03,890
coded to explore this vulnerability.

106
00:07:04,710 --> 00:07:07,438
And we can work with the reversing engineer.

107
00:07:07,614 --> 00:07:11,194
Sometimes these is more related to not only a mobile

108
00:07:11,342 --> 00:07:14,754
because you can work with a reversal engineer in a specifically

109
00:07:14,802 --> 00:07:20,546
app or EZDK or another APK or other different specifically

110
00:07:20,578 --> 00:07:24,570
binary, but you can work with malware analysis for example using

111
00:07:24,640 --> 00:07:28,042
different methodology like analysis staticy and

112
00:07:28,096 --> 00:07:31,898
statistical analysis and dynamic analysis. And you can use it in a reversion

113
00:07:31,994 --> 00:07:35,454
engineering inside of this specifically methodology to

114
00:07:35,492 --> 00:07:38,974
looking more deeply about how the binary works. I mean

115
00:07:39,012 --> 00:07:42,754
the portable executable like a PE or alpha binary or

116
00:07:42,792 --> 00:07:47,310
PDF or document word or excel

117
00:07:47,390 --> 00:07:51,026
or another different document offset. Okay, we can

118
00:07:51,048 --> 00:07:54,610
work in an intrusion detected. I mean we can work

119
00:07:54,680 --> 00:07:58,614
in security providers and you can discover how

120
00:07:58,652 --> 00:08:02,422
this vulnerability which works. And after that you can create

121
00:08:02,476 --> 00:08:06,130
a specific signature for this specific IDS

122
00:08:06,290 --> 00:08:10,178
intrusion detection system, providing intelligence from these specific

123
00:08:10,284 --> 00:08:14,406
product. Okay. And you can work with a forensic analysis,

124
00:08:14,438 --> 00:08:18,282
it's more related to a post attacks. So when you can

125
00:08:18,416 --> 00:08:22,026
collect this specific evidence, you can investigate more deeply

126
00:08:22,058 --> 00:08:25,950
about that. So we have many possibilities to working in our cyber

127
00:08:26,850 --> 00:08:30,446
cybersecurity evangelist way. Again, if you are a developer, you have a

128
00:08:30,468 --> 00:08:33,958
good advantage because you know how the applications

129
00:08:33,994 --> 00:08:37,986
works, you know how the mobile applications, web applications and

130
00:08:38,088 --> 00:08:40,942
whatever application works. This is the good advantages.

131
00:08:41,006 --> 00:08:44,242
Okay, so first of all, we have a thread and after

132
00:08:44,296 --> 00:08:48,280
that, usually when you investigate something about that,

133
00:08:48,650 --> 00:08:52,306
no, you can, but you see if it's non

134
00:08:52,338 --> 00:08:55,570
thread like for example patcha

135
00:08:55,650 --> 00:08:58,230
or remsor or kind of ransomware.

136
00:08:58,670 --> 00:09:02,246
It's for example when a cry or patcha

137
00:09:02,358 --> 00:09:05,962
or another is specifically attacks using

138
00:09:06,016 --> 00:09:09,858
specifically malware or it is an unknown threat, it's totally

139
00:09:09,974 --> 00:09:13,310
like a zero day. So the security

140
00:09:13,380 --> 00:09:17,310
providers don't have any signatures to protect itself

141
00:09:17,460 --> 00:09:20,686
specifically against this attack. So basically we

142
00:09:20,708 --> 00:09:23,982
have, it's almost basically, of course it's only

143
00:09:24,036 --> 00:09:27,522
basically two different threads, a no and a no. Okay.

144
00:09:27,656 --> 00:09:31,342
And after that you can create a report if you execute some investigations

145
00:09:31,406 --> 00:09:34,974
about that. So it's very important because when you describe

146
00:09:35,022 --> 00:09:38,246
that you can improve your knowledge about how the threads works.

147
00:09:38,348 --> 00:09:41,414
And of course you can provide this to your coordinator, your tech

148
00:09:41,452 --> 00:09:44,646
lead, your manager, because it's very important to

149
00:09:44,828 --> 00:09:47,730
give this specific vision for your organizations.

150
00:09:47,890 --> 00:09:51,082
And after that you can improve your defensive mechanism because when

151
00:09:51,136 --> 00:09:54,746
you see how is exactly the path using by the attack, you can

152
00:09:54,768 --> 00:09:58,694
see what is exactly the technology based

153
00:09:58,742 --> 00:10:02,334
from the attacker or by the attacker. You can see exactly these is

154
00:10:02,372 --> 00:10:06,058
exactly the path. So this is the creative mind. So you investigate

155
00:10:06,154 --> 00:10:09,934
how these attack works in your environment, or you can think

156
00:10:09,972 --> 00:10:13,678
more about how is the new possibilities you

157
00:10:13,684 --> 00:10:17,698
can using to explore this specific environment. That's very nice.

158
00:10:17,784 --> 00:10:21,118
And after that you can create this specifically cyber threat intelligence.

159
00:10:21,214 --> 00:10:25,246
I mean, even if you are a big company or a small company, no worries

160
00:10:25,278 --> 00:10:28,822
about that. Because you can use indifference tool to help you to give this

161
00:10:28,876 --> 00:10:32,514
specifically vision about how the cyber thread

162
00:10:32,562 --> 00:10:36,774
intelligence works. You can use in different frameworks to give this

163
00:10:36,812 --> 00:10:40,198
big visibility. Okay, that's very important. And if you

164
00:10:40,284 --> 00:10:43,370
perform in specific clan arts, you can look in more deeply about that. Okay.

165
00:10:43,440 --> 00:10:46,982
And of course we need to have this specifically strengthening cyber resilience,

166
00:10:47,046 --> 00:10:50,250
because the threads are changing all

167
00:10:50,320 --> 00:10:53,390
the time. Okay, so nice.

168
00:10:53,460 --> 00:10:56,842
So let's talk about the creative or creating a creative

169
00:10:56,906 --> 00:11:00,382
mind. Okay, so that's the point here

170
00:11:00,436 --> 00:11:04,282
and the main topic about our conversation

171
00:11:04,346 --> 00:11:07,886
in these event. So I will explain more about

172
00:11:07,908 --> 00:11:11,202
this pyramid called purpose or the idea behind all that.

173
00:11:11,256 --> 00:11:15,254
Okay, so the purpose of that is in this

174
00:11:15,292 --> 00:11:18,886
test I was to run not only, but more than one

175
00:11:18,908 --> 00:11:22,710
pipe script to perform various efficient detected risks.

176
00:11:23,690 --> 00:11:27,266
And the idea is to bypass specifically security solutions

177
00:11:27,298 --> 00:11:31,090
in my environment, when I worked in these specifically organization.

178
00:11:31,170 --> 00:11:34,586
But you can use in this, in your environment now, no worries. And this is

179
00:11:34,608 --> 00:11:38,170
my suggestion. During our demonstrations, we all

180
00:11:38,320 --> 00:11:42,774
will show a defensive security analysis with these offensive perspective.

181
00:11:42,902 --> 00:11:46,526
That's the point here. Using two python script or

182
00:11:46,548 --> 00:11:49,854
more than one, you can download many different malwares in this

183
00:11:49,892 --> 00:11:53,966
specific environment to test your security sensors.

184
00:11:53,998 --> 00:11:58,270
Okay, so that's the idea. The first test is to simulate target

185
00:11:58,350 --> 00:12:02,290
attacks. The idea behind of this test is to download different

186
00:12:02,360 --> 00:12:06,790
malwares and to understand what is exactly these behavior

187
00:12:07,210 --> 00:12:10,562
from the security vendors. Of course about the signatures,

188
00:12:10,626 --> 00:12:13,782
about the next generation antivirus, and about machine learning,

189
00:12:13,916 --> 00:12:17,862
because usually these security sensor have a different technology

190
00:12:17,996 --> 00:12:21,526
to protect it, to protect these organization. So the idea is

191
00:12:21,548 --> 00:12:25,286
to simulate a real malwares to download in this specific environment.

192
00:12:25,318 --> 00:12:29,354
These is the first purpose. And the second purpose is to download more than

193
00:12:29,552 --> 00:12:33,002
one. I mean my idea these is to download

194
00:12:33,066 --> 00:12:36,446
the daily batches of these malwares. It means

195
00:12:36,548 --> 00:12:40,334
in the end of the days we have a specific malware bazaar repository. I will

196
00:12:40,372 --> 00:12:44,126
explain more about our conversation today. We can download more

197
00:12:44,148 --> 00:12:47,602
than one malware, is a simulation specifically how to break

198
00:12:47,656 --> 00:12:51,602
infections in your environment. So that's the idea. And this second

199
00:12:51,656 --> 00:12:55,654
task, because my thinking about

200
00:12:55,692 --> 00:12:59,014
that is how should be the behavior of

201
00:12:59,052 --> 00:13:02,610
the using provided for this protection organization.

202
00:13:02,690 --> 00:13:06,658
So if I infected with these kind of outbreak

203
00:13:06,754 --> 00:13:09,974
infection in my environment, so what should be

204
00:13:10,012 --> 00:13:13,820
the behavior of the using. So that's the aging and by the way,

205
00:13:14,190 --> 00:13:18,646
not here, sorry. But here is the website, Maurer Bazaar.

206
00:13:18,838 --> 00:13:20,890
It's a bazaar a boost.

207
00:13:22,370 --> 00:13:26,234
You can find these, you can put in for example Mauer

208
00:13:26,362 --> 00:13:30,254
Bazaar. It's pretty simple, you can click here. This is the

209
00:13:30,292 --> 00:13:33,790
idea, okay, Mawer is a project from abboost CH

210
00:13:33,940 --> 00:13:36,994
with the goal is sharing malware sample with

211
00:13:37,032 --> 00:13:40,146
the infosec security. So here you

212
00:13:40,168 --> 00:13:43,486
can see more than one specifically malwares,

213
00:13:43,518 --> 00:13:47,670
okay, it's many different malwares, different using tag signatures.

214
00:13:48,010 --> 00:13:51,554
For example, you can see an excel file,

215
00:13:51,602 --> 00:13:54,962
doc file. For example dlls is a quotable

216
00:13:55,026 --> 00:13:58,566
from Microsoft out from Linux. For example you

217
00:13:58,588 --> 00:14:02,266
can looking from, for example, you have here how you can

218
00:14:02,288 --> 00:14:06,314
search for a tag. For example you can put in here, for example tag and

219
00:14:06,352 --> 00:14:10,102
PDF, click enter. You can see more than one PDF

220
00:14:10,166 --> 00:14:13,998
and different malware as you can see here. And you can do

221
00:14:14,164 --> 00:14:17,726
some testing, for example you can use in here my pdf. By the way,

222
00:14:17,748 --> 00:14:22,042
I download this in 2020. This is specifically

223
00:14:22,106 --> 00:14:25,982
malware PDF. I have some talks that I explain more about this

224
00:14:26,036 --> 00:14:29,314
specifically malware. But here is the main top. We have here

225
00:14:29,352 --> 00:14:32,734
the API. And if you see here different API queries

226
00:14:32,782 --> 00:14:36,498
or different queries to using. And you can use in here the example

227
00:14:36,584 --> 00:14:39,998
of the Python three example of the Python script.

228
00:14:40,094 --> 00:14:43,270
I using those specifically from this

229
00:14:43,340 --> 00:14:46,754
specifically repository here is the guy responsible

230
00:14:46,802 --> 00:14:50,726
to create that, okay, Corsin Camichelle, I don't know if

231
00:14:50,748 --> 00:14:54,166
I'm pronounced correct, but it's a very nice guy. And he creates

232
00:14:54,278 --> 00:14:58,698
specifically those tool

233
00:14:58,784 --> 00:15:02,266
that I am using here in these demonstration, I explain more about this specifically,

234
00:15:02,298 --> 00:15:05,630
okay, nice. Let me return here.

235
00:15:05,700 --> 00:15:08,446
And this is the first python code, okay,

236
00:15:08,548 --> 00:15:11,694
so the idea about this code, as you can

237
00:15:11,732 --> 00:15:15,086
see here, this is I import different requests

238
00:15:15,118 --> 00:15:19,326
and systems and argument. It's pretty simple Python

239
00:15:19,358 --> 00:15:23,294
script to execute this. Basically I will download

240
00:15:23,422 --> 00:15:27,342
one specifically malware or real malware inside of malware environment.

241
00:15:27,406 --> 00:15:31,382
And as you can see, I need to set the s to select

242
00:15:31,516 --> 00:15:34,822
the hash of the malware. So basically I need to

243
00:15:34,876 --> 00:15:38,718
see here, I need to find it, for example here in Bomber bazaar,

244
00:15:38,914 --> 00:15:42,426
this is for example, let's check, let me show you here.

245
00:15:42,528 --> 00:15:46,566
This is the hash, okay, the identity from this specifically malware.

246
00:15:46,678 --> 00:15:50,282
So basically in this code I need to set s and

247
00:15:50,336 --> 00:15:53,658
after that I need to set this specifically hash.

248
00:15:53,754 --> 00:15:57,902
And after that I need to set another argument like a u to

249
00:15:57,956 --> 00:16:01,914
unzip this file. Why? Because usually when you talk about these specifically

250
00:16:01,962 --> 00:16:05,886
malware repositories, usually when

251
00:16:05,908 --> 00:16:09,106
you download some malware, as you can see, I will click here just to show

252
00:16:09,128 --> 00:16:12,030
you download. Take a look. This is specifically explanation.

253
00:16:12,110 --> 00:16:16,190
So usually the malware when you download is a zippet

254
00:16:16,270 --> 00:16:20,062
like this. And usually they're using the same password and fact that.

255
00:16:20,136 --> 00:16:23,558
So that's the idea not only in malware bazaar, but you can find in

256
00:16:23,564 --> 00:16:27,270
another like for example Philip 86 this is my GitHub.

257
00:16:29,630 --> 00:16:33,770
You can find in this specific repository here repository

258
00:16:34,510 --> 00:16:38,026
and you can click here in repository and after that

259
00:16:38,048 --> 00:16:42,346
you can click here in these zoo. Basically this

260
00:16:42,368 --> 00:16:46,146
is another repository you can find here, many others mauer

261
00:16:46,198 --> 00:16:50,234
as you can see here malwares, you can click here. It's not my repository,

262
00:16:50,282 --> 00:16:53,982
it's from the community. You can see here these binaries or source and

263
00:16:54,036 --> 00:16:57,966
take a look at many different real malware. So be careful because it's

264
00:16:57,998 --> 00:17:01,826
a real malware. Okay, so different ram servers. So if

265
00:17:01,848 --> 00:17:04,882
you would like to make some tests, you can use in here,

266
00:17:04,936 --> 00:17:09,250
for example in the zoo or you can use in here the malware bazaar.

267
00:17:09,330 --> 00:17:12,838
Okay, so let me return here. So remember, first of all I need

268
00:17:12,844 --> 00:17:16,614
to execute in the pyri scripts and after that s

269
00:17:16,732 --> 00:17:20,626
to set the hash, and after that u to

270
00:17:20,748 --> 00:17:23,946
unzip the file. Okay, so basically this is

271
00:17:23,968 --> 00:17:27,546
the beginning of the file and after that I need to set the

272
00:17:27,728 --> 00:17:31,466
password as you can see here. In fact that I need to set here the

273
00:17:31,488 --> 00:17:35,006
API provided maui bazaar because when you made

274
00:17:35,028 --> 00:17:38,746
your registration in mauibaza, basically you need to have a specifically twitter

275
00:17:38,778 --> 00:17:42,426
account and after that you have this one of this specifically

276
00:17:42,458 --> 00:17:46,314
API. So you need to put in here and after that you can execute

277
00:17:46,362 --> 00:17:50,606
itself the code to download, and after that unzip

278
00:17:50,638 --> 00:17:54,142
the file as you can see here and execute the malware.

279
00:17:54,206 --> 00:17:58,118
And in this case not executing. I just download the

280
00:17:58,124 --> 00:18:01,686
malware in these environment. Why I just download? Because my idea is to see the

281
00:18:01,708 --> 00:18:05,426
behavior of the engines detected by signature.

282
00:18:05,538 --> 00:18:08,674
So I didn't need to execute

283
00:18:08,722 --> 00:18:12,634
itself the malware. Okay, so basically you execute here Python in

284
00:18:12,672 --> 00:18:15,782
Windows platform, as you can see set malwaresbazaar py

285
00:18:15,846 --> 00:18:19,098
here. Maybe it's a small I set here s

286
00:18:19,184 --> 00:18:22,254
because I need to put in here the hash, as you can see a big

287
00:18:22,292 --> 00:18:27,550
hash, I think it's 256

288
00:18:27,620 --> 00:18:31,726
or this is the hash and u because I

289
00:18:31,748 --> 00:18:34,918
need to unpack it or unzip this specifically files.

290
00:18:34,954 --> 00:18:38,686
So as you can see here, it's a wanna cry? Very known ram summer.

291
00:18:38,718 --> 00:18:42,654
Okay. And as you can see here, detected this specifically

292
00:18:42,702 --> 00:18:46,014
script. This is the malware I download

293
00:18:46,062 --> 00:18:50,458
in this environment. And after that, the pyri

294
00:18:50,494 --> 00:18:54,102
scripts unzipped that this is specifically called. Okay,

295
00:18:54,236 --> 00:18:58,026
so after that, the idea is the cyber reason to

296
00:18:58,048 --> 00:19:01,434
block. This is the security solutions, okay? And as you can see

297
00:19:01,472 --> 00:19:05,354
here, the mauer, it was blocked. So good,

298
00:19:05,472 --> 00:19:09,254
nice. Because the solutions it works based on signatures.

299
00:19:09,302 --> 00:19:12,494
I didn't need to click to

300
00:19:12,532 --> 00:19:16,634
execute the malware, because when the script download

301
00:19:16,682 --> 00:19:21,050
the malware in my environment, after that, the engines responsible for signatures

302
00:19:21,130 --> 00:19:25,454
block this specific code. Okay. And as you can see, these log is blocked.

303
00:19:25,502 --> 00:19:28,894
Okay. These second task I detected in Sofall's secure

304
00:19:28,942 --> 00:19:31,940
solution, it's another different solution, the same case.

305
00:19:32,310 --> 00:19:36,322
And now I'm using another hash. As you can see, starting to started

306
00:19:36,376 --> 00:19:39,378
with two, two ed different hash.

307
00:19:39,474 --> 00:19:42,920
It's another different malwares, okay. And as you can see,

308
00:19:43,370 --> 00:19:46,966
these same behavior. So as you can

309
00:19:46,988 --> 00:19:50,426
see, the first downloaded zip it

310
00:19:50,448 --> 00:19:54,006
file. And after that, the code unzipped,

311
00:19:54,118 --> 00:19:57,910
or in this case, unpacket, is specifically sample.

312
00:19:57,990 --> 00:20:01,626
Not sample, is mal in these case. But as you can see, these security

313
00:20:01,728 --> 00:20:05,246
engine block. And these is specifically malware. So very nice.

314
00:20:05,348 --> 00:20:08,826
And the third test executing in this case, in a cloud strike.

315
00:20:08,858 --> 00:20:11,662
So I customize a specifically code here.

316
00:20:11,716 --> 00:20:15,042
It's just for fun.

317
00:20:15,176 --> 00:20:19,230
And I put here another name, by the way, based underscore bazaar

318
00:20:19,390 --> 00:20:23,380
s. As you can see, it's another hash u.

319
00:20:24,230 --> 00:20:27,970
Those three hashes are Mauer.

320
00:20:28,050 --> 00:20:32,086
But in this case, Calder strike didn't detect why.

321
00:20:32,188 --> 00:20:36,200
And that time, when I performed this tests in 2020,

322
00:20:36,570 --> 00:20:40,138
that time, the cloud strike explained me that the

323
00:20:40,224 --> 00:20:44,186
solution just work with a

324
00:20:44,208 --> 00:20:48,630
machine learning, not work with signatures.

325
00:20:48,710 --> 00:20:52,282
I will explain the only way to detect this

326
00:20:52,336 --> 00:20:55,950
specifically malware. This is an explanation from crown strike.

327
00:20:56,930 --> 00:21:00,462
After these user click in these

328
00:21:00,516 --> 00:21:03,280
specifically Mauer. I mean,

329
00:21:04,290 --> 00:21:07,954
the user need to interact with the Mauer, okay. But from my

330
00:21:07,992 --> 00:21:11,426
perspective, these is the opinion from Philippe. It's very important to

331
00:21:11,448 --> 00:21:15,822
have the signatures, because why I need to investigate.

332
00:21:15,886 --> 00:21:20,294
So why I need to verify if

333
00:21:20,412 --> 00:21:24,182
the malware is malicious or not, when I know that this malware is

334
00:21:24,236 --> 00:21:27,430
malware. Okay, makes sense for me. So I don't need to wait

335
00:21:27,500 --> 00:21:30,298
for the curse, the client or the user. Actually,

336
00:21:30,384 --> 00:21:33,866
I don't need to wait the user clicking these specifically binary to

337
00:21:33,888 --> 00:21:37,674
see if it's malicious, because I know based on signatures that it is

338
00:21:37,712 --> 00:21:40,922
malicious. But I heard something

339
00:21:40,976 --> 00:21:45,118
about that, that now in this year, in 2021,

340
00:21:45,284 --> 00:21:48,894
that the solutions will be improved. So I think now

341
00:21:48,932 --> 00:21:52,978
they work with signatures. And the second Python script, remember this

342
00:21:52,984 --> 00:21:56,994
is the first test. So cyber reason and soaps had

343
00:21:57,112 --> 00:22:00,386
a good result, but cloudstrike didn't have

344
00:22:00,408 --> 00:22:03,762
a good result, okay. Because it's these behavior conference.

345
00:22:03,816 --> 00:22:07,158
So these again. But in this case, the second task, remember,

346
00:22:07,244 --> 00:22:11,234
in this second task, I simulate alti breaking factor.

347
00:22:11,282 --> 00:22:19,090
I will explain more about that. As you can see here, I import specifically

348
00:22:19,170 --> 00:22:23,034
libraries these, as you can see here. Okay, Python ziper to

349
00:22:23,232 --> 00:22:26,486
again uncompressed the zip file and the zip

350
00:22:26,518 --> 00:22:30,678
file actually and here, as I mentioned, there's a simple customization

351
00:22:30,774 --> 00:22:34,558
and that time I worked in supernovation. It's a global company,

352
00:22:34,724 --> 00:22:38,494
it's a brazilian company, actually responsible to

353
00:22:38,532 --> 00:22:41,802
provide different consulting developer solutions.

354
00:22:41,946 --> 00:22:45,106
I think it's an explanation here. And as you can

355
00:22:45,128 --> 00:22:48,334
see here, these downloading of this specifically API.

356
00:22:48,382 --> 00:22:52,414
I call this specifically API, as you can see here in the code setting

357
00:22:52,462 --> 00:22:56,406
here, the daily malware badges, as you can see. So remember,

358
00:22:56,588 --> 00:23:00,242
the community is responsible to provide many malwares

359
00:23:00,306 --> 00:23:04,050
per day. In the end of the day, the malware bazaar collect

360
00:23:04,130 --> 00:23:09,450
all those maus and pivoting in a specifically directory

361
00:23:10,830 --> 00:23:14,278
and put in this directory the name of the daily

362
00:23:14,374 --> 00:23:18,250
branches, as you can see here. So basically it's

363
00:23:18,670 --> 00:23:23,102
download these

364
00:23:23,156 --> 00:23:26,862
data specifically of the day as you can see here.

365
00:23:26,996 --> 00:23:30,654
And so the idea behind of this tests is to download all

366
00:23:30,692 --> 00:23:34,554
those malwares during this specifically

367
00:23:34,602 --> 00:23:38,682
date and download it to simulate a specifically infection,

368
00:23:38,746 --> 00:23:42,402
altibrake altbreak infection. So these is the idea

369
00:23:42,456 --> 00:23:46,850
behind of this code. So this is the second code. And again

370
00:23:46,920 --> 00:23:50,546
daily bazaar I call here mauer underscore download.

371
00:23:50,658 --> 00:23:54,898
As you can see using the data specifically in 10 September

372
00:23:54,994 --> 00:23:58,354
in 2020, I downloading, calling specifically

373
00:23:58,402 --> 00:24:02,774
data tests using this specifically URL from API from Maurbazar.

374
00:24:02,822 --> 00:24:06,374
Using the API from our bazaar download is completed.

375
00:24:06,502 --> 00:24:10,234
After that I saving data tests, as you can see here, is completed because I

376
00:24:10,272 --> 00:24:14,730
called this specifically directory from Maurbazar.

377
00:24:15,570 --> 00:24:19,146
And after that, as you can see here, a data set unpacket.

378
00:24:19,258 --> 00:24:22,494
So in this case, I downloaded more than,

379
00:24:22,692 --> 00:24:26,458
if I remember correctly, more than 300 malwares

380
00:24:26,474 --> 00:24:29,714
in this specifically day. Okay. And as you can see

381
00:24:29,752 --> 00:24:34,366
here, so many malwares were detected.

382
00:24:34,478 --> 00:24:39,010
And by the way, all those tests I reported to cyber,

383
00:24:39,370 --> 00:24:42,966
to Sophos and I

384
00:24:42,988 --> 00:24:46,866
reported to crown strike. And basically in these specifically task,

385
00:24:46,898 --> 00:24:50,838
the cyber reason didn't attacks for Maverick,

386
00:24:50,934 --> 00:24:54,780
but I reported that to the cybersecurity solutions. And after that

387
00:24:55,150 --> 00:24:59,402
I had some conversation with them with there and they

388
00:24:59,536 --> 00:25:03,146
improved the solutions. It's very nice conversation with

389
00:25:03,168 --> 00:25:07,338
the cyber. The second task is I performing in Sophos environment.

390
00:25:07,434 --> 00:25:11,582
And as you can see here, in this case I saw a different

391
00:25:11,636 --> 00:25:15,570
behavior because Sophos has more than one binaries

392
00:25:16,150 --> 00:25:19,426
using this solution. Remember, in the beginning of the purpose of these

393
00:25:19,448 --> 00:25:23,054
tests is to simulate an efficient and detection

394
00:25:23,102 --> 00:25:26,886
test. So the idea is to simulate a

395
00:25:26,908 --> 00:25:30,406
behavior from the engines providing detection from

396
00:25:30,508 --> 00:25:34,546
signatures, machine learning and next generation antivirus.

397
00:25:34,658 --> 00:25:38,434
So in some solutions we have all those protections

398
00:25:38,482 --> 00:25:41,734
in these same binary, but in this case in Sophos,

399
00:25:41,782 --> 00:25:45,082
as you can see here, we have more than one services,

400
00:25:45,216 --> 00:25:48,646
or actually not services, but binary inside of the machine,

401
00:25:48,758 --> 00:25:52,446
the user machine. Because of that, when I try to

402
00:25:52,468 --> 00:25:56,286
simulate this specifically tests, we have high,

403
00:25:56,388 --> 00:26:00,750
high cpu as you can see here, and high, high memory

404
00:26:01,090 --> 00:26:04,546
to protect. So that remember when

405
00:26:04,568 --> 00:26:08,018
I had this idea, my idea

406
00:26:08,104 --> 00:26:11,602
is it was understand

407
00:26:11,736 --> 00:26:15,018
what is exactly the behavior of the engines.

408
00:26:15,134 --> 00:26:18,200
So maybe I could broke the engine.

409
00:26:18,890 --> 00:26:22,550
And when I broke this engine, because it's totally

410
00:26:24,570 --> 00:26:27,590
the many infections in the user machine,

411
00:26:28,730 --> 00:26:32,326
I can block the protection. So from

412
00:26:32,348 --> 00:26:35,900
the attacker perspective it's very nice because

413
00:26:36,510 --> 00:26:40,634
I could gain the access in environment because I don't have any antivirus

414
00:26:40,682 --> 00:26:43,690
protections to protect against the threats.

415
00:26:43,770 --> 00:26:47,566
Okay, spoiler alert. Just a few

416
00:26:47,668 --> 00:26:51,834
other code, I don't have idea to explain during this session,

417
00:26:51,882 --> 00:26:56,114
but I would like to show you something very simple like

418
00:26:56,152 --> 00:27:00,386
this. You can find this on the Internet very easy, okay, it's a simple import

419
00:27:00,568 --> 00:27:03,714
some specifically libraries to open a socket here.

420
00:27:03,832 --> 00:27:08,226
Because in this case my idea is to gain

421
00:27:08,258 --> 00:27:11,526
the reverse shell in a specifically victim machine, as you can see

422
00:27:11,548 --> 00:27:15,910
here, I import a specific socket setting here my

423
00:27:16,060 --> 00:27:19,574
web server, and after that I set my port to open a

424
00:27:19,612 --> 00:27:22,554
reverse port to using my local port, okay,

425
00:27:22,672 --> 00:27:25,994
and very simple. And I using here to infect and

426
00:27:26,032 --> 00:27:29,686
specifically vicro machine, as you can see here. So I made these specifically

427
00:27:29,718 --> 00:27:33,038
task in enclosed strike. So first of all I

428
00:27:33,124 --> 00:27:37,566
download the binary here, because of that it's a spoiler, because maybe

429
00:27:37,668 --> 00:27:41,214
I can talk more about that in another event and just

430
00:27:41,252 --> 00:27:45,010
a simple spoiler about that. So I

431
00:27:45,080 --> 00:27:49,010
enable all those security policies here.

432
00:27:49,160 --> 00:27:52,850
And I go to the specifically

433
00:27:53,590 --> 00:27:57,750
I open the netcat to receive this specifically

434
00:27:58,090 --> 00:28:01,190
reverse shell, as you can see here. And after that

435
00:28:01,260 --> 00:28:05,122
I need to download

436
00:28:05,186 --> 00:28:08,694
this specifically file inside

437
00:28:08,732 --> 00:28:12,614
of the victims machine. And I need to execute this files in these

438
00:28:12,652 --> 00:28:16,490
victims machine, okay? And after that I will receive this

439
00:28:16,560 --> 00:28:20,026
specifically reverse these shell. So as you can

440
00:28:20,048 --> 00:28:23,726
see here, this is my machine and this is the

441
00:28:23,748 --> 00:28:27,242
port, actually the attacker port. And here is the attacker

442
00:28:27,306 --> 00:28:30,906
machine. Okay, so let me return here in the vitamin

443
00:28:30,938 --> 00:28:34,654
machine, let me click here and I need to execute here the python

444
00:28:34,702 --> 00:28:39,150
script, that python script that I show you. So I call it shell

445
00:28:39,230 --> 00:28:42,562
Python. Open the service here. As you can see the CMD in

446
00:28:42,616 --> 00:28:46,338
green color, but nothing happened here and nothing

447
00:28:46,424 --> 00:28:49,938
blocked here. But as you can see here, I gained

448
00:28:49,954 --> 00:28:54,326
the reverse shell in the big burn machine. So now I

449
00:28:54,348 --> 00:28:57,622
have the access and this specific environment. So I have

450
00:28:57,676 --> 00:29:01,442
all those access. I'm a local domain

451
00:29:01,586 --> 00:29:04,826
I can use in different things to do, and by the

452
00:29:04,848 --> 00:29:08,938
way, I execute in different comments here and I

453
00:29:09,024 --> 00:29:12,698
explore different things. But it's an expo so I

454
00:29:12,784 --> 00:29:17,006
need to show you this in other events. So if you have any question everyone,

455
00:29:17,108 --> 00:29:20,574
so please let me know. And thank you again for this time

456
00:29:20,612 --> 00:29:24,398
here during the session. I hope this session should be

457
00:29:24,404 --> 00:29:28,062
useful for you. Again, I show you more about

458
00:29:28,116 --> 00:29:32,782
this specifically python code, but I just to

459
00:29:32,836 --> 00:29:36,662
give you this specifically creative mind and

460
00:29:36,716 --> 00:29:39,878
when you work in your organization, so how you can look in

461
00:29:39,884 --> 00:29:43,026
your security sensor using the Python script, because it's

462
00:29:43,058 --> 00:29:46,786
easy to create that and how you can use in python script to improve

463
00:29:46,818 --> 00:29:50,310
your security environment. Okay, so that's my idea

464
00:29:50,380 --> 00:29:54,230
during the session. So again, thank you so much for being here with me and

465
00:29:54,300 --> 00:29:55,800
see you in the next event.

