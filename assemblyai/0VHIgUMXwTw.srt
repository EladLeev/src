1
00:00:30,930 --> 00:00:35,398
Good morning and welcome to 42 site Reliability Engineering 2023.

2
00:00:35,484 --> 00:00:38,946
My name is Ricardo Castro, and today we're going to talk about SRE

3
00:00:38,978 --> 00:00:42,326
antipattern and one in specific, which is, which is one

4
00:00:42,348 --> 00:00:45,878
that I call rebranding the operations team. So what do

5
00:00:45,884 --> 00:00:49,222
we have on the menu? So we're going to briefly touch on what

6
00:00:49,276 --> 00:00:52,494
SRE is, where it came to be, and what it

7
00:00:52,532 --> 00:00:56,154
looks like today. We're going to briefly describe what are antipattern

8
00:00:56,202 --> 00:00:59,418
and why the why of the SRE anti patterns. And then we're

9
00:00:59,434 --> 00:01:02,670
going to touch on the SRE ant pattern that we're going to discuss today,

10
00:01:02,740 --> 00:01:06,574
which is the rebranding the operations team. We're going to talk about the antipattern

11
00:01:06,622 --> 00:01:10,226
itself and how to fix or avoid it. And before I leave

12
00:01:10,248 --> 00:01:14,162
you, I'll talk to you about some more SRE antipattern that I usually do

13
00:01:14,216 --> 00:01:18,214
talks about. So why SRE? So over

14
00:01:18,252 --> 00:01:22,054
the years, computer systems have evolved in many different ways.

15
00:01:22,252 --> 00:01:26,102
They increased in scale and complexity, gave birth to different ways

16
00:01:26,156 --> 00:01:29,522
on how to develop and manage such systems in productions.

17
00:01:29,666 --> 00:01:33,258
And the advent of the Internet and modern computing platforms needed a

18
00:01:33,264 --> 00:01:37,430
new way and different engineering approach on how to run these systems.

19
00:01:37,590 --> 00:01:40,686
So the 80s were seminal in shaping the Internet as

20
00:01:40,708 --> 00:01:44,922
we know it today. In 1983 marks

21
00:01:45,066 --> 00:01:47,946
the official birth of the Internet. Previously,

22
00:01:47,978 --> 00:01:50,906
computer networks didn't have a standard way to communicate.

23
00:01:51,098 --> 00:01:54,346
TCPIP provided that standard and allowed computers

24
00:01:54,378 --> 00:01:58,066
in different networks to talk to each other. Then in

25
00:01:58,088 --> 00:02:01,714
1989 at CERN, Tim Burton Lee defined what became known as

26
00:02:01,752 --> 00:02:05,026
the World Wide Web. His goal was to allow the

27
00:02:05,048 --> 00:02:08,822
sharing of information using the Internet. A year later,

28
00:02:08,876 --> 00:02:12,946
he wrote the first client server, paving the way for the specification of UrIs,

29
00:02:12,978 --> 00:02:16,962
HTTP and HTML. Then in the 90s, building on previous

30
00:02:17,026 --> 00:02:20,406
successes, the late 90s saw the emergence of the Internet as

31
00:02:20,428 --> 00:02:24,042
we know it today, and it marks the beginning of the first

32
00:02:24,096 --> 00:02:28,026
big Internet companies. Some of these large Internet companies are

33
00:02:28,048 --> 00:02:31,322
the ones that we know today, like Amazon or Google, and appeared as

34
00:02:31,376 --> 00:02:34,910
Internet companies during this period. Soon enough, they started to

35
00:02:34,980 --> 00:02:38,606
stretch the boundaries of what was possible. Until then, they faced new

36
00:02:38,628 --> 00:02:42,254
challenges and started producing innovative solutions to these

37
00:02:42,292 --> 00:02:45,514
new set of challenges. The continued growth of the Internet

38
00:02:45,562 --> 00:02:49,330
quickly exposed other organizations to similar challenges.

39
00:02:49,750 --> 00:02:53,614
The emergence of cloud computing, public, private or hybrid,

40
00:02:53,662 --> 00:02:57,878
as the standard way to deploy and run services made it accessible for everyone

41
00:02:57,964 --> 00:03:01,650
to manage their workloads and achieve massive scale. The traditional

42
00:03:01,730 --> 00:03:05,366
ways to manage these systems felled short when dealing with this new

43
00:03:05,388 --> 00:03:08,902
reality. And in 2009, the term DevOps was coined

44
00:03:08,966 --> 00:03:12,346
with the proposition of hiring Ops who think like devs or devs who

45
00:03:12,368 --> 00:03:15,686
think like Ops. SRE softwares

46
00:03:15,718 --> 00:03:19,210
and systems architecture got more and more complex.

47
00:03:19,550 --> 00:03:22,974
Scale increased considerably. Traditional ways

48
00:03:23,012 --> 00:03:26,602
of running software started to fail again, Ops versus devs

49
00:03:26,666 --> 00:03:30,990
and nonscalable engineering solutions. So in 2003,

50
00:03:31,060 --> 00:03:35,090
facing massive growth, Google needed a unique way to manage their operations.

51
00:03:35,510 --> 00:03:38,686
Having just joined the company, Benjamin Trainer Sloth,

52
00:03:38,798 --> 00:03:42,286
currently VP of Engineering, was tasked with running a production

53
00:03:42,318 --> 00:03:45,822
team to face these new challenges. Trainer Sloth

54
00:03:45,886 --> 00:03:49,794
defines his team's approach as what happens when you ask a software engineer

55
00:03:49,842 --> 00:03:53,154
to design an operations team? So this team evolved

56
00:03:53,202 --> 00:03:57,346
and matured into what today is known as site reliability engineering.

57
00:03:57,538 --> 00:04:00,886
So what are some of the principles of site reliability engineering?

58
00:04:00,998 --> 00:04:04,662
So, embracing risk. SREs assume that operations

59
00:04:04,726 --> 00:04:08,986
have risks, developing applications have risks, and putting them to

60
00:04:09,008 --> 00:04:12,846
production has risks. They define slos. SLOS is

61
00:04:12,868 --> 00:04:16,814
a framework that allows us to understand if our users are happy or

62
00:04:16,852 --> 00:04:20,398
not, and allows us to define what reliability means,

63
00:04:20,484 --> 00:04:23,646
measure that and assess it. Another principle is

64
00:04:23,668 --> 00:04:27,234
the principle of eliminating toil. Toil is the concept of work that needs

65
00:04:27,272 --> 00:04:31,086
to be done, but doesn't offer an endearing value. So SREs

66
00:04:31,198 --> 00:04:35,006
take as one of their tasks to actually try to eliminate

67
00:04:35,038 --> 00:04:38,050
as much toil as possible. Of course, monitoring.

68
00:04:38,130 --> 00:04:41,714
Monitoring is essential for us to understand what's happening with our systems,

69
00:04:41,762 --> 00:04:44,790
be it to evolve the systems or to actually fix

70
00:04:44,860 --> 00:04:48,966
some issues. Automation is also very linked

71
00:04:48,998 --> 00:04:53,014
with limited install, but it's the process that we developed

72
00:04:53,062 --> 00:04:56,166
software that takes care of repetitive tasks.

73
00:04:56,358 --> 00:04:59,910
Of course, SREs are also very intertwined with release engineering

74
00:04:59,990 --> 00:05:03,886
because introducing changes to a system is seen as

75
00:05:03,908 --> 00:05:07,546
a risk. So SREs are very intertwined with release engineering engineering

76
00:05:07,578 --> 00:05:10,958
in the process of renaming changes into production. And of

77
00:05:10,964 --> 00:05:14,226
course, SRE strive for simplicity. Their goal is

78
00:05:14,248 --> 00:05:17,842
to provide tooling and to provide ways to develop

79
00:05:17,976 --> 00:05:21,314
robust applications in the most simple way. So where

80
00:05:21,352 --> 00:05:24,846
does it stand SRe today? So there's a big hype

81
00:05:24,958 --> 00:05:28,614
from you a few years ago about SRE, and the main

82
00:05:28,732 --> 00:05:32,294
culprit is the site reliability engineering book. And that was

83
00:05:32,332 --> 00:05:36,294
released in 2016. So this book was released by

84
00:05:36,332 --> 00:05:39,930
Google and it gave everyone a peek into how Google

85
00:05:40,000 --> 00:05:43,062
managed their operations on a daily basis.

86
00:05:43,206 --> 00:05:46,842
Of course, Google released two more books about this. Building secure system.

87
00:05:46,896 --> 00:05:50,986
Building reliable systems also released a workbook.

88
00:05:51,098 --> 00:05:55,182
So it gave the whole world an idea world, an idea of

89
00:05:55,236 --> 00:05:58,686
how Google developed and managed their applications in

90
00:05:58,708 --> 00:06:03,086
production, and gave them a blueprint to do that

91
00:06:03,108 --> 00:06:06,770
kind of work. The problem is that these books has so much information

92
00:06:06,920 --> 00:06:10,546
that makes it very hard for a lot of organizations to onboard all of these

93
00:06:10,568 --> 00:06:14,306
practices or even some of these practices. And sometimes it makes it even

94
00:06:14,488 --> 00:06:17,922
harder to actually see how the Google reality translates

95
00:06:17,986 --> 00:06:22,226
into our own reality. Because of this, anti patterns

96
00:06:22,258 --> 00:06:26,198
might arise. So what is an antipattern? So an

97
00:06:26,284 --> 00:06:29,782
antipattern is just like a pattern, except that instead of a solution,

98
00:06:29,846 --> 00:06:32,902
it gives something that looks superficially like a good solution,

99
00:06:32,966 --> 00:06:36,806
but it isn't one. I actually like the definition

100
00:06:36,918 --> 00:06:40,294
of antipattern by Maggie Fowler, which says an antipattern

101
00:06:40,342 --> 00:06:43,946
is a solution that initially looks like an attractive road lined

102
00:06:43,978 --> 00:06:47,294
with flowers, but further on leads into a maze filled with

103
00:06:47,332 --> 00:06:51,422
monsters. So is this idea that we adopt something better? Because it

104
00:06:51,476 --> 00:06:55,186
looks like it could be a good solution to our problem,

105
00:06:55,288 --> 00:06:59,154
but down the line or down the road, it will actually be more prejudicial than

106
00:06:59,192 --> 00:07:02,306
beneficial. So I'm pretty sure you

107
00:07:02,328 --> 00:07:06,318
are familiar with this type of keyboard is the QWERTY keyboard.

108
00:07:06,414 --> 00:07:10,598
But I don't know if you know, but why do we have this keyboard today?

109
00:07:10,764 --> 00:07:14,338
And it's because of this, because of the typewriter.

110
00:07:14,514 --> 00:07:18,550
So we might think, okay, we got so used to this layout

111
00:07:18,710 --> 00:07:22,394
format for keyboards in typewriters. So it makes sense

112
00:07:22,432 --> 00:07:25,594
that we use it for our computers keyboards. But why

113
00:07:25,632 --> 00:07:30,354
did we settle on this keyboard for typewriters?

114
00:07:30,502 --> 00:07:34,334
Mainly because of two things. So when

115
00:07:34,372 --> 00:07:38,346
we pushed a button on a typewriter, a needle just prints

116
00:07:38,378 --> 00:07:42,286
a letter into a

117
00:07:42,308 --> 00:07:45,794
sheet. So that means that if we type too fast,

118
00:07:45,912 --> 00:07:49,714
those needles could hit each other. So this layout actually

119
00:07:49,832 --> 00:07:53,570
was intended to slow

120
00:07:54,150 --> 00:07:59,254
typers down so that these needles don't actually hit

121
00:07:59,292 --> 00:08:03,126
each other. So this was a pattern back in the day. Right. And we

122
00:08:03,148 --> 00:08:07,106
translated that because we got good using this keyboard.

123
00:08:07,218 --> 00:08:10,758
But actually, studies have shown that for speed,

124
00:08:10,854 --> 00:08:13,994
this is not the preferred layout. Actually, as I just

125
00:08:14,032 --> 00:08:17,338
said, this keyboard was actually developed to slow down a

126
00:08:17,344 --> 00:08:21,206
bit writers, so that these needles

127
00:08:21,238 --> 00:08:24,878
didn't hit each other. But because we got so used, that pattern that

128
00:08:24,884 --> 00:08:28,366
we used back in the day actually transformed into an antipattern that we

129
00:08:28,388 --> 00:08:32,506
have today. So translating this into the antipattern

130
00:08:32,538 --> 00:08:35,794
that we have here today, it's when we talk about what

131
00:08:35,832 --> 00:08:39,342
I call the rebranding the operations team, and it's when an operations

132
00:08:39,406 --> 00:08:42,642
team is rebranded to SRE, but little

133
00:08:42,696 --> 00:08:46,094
else changes. I can generalize this to rebranding

134
00:08:46,142 --> 00:08:49,730
x to Y, and there are many examples across the industry.

135
00:08:49,810 --> 00:08:53,286
We can think about agile or CI CD, and it's this idea that we give

136
00:08:53,308 --> 00:08:56,774
a new name or a similar name to something new, but nothing

137
00:08:56,812 --> 00:09:01,020
else really change. Maybe you're using a slightly different tool, maybe you're using

138
00:09:02,350 --> 00:09:07,530
a slightly different approach, but on a day to day basis things actually

139
00:09:07,600 --> 00:09:10,902
stay pretty similar. Unfortunately, this is the reality

140
00:09:10,966 --> 00:09:14,654
for many organizations. A lot of organizations do this kind of

141
00:09:14,692 --> 00:09:18,254
approach as well. They essentially give a team a new

142
00:09:18,292 --> 00:09:21,902
name, they adopt a new tool, maybe they start using terraform or this,

143
00:09:21,956 --> 00:09:25,882
they start using a configuration management, or even they start using kubernetes

144
00:09:25,946 --> 00:09:29,122
or some kind of tool, but on a day to day basis the work

145
00:09:29,176 --> 00:09:32,340
renaming the same. And it's not what SRE is all about.

146
00:09:32,790 --> 00:09:36,690
So how can we fix this? First and foremost,

147
00:09:36,770 --> 00:09:40,258
we have to educate ourselves.

148
00:09:40,434 --> 00:09:44,422
So we want to understand what this SRE thing

149
00:09:44,476 --> 00:09:47,714
is. And of course here are some good books that we can start learning

150
00:09:47,772 --> 00:09:51,500
about. And we also want to start to understand what

151
00:09:51,950 --> 00:09:55,578
is the perception for others of what SRE is,

152
00:09:55,664 --> 00:09:58,586
what worked for them and what didn't work. Again,

153
00:09:58,688 --> 00:10:01,866
Google is an amazing technology company,

154
00:10:01,968 --> 00:10:05,514
but most of the things will not be applicable to our own reality.

155
00:10:05,562 --> 00:10:09,134
So we need to educate ourselves and start bringing those discussions into our

156
00:10:09,172 --> 00:10:12,714
organizations and seeing what is happening on other organizations and adapting

157
00:10:12,762 --> 00:10:16,622
to our own reality. Another way to fix or avoid this is

158
00:10:16,676 --> 00:10:20,270
just start. Why do we want SRE?

159
00:10:20,350 --> 00:10:23,634
Why should we adopt SRE after

160
00:10:23,672 --> 00:10:27,822
we have more or less understanding, reasonable understanding of what SRE

161
00:10:27,886 --> 00:10:31,254
is? Is it fixing our problem? What is the problem that we are

162
00:10:31,292 --> 00:10:35,302
trying to fix by starting with why? Instead of just going

163
00:10:35,356 --> 00:10:38,962
with a what, adopting a new tool, just starting a new methodology,

164
00:10:39,026 --> 00:10:42,390
just because someone else is doing it, just trying to understand

165
00:10:42,540 --> 00:10:46,058
why we are doing this. What is the problem that we're trying to fix

166
00:10:46,144 --> 00:10:49,402
or what is the thing that we are trying to improve that will make it

167
00:10:49,456 --> 00:10:52,746
a lot easier for us to actually onboard

168
00:10:52,778 --> 00:10:56,394
SRE and actually starting to pick the things within SRE

169
00:10:56,442 --> 00:10:59,040
that make sense at each point in time.

170
00:10:59,570 --> 00:11:03,482
Of course, some general guidance, the Pareto principle that says

171
00:11:03,556 --> 00:11:07,058
that 80% of the results come from 20%

172
00:11:07,144 --> 00:11:10,866
of the effort. This means that we

173
00:11:10,888 --> 00:11:14,850
can actually look at the why that we are trying to fix and

174
00:11:14,920 --> 00:11:18,246
put all of our efforts there. So we're probably able to

175
00:11:18,268 --> 00:11:22,466
identify a few things within our organization and then map out SRE principles

176
00:11:22,498 --> 00:11:25,686
or approaches that we

177
00:11:25,708 --> 00:11:29,630
can put some effort that will bring us 80% of the results.

178
00:11:29,810 --> 00:11:33,114
Also, a good idea to actually prioritize within all

179
00:11:33,152 --> 00:11:37,226
of the SRE things that we can approach and onboard in organizations is

180
00:11:37,248 --> 00:11:40,774
just to use the Eisenhower metrics. So the Eisenhower metrics

181
00:11:40,822 --> 00:11:44,354
categorizes tasks by urgency

182
00:11:44,422 --> 00:11:48,014
and importance. So urgent and important things are things

183
00:11:48,052 --> 00:11:51,678
that we just need to do right. Maybe it's some kind of security fix that

184
00:11:51,684 --> 00:11:54,640
we need to do in production. So we need to get that done.

185
00:11:55,430 --> 00:11:58,690
If it's something that is urgent but it's not important, we probably

186
00:11:58,760 --> 00:12:02,222
can delegate it. If it's not important, not urgent,

187
00:12:02,286 --> 00:12:05,794
probably we don't need it. Where we can actually gain some time

188
00:12:05,832 --> 00:12:09,862
is then when things are not urgent, but they are important because

189
00:12:09,916 --> 00:12:13,490
of two things. First, not urgent, but important things eventually

190
00:12:13,570 --> 00:12:17,234
will transit will make its way into urgent

191
00:12:17,282 --> 00:12:20,630
and important. That means that it's the part

192
00:12:20,700 --> 00:12:23,766
of not urgent and important that we can plan out and that we can gain

193
00:12:23,798 --> 00:12:27,434
some time. We can plan the work around those things that

194
00:12:27,552 --> 00:12:31,146
can give us some leeway in the future. And if you

195
00:12:31,168 --> 00:12:34,406
have no idea about how to fix or avoid

196
00:12:34,438 --> 00:12:38,378
it, always a good idea is to invest in observability. So observability

197
00:12:38,474 --> 00:12:42,786
is critical for sres. Sres need to understand the

198
00:12:42,808 --> 00:12:46,814
states that systems have put themselves into. And of course it's

199
00:12:46,862 --> 00:12:50,782
good to have a reliability framework, something like slos.

200
00:12:50,846 --> 00:12:54,194
And observability will be essential for you

201
00:12:54,232 --> 00:12:57,766
to actually define, measure and assess what reliability means.

202
00:12:57,868 --> 00:13:01,794
And of course that data that obviously provides

203
00:13:01,842 --> 00:13:05,510
will then allow you to actually dig into issues that your

204
00:13:05,660 --> 00:13:09,526
systems have put themselves into and will give you the confidence

205
00:13:09,558 --> 00:13:13,306
that you can evolve your systems with

206
00:13:13,328 --> 00:13:16,986
a lower risk of renaming it. And this

207
00:13:17,008 --> 00:13:20,346
is just one of the antipattern. There are more. So the one that we

208
00:13:20,368 --> 00:13:24,062
just talked about is the rebranding SRE team. But there are others that

209
00:13:24,116 --> 00:13:28,234
organizations struggle with. For example, the lack of observability.

210
00:13:28,362 --> 00:13:32,378
So they don't have enough observability to actually understand what their systems got

211
00:13:32,484 --> 00:13:35,502
themselves into, not assessing user satisfaction.

212
00:13:35,566 --> 00:13:39,614
So it's just trying to make systems

213
00:13:39,662 --> 00:13:43,426
better, but not being really SRE if we are making our users happy.

214
00:13:43,528 --> 00:13:47,190
Poor incidents management, common end pattern as well. We just fix

215
00:13:47,340 --> 00:13:52,614
this fire and go on to the next. And we actually don't learn with

216
00:13:52,652 --> 00:13:56,626
issues. Another common entity pattern is the SRe hero.

217
00:13:56,818 --> 00:14:00,506
It's the person or the team that thinks and that assume that

218
00:14:00,528 --> 00:14:04,410
they fix all the issues and they'll be the heroes again.

219
00:14:04,480 --> 00:14:07,814
Another tenet of SRE is automation. So if you have poor automation,

220
00:14:07,862 --> 00:14:11,606
you probably got yourself into an antipattern.

221
00:14:11,718 --> 00:14:15,694
So a brief summary of what we discussed today. So we saw the why

222
00:14:15,732 --> 00:14:19,006
of SRE, saw its origins and what it looks like

223
00:14:19,028 --> 00:14:23,114
today. We saw what antipattern are and why SRE.

224
00:14:23,162 --> 00:14:27,098
Antipattern are a problem for our industry.

225
00:14:27,194 --> 00:14:30,254
And then we discussed the rebranding the operations team,

226
00:14:30,292 --> 00:14:33,646
we discussed the antipattern itself and we saw how to fix and

227
00:14:33,668 --> 00:14:37,286
avoid it. And at the end, we just saw that SRE, just like any

228
00:14:37,308 --> 00:14:40,950
other practice, can have monitor patterns. And we saw a brief summary of

229
00:14:41,020 --> 00:14:44,454
what those could be. And this is all for my part. I hope this was

230
00:14:44,492 --> 00:14:48,274
informative for you guys. I hope you have a great conference,

231
00:14:48,322 --> 00:14:51,350
and don't hesitate to connect with me on my social.

232
00:14:51,420 --> 00:14:54,678
And let's keep this conversation going. Thank you very much and have a

233
00:14:54,684 --> 00:14:54,980
great day.

