{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/cd3ca228-7205-4b32-b137-3fdb5307404b", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["app", "backend", "blockchain", "cesar cordero rodriguez", "cofounder representative and senior odoo technical", "conf fourty two", "frontend", "javascript", "latinchain", "users", "web", "webapp"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "id": "3e2e4b4d-9759-4626-a23f-e95bef6d3475", "status": "completed", "error": null, "text": "Hello, good day. Welcome to this presentation how to develop a web three app in blockchain with JavaScript Frontend and Python backend. You can develop in JavaScript or JavaScript but focusing in this presentation we are developing in JavaScript and Python, Python in backend or any language in backend. Cisco Rodriguez is my name from latin chain introduction to PI Network and PI browser. The first step we will have here Latin shame the repository and how to develop a app a web three web app in blockchain with JavaScript Frontend and Python backend introduction to PI Network, TM PI browser and Pyap platform PI Network TM is a new crypto based on stellar where you can mine cryptos from your phone daily. This like bitcoin or any other crypto. The mining of the crypto with PI app in Android or the other system like for example app PI browser is a new browser kind of metamask but specifically for PI network. For that crypto. PI app platform is the app to develop PI app latticent repository Lattice is a PI app webtress app winner of PI Hackathon 2021 where you can play games daily using cryptos. The hit hub repo is this with code in Python, JavaScript and HTML. We are going to see this repository more on in the following presentation. How to develop a PI app use app platform to develop your front end in JavaScript or JavaScript in back end in any language following these instructions you can develop JavaScript with JavaScript in frontend. What are you going to do with frontend? You can capt or catch from the users the request to pay and that payment request is going to the back end. That's why it's important the front end to catch the user requests. And then in the back end you can do the request to the PI app platform not only from users but for PI app platform. When you get the request from Piyabi platform, you get the response from there and return the response to the frontend and the users will have an answer for his request. Okay then here web are going to see the heathub repository for Latin chain. Then we are going there and the Heathub repository is that link you saw in the presentation. In the slide is hithop.com piaps Latinchain PI apps is an organization in Hithub for PI app ecosystem. Latin chain is open source. You can develop over Latin chain new apps, but only if that app is inside the params of PI network. I mean if you want to develop in Latin chain, you have to use that new system you made in PI network. You can't use that system in other platform that is competitor of PI network. You can watch here the license. The license says that the copyright Cesar Cordero Rodriguez and Latin chain and the SEC permission had to be granted and all this and the permissions you have. Okay then how to develop a PI app here with PI network and with the help of Latin Shane you go to the repository and there is a folder called Docs Fierce app. Here you have how to develop a fierce Pynettor app. I use Odo to develop this app. Mainnet you have it the link testnet this link you maybe could use your framework election. The link I have said before is latinchain.com for mainnet and Testnet test latinchain.com okay this is the official documentation to build a PI app in Piabi platform. Okay you have the link developers mindpie.com official Pyap demo example code hillhop.com pyapps demo simplest example for users two app payment and the following is a working example for receiving the payments in PI platform. This is for client side HTML. We have this example in Javascript and the example in backend in PsP but going back for a moment, you have the latin chain system working the working latin chain system in latinchain.com that you have the code here and you can watch in the code website PI network auto and website PI network PI network games Odo you have models and you have in Python how to develop here you have to use ODO 14 to develop over these models of Latin chain. Okay but in the simple example you have in the docs first app you have a server side PSP in PsP you have example in PSP to let you know you can use any backend. I'm using backend in Psp for example for an example and in Python for my working app. So for you you can use Psp or python if you want to develop over odo using my app to make it work in several one php you need to change the app code as out app one by the one coming from client request example if you have out example in client Javascript site you must set it in several one php. Then you have to access this link PI app example in latin chain developments and you have in main HTML you have okay, you have here the code and you can let me check here. Okay here app client out example if you have example here you need to use the same out example in JavaScript, the same out example in the back end side. Then I'm using here auth example and this is all developed. You just need to use a configuration out example out example in the front end out example in the back end and you have it working. You have to set here your app key from the PI browser, okay, there are some steps you need to use, okay, you have the documentation, the official documentation in PI SDK documentation, okay? And you have working an example you have here read me and you have the official documentation from that link I said in the presentation. And you can watch the official documentation here to develop in a PI app a web dress web three PI app, okay. But here I'm giving you all examples in just one side app to user payment because the first example is user to app payment when an end user will pay to an app and this is for app to user payment. You have to read the documentation and the official documentation that you have here in developers developers mindpie.com official documentation and you have app to user payment in Ruby node, JS, Python, Go Blazor and C sharp. If we find here PI browser we will watch the apps working for example Latin Shane or any other app and you will watch many apps here latin shame for example and you will see it working with cryptos. Play games using cryptos, okay share Sudoko Snake if you are a developer that is a thing for us. We are developers, okay, for developers the the documentation is the following. We show you in this video and in Py browser you can watch as developer Brainstorm Py and develop PI where you will create a PI app that is in the documentation PI app project in a Pyap develop Py okay thank you for your attendance and see you.", "words": [], "utterances": null, "confidence": 0.889954707818933, "audio_duration": 890.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- How to develop a web three app in blockchain with JavaScript Frontend and Python backend. Introducing PI Network, TM PI browser and Pyap platform. PI Network TM is a new crypto based on stellar where you can mine cryptos from your phone daily.\n- How to develop a PI app here with PI network and with the help of Latin Shane. Here you have how to development a fierce Pynettor app. First example is user to app payment when an end user will pay to an app. If we find here PI browser we will watch the apps working.", "auto_highlights_result": {"status": "success", "results": [{"count": 15, "rank": 0.13, "text": "PI app", "timestamps": [{"start": 94544, "end": 95580}, {"start": 123990, "end": 125374}, {"start": 127944, "end": 129010}, {"start": 132652, "end": 133142}, {"start": 157748, "end": 158560}, {"start": 211236, "end": 211786}, {"start": 216356, "end": 216870}, {"start": 268230, "end": 269410}, {"start": 339968, "end": 340442}, {"start": 395968, "end": 396618}, {"start": 580890, "end": 581574}, {"start": 709332, "end": 710160}, {"start": 712580, "end": 713540}, {"start": 872748, "end": 873640}, {"start": 876610, "end": 877694}]}, {"count": 1, "rank": 0.13, "text": "app PI browser", "timestamps": [{"start": 109476, "end": 111930}]}, {"count": 1, "rank": 0.13, "text": "PI app ecosystem", "timestamps": [{"start": 268230, "end": 271570}]}, {"count": 3, "rank": 0.12, "text": "PI app platform", "timestamps": [{"start": 123990, "end": 126066}, {"start": 211236, "end": 212400}, {"start": 216356, "end": 217170}]}, {"count": 1, "rank": 0.12, "text": "PI app latticent repository Lattice", "timestamps": [{"start": 127944, "end": 132018}]}, {"count": 4, "rank": 0.12, "text": "app platform", "timestamps": [{"start": 124862, "end": 126066}, {"start": 160690, "end": 161838}, {"start": 211498, "end": 212400}, {"start": 216618, "end": 217170}]}, {"count": 1, "rank": 0.11, "text": "Latin chain new apps", "timestamps": [{"start": 276876, "end": 279346}]}, {"count": 1, "rank": 0.11, "text": "many apps", "timestamps": [{"start": 806860, "end": 807634}]}, {"count": 1, "rank": 0.1, "text": "Docs Fierce app", "timestamps": [{"start": 354530, "end": 357520}]}, {"count": 1, "rank": 0.1, "text": "PI app webtress app winner", "timestamps": [{"start": 132652, "end": 134466}]}, {"count": 1, "rank": 0.1, "text": "PI platform", "timestamps": [{"start": 429148, "end": 430198}]}, {"count": 5, "rank": 0.1, "text": "PI browser", "timestamps": [{"start": 35052, "end": 36150}, {"start": 63410, "end": 64750}, {"start": 110930, "end": 111930}, {"start": 659348, "end": 660430}, {"start": 778250, "end": 779590}]}, {"count": 11, "rank": 0.1, "text": "PI network", "timestamps": [{"start": 33980, "end": 34722}, {"start": 60708, "end": 61738}, {"start": 70390, "end": 71214}, {"start": 119576, "end": 120610}, {"start": 286364, "end": 287430}, {"start": 298032, "end": 298742}, {"start": 308132, "end": 309230}, {"start": 341872, "end": 343046}, {"start": 465448, "end": 466478}, {"start": 468024, "end": 469010}, {"start": 469590, "end": 470414}]}, {"count": 1, "rank": 0.09, "text": "PI SDK documentation", "timestamps": [{"start": 679036, "end": 680690}]}, {"count": 1, "rank": 0.09, "text": "TM PI browser", "timestamps": [{"start": 61914, "end": 64750}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}