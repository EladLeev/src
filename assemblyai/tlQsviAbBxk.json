{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/8432a73a-247a-466b-8c37-c5b3ade74504", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["api", "best", "build", "building", "can", "cannot", "capacity", "colab", "complete", "computational", "conf fourty two", "functionalities", "google", "html", "http", "localhost", "options", "project", "provides", "python flask api google colab", "requests", "shweta mishra", "software developer", "tata consultancy services", "templates", "unlimited", "url", "using"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "id": "f2703799-f05a-4729-acfa-db4e7b86e632", "status": "completed", "error": null, "text": "Flask is a python framework that allows you to build web application. But in order to use flask you have to install a lot of libraries and dependencies in your local system that takes so much time and space. That's why we are going to use Google Colab. Google Colab is an online Jupyter notebook where you can write Python program in these small set else and execute them. So let's see how we can write. So web application means HTML code. So how can we write the HTML code here? In order to do that, if you want to display any HTML file using Flask, you have to create a folder as templates. So how can we create templates folder here? So for that we have a command as make directory in Google Colab MKDI and because I want to create folder with templates name. So I'm going to write templates and then minus p. So after writing the line you can simply run this code and you can see that here it's working. So if there is no error, you will get a green tick. We have already created templates folder, now it's time to write the HTML code in this folder. So for that we are going to use command as write file in Google Colab. And then because we want to write inside the templates folder, we are going to put the folder name. And now because I want to keep the name of my HTML file as index HTML, I'm going to do that now. Here you can write any HTML code. So I'm going to write HTML 40 and I'm just going to write one text. Welcome to PI friends 42. And you can close your body tag and close your HTML. So let's add one styling as well. A very simple styling for this. I'm just going to put style tag here. So here you can put any HTML code. You can also copy and paste from other sources as well. Okay. Yeah, we have missed 1% sign. So that's why it's giving the error you it. Yeah. So now it's working. Now let's see how we are going to write the flask code. So first we are going to import Os and then import threading because we are going to execute this flask code in a separate thread and then we are going to write from flask first let's see, let's run this and as we are going to host this flask code in ngroc server. Basically Ngroc will just give you a public URL which you can use and accessible only for 6 hours. So instead of deploying this code in a local host. I'm going to deploy this in Ngrok server. So first let's install that here. Otherwise it will give you error. So this is the library API ngroc. Let's install. Yeah. And now let's import flask. I have imported this file render template. In order to render my HTML file and display it, we have to import Ngroc as well from this API ngroc that we have installed before. Now here we are going to build one environment. I'll keep this environment name as flask and as we have to initialize this flask. So we are going to use this app. I'll provide the port as well. 5000 so in order to use Ngrock before it used to be free but now it requests authentication token. Authentication token is nothing but a key that you require to provide it here so that you can use this Ngrok. So how can you get this authentication token? You can just go to Ngrok. You can log in to the Ngrok website and you will easily get your authentication token. You can see it here. So I'll just copy this. Sorry. And paste it here. And now we are going to connect this with public URL. So we are going to connect our local URL with Ngrog. So for that there is a function as Ngrog connect and this port is for my public URL. So I'm going to connect it with Ngrok. And here I'll just print whether it's showing me that URL or not. I'm going to show that public URL. Here's now let's configure this. So basically flask work on several API and root. So here we are going to pass the root. So for by default if you pass it like this with this dash, that means it will take you to index HTML by default the main page. But here if you have lot of HTML files like home HTML or about HTML, then here you can pass as about. And then if your website, if anyone open anyone is root to about then it will render this code. But for now this will just take us to our main file. So here I'm going to use render template function and you can provide your file name, that is index HTML. And now it's time to run the flask in a separate thread. These are some by default code that you will easily find in ng doc server start function in order to start this thread. And now let's see. Okay, just comment this lined. Actually I have already used this authentication token. So now it's not letting me to use again. So I have changed this authentication token with new one. Now let's run this so you can see here you will get two URL. This one is our local URL, that is localhost and this one is the ng doc URL. So if you click on this link it will give you your HTML output. So similarly you can also create your new css file and new directory for different file and you can write the flask code and you can relink and render your template here and you will get one ndroc URL that will be accessible for 6 hours and along with one localhost URL. If you don't put ndroc and if you directly simply run the python code, you will only get this localhost URL which you cannot share it with anyone. But if you are creating some application and want to test whether it's working or not, and if you want to share that link with anyone. So for that ngrok is very much useful. So you can see this is our output. So that's how you can run this flask code in google collab.", "words": [], "utterances": null, "confidence": 0.936610423963135, "audio_duration": 727.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- Flask is a python framework that allows you to build web application. To use flask you have to install a lot of libraries and dependencies in your local system. Instead of deploying this code in a local host, I'm going to deploy this in Ngrok server.", "auto_highlights_result": {"status": "success", "results": [{"count": 5, "rank": 0.11, "text": "HTML code", "timestamps": [{"start": 56500, "end": 57790}, {"start": 59652, "end": 60750}, {"start": 110532, "end": 111422}, {"start": 133116, "end": 134086}, {"start": 200042, "end": 201350}]}, {"count": 1, "rank": 0.1, "text": "HTML files", "timestamps": [{"start": 539838, "end": 540932}]}, {"count": 1, "rank": 0.09, "text": "default code", "timestamps": [{"start": 585678, "end": 586616}]}, {"count": 3, "rank": 0.08, "text": "index HTML", "timestamps": [{"start": 128712, "end": 130178}, {"start": 533722, "end": 535044}, {"start": 570582, "end": 572100}]}, {"count": 1, "rank": 0.08, "text": "home HTML", "timestamps": [{"start": 541454, "end": 542596}]}, {"count": 1, "rank": 0.08, "text": "write file", "timestamps": [{"start": 116612, "end": 117354}]}, {"count": 1, "rank": 0.07, "text": "different file", "timestamps": [{"start": 677994, "end": 679568}]}, {"count": 1, "rank": 0.07, "text": "render template function", "timestamps": [{"start": 563062, "end": 564690}]}, {"count": 3, "rank": 0.07, "text": "templates folder", "timestamps": [{"start": 73880, "end": 74954}, {"start": 108282, "end": 109146}, {"start": 121368, "end": 122574}]}, {"count": 1, "rank": 0.07, "text": "templates name", "timestamps": [{"start": 85452, "end": 86630}]}, {"count": 4, "rank": 0.06, "text": "public URL", "timestamps": [{"start": 260478, "end": 261780}, {"start": 430346, "end": 431584}, {"start": 442862, "end": 443924}, {"start": 489582, "end": 490484}]}, {"count": 5, "rank": 0.06, "text": "flask code", "timestamps": [{"start": 226226, "end": 227310}, {"start": 236246, "end": 236944}, {"start": 254346, "end": 255092}, {"start": 683098, "end": 683732}, {"start": 724010, "end": 725110}]}, {"count": 4, "rank": 0.06, "text": "Google Colab", "timestamps": [{"start": 41772, "end": 43030}, {"start": 43370, "end": 44226}, {"start": 81148, "end": 82002}, {"start": 117652, "end": 118774}]}, {"count": 6, "rank": 0.06, "text": "Authentication token", "timestamps": [{"start": 380532, "end": 382228}, {"start": 382404, "end": 383524}, {"start": 392306, "end": 393740}, {"start": 404550, "end": 406160}, {"start": 639590, "end": 641052}, {"start": 646858, "end": 648064}]}, {"count": 1, "rank": 0.06, "text": "file render template", "timestamps": [{"start": 305230, "end": 306532}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}