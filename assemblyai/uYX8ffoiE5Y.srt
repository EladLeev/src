1
00:01:40,210 --> 00:01:44,142
Youll. Hello. Thanks for

2
00:01:44,196 --> 00:01:48,238
joining me here today. It's a pleasure to have you.

3
00:01:48,404 --> 00:01:51,678
Please do leave a comment and let me know who

4
00:01:51,684 --> 00:01:54,718
you are, where you're joining from. It'd be really kind of great to kind of

5
00:01:54,724 --> 00:01:58,206
get a feel for who youll guys are and who's interested in

6
00:01:58,228 --> 00:02:01,886
this sort of thing. Okay, so the elephant in

7
00:02:01,908 --> 00:02:05,302
the room policy is kind of whole

8
00:02:05,356 --> 00:02:08,646
thing to make it sound sexy, but I'm

9
00:02:08,668 --> 00:02:11,926
going to try and at least get your attention, so just bear with me for

10
00:02:11,948 --> 00:02:14,962
a minute. So to set the scene, I'm in a lift.

11
00:02:15,026 --> 00:02:18,210
Yes, american friends, we really do call them lifts.

12
00:02:18,290 --> 00:02:21,430
And four people walk in. I think to myself, Chris,

13
00:02:21,510 --> 00:02:25,754
this is youre moment. Now or never. As the doors close,

14
00:02:25,872 --> 00:02:29,110
I position myself in front of them, a captive audience.

15
00:02:29,190 --> 00:02:32,350
They're mine. I've got them. I take a breath.

16
00:02:34,290 --> 00:02:37,614
I look to the first person on my left. She's in a suit. She looks

17
00:02:37,652 --> 00:02:41,440
really important, too. I gesture to her. See?

18
00:02:42,050 --> 00:02:45,626
She looks back at me as if to say, yes. Go on. I she nods.

19
00:02:45,658 --> 00:02:49,166
Oh, perfect. The CIO, the policymaker, the one whose neck

20
00:02:49,198 --> 00:02:52,734
is on the block. What are the chances of hindering you in my imaginary

21
00:02:52,782 --> 00:02:55,906
lift today? Well, I ask her, well, what keeps you up

22
00:02:55,928 --> 00:02:59,174
at night? And she tells me,

23
00:02:59,212 --> 00:03:03,206
I don't know what teams are really doing, what the

24
00:03:03,228 --> 00:03:06,600
volume of risk is, and what I should be showing more interest in.

25
00:03:07,050 --> 00:03:10,434
Setting and changing policy is often slow and hard

26
00:03:10,492 --> 00:03:14,394
to communicate, and people ultimately just go off and do their own thing.

27
00:03:14,432 --> 00:03:18,154
They think they know better, and to be honest, often they do.

28
00:03:18,272 --> 00:03:21,706
But ultimately I'm then left playing catch up with the risk that

29
00:03:21,728 --> 00:03:25,358
they've signed me up to. Okay, I say, trying not to sound like a

30
00:03:25,364 --> 00:03:28,880
patch noising snake or salesman. I can help.

31
00:03:29,250 --> 00:03:32,522
I turn my attention to the second person in a suit.

32
00:03:32,586 --> 00:03:36,210
They look maybe slightly less important. I make a guess. Let's trace

33
00:03:36,280 --> 00:03:39,682
it. It's my imagination here. It'd be weird if I was wrong.

34
00:03:39,816 --> 00:03:43,346
Product manager, I say. They nod. The whip cracker, I say.

35
00:03:43,448 --> 00:03:47,122
What's important to you? So managing risk,

36
00:03:47,266 --> 00:03:51,238
mostly opportunity risk. So the fear of missing out, getting features out the

37
00:03:51,244 --> 00:03:55,510
door and avoiding getting bogged down with. They glance to the CIO

38
00:03:55,930 --> 00:03:59,362
Bureaucracy. That feels, though, it's almost designed

39
00:03:59,426 --> 00:04:02,362
to slow me down. Awesome, I say.

40
00:04:02,416 --> 00:04:06,058
This is your lucky day. I turn to the next person

41
00:04:06,144 --> 00:04:09,706
dressed in overalls. I'm in a trendy part of town. They could

42
00:04:09,728 --> 00:04:13,270
be the CTO. Before I ask, they sense me staring at them.

43
00:04:13,360 --> 00:04:16,666
Cleaner, they say, how did you get in my imaginary lift

44
00:04:16,698 --> 00:04:20,318
today? Okay, I'll come back to you. My attention goes to the

45
00:04:20,324 --> 00:04:24,314
last person. Hoodie, headphones around their neck. My stereotypical developer.

46
00:04:24,362 --> 00:04:27,698
Yes, I know you well. What code do you write? Ask.

47
00:04:27,784 --> 00:04:31,074
It doesn't really matter. Python. Cool. Have you got everything?

48
00:04:31,112 --> 00:04:34,562
Updates to I work with. I pause. Python three?

49
00:04:34,616 --> 00:04:37,794
They offer. Yes, Python three. That must be hard,

50
00:04:37,832 --> 00:04:40,646
I add. They don't know it yet, but I've kind of just won a bit

51
00:04:40,668 --> 00:04:43,830
of their trust, which is important, nearly. They say.

52
00:04:43,900 --> 00:04:47,794
Cool, what's important to you? So, staying on top of patching

53
00:04:47,842 --> 00:04:50,602
things so we can react to the next fire,

54
00:04:50,736 --> 00:04:53,958
knowing what rules exist, what ones I can bend,

55
00:04:54,054 --> 00:04:57,100
break, and ultimately what might cause me to lose my job.

56
00:04:58,030 --> 00:05:01,586
Writing consistent, good quality code and avoiding

57
00:05:01,718 --> 00:05:04,862
technical debt. The rest of my team being

58
00:05:04,916 --> 00:05:08,000
able to cohesively work as one.

59
00:05:08,370 --> 00:05:12,142
Do you use any tools to help you with that? I ask. Yeah, Linta's code.

60
00:05:12,196 --> 00:05:16,110
Quality test coverage. The can I use all remit.

61
00:05:16,530 --> 00:05:20,018
Great, I say. I wrote code, too. Let's be friends. And I hand them a

62
00:05:20,024 --> 00:05:23,618
printed QR code. Here's my public GPG key, so you know that

63
00:05:23,624 --> 00:05:26,978
you can trust what I say. I return my focus to the

64
00:05:26,984 --> 00:05:30,534
cleaner. I've got it. How do you get told what to do and then when

65
00:05:30,572 --> 00:05:33,958
it changes? Well, we get a memo or something stuck to the

66
00:05:33,964 --> 00:05:37,654
notice board. Last week we got a memo saying that all the meeting room

67
00:05:37,692 --> 00:05:40,678
whiteboards needed to be cleaned every night. Interesting,

68
00:05:40,764 --> 00:05:44,266
I say. How does that then work out for you? Well, it's up

69
00:05:44,288 --> 00:05:48,620
to us to then maintain that to do list so we can onboard new people

70
00:05:49,150 --> 00:05:51,606
and just kind of keep a list of what we're up to. Does it go

71
00:05:51,648 --> 00:05:55,482
wrong at all? Yeah, sometimes. If when we compile

72
00:05:55,546 --> 00:05:59,598
that operational manual and we miss a memo or don't apply everything

73
00:05:59,684 --> 00:06:03,642
all in the right sequence, we get things wrong. They glance

74
00:06:03,706 --> 00:06:07,102
apologetically to the product manager, like when we hadn't updates

75
00:06:07,166 --> 00:06:10,594
the guide that the meeting room on the third floor was being used as

76
00:06:10,632 --> 00:06:14,274
a dedicated war room and we wiped all their boards down.

77
00:06:14,472 --> 00:06:17,774
I looked to the dev. Sound familiar? They nod.

78
00:06:17,902 --> 00:06:21,526
Turns out we're not all special snowflakes. Hey, all is not

79
00:06:21,548 --> 00:06:24,760
lost. I knew there was a reason that I imagined you here today.

80
00:06:25,370 --> 00:06:28,514
The lift is slowing. I feel it coming to its destination.

81
00:06:28,642 --> 00:06:31,594
Great. I've got the silver bullet for you, too.

82
00:06:31,792 --> 00:06:35,674
The CIO looking to me, ready to buy literally whatever

83
00:06:35,792 --> 00:06:39,466
it is I'm selling. They ask me, as the does open, who are

84
00:06:39,488 --> 00:06:43,114
you and what team are you in? As I move out the way. So to

85
00:06:43,152 --> 00:06:47,054
stop obstructing the door. Oh, I don't work here. I'm just here to

86
00:06:47,092 --> 00:06:49,918
fix the lift. People have been complaining it only goes to the top floor and

87
00:06:49,924 --> 00:06:53,230
no matter what button they push, and it's actually pretty slow.

88
00:06:54,050 --> 00:06:58,014
My audience storms out furious, heading towards the stairs

89
00:06:58,062 --> 00:07:00,420
and the door shut. I get back to my job.

90
00:07:01,910 --> 00:07:05,582
Okay, so if any of that sounds a bit familiar and you can relate

91
00:07:05,646 --> 00:07:09,160
to my imaginary friends, I may have some answers for you today.

92
00:07:09,610 --> 00:07:12,930
So what if I said you could update

93
00:07:13,010 --> 00:07:16,594
policies easily, even releasing several versioned updates,

94
00:07:16,642 --> 00:07:20,274
not just in a year, a month, what about ten updates

95
00:07:20,322 --> 00:07:23,866
in a single day? And then seamlessly communicate that to the people that need

96
00:07:23,888 --> 00:07:27,558
to consume it without derailing them. You could have visibility

97
00:07:27,654 --> 00:07:31,114
on compliance using tools that you maybe already use, and that

98
00:07:31,152 --> 00:07:34,446
policy could be readily consumable, easy to pass,

99
00:07:34,548 --> 00:07:38,174
demonstrate compliance, make sense, and not be bureaucratic to

100
00:07:38,212 --> 00:07:41,440
change when it needs to, and not ultimately going to get in the way.

101
00:07:42,290 --> 00:07:45,666
That same policy could be treated as a dependency and operate like

102
00:07:45,688 --> 00:07:49,874
a linter. So you can run compliance checks locally in CI and

103
00:07:49,912 --> 00:07:53,246
then ultimately kind of guard production that multiple

104
00:07:53,278 --> 00:07:56,110
versions of the policies like a dependency are supported.

105
00:07:56,190 --> 00:07:59,522
So emergencies like you must update now because there's

106
00:07:59,586 --> 00:08:03,334
no and vulnerability type updates are, in effect of business as

107
00:08:03,372 --> 00:08:06,840
usual activity in order to actually communicate to those that need to know.

108
00:08:07,630 --> 00:08:10,220
Does it sound interesting? Great,

109
00:08:11,710 --> 00:08:15,654
let's crack on. So hopefully

110
00:08:15,702 --> 00:08:18,874
I've got at least a little bit of your attention. It's time to introduce myself

111
00:08:18,912 --> 00:08:22,154
and start explaining things. So, my name is Chris Nesbittsmith.

112
00:08:22,202 --> 00:08:25,530
I'm currently an instructor at Learn KX and also control plane,

113
00:08:25,610 --> 00:08:29,326
a consultant to the Crown Prosecution Service which is

114
00:08:29,348 --> 00:08:32,986
part of UK government and a tinkerer of open source

115
00:08:33,018 --> 00:08:36,466
things, I've spent a fair chunk of my kind of professional career now

116
00:08:36,568 --> 00:08:40,414
working across UK government and large organizations

117
00:08:40,462 --> 00:08:44,734
where problems like this are rife. I've been promised

118
00:08:44,782 --> 00:08:48,754
we'll have time to be able to kind of handle questions and

119
00:08:48,792 --> 00:08:52,086
heckles or whatever. So please do leave those in the chat as we kind of

120
00:08:52,108 --> 00:08:55,800
go, and I'll be around to try and do my best to respond to them.

121
00:08:57,550 --> 00:09:00,762
If I don't get back to you, then please find me on LinkedIn or message

122
00:09:00,816 --> 00:09:01,850
me somehow.

123
00:09:03,950 --> 00:09:07,738
So while this is not a live or in person

124
00:09:07,824 --> 00:09:11,566
recording where I could ask you to say raise your

125
00:09:11,588 --> 00:09:15,162
hands, we can still try some audience

126
00:09:15,226 --> 00:09:18,446
participation. So if you could leave me

127
00:09:18,468 --> 00:09:21,902
a comment of policymaker if you're with

128
00:09:21,956 --> 00:09:25,294
my CIO and have ever set, written or applied

129
00:09:25,342 --> 00:09:28,786
policy before. So if

130
00:09:28,808 --> 00:09:32,722
you've ever written, set or applied some policy before,

131
00:09:32,776 --> 00:09:36,550
say like some coding styles or anything else,

132
00:09:36,700 --> 00:09:40,120
like cloud policy, things like that.

133
00:09:40,570 --> 00:09:44,440
Anything like that. If you've written it or applied it or implemented it,

134
00:09:44,810 --> 00:09:47,510
can you write policymaker in the chat?

135
00:09:49,310 --> 00:09:52,458
Policymaker. Cool. Hopefully I've given you

136
00:09:52,464 --> 00:09:55,638
enough time. So next round,

137
00:09:55,734 --> 00:09:59,558
if you've ever maybe sought exemptions or consciously bent,

138
00:09:59,654 --> 00:10:02,922
broken, circumvented, ignored, bypassed,

139
00:10:02,986 --> 00:10:07,022
whatever, a policy with hopefully, let's just say maybe

140
00:10:07,076 --> 00:10:10,394
some at least good intentions, youll you leave a comment

141
00:10:10,442 --> 00:10:12,990
of policy breaker in the chat.

142
00:10:13,670 --> 00:10:17,058
So if you've ever kind of worked around a policy, done a

143
00:10:17,064 --> 00:10:20,910
workaround, circumvented it, found a loophole,

144
00:10:20,990 --> 00:10:25,090
everything like that, kind of hacked around with it. Policy breaker.

145
00:10:30,090 --> 00:10:32,950
Well, great, you fell for it. Hopefully,

146
00:10:33,770 --> 00:10:35,960
if I've got anyone to do this.

147
00:10:36,890 --> 00:10:40,234
So we've got all of your names and employers details down thanks

148
00:10:40,272 --> 00:10:44,090
to the organizers. So you can put your phones down,

149
00:10:44,160 --> 00:10:47,414
lend me your ears, give me your full attention. Ultimately,

150
00:10:47,462 --> 00:10:49,610
the stakes just got raised.

151
00:10:50,510 --> 00:10:54,222
So where do I see policy as code generally going

152
00:10:54,276 --> 00:10:57,918
wrong? Well, before we dig into that, what do I mean by

153
00:10:58,004 --> 00:11:01,342
policy? Well, it usually comes in one of

154
00:11:01,396 --> 00:11:04,946
two forms, so security enforcing like data at

155
00:11:04,968 --> 00:11:08,910
rest, being incepted, for example, or maybe consistency enforcing

156
00:11:08,990 --> 00:11:12,718
such as code style, with tabs being two or youre spaces

157
00:11:12,814 --> 00:11:16,182
perhaps, or maybe you can think of some others,

158
00:11:16,236 --> 00:11:19,686
but in any case, it's hopefully intended to mitigate a

159
00:11:19,708 --> 00:11:21,240
risk of some sort.

160
00:11:22,170 --> 00:11:25,142
Hopefully with the best of intentions, though,

161
00:11:25,196 --> 00:11:29,266
these are often emotionally led rather than being grounded

162
00:11:29,298 --> 00:11:33,126
in a proportionate control, which then lends

163
00:11:33,158 --> 00:11:36,422
itself well to being the open door to case by case exemptions

164
00:11:36,486 --> 00:11:40,410
being required when you come against a situation that you weren't expecting.

165
00:11:41,150 --> 00:11:44,586
So this actually is not unlike how typically the laws

166
00:11:44,618 --> 00:11:48,842
of the land are created with causes law making for a complex

167
00:11:48,986 --> 00:11:52,522
if not impossible to navigate rulebook, and then ultimately,

168
00:11:52,586 --> 00:11:55,410
then harder still to measure for compliance,

169
00:11:56,150 --> 00:12:00,094
can often look like the thin end of a wedge where the precedent,

170
00:12:00,142 --> 00:12:03,678
which may have been an uncomfortable pill to swallow the first time round,

171
00:12:03,774 --> 00:12:07,302
becomes dangerous, with others looking to expand upon its

172
00:12:07,356 --> 00:12:10,806
scope, which can lead us to sometimes wonder

173
00:12:10,908 --> 00:12:14,962
if the cure was worse than the disease. But that's

174
00:12:15,026 --> 00:12:18,726
not how we at least typically develop software. So why does this

175
00:12:18,748 --> 00:12:22,070
sort of code have to be so hard? There must be a better

176
00:12:22,140 --> 00:12:25,814
answer. Well, we codified everything else, so isn't

177
00:12:25,862 --> 00:12:29,226
that the answer? Well, yes, in part, but my point of this talk is

178
00:12:29,248 --> 00:12:32,766
that we do it wrong. So maybe some of you

179
00:12:32,868 --> 00:12:36,894
are out there kind of screaming, or maybe even typing your favorite product name

180
00:12:36,932 --> 00:12:40,106
at me as the solution, and you're

181
00:12:40,138 --> 00:12:44,094
not kind of wholly wrong, necessarily, but the devil's

182
00:12:44,142 --> 00:12:48,066
in the detail. Throwing some curly braces or

183
00:12:48,088 --> 00:12:51,220
yaml at something doesn't inherently fix things.

184
00:12:51,590 --> 00:12:55,346
So if it's a security control, it's often tempting to

185
00:12:55,448 --> 00:12:59,382
keep that policy a secret. Exposing it could be used against

186
00:12:59,436 --> 00:13:02,806
you, perhaps as an adversary. However, that does

187
00:13:02,828 --> 00:13:06,278
not support us in the kind of shift left culture at all.

188
00:13:06,364 --> 00:13:10,214
It results in devs effectively reverse engineering what that policy might

189
00:13:10,252 --> 00:13:13,626
be by finding out when we kind of smash our heads up against it,

190
00:13:13,648 --> 00:13:17,046
and good thing, says no. Therefore, it doesn't

191
00:13:17,078 --> 00:13:21,034
take much imagination to see that in the scenario of an application deployed

192
00:13:21,082 --> 00:13:24,602
midway through, hindering one of the resources is noncompliant

193
00:13:24,666 --> 00:13:28,650
and gets rejected would leave the overall deployment in can inconsistent

194
00:13:28,730 --> 00:13:32,830
halfway state. This could result in some downtime,

195
00:13:33,170 --> 00:13:36,686
which begs the question of was that policy better than the downtime

196
00:13:36,718 --> 00:13:40,446
to the business? Especially if that consequently leads

197
00:13:40,478 --> 00:13:44,542
our engineers, who are all hopefully or plenty smart at finding

198
00:13:44,686 --> 00:13:48,854
inventive, shall we say, ways around the computer, says no

199
00:13:48,892 --> 00:13:52,882
response that they'd got. This is then further exasperated

200
00:13:52,946 --> 00:13:56,294
when updates to the policy are versioned. So maybe you get a pen test or

201
00:13:56,332 --> 00:14:00,266
something goes wrong. So you form that case law and

202
00:14:00,288 --> 00:14:03,434
need to apply a new policy. So maybe all s three

203
00:14:03,472 --> 00:14:07,606
buckets now need to be encrypted, a change that could be considered

204
00:14:07,638 --> 00:14:11,546
a breaking one. Youre, you might say that you provide warnings

205
00:14:11,578 --> 00:14:14,746
on at least the less important issues or new emerging

206
00:14:14,778 --> 00:14:18,462
policy, which is great so long as

207
00:14:18,516 --> 00:14:22,074
someone sees them. But if you've adopted

208
00:14:22,122 --> 00:14:25,778
Gitops or at least CI CD and somewhat guys,

209
00:14:25,944 --> 00:14:29,394
is anyone seeing those warnings? So who studies the results of a

210
00:14:29,432 --> 00:14:31,700
successful build log every time?

211
00:14:32,790 --> 00:14:35,220
Anyone? Every time?

212
00:14:35,750 --> 00:14:39,122
Well, if you are, I'd probably politely suggest that you're

213
00:14:39,186 --> 00:14:42,742
kind of missing the point of CICD, you should really

214
00:14:42,796 --> 00:14:46,422
be able to trust your job status. Okay,

215
00:14:46,476 --> 00:14:50,394
well, I'm not just here to throw stones, so if you remember my

216
00:14:50,432 --> 00:14:54,726
implied promises to my four imaginary friends of what the kind of utopian promised

217
00:14:54,758 --> 00:14:57,834
land might look like, well, there's nothing new

218
00:14:57,872 --> 00:15:01,130
under the sun. We've actually already unwittingly solved

219
00:15:01,470 --> 00:15:05,230
most, if not all, of these problems elsewhere. We just need to be reminded and

220
00:15:05,300 --> 00:15:09,310
kind of join the dots up and remember that it's code and it's software.

221
00:15:10,050 --> 00:15:13,502
So. Well, the first is, if it's something you're probably

222
00:15:13,636 --> 00:15:17,202
doing kind of policy as code, probably, or doing, say, put it in

223
00:15:17,256 --> 00:15:20,674
versioned control. The thing you might not be doing, though, is making that

224
00:15:20,712 --> 00:15:24,386
visible. So at least in a source set, by which I

225
00:15:24,408 --> 00:15:27,522
mean anyone within your walled garden of employees,

226
00:15:27,586 --> 00:15:31,078
suppliers, subcontractors, whatever to see the policy.

227
00:15:31,164 --> 00:15:34,646
I'm not saying give all away, give all your threat monitoring and

228
00:15:34,668 --> 00:15:37,790
intel away. You can probably keep that to yourselves.

229
00:15:37,890 --> 00:15:41,194
But I'd argue that the visible policy and the gaps therein is

230
00:15:41,232 --> 00:15:44,950
often better than the downtime, reverse engineered workarounds

231
00:15:45,030 --> 00:15:48,730
and opaque legacy exemption spaghetti soup.

232
00:15:49,470 --> 00:15:53,418
If you're brave, youll might even open source it. You will find that it unlocks

233
00:15:53,434 --> 00:15:57,530
the ability to work well with prospective suppliers without NDAs and whatnot.

234
00:15:57,690 --> 00:16:01,774
And widely distributed secrets are often expensive to

235
00:16:01,812 --> 00:16:05,834
maintain, difficult to handle, and often only stay secret

236
00:16:05,882 --> 00:16:09,154
for so long, after all. Okay,

237
00:16:09,192 --> 00:16:12,146
well, we're off to a good start. Our policy is visible now to those that

238
00:16:12,168 --> 00:16:16,298
need to see it. Many of you, no doubt, are used to semantic versioning,

239
00:16:16,334 --> 00:16:20,002
but a quick recap. The first segment is used to indicate

240
00:16:20,066 --> 00:16:23,558
breaking, perhaps conflicting, change in the context of policy.

241
00:16:23,724 --> 00:16:27,314
Let's say it's requiring resources to have a department label.

242
00:16:27,362 --> 00:16:30,950
Maybe that will help with some internal cross charging. Who knows? I'm not judging.

243
00:16:31,450 --> 00:16:35,066
An increment of that might look like requiring that to be from a

244
00:16:35,088 --> 00:16:37,900
predetermined list rather than just be free text.

245
00:16:38,510 --> 00:16:42,202
The second segment is to indicate minor changes that

246
00:16:42,256 --> 00:16:45,646
shouldn't really break anyone. An increment to this might

247
00:16:45,668 --> 00:16:49,550
look like correcting a spelling mistake on one of the department names.

248
00:16:50,050 --> 00:16:53,694
The third segment is to indicate patch changes, so these should be a

249
00:16:53,732 --> 00:16:57,342
no brainer for everyone to keep up to date with, and increments

250
00:16:57,406 --> 00:17:00,500
that might look like adding a department to the available options.

251
00:17:01,430 --> 00:17:05,042
Okay, so our policy is visible. It's in a repository now,

252
00:17:05,096 --> 00:17:08,486
it's versioned. So we can easily communicate that policy. We can

253
00:17:08,508 --> 00:17:11,606
trace on the release notes and expectations are

254
00:17:11,628 --> 00:17:15,586
all managed by semantic versioning. In software we're

255
00:17:15,618 --> 00:17:19,450
used to handling dependencies. So what if your policy was just another

256
00:17:19,520 --> 00:17:22,890
dependency? You might unwittingly already

257
00:17:22,960 --> 00:17:26,742
be doing this if, for example, you have, say, eslint as a dependency

258
00:17:26,806 --> 00:17:28,860
in your JavaScript package, for example.

259
00:17:30,110 --> 00:17:33,754
Okay, so our policy is visible in a repo, it's versioned,

260
00:17:33,802 --> 00:17:37,214
we can easily communicate it. We can tack on the release notes and

261
00:17:37,252 --> 00:17:39,642
expectations are managed by semantic version.

262
00:17:39,706 --> 00:17:42,990
It's beginning to look a lot more like software.

263
00:17:45,590 --> 00:17:49,042
Okay, I know testing is a dirty word,

264
00:17:49,096 --> 00:17:52,770
but in order to make this an asset that everyone can depend

265
00:17:52,840 --> 00:17:56,514
upon, it's also important to have some good examples

266
00:17:56,562 --> 00:18:00,406
and best are essential to give everyone

267
00:18:00,508 --> 00:18:03,986
confidence in the stability and surface any potential side effects

268
00:18:04,018 --> 00:18:05,910
before they hurt everyone involved.

269
00:18:07,050 --> 00:18:10,890
Consumers of this policy need to be able to test themselves against

270
00:18:10,960 --> 00:18:14,250
the policy locally and also in CI CD,

271
00:18:14,590 --> 00:18:18,300
thus shortening the feedback loop and better informing things.

272
00:18:19,150 --> 00:18:22,518
And as a bonus, we should therefore find ourselves and

273
00:18:22,544 --> 00:18:26,480
our consumers able to rely on that artifact that we're sharing with them.

274
00:18:27,170 --> 00:18:30,718
Well, we're well and truly on the home stretch. It's a

275
00:18:30,724 --> 00:18:34,270
dependency, so updating it should be no different to any other.

276
00:18:34,420 --> 00:18:37,886
We can even use some magic like GitHub's dependipot or men's

277
00:18:37,918 --> 00:18:41,918
renovate to do that for us. So think automatic pull request best,

278
00:18:42,014 --> 00:18:43,940
even auto merging if you like.

279
00:18:44,630 --> 00:18:47,602
Okay, so to check you're all still awake,

280
00:18:47,746 --> 00:18:51,160
can anyone leave me a comment and let me know

281
00:18:51,530 --> 00:18:55,334
of a recent event that caused people to want to know what

282
00:18:55,372 --> 00:18:59,362
version of a certain logging Java doohickey

283
00:18:59,426 --> 00:19:02,938
you were potentially running literally everywhere in

284
00:19:02,944 --> 00:19:06,794
the estate? Leave me a comment, let me know what that is,

285
00:19:06,832 --> 00:19:09,900
what topic and theme of that is.

286
00:19:12,510 --> 00:19:16,062
Yes, as you know, all presentations this year are

287
00:19:16,116 --> 00:19:19,600
contractually required to reference log four j,

288
00:19:20,050 --> 00:19:23,354
even when it's almost entirely out of context

289
00:19:23,482 --> 00:19:26,930
and include some memes about it. In just a few short

290
00:19:27,000 --> 00:19:30,658
months I can remove these and hopefully just point

291
00:19:30,744 --> 00:19:34,786
broadly at a list of scary looking cves in order to command your

292
00:19:34,808 --> 00:19:38,374
behavior through fear. What I'm getting at here

293
00:19:38,412 --> 00:19:41,554
though, is the situational awareness piece around software

294
00:19:41,602 --> 00:19:45,382
supply chain is something your organization is hopefully already

295
00:19:45,516 --> 00:19:48,826
thinking about, if not already addressing. So if

296
00:19:48,848 --> 00:19:53,558
our policy is a dependency, this is at least not a new problem software

297
00:19:53,654 --> 00:19:55,900
kind of bill of materials for the win, right?

298
00:19:57,310 --> 00:20:00,854
Which ultimately gives us the abilities and to measure

299
00:20:00,902 --> 00:20:04,986
the compliance across the estates. Okay, so I've just covered

300
00:20:05,018 --> 00:20:08,346
a lot of ground and hopefully sounded vaguely convincing.

301
00:20:08,458 --> 00:20:12,990
And this isn't just a fictional utopia that's been painted in PowerPoints.

302
00:20:13,410 --> 00:20:16,874
Well, it's time to look at how youll might be actually able to do this.

303
00:20:16,932 --> 00:20:20,786
And I know you really came here wanting to see a million words on

304
00:20:20,808 --> 00:20:23,918
a slide and not just the odd emoji or two that you've seen up till

305
00:20:23,934 --> 00:20:27,378
now. So we've reached the point where I get to show you some code.

306
00:20:27,464 --> 00:20:31,334
Hooray. To maintain the scope, though, I'm going to be limiting this to

307
00:20:31,372 --> 00:20:34,982
talking about two things to prove that it's not just one tech or tool.

308
00:20:35,116 --> 00:20:38,386
I've arbitrarily picked terraform and kubernetes,

309
00:20:38,578 --> 00:20:42,282
but I could have picked anything. And naturally I'll need

310
00:20:42,336 --> 00:20:45,894
some tools to go along with this. I'm generally too lazy to invent

311
00:20:45,942 --> 00:20:49,334
too much here, so likewise I'm going to pick two tools.

312
00:20:49,382 --> 00:20:52,858
But again, I could have used any, some, or even

313
00:20:52,944 --> 00:20:56,714
all, probably. So Chekhov is going to be doing my terraform

314
00:20:56,842 --> 00:20:59,470
and Caverno will be doing my kubernetes.

315
00:21:00,130 --> 00:21:03,838
If you want to browse along with me, I've created can example

316
00:21:03,924 --> 00:21:07,774
GitHub organization here. I'm not expecting you to read or grock

317
00:21:07,822 --> 00:21:11,074
the code on screen too much, so don't worry about it

318
00:21:11,192 --> 00:21:14,340
really, it's just to prove that I've made a real thing.

319
00:21:15,530 --> 00:21:17,880
So the policy is stored here.

320
00:21:19,530 --> 00:21:23,558
So here's where my policy starts. At version 1.0

321
00:21:23,724 --> 00:21:26,966
I've got policy that requires a department label on all

322
00:21:26,988 --> 00:21:30,860
the resources, so as long as it's set, it doesn't actually matter what it is.

323
00:21:31,310 --> 00:21:34,886
I've written tests for this, so note how the passing test cases

324
00:21:34,918 --> 00:21:39,098
are really useful as a great example of what good and bad

325
00:21:39,184 --> 00:21:42,490
looks like. We pushed a tag in git.

326
00:21:42,570 --> 00:21:46,558
We've added release notes. I can sign it to provide

327
00:21:46,644 --> 00:21:50,494
further assurance if my heart so desires. Obviously it

328
00:21:50,532 --> 00:21:54,340
does, but moving on, version two point

329
00:21:54,870 --> 00:21:58,418
looks similar only now that the department field has to

330
00:21:58,424 --> 00:22:01,582
be one of a predetermined list like before test exists.

331
00:22:01,646 --> 00:22:04,130
Release notes are written tags assigned.

332
00:22:04,630 --> 00:22:07,938
2.1.0 is where we notice and correct that spelling

333
00:22:07,954 --> 00:22:12,230
mistake of one of the options in the list of the departments

334
00:22:13,210 --> 00:22:16,840
two one one, and we've now added a new department to the list

335
00:22:17,630 --> 00:22:22,426
and app one and infra one. Some other repositories in

336
00:22:22,448 --> 00:22:26,138
that well, those depend on version one point of

337
00:22:26,144 --> 00:22:29,446
the policy if it's

338
00:22:29,478 --> 00:22:33,718
not compliant with version two point or beyond. But how

339
00:22:33,744 --> 00:22:37,226
do I know that it's not compliant with versioned two? Well, I configured

340
00:22:37,258 --> 00:22:41,066
renovate to actually be automatically make me a pull request.

341
00:22:41,258 --> 00:22:45,074
So when there's a new version of the policy it's super obvious. If I can

342
00:22:45,112 --> 00:22:49,362
update my dependency and I can also see clear feedback about

343
00:22:49,416 --> 00:22:51,490
where and why I'm not compliant.

344
00:22:52,710 --> 00:22:56,310
I can also see all the pull requests over my so I can

345
00:22:56,380 --> 00:22:58,680
now measure the compliance of my policy.

346
00:22:59,930 --> 00:23:03,494
So moving on from that app two as

347
00:23:03,532 --> 00:23:06,390
other repositories and infra two other repository,

348
00:23:07,050 --> 00:23:10,540
they depend on version two point of the policy.

349
00:23:11,070 --> 00:23:14,426
However, we could merge the open pull request there all the way

350
00:23:14,448 --> 00:23:18,346
up to two one one. Finally, app three and infra three,

351
00:23:18,368 --> 00:23:21,326
well they're dependent on two one one and they get a gold star from the

352
00:23:21,348 --> 00:23:25,354
CIO. So there is a small touch of magic

353
00:23:25,402 --> 00:23:29,870
here and it's not pretty. I've written some bash,

354
00:23:30,690 --> 00:23:34,290
so don't judge me, even though I probably definitely

355
00:23:34,440 --> 00:23:38,114
absolutely written a lot worse. But what this does

356
00:23:38,152 --> 00:23:42,174
is allowing me from my dev laptop or in CI to evaluate

357
00:23:42,222 --> 00:23:46,018
my code against the version of the policy. Ideally this might be a

358
00:23:46,024 --> 00:23:49,826
bit less cumbersome, but it is what it is for now, pull requests and collaboration

359
00:23:49,858 --> 00:23:53,702
are very welcome, and the last piece to the puzzle is

360
00:23:53,756 --> 00:23:57,506
managing the lifecycle of the policies and allowing multiple versions

361
00:23:57,538 --> 00:24:01,606
of the policy to coexist be accepted and evaluated

362
00:24:01,718 --> 00:24:05,258
within a single runtime. I cheated a

363
00:24:05,264 --> 00:24:08,970
bit here. Kubernetes gives you admission controllers. It's not so easy

364
00:24:09,040 --> 00:24:13,146
to get that same policy evaluation in a cloud done locally.

365
00:24:13,258 --> 00:24:16,926
They've got their own policy engines, and I've just not figured out a way

366
00:24:16,948 --> 00:24:19,918
to be able to execute and evaluate that locally. Again,

367
00:24:20,084 --> 00:24:23,662
pull requests, collaboration contribution are

368
00:24:23,716 --> 00:24:26,820
really all very welcome in this space, and I'd love to hear from you.

369
00:24:27,270 --> 00:24:30,482
So you may have noticed that the way the policies is actually

370
00:24:30,536 --> 00:24:34,254
designed and written and distributed lends itself well to coexist

371
00:24:34,302 --> 00:24:37,818
with itself in a Kubernetes cluster. Which brings

372
00:24:37,854 --> 00:24:41,442
us to cluster one, which describes a cluster that accepts all of the versions

373
00:24:41,506 --> 00:24:43,190
we've described in the cluster,

374
00:24:44,490 --> 00:24:47,160
all the versions of the policy that we've described so far.

375
00:24:47,630 --> 00:24:51,450
And the reason that's happened is I've applied all of those policies.

376
00:24:52,590 --> 00:24:56,122
Likewise, cluster two exists. However, this only

377
00:24:56,176 --> 00:24:59,994
accepts two point and greater, and we can

378
00:25:00,032 --> 00:25:03,070
automate some of this and to prove the point by using

379
00:25:03,140 --> 00:25:07,114
kind for some CI to apply that policies and deploy

380
00:25:07,162 --> 00:25:10,062
our applications. And there we have it,

381
00:25:10,116 --> 00:25:13,570
a full organization, all done, wrapped up compliance policy,

382
00:25:13,640 --> 00:25:18,082
all versions CIO, all aware of what's going on, everyone well

383
00:25:18,136 --> 00:25:20,900
communicated with. So this sounds great, right?

384
00:25:21,590 --> 00:25:25,766
But just one more thing. Wouldn't it be awesome if

385
00:25:25,868 --> 00:25:29,750
the policy carried a story about why it exists?

386
00:25:30,330 --> 00:25:33,942
After all, if your agile delivery teams are even half

387
00:25:33,996 --> 00:25:37,874
effective, they should be rejecting anything that they perceive

388
00:25:37,922 --> 00:25:42,122
as friction. If they don't see the value in it, it could

389
00:25:42,256 --> 00:25:46,170
allow our developers to know why they are compliance,

390
00:25:46,590 --> 00:25:50,198
and if they want to do something outside of what the policy permits,

391
00:25:50,294 --> 00:25:53,486
they don't need any sort of exemption granted per se.

392
00:25:53,588 --> 00:25:56,730
They can actually go and have a well reasoned and informed debate

393
00:25:56,810 --> 00:26:00,526
with a rationale behind a pull request to the policy that

394
00:26:00,548 --> 00:26:04,306
is attached to an understood risk of why the

395
00:26:04,328 --> 00:26:08,580
policy exists. So if you imagine, if you will,

396
00:26:09,590 --> 00:26:13,554
it's going through a stage of versions with risks that

397
00:26:13,592 --> 00:26:17,030
inform kind of the mitigations manifested as the policy,

398
00:26:17,180 --> 00:26:20,470
all maintained as kind of one living thing.

399
00:26:20,620 --> 00:26:24,662
So when the risk landscape changes, your policy can move with it.

400
00:26:24,796 --> 00:26:28,838
So, for example, when some new privacy regulation comes out,

401
00:26:28,924 --> 00:26:33,020
or your latest marketing strategy pays off and you acquire more data,

402
00:26:33,470 --> 00:26:36,874
even if your policy was perfect at one point in time,

403
00:26:36,992 --> 00:26:40,282
the risks and the appetite will stand still for

404
00:26:40,336 --> 00:26:43,774
no one. So we can liken this in some ways to

405
00:26:43,812 --> 00:26:47,162
over provisioning that we might be familiar with from elsewhere.

406
00:26:47,306 --> 00:26:50,986
Where lead times are long, changes hard, and there is a significant pressure

407
00:26:51,018 --> 00:26:54,926
in nailing it the first time, which can lead us to hedging bets

408
00:26:55,038 --> 00:26:58,926
against what that future state might be, rather than proportionate

409
00:26:58,958 --> 00:27:02,498
mitigation to the risks that are actually more tangibly in the real

410
00:27:02,584 --> 00:27:06,162
right now. So that's where the real

411
00:27:06,216 --> 00:27:10,082
culture change is needed, and the exemptions of that is likely

412
00:27:10,146 --> 00:27:12,840
a long series of talks in of itself.

413
00:27:14,090 --> 00:27:17,334
So now this is really all over to you. Honestly, the best

414
00:27:17,372 --> 00:27:20,742
thing that you could do right now is tell me this is all madness,

415
00:27:20,806 --> 00:27:24,422
already done, irrelevant, or just otherwise unachievable,

416
00:27:24,486 --> 00:27:28,266
something my esteemed echo chamber of peers have yet

417
00:27:28,288 --> 00:27:32,086
to do. But beyond making Paul requests

418
00:27:32,118 --> 00:27:35,914
and developing the theory more, I'd really like to start building some test cases

419
00:27:35,962 --> 00:27:39,486
with other willing organizations, and that will allow me to

420
00:27:39,588 --> 00:27:43,200
swap out more of my imaginary friends for some real ones.

421
00:27:43,810 --> 00:27:47,234
But the most important thing that I want you to remember from our time

422
00:27:47,272 --> 00:27:50,882
together today is, and please do feel free

423
00:27:50,936 --> 00:27:52,900
to say this out loud with me.

424
00:27:53,430 --> 00:27:58,002
Purposeless policy is potentially practically

425
00:27:58,146 --> 00:28:01,794
pointless policy. I've been practices

426
00:28:01,842 --> 00:28:05,346
saying that far too many times. I've been Chris

427
00:28:05,378 --> 00:28:09,302
Esbet Smith thank you so much for your time. You're now free to disconnect

428
00:28:09,366 --> 00:28:13,126
and leave. I will work with the organizers

429
00:28:13,158 --> 00:28:17,690
to make sure the evidence of your guilt admissions earlier are destroyed.

430
00:28:18,030 --> 00:28:22,230
I'll try like subscribe whatever the kids do on LinkedIn,

431
00:28:22,310 --> 00:28:25,706
GitHub and whatever you can be. Rest assured that there'll be no spam

432
00:28:25,738 --> 00:28:29,034
or really much content at all, since I'm pretty awful

433
00:28:29,082 --> 00:28:32,250
at self promotion, especially on social media cns

434
00:28:32,330 --> 00:28:36,426
me that just points to my LinkedIn and talks. CNS me contains

435
00:28:36,458 --> 00:28:40,030
this and some other talks. They're all open source on my GitHub.

436
00:28:41,010 --> 00:28:44,480
Questions are very welcome on this or anything else.

437
00:28:44,890 --> 00:28:46,920
Be around in the comments for a while.

438
00:28:47,690 --> 00:28:50,902
So please do. Please reach out or

439
00:28:50,956 --> 00:28:54,566
ping me a message on LinkedIn. Be great to hear from you and

440
00:28:54,588 --> 00:28:56,820
hear what your thoughts are. Thank you very much.

