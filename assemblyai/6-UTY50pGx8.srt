1
00:00:25,570 --> 00:00:29,142
You. Hello. Well thanks for joining me here today and

2
00:00:29,196 --> 00:00:32,866
allowing me to stand up and use my clicker and everything's

3
00:00:32,978 --> 00:00:36,226
a privilege and thank you very much for joining. So to kick

4
00:00:36,258 --> 00:00:39,654
things off, my name is Chris Nesbittsmith. I'm based

5
00:00:39,692 --> 00:00:43,654
in London and currently work with some well known brands like Learn K

6
00:00:43,692 --> 00:00:46,914
eight, Control Plane, Esnergy and various

7
00:00:46,962 --> 00:00:50,090
bits of UK government. I'm also a tinkerer,

8
00:00:50,210 --> 00:00:53,706
open source stuff. I've been using or abusing

9
00:00:53,738 --> 00:00:56,830
Kubernetes in production since it was zero four.

10
00:00:56,980 --> 00:01:00,314
So believe me when I say it's been a journey.

11
00:01:00,362 --> 00:01:03,726
I've definitely got the scars and wall wounds to show for it.

12
00:01:03,908 --> 00:01:06,862
We'll have time to be able to deal with questions in the chat,

13
00:01:06,926 --> 00:01:10,306
so please do drop a line in and let

14
00:01:10,328 --> 00:01:14,018
me know kind of where you're joining from and any questions that

15
00:01:14,024 --> 00:01:17,926
youve may have. If I don't get to them in here then

16
00:01:17,948 --> 00:01:21,238
please do feel free to find me on LinkedIn and

17
00:01:21,324 --> 00:01:24,726
have a conversation there so

18
00:01:24,908 --> 00:01:28,594
the history of pets versus cattle terminology is muddy,

19
00:01:28,642 --> 00:01:32,694
but most link it to a presentation by Bill Baker from Microsoft

20
00:01:32,822 --> 00:01:37,050
made in around 2006 around scaling the SQL server.

21
00:01:37,550 --> 00:01:41,514
Way back then in the before times we called ourselves sysadmins and

22
00:01:41,552 --> 00:01:44,374
treated our servers like pets. For example,

23
00:01:44,432 --> 00:01:48,298
Bob the mail server. So if Bob goes down, it's all hands to the pumps,

24
00:01:48,394 --> 00:01:51,646
the CEO can't get his email and it's near. On the end

25
00:01:51,668 --> 00:01:55,882
of the world we see some incantations, make some sacrifices

26
00:01:55,946 --> 00:02:00,130
to an altar and resuscitate Bob, bringing him back from the dead.

27
00:02:00,630 --> 00:02:03,666
Crisis averted. Cue the applause and accolades for

28
00:02:03,688 --> 00:02:07,110
our valiant Chris admins who stayed up late into the nights.

29
00:02:07,690 --> 00:02:11,606
In the new world, however, servers are numbered or maybe just

30
00:02:11,628 --> 00:02:15,234
given a UUID. So they are like cattle

31
00:02:15,282 --> 00:02:19,414
in a herd. For example, web one

32
00:02:19,452 --> 00:02:22,682
to web 100. So when one server goes down,

33
00:02:22,736 --> 00:02:26,140
it's taken out the back shot and replaced on the line.

34
00:02:26,830 --> 00:02:30,678
So why am I telling you this rather morbid story? Well, Kubernetes deals

35
00:02:30,694 --> 00:02:33,390
with all of this, right? And saves us from the tyranny.

36
00:02:34,370 --> 00:02:38,026
And you're right, it does. All of your computers are called nodes and they're

37
00:02:38,058 --> 00:02:41,386
abstracted and given arbitrary names. Auto scaling

38
00:02:41,418 --> 00:02:44,686
groups and such will automatically detect the sick in your flock,

39
00:02:44,798 --> 00:02:48,850
take them out and bring a replacement in, all while seamlessly

40
00:02:49,510 --> 00:02:52,850
rescheduling the workload that was on that failed machine.

41
00:02:53,590 --> 00:02:57,062
And Kubernetes takes that a step further. Your workload also

42
00:02:57,116 --> 00:03:00,722
has unique names, so like the physical servers,

43
00:03:00,786 --> 00:03:04,550
your workload failures can be detected and replaced seamlessly.

44
00:03:05,610 --> 00:03:08,140
So where's the pet, you might ask.

45
00:03:09,310 --> 00:03:12,762
Well, what's the first thing

46
00:03:12,816 --> 00:03:16,010
we do with a brand new Kubernetes cluster?

47
00:03:17,310 --> 00:03:21,258
I'll give youve a hint. It's not deploying your application or actually

48
00:03:21,344 --> 00:03:24,000
anything that the business itself cares about.

49
00:03:24,930 --> 00:03:28,590
Something like that look vaguely familiar? Yeah, we had to do

50
00:03:28,660 --> 00:03:31,726
a load of things just to make this cluster able

51
00:03:31,748 --> 00:03:34,030
to start running our workloads.

52
00:03:35,330 --> 00:03:39,394
And it's worth noting that with a trend towards more and more features being

53
00:03:39,432 --> 00:03:43,054
kind of out of tree, which is to say that they are optional

54
00:03:43,102 --> 00:03:46,242
add ons and don't ship as part of core Kubernetes.

55
00:03:46,386 --> 00:03:49,974
So example of this, things like flex volumes policy

56
00:03:50,092 --> 00:03:53,750
and basically all the Kubernetes Sig projects that many find

57
00:03:53,820 --> 00:03:57,080
essential is only exasperating the issue.

58
00:03:59,230 --> 00:04:02,362
Well, that might work for when you've got, say, a single

59
00:04:02,496 --> 00:04:06,438
cluster, but what about when you've got dev integration,

60
00:04:06,614 --> 00:04:10,006
staging and Qa that your app all

61
00:04:10,048 --> 00:04:13,242
needs to run on? Or worse,

62
00:04:13,306 --> 00:04:16,320
when you need separation between your teams or products.

63
00:04:18,050 --> 00:04:21,194
So maybe you've automated all of that, say some bash,

64
00:04:21,242 --> 00:04:24,320
ansible, terraform, whatever you like. Well, cool,

65
00:04:24,630 --> 00:04:27,906
good on you. However, you'll find it won't be

66
00:04:27,928 --> 00:04:31,998
long before there's an updated version, perhaps patching a vulnerability

67
00:04:32,094 --> 00:04:36,098
that you care about. And you may be stuck trying to test every single

68
00:04:36,184 --> 00:04:38,710
app and permutation across your estate.

69
00:04:39,610 --> 00:04:43,170
So this is what we're calling day two operations. We used to call it BaU,

70
00:04:43,250 --> 00:04:47,106
or business as usual, and it's where we find reality catching

71
00:04:47,138 --> 00:04:49,690
up with our idealistic good intentions.

72
00:04:50,190 --> 00:04:53,590
So you'll quickly find that clusters are running various versions.

73
00:04:53,670 --> 00:04:56,998
So given the rate of change in the community and industry,

74
00:04:57,094 --> 00:05:00,322
it's unrealistic to run like latest everywhere

75
00:05:00,406 --> 00:05:04,026
confidently, at least without breaking production and disrupting

76
00:05:04,058 --> 00:05:07,770
your operational teams. So if permutations

77
00:05:07,850 --> 00:05:11,342
of seemingly common tools and

78
00:05:11,396 --> 00:05:14,366
choices. So some teams might use Kong,

79
00:05:14,478 --> 00:05:18,370
others Nginx, another Apache, another envoy, all for

80
00:05:18,440 --> 00:05:21,874
plenty good reasons I'm sure will

81
00:05:21,912 --> 00:05:25,214
find yourself seamlessly infinite possibilities across

82
00:05:25,272 --> 00:05:28,626
the estate. Emerging sad

83
00:05:28,658 --> 00:05:32,034
times, right? Congratulations, you're now the proud

84
00:05:32,082 --> 00:05:35,714
owner of a pet shop. Or if youve managed to automate the creation

85
00:05:35,762 --> 00:05:38,918
of them, you can call it maybe a pet factory,

86
00:05:39,014 --> 00:05:41,210
but it's a headache.

87
00:05:42,190 --> 00:05:45,340
So how does this hurt you, you might ask?

88
00:05:46,190 --> 00:05:49,706
Well, maybe you like pets. Well,

89
00:05:49,808 --> 00:05:53,802
assuming, of course, you're in cloud, your world could roughly be summarized

90
00:05:53,866 --> 00:05:57,326
into a few tiers. So, apps, well, these are the

91
00:05:57,348 --> 00:06:00,926
things that your boardroom level can know about and can

92
00:06:00,948 --> 00:06:04,818
probably name them. So think your public website, shopping cart system,

93
00:06:04,904 --> 00:06:08,430
customer service apps, online chat interfaces, email systems,

94
00:06:08,510 --> 00:06:12,370
and so on. So these are all implicitly providing some

95
00:06:12,440 --> 00:06:15,640
value in of themselves to your end customers.

96
00:06:17,770 --> 00:06:21,522
Infrastructure with cloud Chris is hopefully all a commodity.

97
00:06:21,586 --> 00:06:25,074
Thankfully the days where anyone in your business should be caring

98
00:06:25,122 --> 00:06:28,978
about the challenges of physically racking up hardware got overloading

99
00:06:28,994 --> 00:06:32,270
the weight in the cabinet, taking pride in how well they've rooted,

100
00:06:32,290 --> 00:06:35,706
all the cables have hopefully all passed and

101
00:06:35,728 --> 00:06:39,242
you're now just consuming infrastructure. Hopefully you've codified this.

102
00:06:39,376 --> 00:06:43,054
But even if you're into click ops, making sure it's running is

103
00:06:43,092 --> 00:06:46,894
not really your problem. No one in your business is

104
00:06:46,932 --> 00:06:50,058
concerned with hardware failures patching routers every time there's

105
00:06:50,074 --> 00:06:53,110
a critical vulnerability, testing the ups and generators,

106
00:06:53,130 --> 00:06:56,350
regularly, upgrading the HVAC when you add more kit

107
00:06:56,510 --> 00:06:59,874
and so on. Yawnorama as

108
00:06:59,912 --> 00:07:03,230
my 16 year old would say, and then curse me for repeating.

109
00:07:03,310 --> 00:07:06,918
But your interactions with any of this are basically

110
00:07:07,004 --> 00:07:10,486
a few clicks or lines of code and some infra is

111
00:07:10,508 --> 00:07:14,230
then available to you with an SLA attached to it from your cloud vendor.

112
00:07:15,770 --> 00:07:18,700
If only the story ended there though.

113
00:07:19,390 --> 00:07:22,714
Sandwiched between those is a gray layer of

114
00:07:22,752 --> 00:07:27,078
all the operational enablers, so it's where your DevOps or SRE

115
00:07:27,174 --> 00:07:30,850
team live. So think log aggregation, certificate issuers,

116
00:07:30,870 --> 00:07:34,560
security policies, monitoring service mesh and others.

117
00:07:34,930 --> 00:07:38,106
These are all the things you do because of all of the sorts

118
00:07:38,138 --> 00:07:42,810
of reasons ranging from risk mitigation to emotion and technically unqualified

119
00:07:42,890 --> 00:07:46,882
opinion, or just without the foresight of what was round the corner in

120
00:07:46,936 --> 00:07:51,154
say, six months. Let's just make the

121
00:07:51,192 --> 00:07:54,242
leap and assume for a minute that you are more

122
00:07:54,296 --> 00:07:58,790
technically competent than your Goliath multi billion dollar cloud vendor.

123
00:07:59,770 --> 00:08:03,286
You've completely negated many of the benefits of going to cloud in the

124
00:08:03,308 --> 00:08:06,726
first place by ripping up that shared responsibility model.

125
00:08:06,908 --> 00:08:10,362
All of this, whilst technically fascinating for people like me to

126
00:08:10,416 --> 00:08:13,974
stand and stroke my beard at this, is delivering

127
00:08:14,022 --> 00:08:17,114
absolutely zero business value. Unless of course your

128
00:08:17,152 --> 00:08:20,140
business is building or training on those products.

129
00:08:20,990 --> 00:08:23,870
And who'd want to get into that business, eh?

130
00:08:24,770 --> 00:08:27,630
And that's not all. What about recruitment?

131
00:08:28,050 --> 00:08:31,742
So you might think that you want a DevOps, right? Oh no wait,

132
00:08:31,796 --> 00:08:35,374
a DevOps with Kubernetes experience. So maybe a CKA

133
00:08:35,422 --> 00:08:38,658
or cks. Oh yeah, well it's on AWS and

134
00:08:38,664 --> 00:08:41,986
we use Linkerd and in some places istio got the

135
00:08:42,008 --> 00:08:45,398
current version or even the same version everywhere. A mix of

136
00:08:45,404 --> 00:08:48,760
pod security policy, Caverno OpA policy,

137
00:08:49,210 --> 00:08:52,694
some terraform, helm, Jenkins, GitHub action, super going

138
00:08:52,732 --> 00:08:56,902
on, all in a monorupo. Apart from all that stuff that isn't well,

139
00:08:56,956 --> 00:09:00,394
we're well outside the remit of commodity skills and back

140
00:09:00,432 --> 00:09:04,614
to hunting unicorns. Sure, you'll find some victims.

141
00:09:04,662 --> 00:09:07,622
Sorry, I mean candidates that you'll hire.

142
00:09:07,686 --> 00:09:11,354
Well, now you've got one hell of an onboarding issue before

143
00:09:11,392 --> 00:09:14,846
they can do anything useful and help your business move forwards faster than

144
00:09:14,868 --> 00:09:18,346
it did without them. And if you've hired smart

145
00:09:18,378 --> 00:09:22,154
people, they'll come with experience and their own opinions

146
00:09:22,202 --> 00:09:25,474
of what worked for them before. So your landscapes get

147
00:09:25,512 --> 00:09:28,770
bigger and bigger and more complex and diverse.

148
00:09:29,190 --> 00:09:33,006
I did some googling, so this is what the CNCF landscape

149
00:09:33,038 --> 00:09:36,070
looked back way back in 2017.

150
00:09:37,770 --> 00:09:41,720
Choices, right? Choices and logos as far as the eye can see.

151
00:09:43,370 --> 00:09:46,486
Have you seen it recently though? I mean,

152
00:09:46,508 --> 00:09:50,590
this has got a bit out of hand. I'd say someone might shorts

153
00:09:50,610 --> 00:09:53,894
have a word, but I suspect that would probably just make things worse

154
00:09:53,942 --> 00:09:56,780
by adding yet more things on the board.

155
00:09:58,190 --> 00:10:02,110
And don't get me started on operators. I mean, nice idea,

156
00:10:02,180 --> 00:10:06,142
but they end up betraying any of the ideas of immutability with

157
00:10:06,196 --> 00:10:09,726
crazy level of abstraction. And have youve seen the

158
00:10:09,748 --> 00:10:13,546
crazy of mutating admission controllers too? I mean, if you're

159
00:10:13,578 --> 00:10:16,978
really mad, you could nest these things with operators that create

160
00:10:17,064 --> 00:10:19,838
crds for other operators that are all mutated.

161
00:10:19,934 --> 00:10:23,380
I mean, heaven forbid someone bumps the version of anything.

162
00:10:24,150 --> 00:10:27,538
And no doubt all held together with sticky tape, chewing gum,

163
00:10:27,634 --> 00:10:31,160
glue, pipe cleaners, thoughts and prayers and

164
00:10:32,490 --> 00:10:35,910
helm, a string based templating engine

165
00:10:35,980 --> 00:10:39,370
where any community module has to eventually expose every

166
00:10:39,440 --> 00:10:44,170
parameter in every object file abstracted by a glorified string replace.

167
00:10:44,670 --> 00:10:48,586
So now I've got to have in my head all of the complexities of

168
00:10:48,608 --> 00:10:52,062
a Linux or Windows host, how the container runtime works,

169
00:10:52,116 --> 00:10:55,966
the software defined networking storage, the hypervisor before the

170
00:10:55,988 --> 00:10:59,630
container, the scheduler, the controllers, the author policy, the mutating policy

171
00:10:59,700 --> 00:11:02,910
in the cluster before I worry about how

172
00:11:02,980 --> 00:11:06,846
someone in the nested helm chart mess of hell has mapped

173
00:11:06,878 --> 00:11:11,662
the replica count of one of the deployments to a string called DB replicaccount,

174
00:11:11,726 --> 00:11:15,246
and how that has changed on a new version of a dependency that wasn't

175
00:11:15,278 --> 00:11:18,110
following semver to database replica count.

176
00:11:18,200 --> 00:11:20,822
So instead of having my expected three,

177
00:11:20,956 --> 00:11:24,726
I've now only got one, when I could have just written a

178
00:11:24,748 --> 00:11:28,134
yaml patch for the replica account in the deployment object of the database

179
00:11:28,182 --> 00:11:31,782
resource using a stable API versioning with the schema validation

180
00:11:31,846 --> 00:11:36,122
all for free. The kids doing

181
00:11:36,176 --> 00:11:39,660
kubernetes seem to have not learned from the past.

182
00:11:41,070 --> 00:11:44,446
Don't get me wrong, I love the open source community with all

183
00:11:44,468 --> 00:11:47,934
my heart, and it's so important and it's simply not

184
00:11:47,972 --> 00:11:52,346
possible to do anything without it. Sorry, not sorry. Yes. As a sidebar,

185
00:11:52,458 --> 00:11:56,082
every talk, pretty much this decade has got to reference log

186
00:11:56,136 --> 00:11:59,426
four j. This is my slide. Deal with it. It's not relevant. It will come

187
00:11:59,448 --> 00:12:02,226
out, hopefully soon. Everything,

188
00:12:02,328 --> 00:12:05,666
literally everything that exists around us depends upon

189
00:12:05,698 --> 00:12:09,506
it. And the community is brilliant at building some truly

190
00:12:09,538 --> 00:12:12,120
remarkable, very high quality things.

191
00:12:13,690 --> 00:12:17,094
But we must accept that

192
00:12:17,132 --> 00:12:21,434
the open source community is awful at packaging things up

193
00:12:21,552 --> 00:12:25,370
in this way for consumption, introducing needless abstractions.

194
00:12:25,950 --> 00:12:29,546
But enough of that. I'm definitely going to hell. You can send me all

195
00:12:29,568 --> 00:12:33,182
your hate in the mail. Okay, happy place, Chris. Happy place.

196
00:12:33,236 --> 00:12:35,120
So where was I? Okay, yes.

197
00:12:36,290 --> 00:12:40,126
Through all of this, I can't possibly think of a faster way to

198
00:12:40,148 --> 00:12:43,294
go. From enthusiastic engineers playing with the

199
00:12:43,332 --> 00:12:46,766
new, exciting, shiny tech to deeply unhappy

200
00:12:46,798 --> 00:12:50,194
ones trying to fix something at 04:00 a.m. And before

201
00:12:50,232 --> 00:12:54,158
they can do anything meaningful, they've got an orienteering exercise

202
00:12:54,254 --> 00:12:58,294
to switch mental context to whatever the intended permutation of

203
00:12:58,332 --> 00:13:02,118
things it is that they're meant to be looking at. Meanwhile, your business

204
00:13:02,204 --> 00:13:06,194
value delivering apps are all offline, or perhaps worse,

205
00:13:06,242 --> 00:13:09,658
at breach. Okay, so rewind a

206
00:13:09,664 --> 00:13:12,906
minute. We didn't want any of these things. How do we get

207
00:13:12,928 --> 00:13:15,260
here and what can we do about it?

208
00:13:15,870 --> 00:13:19,340
Honestly? Bin it. Bin it all,

209
00:13:19,970 --> 00:13:23,566
kill it with fire, and then learn

210
00:13:23,668 --> 00:13:27,738
to love vanilla. Vanilla is great and delicious,

211
00:13:27,834 --> 00:13:31,310
too. Does anyone remember kiss?

212
00:13:32,630 --> 00:13:36,226
No, not the band. Keep it stupid simple,

213
00:13:36,328 --> 00:13:39,726
or keep it simple stupid. And embrace

214
00:13:39,758 --> 00:13:43,634
the shared responsibility model on offer. Make your cloud vendors do

215
00:13:43,672 --> 00:13:47,346
more than just provide compute. Turns out, as it happens, they're actually not

216
00:13:47,368 --> 00:13:50,978
that bad at doing it. I'm not daft. I know it's

217
00:13:50,994 --> 00:13:54,626
not sexy and exciting, and you might even find recruitment a bit harder if you're

218
00:13:54,658 --> 00:13:58,246
used to hunting magpies who follow the shiny and don't

219
00:13:58,278 --> 00:14:00,860
like boring stuff, that just works.

220
00:14:02,030 --> 00:14:05,610
So, to answer the question posed by the title of my talk,

221
00:14:05,680 --> 00:14:09,100
is it time to put your Kubernetes cluster down?

222
00:14:09,950 --> 00:14:13,482
Yes, it is. And in the immortal

223
00:14:13,546 --> 00:14:16,894
words of s club seven, if you can bring it on

224
00:14:16,932 --> 00:14:20,570
back immutably from code, all without anyone noticing,

225
00:14:20,650 --> 00:14:24,274
I'm referring to the original version of those lyrics. Of course,

226
00:14:24,472 --> 00:14:28,530
then maybe, just maybe, it can earn the right to stay

227
00:14:28,680 --> 00:14:32,158
to die another day. So I've

228
00:14:32,174 --> 00:14:35,266
been Chris Nesbittsmith. Thank you again for joining me

229
00:14:35,288 --> 00:14:39,414
today and enduring my self loathing. Like subscribe whatever

230
00:14:39,452 --> 00:14:42,994
the kids do on LinkedIn GitHub, and you can be rest assured

231
00:14:43,042 --> 00:14:46,994
there'll be no spam or much content at all. Since I'm awful at self promotion

232
00:14:47,122 --> 00:14:50,546
especially on social media. CNS me just points at my LinkedIn

233
00:14:50,658 --> 00:14:54,166
talks. CNS me contains this and other talks and

234
00:14:54,188 --> 00:14:57,782
they're all open source. Questions are very

235
00:14:57,836 --> 00:15:01,086
welcome on this or anything else. I'll be kind of in

236
00:15:01,108 --> 00:15:05,120
the chat and on LinkedIn if I'm not responding there,

237
00:15:05,570 --> 00:15:08,140
I need to go and have a sit town. Thank you very much.

