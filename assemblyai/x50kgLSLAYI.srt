1
00:00:34,610 --> 00:00:37,750
Hello everyone, thank you for joining this session.

2
00:00:38,170 --> 00:00:41,606
My name is Bervianto Leo Pratama and you can call

3
00:00:41,628 --> 00:00:45,174
me Leo. Today I'm going to talk about why

4
00:00:45,212 --> 00:00:48,742
im moving Dana projects to

5
00:00:48,796 --> 00:00:52,382
the tech project. First of all as I mentioned

6
00:00:52,516 --> 00:00:56,282
my name Bervianto Leo Pratama and you can call me Leo.

7
00:00:56,426 --> 00:00:59,600
I'm a software engineer and

8
00:01:00,050 --> 00:01:04,270
yeah I'm also sometimes with a blog

9
00:01:04,850 --> 00:01:09,522
in devtool so feel free if you want to find

10
00:01:09,576 --> 00:01:13,202
me in dev two you can see my

11
00:01:13,336 --> 00:01:17,494
blog post in there. Other than that I

12
00:01:17,532 --> 00:01:21,766
also active in LinkedIn so if you want to connect with

13
00:01:21,788 --> 00:01:25,254
me or follow me, you can follow me

14
00:01:25,292 --> 00:01:28,710
in LinkedIn with name Birfintola Pratama.

15
00:01:29,070 --> 00:01:33,420
Today we will talk some points, the first points

16
00:01:34,430 --> 00:01:38,074
project goals and after that why

17
00:01:38,112 --> 00:01:41,326
I migrate the project the

18
00:01:41,348 --> 00:01:45,626
migration background also what is my strategy

19
00:01:45,818 --> 00:01:49,406
to migrate from learner to net and

20
00:01:49,428 --> 00:01:53,666
also the current states. So what

21
00:01:53,688 --> 00:01:57,140
the process and what the result.

22
00:01:57,590 --> 00:02:00,770
And also I have some plans

23
00:02:01,510 --> 00:02:05,606
to have more complex maybe or

24
00:02:05,708 --> 00:02:08,150
more features in my surfaces.

25
00:02:08,970 --> 00:02:12,854
And for the last I will

26
00:02:12,892 --> 00:02:16,790
tell you about the lesson learned, the summary

27
00:02:17,470 --> 00:02:21,260
and what I learned from duplication project.

28
00:02:21,790 --> 00:02:25,770
First I will talk about the project goals.

29
00:02:26,270 --> 00:02:29,674
So yeah it's just a simple goal. I want

30
00:02:29,712 --> 00:02:33,134
to create a simple service to manage my

31
00:02:33,172 --> 00:02:37,534
personal passwords or secrets. If you know some

32
00:02:37,572 --> 00:02:41,280
services that similar with this

33
00:02:41,650 --> 00:02:45,030
for example Lastpass or Bitwardern

34
00:02:45,210 --> 00:02:48,274
or anything else. I want to create

35
00:02:48,312 --> 00:02:52,580
a service for myself, a simple service

36
00:02:53,350 --> 00:02:56,440
and I can self host it.

37
00:02:56,810 --> 00:03:00,646
Yeah other than that I

38
00:03:00,668 --> 00:03:04,440
want to have an open source project

39
00:03:04,890 --> 00:03:08,266
for myself. But feel free if

40
00:03:08,288 --> 00:03:12,234
you want to contribute it. And for the last I

41
00:03:12,272 --> 00:03:16,026
want to easy to manage. Well maybe easy to

42
00:03:16,048 --> 00:03:20,762
manage it's relative with you but

43
00:03:20,896 --> 00:03:25,646
for me easy to manage its main I

44
00:03:25,668 --> 00:03:29,754
can handle it with a limited time, I can handle

45
00:03:29,802 --> 00:03:33,906
it and develop it with a limited time.

46
00:03:34,088 --> 00:03:37,940
So the background because my project

47
00:03:38,310 --> 00:03:41,538
in early stages I do not want

48
00:03:41,704 --> 00:03:45,830
have a complex projects for the early stages.

49
00:03:46,490 --> 00:03:49,766
Yeah I think it will better

50
00:03:49,948 --> 00:03:54,070
if I have a simple surface, simple structure

51
00:03:54,730 --> 00:03:58,730
and yeah my prefix structure.

52
00:03:59,630 --> 00:04:03,850
As you can see in the image I have three tier

53
00:04:04,430 --> 00:04:08,250
the first part front end I'm using few js

54
00:04:08,990 --> 00:04:13,760
and for the back end part I'm using filter js and

55
00:04:14,450 --> 00:04:16,990
for the last I'm using database.

56
00:04:17,730 --> 00:04:21,582
Basically I need to change

57
00:04:21,636 --> 00:04:25,220
the context in my mind because

58
00:04:26,070 --> 00:04:29,620
in my daily basis im using net.

59
00:04:30,710 --> 00:04:34,434
So it will need

60
00:04:34,632 --> 00:04:38,818
I mean I need more time to change the context.

61
00:04:38,994 --> 00:04:42,946
I need to learn how to coding with node

62
00:04:42,978 --> 00:04:46,550
js, how to coding with vgs

63
00:04:47,050 --> 00:04:50,842
and when I coding with

64
00:04:50,976 --> 00:04:54,506
front end maybe I will need change my

65
00:04:54,528 --> 00:04:57,706
context to backend. As you

66
00:04:57,728 --> 00:05:01,398
can see my preface structures,

67
00:05:01,574 --> 00:05:05,600
if you are already familiar with letter structures, is like

68
00:05:06,850 --> 00:05:10,542
the first part using packages and after

69
00:05:10,596 --> 00:05:13,890
that in front end using

70
00:05:14,040 --> 00:05:18,066
from end folder and also for the back

71
00:05:18,088 --> 00:05:21,794
end using back end folder. So it's basically have two

72
00:05:21,832 --> 00:05:26,100
projects. But the question is

73
00:05:26,790 --> 00:05:28,710
how the deployment target.

74
00:05:29,130 --> 00:05:32,694
So I was

75
00:05:32,732 --> 00:05:36,722
thinking about one year for this deployment

76
00:05:36,786 --> 00:05:40,550
strategy and also CiCD strategy

77
00:05:40,710 --> 00:05:44,154
because I have a limited time so

78
00:05:44,192 --> 00:05:47,914
I never implement it because it's really hard

79
00:05:47,952 --> 00:05:51,694
to manage multiple projects. That is why the

80
00:05:51,732 --> 00:05:54,190
last question how about the capacities?

81
00:05:55,090 --> 00:05:58,880
Well, because I have a limited time

82
00:05:59,330 --> 00:06:03,234
and this project only be

83
00:06:03,432 --> 00:06:07,010
so I decided to migrate.

84
00:06:07,510 --> 00:06:09,650
This is the migration strategies.

85
00:06:10,550 --> 00:06:14,610
First I will use analytic.

86
00:06:15,610 --> 00:06:20,200
Why monolithic? Maybe most of you will say

87
00:06:21,530 --> 00:06:24,310
I think better using microservices,

88
00:06:25,290 --> 00:06:29,162
but for myself with a limited time

89
00:06:29,296 --> 00:06:32,330
it will hard to manage microservices.

90
00:06:33,630 --> 00:06:37,526
So I will choose monolithic

91
00:06:37,718 --> 00:06:40,560
and two tier web applications.

92
00:06:41,010 --> 00:06:43,390
So as you can see in the diagram,

93
00:06:44,770 --> 00:06:48,462
I choose web app and also have

94
00:06:48,516 --> 00:06:52,000
other database in separate services.

95
00:06:52,790 --> 00:06:56,782
Why I'm using monolithic because it's

96
00:06:56,926 --> 00:07:00,660
more manageable for a person with limited time.

97
00:07:01,110 --> 00:07:04,942
I know if we have more

98
00:07:05,016 --> 00:07:08,166
modules, more services, it will

99
00:07:08,268 --> 00:07:10,710
hard to manage the monolithic.

100
00:07:11,290 --> 00:07:15,302
But because the project in the first stages are

101
00:07:15,356 --> 00:07:19,582
really simple, I think it will better using monolithic

102
00:07:19,746 --> 00:07:23,546
and also why I decided using net because

103
00:07:23,568 --> 00:07:27,674
I already familiar with it. Well the structure also

104
00:07:27,872 --> 00:07:29,930
happens similar pattern with Lerna.

105
00:07:33,250 --> 00:07:36,830
You can have multiple projects in one repo.

106
00:07:38,130 --> 00:07:42,554
Yeah we can say it's a mono repo Internet

107
00:07:42,602 --> 00:07:46,610
have a some structure. It will have some structure

108
00:07:47,430 --> 00:07:51,540
well so it will more easy for me

109
00:07:51,910 --> 00:07:54,500
to migrate into the net.

110
00:07:55,210 --> 00:07:59,510
So the current state the

111
00:07:59,580 --> 00:08:03,910
application is already deployed to AWS.

112
00:08:04,810 --> 00:08:08,950
Im using Azure DevOps for pipelines.

113
00:08:09,610 --> 00:08:14,090
I'm using Amazon ACR to host the Docker image.

114
00:08:14,830 --> 00:08:18,490
So the web app I containers

115
00:08:18,910 --> 00:08:22,138
using Docker and push

116
00:08:22,154 --> 00:08:26,430
the docker image into Amazon easier.

117
00:08:28,050 --> 00:08:31,600
Also I will host my web application

118
00:08:32,690 --> 00:08:36,174
into AWS app runner. It will use

119
00:08:36,292 --> 00:08:39,780
Docker image from Amazon easier. As I mentioned,

120
00:08:40,950 --> 00:08:44,580
the repository is opensource. Feel free to

121
00:08:45,130 --> 00:08:49,430
contribute or give feedback in the repository.

122
00:08:50,250 --> 00:08:54,614
You can check in the link for the next I

123
00:08:54,652 --> 00:08:57,914
want to apply clean

124
00:08:57,952 --> 00:09:02,940
architecture basically because

125
00:09:03,470 --> 00:09:07,210
it's mixed between infrastructure,

126
00:09:08,270 --> 00:09:12,446
the few or the

127
00:09:12,468 --> 00:09:16,010
business context. I want to separate

128
00:09:16,170 --> 00:09:20,094
the business context with the infrastructure like

129
00:09:20,132 --> 00:09:22,750
databases or the API.

130
00:09:23,910 --> 00:09:28,354
Yeah, always step by step to

131
00:09:28,392 --> 00:09:31,570
migrate to be more modular.

132
00:09:32,310 --> 00:09:36,194
Okay, so what I

133
00:09:36,232 --> 00:09:39,854
learned from migrating right now to.

134
00:09:39,912 --> 00:09:45,174
Net yeah, I think it

135
00:09:45,212 --> 00:09:48,186
cannot be applied to most of you,

136
00:09:48,368 --> 00:09:52,486
but I want to say if you want to rescoping

137
00:09:52,678 --> 00:09:55,580
your project, it's completely fine.

138
00:09:56,030 --> 00:09:59,914
If want to rescoping your project based

139
00:09:59,952 --> 00:10:03,600
on your offer data and also your needs,

140
00:10:04,290 --> 00:10:06,750
feel free to scoping.

141
00:10:07,490 --> 00:10:11,422
Don't think the best practice using

142
00:10:11,476 --> 00:10:15,394
microservices is fine if you

143
00:10:15,432 --> 00:10:19,666
want to use monolith well, so I

144
00:10:19,688 --> 00:10:24,066
think it's completely fine. It's okay if

145
00:10:24,088 --> 00:10:28,100
you want to use monolith in your first state

146
00:10:28,630 --> 00:10:32,406
donut, and you

147
00:10:32,428 --> 00:10:36,486
can migrate it step by step into microservices if

148
00:10:36,508 --> 00:10:38,840
you want to. All right,

149
00:10:39,690 --> 00:10:43,030
that's all from me. Thank you for joining this session.

150
00:10:43,690 --> 00:10:47,480
If want to connect with me, feel free to connect with me.

151
00:10:48,010 --> 00:10:51,150
In LinkedIn we can pratama.

152
00:10:51,650 --> 00:10:55,406
Also you can connect with me in dev two the

153
00:10:55,428 --> 00:10:58,860
same name befriend. Thank you everyone.

