1
00:00:20,570 --> 00:00:24,982
Hi everyone. So my name is Clem Oba and welcome to this

2
00:00:25,156 --> 00:00:28,994
talk about bringing ActivityPub to knowledge management with Xwiki.

3
00:00:29,122 --> 00:00:32,454
So, as the title says, today we are going to take a look

4
00:00:32,492 --> 00:00:36,354
at basically how we can use a protocol

5
00:00:36,402 --> 00:00:39,466
that is mostly made for social interaction in

6
00:00:39,488 --> 00:00:43,210
order to integrate with a software that is dedicated to knowledge management.

7
00:00:44,110 --> 00:00:46,858
So let's go over very quickly,

8
00:00:46,944 --> 00:00:50,378
but let's go over the agenda, the things that

9
00:00:50,384 --> 00:00:53,646
we want to cover today. So in the

10
00:00:53,668 --> 00:00:57,246
first part of this talk, we will have a quick overview of what

11
00:00:57,268 --> 00:01:00,430
is activitypub. If you don't know what is Xwiki,

12
00:01:01,570 --> 00:01:05,130
give a bit of context about this integration

13
00:01:05,210 --> 00:01:08,902
between the two. The integration of ActivityPub within Xwiki.

14
00:01:09,066 --> 00:01:12,786
We'll talk a bit about the features that we currently provide as

15
00:01:12,808 --> 00:01:16,162
part of this project. And as part of that, I hope that

16
00:01:16,216 --> 00:01:19,846
we'll be able to make a demo that will work and

17
00:01:19,868 --> 00:01:22,280
then we will talk a bit about, well,

18
00:01:23,370 --> 00:01:27,094
where we want to bring this project. In the end, what are the next

19
00:01:27,132 --> 00:01:32,154
steps that we want to do in terms for integrating with the

20
00:01:32,192 --> 00:01:35,786
activity per protocol Xwiki. And in the end, I will give some

21
00:01:35,808 --> 00:01:39,110
resources about, well, if you want to go further

22
00:01:39,190 --> 00:01:43,006
experiment with this integration, try to see if

23
00:01:43,028 --> 00:01:46,350
it works for your use cases you will have some links

24
00:01:47,650 --> 00:01:51,454
to use. Okay, so just before we

25
00:01:51,492 --> 00:01:55,518
start, who am I? My name is Clemor. As I said, I'm working at Xwiki

26
00:01:55,534 --> 00:01:58,866
SAS, which is the main company sponsoring the

27
00:01:58,888 --> 00:02:01,970
Xwiki project since 2016.

28
00:02:04,870 --> 00:02:07,800
I've been open source for quite a while now.

29
00:02:08,330 --> 00:02:11,814
I'm working mostly on Xwiki of course, but also now

30
00:02:11,852 --> 00:02:15,702
the projects such as passboard open facts for

31
00:02:15,756 --> 00:02:19,850
them. And so if you want to contact

32
00:02:19,920 --> 00:02:22,700
me, you have my Twitter handle and also my email.

33
00:02:24,750 --> 00:02:27,850
So let's talk very quickly about activitypub.

34
00:02:28,270 --> 00:02:32,462
Activity pub is a decentralized social networking protocol which

35
00:02:32,516 --> 00:02:35,710
we saw the first activity around 2016.

36
00:02:36,610 --> 00:02:39,822
The idea behind this protocol is really to help

37
00:02:39,876 --> 00:02:43,962
creating social enabled federated applications

38
00:02:44,106 --> 00:02:47,490
that will allow different actors to communicate between each other,

39
00:02:47,560 --> 00:02:50,914
but in a federated manner. One big

40
00:02:50,952 --> 00:02:54,946
milestone of the activitypub protocol is of course that it was recommended by W

41
00:02:55,048 --> 00:02:58,806
three C in early 2018. So now we have a living standard on

42
00:02:58,828 --> 00:03:02,726
which we can iterate. And it's actually very interesting

43
00:03:02,908 --> 00:03:06,294
so that we can build applications that will work

44
00:03:06,332 --> 00:03:10,006
on a stable version of

45
00:03:10,028 --> 00:03:10,760
this standard.

46
00:03:12,650 --> 00:03:17,110
Going a bit more in depth about the specifics of ActivityPub.

47
00:03:18,090 --> 00:03:21,374
So here is a very good schema that comes from

48
00:03:21,412 --> 00:03:24,080
activitypub.org orgs, the official website,

49
00:03:24,770 --> 00:03:28,398
which explains very basically how the

50
00:03:28,404 --> 00:03:32,720
protocol works. So you have multiple actors, which is a digital girl here,

51
00:03:33,590 --> 00:03:37,362
that have the possibilities to either send messages or

52
00:03:37,416 --> 00:03:41,140
receive messages, and you can send messages to basically anyone

53
00:03:42,310 --> 00:03:46,066
on a different instance, on a different software

54
00:03:46,098 --> 00:03:50,166
platform than the one that you are using. And if the

55
00:03:50,188 --> 00:03:55,766
software platform at the other end handles the

56
00:03:55,788 --> 00:03:58,554
message that you want to send, well,

57
00:03:58,752 --> 00:04:00,700
it will get it delivered, basically.

58
00:04:03,150 --> 00:04:06,474
So currently, activity pub, so we don't have

59
00:04:06,592 --> 00:04:10,038
very much implementations of the protocol in a lot

60
00:04:10,064 --> 00:04:13,806
of solutions. However, we were starting to see

61
00:04:13,828 --> 00:04:17,706
it. So for example, we have NextCloud, which implemented

62
00:04:17,818 --> 00:04:21,326
its federated file sharing architecture based

63
00:04:21,348 --> 00:04:24,766
on ActivityPub. So it's

64
00:04:24,798 --> 00:04:29,506
quite interesting actually, because it's one of the first actors that

65
00:04:29,528 --> 00:04:33,060
is related to document sharing that did that.

66
00:04:33,590 --> 00:04:37,158
We also have Mastodon, which is completely

67
00:04:37,244 --> 00:04:39,000
based on ActivityPub actually,

68
00:04:42,570 --> 00:04:46,342
which uses the protocol really for its

69
00:04:46,396 --> 00:04:50,386
initial purpose, I would say, which is basically sharing messages between users.

70
00:04:50,498 --> 00:04:54,186
And more recently we've seen Peachube coming up, which is

71
00:04:54,208 --> 00:04:57,750
a software that was developed by a french non for profit organization,

72
00:04:57,910 --> 00:04:59,930
which is called Framasoft,

73
00:05:00,510 --> 00:05:04,106
which aims to be kind of a drop in replacement

74
00:05:04,138 --> 00:05:08,400
to YouTube, but in a decentralized manner. You have the possibility to

75
00:05:09,010 --> 00:05:12,640
set up your own instance and share your videos

76
00:05:13,350 --> 00:05:16,770
across instances using a federation.

77
00:05:17,430 --> 00:05:20,594
So if you want to see more implementations of

78
00:05:20,632 --> 00:05:24,622
ActivityPub, actually what would be interesting is to look at the implementation

79
00:05:24,686 --> 00:05:28,434
report of ActivityPub trucks, which lists all the implementations

80
00:05:28,482 --> 00:05:31,846
that are well known and kind of stable that

81
00:05:31,868 --> 00:05:34,230
you might find in other open source software.

82
00:05:37,050 --> 00:05:39,660
Now, moving on. Xwiki. So,

83
00:05:40,030 --> 00:05:42,380
Xwiki, it's a wiki engine.

84
00:05:43,470 --> 00:05:46,582
So a bit like what you would see with media Xwiki,

85
00:05:46,646 --> 00:05:50,106
which is the wiki engine for wikipedia. The main difference that we

86
00:05:50,128 --> 00:05:55,006
have with other Xwiki engine is that it

87
00:05:55,028 --> 00:05:58,926
has the possibility to contain structured data, which is not something that will be

88
00:05:59,028 --> 00:06:01,754
very much of interest as part of this conference.

89
00:06:01,882 --> 00:06:05,714
However, it's interesting if you want to store

90
00:06:05,912 --> 00:06:09,154
multiple documents that contain the same kind

91
00:06:09,192 --> 00:06:12,526
of information. So for example, if you want to store meeting notes,

92
00:06:12,718 --> 00:06:15,986
you might want to say, okay, my meeting note will contain a title,

93
00:06:16,018 --> 00:06:19,240
a description, can author a date where it was done,

94
00:06:20,090 --> 00:06:23,574
maybe a list of users that participated to that

95
00:06:23,612 --> 00:06:26,770
meeting. And you have the possibilities to very easily

96
00:06:26,850 --> 00:06:30,646
create kind of pages with forms, with input

97
00:06:30,678 --> 00:06:34,438
fields that correspond to what you need. So this is one part of Xwiki,

98
00:06:34,454 --> 00:06:37,818
and another part is the extensibility of

99
00:06:37,824 --> 00:06:41,798
the software. So currently we have around 700 extensions that

100
00:06:41,824 --> 00:06:45,950
are provided by the community that will allow basically

101
00:06:46,020 --> 00:06:49,454
Xwiki to be very adapted to what you would

102
00:06:49,492 --> 00:06:53,006
need if you want to connect it to a third party software, if you

103
00:06:53,028 --> 00:06:56,466
want to change the behavior of your wiki to match what

104
00:06:56,488 --> 00:07:00,910
you want to do. Basically that can be done through extensions,

105
00:07:01,070 --> 00:07:04,898
and it makes it so that Xwiki is used for

106
00:07:05,064 --> 00:07:08,674
many different applications. It can go from the most basic

107
00:07:08,722 --> 00:07:12,514
knowledge management platform, so very wiki, well, very documentation

108
00:07:12,562 --> 00:07:16,166
like. It can also help for addressing long

109
00:07:16,188 --> 00:07:19,274
tail applications which are notifications on which you

110
00:07:19,312 --> 00:07:22,906
can. I would say you

111
00:07:22,928 --> 00:07:26,858
don't have a lot of budget to implement a

112
00:07:26,864 --> 00:07:30,150
custom solution that will be developed made by developer.

113
00:07:30,230 --> 00:07:34,046
However, you have some time and you can kind of automate some

114
00:07:34,068 --> 00:07:37,358
part of this application for storing some kind

115
00:07:37,364 --> 00:07:40,986
of information. Here in Xwiki, we provide some tools

116
00:07:41,018 --> 00:07:44,674
to help you do that. And we can also use it, of course, for more

117
00:07:44,712 --> 00:07:48,366
business specific use cases. And so what's

118
00:07:48,398 --> 00:07:51,794
interesting is that as part of this

119
00:07:51,912 --> 00:07:56,290
talk, we'll be talking about an extension of Xwiki

120
00:07:57,430 --> 00:08:00,834
which does the integration of the activitypub protocol within

121
00:08:00,872 --> 00:08:04,390
Xwiki. It's not something that is provided by default on the software.

122
00:08:04,970 --> 00:08:08,650
It's something that you have to go into the administration of your wiki

123
00:08:09,550 --> 00:08:12,810
and download the extension and install it.

124
00:08:12,880 --> 00:08:15,514
But the download and installation phase is quite quick,

125
00:08:15,552 --> 00:08:19,286
actually. So now let's

126
00:08:19,318 --> 00:08:23,166
talk a bit more about our project. Let's give a

127
00:08:23,188 --> 00:08:26,782
bit of context. So this project was developed and

128
00:08:26,916 --> 00:08:29,550
it was funded by the NLNet foundation,

129
00:08:30,130 --> 00:08:33,886
which provides some funds to

130
00:08:33,908 --> 00:08:36,978
funds which are called NgI Zero and NGI Trust,

131
00:08:37,064 --> 00:08:40,946
if I'm not mistaken, which help to fund

132
00:08:41,128 --> 00:08:44,546
innovative Internet projects. And it's as

133
00:08:44,568 --> 00:08:49,286
part of this project that we got to develop the

134
00:08:49,308 --> 00:08:53,094
integration between Activitypub and Xwiki. The main

135
00:08:53,132 --> 00:08:56,946
part of the integration was done by Simon Yurli and Manuel

136
00:08:56,978 --> 00:09:00,666
Luduk, which are two Xwiki committees working on

137
00:09:00,688 --> 00:09:04,186
the project for quite some time. And the

138
00:09:04,208 --> 00:09:08,102
main goal of this project is actually to have a glimpse

139
00:09:08,166 --> 00:09:12,510
of what it takes to enable decentralized

140
00:09:12,850 --> 00:09:16,414
knowledge sharing. It can be documents, it can be any

141
00:09:16,532 --> 00:09:21,646
kind of information, not especially based

142
00:09:21,748 --> 00:09:25,550
directly on your user to user interaction,

143
00:09:25,630 --> 00:09:29,422
but more based on an interaction

144
00:09:29,486 --> 00:09:32,990
between a source of knowledge and another source of knowledge

145
00:09:33,070 --> 00:09:36,470
that we will try to interconnect through the activity protocol

146
00:09:37,210 --> 00:09:40,566
and more technically. So the idea was also to be

147
00:09:40,588 --> 00:09:45,494
able to have cross wiki intercommunication through

148
00:09:45,532 --> 00:09:49,158
this protocol, which is currently done, and we will see

149
00:09:49,164 --> 00:09:52,746
it in a couple of minutes, be able to follow the

150
00:09:52,768 --> 00:09:55,420
activity of a user from one wiki to another,

151
00:09:56,510 --> 00:09:59,894
be able to follow the activitypub also of a full wiki.

152
00:09:59,942 --> 00:10:03,430
So by full wiki. I mean, if you have, imagine that

153
00:10:03,440 --> 00:10:06,874
you have a public wiki that is accessible from everywhere

154
00:10:06,922 --> 00:10:10,414
and you want to get notified when there is a change that

155
00:10:10,452 --> 00:10:14,098
is being done on a given document. That's the idea.

156
00:10:14,264 --> 00:10:17,506
And also another goal was to start working on

157
00:10:17,528 --> 00:10:21,326
the integration with third party platforms.

158
00:10:21,518 --> 00:10:25,250
So third party platforms mostly because one of

159
00:10:25,320 --> 00:10:28,886
the key goals that we have with this project, as I said, is be

160
00:10:28,908 --> 00:10:33,686
able to ease the flow of information between one

161
00:10:33,708 --> 00:10:36,966
source of information and the people that will use

162
00:10:37,068 --> 00:10:40,730
this information. And that's what we are trying to achieve.

163
00:10:44,190 --> 00:10:47,850
So if we look at the functionalities that we have currently

164
00:10:47,920 --> 00:10:51,340
and that we will see in the demo just after

165
00:10:52,130 --> 00:10:55,742
what we provide currently, is the possibility to have messaging between

166
00:10:55,796 --> 00:10:58,926
users. So the

167
00:10:58,948 --> 00:11:01,982
possibility to have one user that sends a message,

168
00:11:02,116 --> 00:11:04,260
well, from one wiki to another,

169
00:11:06,310 --> 00:11:09,410
which is basically default implementation of activitypub.

170
00:11:10,470 --> 00:11:13,330
What activitypub was made for initially,

171
00:11:15,110 --> 00:11:18,770
then the possibility to share documents.

172
00:11:18,850 --> 00:11:22,550
So from one instance I can share a document to another instance

173
00:11:22,970 --> 00:11:26,840
so that a user can see it, maybe a follower can see it, for example.

174
00:11:28,330 --> 00:11:31,446
We also rely on the notification system of Xwiki.

175
00:11:31,478 --> 00:11:35,142
So what we will see is that we have plenty of rooms for defining

176
00:11:35,206 --> 00:11:40,070
whether or not you want to get notified about some

177
00:11:40,160 --> 00:11:42,510
events on the fediverse.

178
00:11:43,890 --> 00:11:47,002
And as part of the document sharing feature,

179
00:11:47,066 --> 00:11:50,794
indeed, we also have the possibility to view a remote

180
00:11:50,842 --> 00:11:54,654
document. There is one functionality that I did not mention here,

181
00:11:54,692 --> 00:11:58,366
which is also important, is that we now have the possibility to follow what

182
00:11:58,388 --> 00:12:01,614
we call a Xwiki sas that I talked about

183
00:12:01,652 --> 00:12:05,654
in the previous slide, which is the possibility to basically be

184
00:12:05,852 --> 00:12:10,134
informed of the news that happened

185
00:12:10,332 --> 00:12:11,800
on a specific week.

186
00:12:14,410 --> 00:12:17,720
So let's switch now on a demo,

187
00:12:20,650 --> 00:12:24,506
I'm going to switch in full screen so that you can get a

188
00:12:24,528 --> 00:12:28,330
clear view of my screen. So for this demo,

189
00:12:28,400 --> 00:12:30,730
of course, I will need two Xwiki instances.

190
00:12:31,810 --> 00:12:34,862
They will be side by side so that you can see them.

191
00:12:34,916 --> 00:12:37,870
And I'm going to try also to reduce,

192
00:12:40,210 --> 00:12:43,326
yes, the size of my browser window so that you

193
00:12:43,348 --> 00:12:45,140
can get a bit more content.

194
00:12:46,390 --> 00:12:50,222
On the left side, you will have one wiki which is called Xwiki one coband

195
00:12:50,286 --> 00:12:53,998
fr, and you will have a second wiki which is Xwiki

196
00:12:54,014 --> 00:12:57,366
two coband fr on the right side. And I will try

197
00:12:57,388 --> 00:13:01,320
to keep this disposition during the demo.

198
00:13:01,930 --> 00:13:05,126
As you can see that the wiki on the left has

199
00:13:05,308 --> 00:13:08,746
a blue bar and the wiki on the

200
00:13:08,768 --> 00:13:11,900
right has a black bar on the top.

201
00:13:12,430 --> 00:13:16,540
We are logged in with two users here.

202
00:13:17,310 --> 00:13:21,706
And one thing that I did as

203
00:13:21,728 --> 00:13:25,514
part of the preparation of this demonstration is that I have installed the activity

204
00:13:25,562 --> 00:13:28,154
pub integration on my wiki.

205
00:13:28,282 --> 00:13:31,950
So if I go in the administration of the wiki in the extensions,

206
00:13:36,270 --> 00:13:39,690
I have the possibility to search in all extensions

207
00:13:41,070 --> 00:13:44,774
and search for activity

208
00:13:44,822 --> 00:13:53,290
publish.

209
00:13:56,370 --> 00:13:59,834
Okay, and here we have the integration which

210
00:13:59,892 --> 00:14:03,394
is well already installed here, but you can install it from

211
00:14:03,432 --> 00:14:07,314
there. Once this integration is

212
00:14:07,352 --> 00:14:11,380
set up, we already have a couple of information

213
00:14:12,390 --> 00:14:16,330
that are brought in the wiki administration through the activitypub

214
00:14:16,430 --> 00:14:22,854
section. And here we have some

215
00:14:22,892 --> 00:14:26,406
information about what should be the follow policy of a wiki.

216
00:14:26,438 --> 00:14:29,974
Should we accept or reject follow request

217
00:14:30,022 --> 00:14:33,466
by default, knowing that the

218
00:14:33,488 --> 00:14:37,286
user itself that will get this

219
00:14:37,328 --> 00:14:40,606
is a setting that will apply only when you

220
00:14:40,628 --> 00:14:43,070
try to follow a wiki.

221
00:14:45,090 --> 00:14:48,846
If you want to follow a specific users, we will have a different workflow for

222
00:14:48,868 --> 00:14:52,254
that. We can define a manager,

223
00:14:52,302 --> 00:14:55,380
a group manager for the wiki of course,

224
00:14:57,750 --> 00:15:01,620
and how we handle notifications at the wiki level,

225
00:15:04,090 --> 00:15:07,190
going more into a standard user provide.

226
00:15:09,050 --> 00:15:13,282
So this is the profile of Alice. If I go in the notifications

227
00:15:13,346 --> 00:15:16,698
part of my profile, I can see that I have a couple of options

228
00:15:16,784 --> 00:15:20,374
that appeared that appeared with the installation

229
00:15:20,422 --> 00:15:24,090
of the extension. And here I can tune

230
00:15:24,430 --> 00:15:29,486
how I want to get notified about a

231
00:15:29,508 --> 00:15:32,638
new action on activity pub. I can choose to

232
00:15:32,644 --> 00:15:36,586
be notified by email. For example, here I've left only notifications

233
00:15:36,698 --> 00:15:40,250
within Xwiki that are enabled by default

234
00:15:40,330 --> 00:15:43,610
so that we get all the information from the web UI.

235
00:15:43,770 --> 00:15:47,460
However, you can still define what you want to receive by email

236
00:15:48,470 --> 00:15:51,794
and we can see also the kind of notifications that we will get.

237
00:15:51,912 --> 00:15:53,510
So announcements,

238
00:15:55,370 --> 00:16:00,854
creation of documents, follow requests, message and

239
00:16:01,052 --> 00:16:02,470
update requests.

240
00:16:04,170 --> 00:16:08,934
Finally, we have another tab which is the activitypub

241
00:16:09,062 --> 00:16:13,340
tab, which allows to manage

242
00:16:13,870 --> 00:16:17,414
what are the followers and the persons that

243
00:16:17,552 --> 00:16:21,694
this user is allowing. And so this is actually one

244
00:16:21,732 --> 00:16:25,326
of the first elements that we'll look at

245
00:16:25,348 --> 00:16:28,702
it from

246
00:16:28,756 --> 00:16:32,646
there. I can say okay, let's start following

247
00:16:32,778 --> 00:16:33,570
Bob,

248
00:16:35,670 --> 00:16:39,534
which is in the other Xwiki. I'm going to take the user

249
00:16:39,582 --> 00:16:42,130
identifier of Bob,

250
00:16:42,810 --> 00:16:44,710
which is also in this profile.

251
00:16:50,010 --> 00:16:53,654
Let's copy it and

252
00:16:53,692 --> 00:16:57,962
let's paste it here. Okay, so let's select it

253
00:16:58,096 --> 00:16:59,500
and click on follow.

254
00:17:02,190 --> 00:17:05,418
Takes a bit of time. Now we've sent a

255
00:17:05,424 --> 00:17:09,578
following request to Bob, so let's refresh

256
00:17:09,594 --> 00:17:11,280
the page on Bob's site.

257
00:17:14,630 --> 00:17:17,570
And now we should be getting a small notification.

258
00:17:19,830 --> 00:17:22,610
Okay, so one direction received.

259
00:17:24,230 --> 00:17:27,986
So no, Alice is

260
00:17:28,008 --> 00:17:28,950
now following.

261
00:17:31,370 --> 00:17:35,074
Well, let's say that Bob wants to follow back Alice.

262
00:17:35,122 --> 00:17:39,130
He just wants to check if it's fine with her.

263
00:17:39,280 --> 00:17:59,700
So let's write a new message to Alice it

264
00:18:06,960 --> 00:18:08,190
message sent.

265
00:18:13,350 --> 00:18:15,540
And we'll get a notification button.

266
00:18:17,850 --> 00:18:20,920
So I get one message,

267
00:18:25,690 --> 00:18:29,206
and I have the content of my message that is here and the author

268
00:18:29,238 --> 00:18:33,338
of the message here. I can also get the message

269
00:18:33,424 --> 00:18:37,260
listed here in the received message section of my.

270
00:18:41,970 --> 00:18:45,242
So let's admit that we got this conversation

271
00:18:45,306 --> 00:18:48,750
sorted out. So Bob can now follow Alice.

272
00:18:56,520 --> 00:18:57,830
And there we go.

273
00:18:59,720 --> 00:19:02,070
Now the two are following themselves.

274
00:19:04,200 --> 00:19:07,768
What's also interesting is that, so now when

275
00:19:07,854 --> 00:19:11,176
Alice wants to send a new message, it will

276
00:19:11,198 --> 00:19:17,480
have the possibilities to define

277
00:19:18,380 --> 00:19:21,988
to who the message should be sent. It can be a specific user.

278
00:19:22,004 --> 00:19:25,624
So for example, Bob, as I said, but it can be also all the followers

279
00:19:25,672 --> 00:19:29,004
of Alice, and it could also be like public.

280
00:19:29,122 --> 00:19:33,164
I want anyone that has access to the message to get

281
00:19:33,202 --> 00:19:36,780
it. And this is implementing the concept of collections

282
00:19:36,940 --> 00:19:40,560
with an activitypub. Okay, so the message

283
00:19:40,630 --> 00:19:45,136
feature in itself is something that

284
00:19:45,158 --> 00:19:48,224
is very oriented through, well,

285
00:19:48,342 --> 00:19:51,788
I would say axed

286
00:19:51,884 --> 00:19:55,796
through social features. Now, one of

287
00:19:55,818 --> 00:19:59,224
the things that we tried to implement within Xwiki is the possibilities to, for example,

288
00:19:59,342 --> 00:20:03,370
share a page with a different

289
00:20:03,740 --> 00:20:07,384
entity in another wiki. I'm just going to clear my

290
00:20:07,422 --> 00:20:12,732
notifications here and

291
00:20:12,786 --> 00:20:13,390
there.

292
00:20:17,120 --> 00:20:19,310
Very good. So,

293
00:20:23,920 --> 00:20:27,264
so for example, if I'm on, if I, if I'm on

294
00:20:27,302 --> 00:20:30,850
any page of the Xwiki, and I will take the home page here, for example,

295
00:20:32,020 --> 00:20:35,172
what we have is the possibility to say,

296
00:20:35,226 --> 00:20:38,484
okay, here is my document, I want to share it with

297
00:20:38,522 --> 00:20:42,304
one specific user. So let's say Bob

298
00:20:42,352 --> 00:20:47,604
once again share

299
00:20:47,642 --> 00:20:48,230
it.

300
00:21:01,480 --> 00:21:05,750
And now what we see is that we have this share event that comes up

301
00:21:06,200 --> 00:21:10,196
in bud interface. And actually, so we see that a document

302
00:21:10,228 --> 00:21:13,256
was shared. If we click on the document, we will get to the document on

303
00:21:13,278 --> 00:21:16,984
the other instance, which is something that, so sometimes you may have access

304
00:21:17,022 --> 00:21:20,588
to the document, sometimes not. And if you want to have a direct access to

305
00:21:20,594 --> 00:21:23,788
the page and not go in the other instance, you can directly click on

306
00:21:23,794 --> 00:21:27,004
it and you get an HTML preview of what the

307
00:21:27,042 --> 00:21:30,030
page that we share was.

308
00:21:37,380 --> 00:21:41,110
So now, as I said, we have the possibility also to

309
00:21:45,640 --> 00:21:50,244
follow a wiki or try

310
00:21:50,282 --> 00:21:53,752
to interconnect wikis between

311
00:21:53,806 --> 00:21:58,104
themselves. So the idea is that here

312
00:21:58,142 --> 00:22:02,216
I am in a group that is the administrators of

313
00:22:02,238 --> 00:22:06,040
the wiki, which is also marked as the group managing

314
00:22:06,620 --> 00:22:09,340
the activity bug wiki actor.

315
00:22:11,200 --> 00:22:14,604
So I have the possibility, for example, as Alice, to say,

316
00:22:14,642 --> 00:22:18,068
okay, I want to control activitypub

317
00:22:18,184 --> 00:22:21,948
as part of the current wiki.

318
00:22:22,124 --> 00:22:25,676
And what I get is an interface

319
00:22:25,708 --> 00:22:28,896
that is very much like the one that we saw in the

320
00:22:28,918 --> 00:22:32,880
user profile previously. But here that will allow

321
00:22:33,030 --> 00:22:38,164
me to manage how

322
00:22:38,202 --> 00:22:41,652
I'm communicating from the wiki itself. So for example,

323
00:22:41,706 --> 00:22:45,370
when there is a document that has been modified or something like that.

324
00:22:45,820 --> 00:22:49,530
So there is actually one element that I did not

325
00:22:50,140 --> 00:23:02,358
showed you, which can be of interest here.

326
00:23:02,444 --> 00:23:07,142
So I'm editing a page as

327
00:23:07,196 --> 00:23:07,910
Alice.

328
00:23:19,620 --> 00:23:24,854
Okay, I've just saved and

329
00:23:24,892 --> 00:23:28,746
now Bob gets a new event about

330
00:23:28,848 --> 00:23:32,826
a page that has been modified by Alice and we

331
00:23:32,848 --> 00:23:36,522
get the message this is just one element, so it's not really

332
00:23:36,576 --> 00:23:40,462
related to what I was starting to talk about, which is the possibilities to

333
00:23:40,596 --> 00:23:44,266
follow wiki. It's just based on the fact that Bob follows

334
00:23:44,298 --> 00:23:48,362
Alice. And so as such he gets notified

335
00:23:48,426 --> 00:23:54,686
when there are some changes in the wiki. So let's

336
00:23:54,718 --> 00:23:58,274
try something else. So for example here I'm going to switch as the

337
00:23:58,312 --> 00:24:01,474
current wiki actor and I'm going to go

338
00:24:01,512 --> 00:24:05,430
with a different user on activity on the second wiki.

339
00:24:08,410 --> 00:24:14,582
Let's log in as

340
00:24:14,636 --> 00:24:22,020
another administrator and

341
00:24:24,710 --> 00:24:28,114
let's go for current wiki. And now

342
00:24:28,152 --> 00:24:32,706
what I want to say is that as an administrator

343
00:24:32,898 --> 00:24:37,026
I would like to follow a whole wiki.

344
00:24:37,218 --> 00:24:43,846
So every modification that can be done on

345
00:24:43,868 --> 00:24:50,810
the exweky one command fr so

346
00:24:50,960 --> 00:24:55,738
I can send a

347
00:24:55,744 --> 00:24:59,194
follow request here you can see

348
00:24:59,392 --> 00:25:03,294
some tries that I did just before this presentation and

349
00:25:03,332 --> 00:25:06,190
now. So here I'm still connected as Alice.

350
00:25:07,990 --> 00:25:11,486
If I'm editing well, let's say same, let's edit

351
00:25:11,518 --> 00:25:12,660
the sandbox page.

352
00:25:22,970 --> 00:25:26,982
Then at that point this

353
00:25:27,036 --> 00:25:29,590
administrator user should also be notified.

354
00:25:34,250 --> 00:25:35,000
Yes,

355
00:25:51,190 --> 00:25:54,306
notification took a bit of time to

356
00:25:54,328 --> 00:25:57,874
come up here, and so here we have the

357
00:25:57,912 --> 00:25:59,140
notification itself.

358
00:26:05,030 --> 00:26:08,370
It okay, so here what you saw

359
00:26:08,440 --> 00:26:11,746
is kind of a glance of what we can do

360
00:26:11,768 --> 00:26:15,990
currently. And what's kind of interesting is that with the possibility

361
00:26:16,110 --> 00:26:19,130
to share documents between wikis,

362
00:26:21,230 --> 00:26:25,370
what we are trying to do is really to help the collaboration

363
00:26:26,110 --> 00:26:30,254
and the sharing of information between two sources of

364
00:26:30,292 --> 00:26:32,270
information that might be very distinct.

365
00:26:32,770 --> 00:26:36,366
So if we go in the next steps of

366
00:26:36,388 --> 00:26:39,870
this implementation, what do we want to do afterwards?

367
00:26:41,250 --> 00:26:44,634
Mostly try to integrate with third

368
00:26:44,692 --> 00:26:48,066
party platforms. So for example,

369
00:26:48,248 --> 00:26:52,386
with the examples that I showed in

370
00:26:52,408 --> 00:26:55,750
the beginning of the talk, we have nextcloud and Matomo that are coming up.

371
00:26:55,900 --> 00:26:59,574
Matomo is quite a good example because it has

372
00:26:59,692 --> 00:27:01,990
quite an interesting activity of integration.

373
00:27:02,890 --> 00:27:06,306
And also nextlode will fit in

374
00:27:06,348 --> 00:27:09,706
this idea of being able to share knowledge using

375
00:27:09,808 --> 00:27:13,930
a distributed and decentralized protocol.

376
00:27:15,710 --> 00:27:19,710
One other thing that we want to do, because it's still currently

377
00:27:19,780 --> 00:27:22,160
in kind of a research project,

378
00:27:23,170 --> 00:27:26,894
is trying to improve the reliability of the application,

379
00:27:27,092 --> 00:27:30,526
making sure that events are

380
00:27:30,628 --> 00:27:33,786
correctly getting to their

381
00:27:33,828 --> 00:27:37,394
destination, make sure that we don't have any bugs, basically.

382
00:27:37,592 --> 00:27:40,050
And finally, we could have new actors,

383
00:27:40,470 --> 00:27:43,906
so new ways to. Well, different ways to

384
00:27:43,928 --> 00:27:47,206
follow different part of a wiki if we want to

385
00:27:47,228 --> 00:27:50,920
follow only a certain type of events coming from

386
00:27:53,050 --> 00:27:56,426
a specific part of a wiki, for example, or that

387
00:27:56,448 --> 00:27:58,730
come from a specific set of pages.

388
00:28:03,470 --> 00:28:08,474
If you want to get a bit more information about this

389
00:28:08,512 --> 00:28:11,934
application and did this integration, I would

390
00:28:11,972 --> 00:28:16,206
highly suggest that you get and take a look at the slides here

391
00:28:16,388 --> 00:28:20,030
and click on the link about the activitypub application

392
00:28:20,100 --> 00:28:32,404
documentation. I'm going to show it to you here.

393
00:28:32,442 --> 00:28:35,796
You will get a lot of information about, well, what is currently supported, what is

394
00:28:35,818 --> 00:28:40,040
not supported yet, what are the endpoints that we also propose

395
00:28:40,540 --> 00:28:43,944
as part of the application, and also a couple of instructions on

396
00:28:43,982 --> 00:28:47,624
how to set up the application, which is quite

397
00:28:47,662 --> 00:28:50,910
good if you want to trade by yourself.

398
00:28:52,160 --> 00:28:55,948
And then we also have a link to the protocol itself if

399
00:28:55,954 --> 00:28:58,750
you want to try. Okay,

400
00:29:00,160 --> 00:29:03,900
well, thank you for the time spent on this presentation.

401
00:29:04,480 --> 00:29:08,204
If you have any question, don't hesitate to ask me. You have my

402
00:29:08,242 --> 00:29:11,996
contact information in

403
00:29:12,018 --> 00:29:15,860
the second slide, well, in the third slide of this presentation.

404
00:29:16,840 --> 00:29:18,210
Thank you and have a nice day.

