1
00:00:00,250 --> 00:00:01,630
Are you an SRE,

2
00:00:03,570 --> 00:00:08,042
a developer? A quality engineer

3
00:00:08,106 --> 00:00:12,346
who wants to tackle the challenge of improving reliability in your DevOps?

4
00:00:12,458 --> 00:00:16,510
You can enable your DevOps for reliability with chaos native.

5
00:00:16,930 --> 00:00:20,800
Create your free account at Chaos native Litmus Cloud

6
00:01:16,730 --> 00:01:20,278
welcome everyone to my Conf 42

7
00:01:20,364 --> 00:01:23,638
pragmatic incident response lessons learned from

8
00:01:23,724 --> 00:01:28,060
failures let's go ahead and get started on here.

9
00:01:28,670 --> 00:01:31,878
My name is Robert Ross,

10
00:01:32,054 --> 00:01:35,574
but people like to call me Bobby tables. I am the CEO

11
00:01:35,622 --> 00:01:39,222
and co founder of Firehydrant. We are a reliability

12
00:01:39,286 --> 00:01:42,910
platform for teams of all sizes looking to up level

13
00:01:42,980 --> 00:01:47,114
their service, ownership, incident management, incident retrospectives,

14
00:01:47,162 --> 00:01:50,954
postpartums, whatever you call them. And my experience has led

15
00:01:51,002 --> 00:01:54,634
me to start this company and ultimately have

16
00:01:54,692 --> 00:01:58,146
a bunch of tips on things I think you can do to help improve your

17
00:01:58,168 --> 00:02:01,458
incident response at your company, your team,

18
00:02:01,624 --> 00:02:05,746
maybe your life. Really up to you. So what

19
00:02:05,768 --> 00:02:09,590
we're going to talk about are some five tips on

20
00:02:09,660 --> 00:02:13,126
pragmatic incident lessons. So pragmatic being the key word here,

21
00:02:13,228 --> 00:02:17,506
there's a whole swath of things that you can do to improve

22
00:02:17,538 --> 00:02:20,982
incident response, but we're just going to talk about some relatively

23
00:02:21,046 --> 00:02:24,314
easy things that you can start to push into the

24
00:02:24,352 --> 00:02:27,594
company today to help you with your

25
00:02:27,632 --> 00:02:29,850
incident response and management.

26
00:02:31,150 --> 00:02:35,358
So one of the things that we're going to start with is small

27
00:02:35,444 --> 00:02:39,054
things. And if you recognize these lyrics, it's because

28
00:02:39,092 --> 00:02:42,314
it's from a band called Blinkway Two, one of my favorites and from my hometown

29
00:02:42,362 --> 00:02:45,998
of San Diego. But we're going to talk about my elevator

30
00:02:46,094 --> 00:02:49,746
instead for a second. So I live

31
00:02:49,768 --> 00:02:52,994
in an old candy factory. This building, what you see

32
00:02:53,032 --> 00:02:57,570
behind me, it's an old candy factory in Williamsburg,

33
00:02:57,650 --> 00:03:00,774
Brooklyn, New York City. And my

34
00:03:00,812 --> 00:03:04,982
elevators, some of the buttons don't light up when you push them. They certainly

35
00:03:05,116 --> 00:03:08,922
work and they dispatch an elevator and they send it to the correct

36
00:03:08,976 --> 00:03:12,634
floor, but they don't light up. And then other problems is

37
00:03:12,672 --> 00:03:16,774
that the led display in the elevator

38
00:03:16,822 --> 00:03:21,598
inside of the elevator car displays the wrong thing

39
00:03:21,764 --> 00:03:26,026
from the floors sometimes. So if you push basement,

40
00:03:26,138 --> 00:03:31,150
it'll actually say seller in the led screen. Just a minor inconsistency,

41
00:03:32,930 --> 00:03:36,274
but generally, and another fun one that I discovered actually

42
00:03:36,312 --> 00:03:39,586
very recently, is that it has a race condition that if you push a

43
00:03:39,608 --> 00:03:43,438
button, sometimes two elevators will show up simultaneously.

44
00:03:43,534 --> 00:03:46,260
No one's in them, just two show up.

45
00:03:46,630 --> 00:03:50,550
And generally it's actually kind of a piece of crap, but it goes

46
00:03:50,620 --> 00:03:54,246
up and down, and that's what's important, right, for an elevator goes up

47
00:03:54,268 --> 00:03:56,520
and down, door opens, I step in and out, whatever.

48
00:03:57,690 --> 00:04:00,826
But then on April eigth of this year,

49
00:04:01,008 --> 00:04:04,394
I walked up to my elevator and there was an

50
00:04:04,432 --> 00:04:08,426
out of order sign and actors were used in this photograph. But I

51
00:04:08,448 --> 00:04:12,218
was like, okay, well, my elevator, that the buttons are mislabeled.

52
00:04:12,394 --> 00:04:15,726
It has a race condition and a bunch of

53
00:04:15,748 --> 00:04:19,642
other problems. It's dirty a lot of the time. Like shocking,

54
00:04:19,706 --> 00:04:23,182
right? Oh my God. No way that the elevator

55
00:04:23,246 --> 00:04:26,830
is broken right now, right? I was completely shocked.

56
00:04:26,910 --> 00:04:30,446
Not at all. Right. It made sense. It all lined

57
00:04:30,478 --> 00:04:33,540
up. The story told itself.

58
00:04:34,630 --> 00:04:38,066
And where I'm going with this is that the habit of ignoring

59
00:04:38,178 --> 00:04:41,350
small issues is often really going to lead to

60
00:04:41,420 --> 00:04:42,760
way bigger issues.

61
00:04:45,130 --> 00:04:48,602
When little things start to pile up, it's no

62
00:04:48,656 --> 00:04:52,250
longer a bunch of small things, it's going to become

63
00:04:52,320 --> 00:04:55,114
a big thing. A lot of the time.

64
00:04:55,232 --> 00:04:59,066
It's important to actually start seeing small things as

65
00:04:59,248 --> 00:05:03,126
indicators of bad things to come if we're not going to go and handle

66
00:05:03,158 --> 00:05:06,254
them. I'm sure we've all worked at a company, maybe you work at one

67
00:05:06,292 --> 00:05:09,786
right now and you don't want to admit it, that you have an error tracking

68
00:05:09,818 --> 00:05:13,210
system that just has thousands of errors,

69
00:05:13,290 --> 00:05:17,618
thousands of exceptions in there that nobody is going and looking at.

70
00:05:17,784 --> 00:05:21,230
And one day one of those exceptions

71
00:05:21,310 --> 00:05:24,514
is actually going to matter. And it will be so hard to

72
00:05:24,552 --> 00:05:27,702
wade through all of the exceptions in that tool because

73
00:05:27,756 --> 00:05:32,294
there's just so many of them. So my

74
00:05:32,332 --> 00:05:36,418
first tip here is you should be focusing on small incidents

75
00:05:36,514 --> 00:05:40,300
first. Don't try to change the world

76
00:05:40,990 --> 00:05:45,030
for your incident lessons methodology

77
00:05:45,190 --> 00:05:48,470
on your team or at your company. For huge incidents,

78
00:05:48,550 --> 00:05:52,234
let's talk small first. Run retros for tiny

79
00:05:52,282 --> 00:05:55,886
incidents. Don't run them for the biggest ones. You're not

80
00:05:55,908 --> 00:05:59,758
going to move mountains there. Don't go

81
00:05:59,844 --> 00:06:03,294
into a giant incident retrospective for

82
00:06:03,332 --> 00:06:06,018
the first time. And we're all excited that we're going to change our process and

83
00:06:06,024 --> 00:06:09,246
make the world a better place. And inevitably, you're going to have a Jira ticket

84
00:06:09,278 --> 00:06:12,210
that says rearchitect async pipeline.

85
00:06:12,950 --> 00:06:16,534
That's never going to happen. That's not going to happen because

86
00:06:16,572 --> 00:06:20,178
of that incident. It's going to take a way bigger

87
00:06:20,274 --> 00:06:24,022
movement than that. So create really

88
00:06:24,076 --> 00:06:27,190
small actionable items from your incidents.

89
00:06:27,630 --> 00:06:30,906
And low stake incidents are the best place

90
00:06:31,088 --> 00:06:35,130
to get better at doing retros, right? They're low stakes.

91
00:06:35,550 --> 00:06:39,206
Nobody is maybe feeling

92
00:06:39,238 --> 00:06:43,386
really down on themselves for this incident. Maybe it was just a minor data inconsistency

93
00:06:43,578 --> 00:06:47,466
in an export to another system. No user data was lost.

94
00:06:47,578 --> 00:06:50,990
No users even knew there was a problem. Those are the best ones

95
00:06:51,060 --> 00:06:55,154
to start instituting behavioral change for

96
00:06:55,192 --> 00:06:58,370
your incident lessons and retrospective practices.

97
00:06:59,590 --> 00:07:02,962
And Heidi Waterhouse works at

98
00:07:03,016 --> 00:07:05,990
launchdarkly has a great quote.

99
00:07:06,330 --> 00:07:10,066
A plane with many malfunctioning call buttons may also be poorly

100
00:07:10,098 --> 00:07:14,466
maintained in other ways, like faulty checking in for turbine

101
00:07:14,498 --> 00:07:17,910
blade microfactors or landing gear behavior.

102
00:07:18,330 --> 00:07:21,994
So next time you're on a plane and the buttons don't work and maybe the

103
00:07:22,032 --> 00:07:26,074
window is super scratched and your seat doesn't lean back, like maybe

104
00:07:26,112 --> 00:07:30,106
you should start to wonder certain things. And sorry if I just gave

105
00:07:30,208 --> 00:07:33,042
anyone crippling anxiety of flying,

106
00:07:33,206 --> 00:07:37,040
but I think that this quote is really good. Moving on,

107
00:07:38,050 --> 00:07:40,894
let's talk about things that you can measure. So that was tips number one.

108
00:07:40,932 --> 00:07:44,580
Moving on. Tip number two, what do you measure? Well,

109
00:07:45,110 --> 00:07:49,090
knowing how much you're improving is really

110
00:07:49,160 --> 00:07:52,286
important and improving your incident response,

111
00:07:52,318 --> 00:07:56,022
improving your overall reliability as a team, as a company,

112
00:07:56,076 --> 00:08:00,390
as an organization. Are you improving your MTTR?

113
00:08:01,050 --> 00:08:05,206
Are you actually measurably making sure that

114
00:08:05,308 --> 00:08:07,720
your MTTR is going down?

115
00:08:08,410 --> 00:08:12,182
So my second tip really

116
00:08:12,236 --> 00:08:15,354
quick is check your MTTR. MTTR is a great

117
00:08:15,392 --> 00:08:19,050
statistic to measure and improve incident response on your team.

118
00:08:19,200 --> 00:08:23,374
Really, really critical that you measure your MTTR and for

119
00:08:23,412 --> 00:08:27,438
the incident, human safety factors and

120
00:08:27,524 --> 00:08:31,502
all of the nerds out there that love learning

121
00:08:31,556 --> 00:08:34,642
about MTTR and why it's the worst metric to

122
00:08:34,696 --> 00:08:37,314
track, I am in fact trolling you.

123
00:08:37,512 --> 00:08:41,502
The thing that I'm actually saying is meantime to retro.

124
00:08:41,646 --> 00:08:45,570
I'm sure you didn't think I was saying meantime to resolution,

125
00:08:45,650 --> 00:08:50,550
I hope. But we're talking about meantime to retro retrospective

126
00:08:51,770 --> 00:08:54,950
our memory up here. It goes quick.

127
00:08:55,020 --> 00:08:58,606
It fades very fast. Herman Ebbinghouse,

128
00:08:58,738 --> 00:09:02,940
he discovered that memory loss is way faster than we think.

129
00:09:04,110 --> 00:09:07,834
The moment you learn something, you're going to start to forget it pretty

130
00:09:07,872 --> 00:09:11,594
quickly. You need to really institute

131
00:09:11,642 --> 00:09:15,326
knowledge through dedicated learning for it to

132
00:09:15,428 --> 00:09:19,326
stick around. So where

133
00:09:19,348 --> 00:09:22,718
I'm going with this is that your meantime to retro is a really important step,

134
00:09:22,804 --> 00:09:27,102
because one of the easiest ways to have a bad incident

135
00:09:27,166 --> 00:09:30,434
retrospective is to wait two weeks. You could

136
00:09:30,472 --> 00:09:34,066
do all of your process right, you could have all

137
00:09:34,088 --> 00:09:37,750
the right people in the right room, all of your timeline correct, and you could

138
00:09:37,820 --> 00:09:41,510
still produce a bad retrospective learning

139
00:09:41,580 --> 00:09:45,430
document, whatever your outcome is. And the reason is that we

140
00:09:45,500 --> 00:09:48,602
forget things very, very quickly, faster than you think.

141
00:09:48,656 --> 00:09:51,882
So don't wait weeks. If you have a sev

142
00:09:51,936 --> 00:09:55,498
one incident, that is a moment, and calendars should change

143
00:09:55,584 --> 00:09:59,530
like calendar events, the next day should go away

144
00:09:59,680 --> 00:10:03,660
to make room for that retrospective. Because a sub one incident, that's a big deal,

145
00:10:04,190 --> 00:10:07,982
maybe a sev five, maybe a little bit more leniency. But even still, like within

146
00:10:08,036 --> 00:10:12,560
a couple of days, because our memory just is that

147
00:10:13,190 --> 00:10:17,330
susceptible to being corrupted or lost entirely.

148
00:10:18,790 --> 00:10:22,318
So tip number two, with a little bit less troll, is track your meantime

149
00:10:22,334 --> 00:10:26,166
to retro. Hold prompt and consistent retros on your

150
00:10:26,188 --> 00:10:29,894
incidents the easiest way.

151
00:10:29,932 --> 00:10:33,526
Again, don't wait, do it super fast.

152
00:10:33,708 --> 00:10:36,930
Another metric that I really like is actually tracking the ratio

153
00:10:37,010 --> 00:10:40,474
of your incidents to retrospectives. And that's a number that should go

154
00:10:40,512 --> 00:10:43,866
up. If you are tracking this number, let's say

155
00:10:43,888 --> 00:10:47,190
you have, let's say ten sev one incidents,

156
00:10:47,350 --> 00:10:50,826
but you only did two retrospectives. That's a

157
00:10:50,848 --> 00:10:53,982
pretty bad ratio. You should be getting that number up.

158
00:10:54,116 --> 00:10:57,246
So track that number. It's a really good one to

159
00:10:57,268 --> 00:11:01,530
actually measurably see if your company behavior

160
00:11:01,690 --> 00:11:04,818
is changing. And that's one

161
00:11:04,824 --> 00:11:07,700
of the most important things, is getting people on the same page.

162
00:11:09,590 --> 00:11:14,466
So let's talk about things that you can alert on a

163
00:11:14,488 --> 00:11:17,426
hot topic. I'm sure for a lot of people that maybe you have an alert

164
00:11:17,458 --> 00:11:21,254
fatigue problem. Maybe you have systems that are red

165
00:11:21,292 --> 00:11:25,080
herring alerts all the time. So let's talk about things that you can arent on.

166
00:11:26,410 --> 00:11:30,540
One thing that we should all take note of here is that

167
00:11:30,910 --> 00:11:33,130
we don't declare incidents.

168
00:11:34,510 --> 00:11:38,378
We only are really declaring incidents because our customers or

169
00:11:38,544 --> 00:11:42,442
the people that receive value from our systems and software are feeling

170
00:11:42,506 --> 00:11:46,362
some level of pain. Whether it be slow

171
00:11:46,426 --> 00:11:50,254
checkout times on your online ordering form or just

172
00:11:50,292 --> 00:11:53,760
errors entirely, whether it be someone,

173
00:11:54,370 --> 00:11:57,698
an image isn't loading for them and that's why they're there like they want

174
00:11:57,704 --> 00:12:01,154
to look at. Maybe you have a photo website. The severity of your incidents is

175
00:12:01,192 --> 00:12:03,986
directly linked to customer pain.

176
00:12:04,088 --> 00:12:07,560
We would not open incidents unless there was another customer on the other side

177
00:12:07,930 --> 00:12:11,046
having some level of pain. And where I'm going with this

178
00:12:11,068 --> 00:12:14,134
is that computer vitals are what a lot

179
00:12:14,172 --> 00:12:18,118
of companies alert on. A lot of companies do this and it's

180
00:12:18,134 --> 00:12:21,786
okay, you can get better at this. But when

181
00:12:21,808 --> 00:12:26,410
you are alerting on your computer cpu,

182
00:12:27,630 --> 00:12:31,274
that is a bad metric to arent on because

183
00:12:31,392 --> 00:12:34,270
cpus are going to get hot.

184
00:12:34,340 --> 00:12:38,046
Like they're going to be utilized more at certain

185
00:12:38,068 --> 00:12:40,654
times of the day and utilized less maybe in the middle of the night,

186
00:12:40,772 --> 00:12:45,006
wherever your peak traffics are. And this

187
00:12:45,028 --> 00:12:47,986
is a big deal because if you think about it, if I go on a

188
00:12:48,008 --> 00:12:51,906
run, if I go down to my street, and if my elevator works

189
00:12:52,008 --> 00:12:55,198
and I get on the street and I sprint down the block,

190
00:12:55,374 --> 00:12:59,522
my heart is going to beat faster. It is designed

191
00:12:59,586 --> 00:13:03,286
to do that. It means that, hey, you sre exerting a lot

192
00:13:03,308 --> 00:13:07,014
of energy. I'm going to give your muscles more oxygen and

193
00:13:07,052 --> 00:13:10,486
that's what it does. I think that is what I was taught in school.

194
00:13:10,668 --> 00:13:14,026
I need to maybe go verify that before I so confidently say that

195
00:13:14,048 --> 00:13:17,802
on talk. But my point is that when you page people

196
00:13:17,856 --> 00:13:22,014
at 02:00 a.m. Because disk is maybe at 80% capacity or

197
00:13:22,052 --> 00:13:26,240
your cpu is running at 100%, let's say 95%,

198
00:13:26,690 --> 00:13:30,190
but no one is feeling any pain. Your customers don't know anything,

199
00:13:30,340 --> 00:13:33,818
don't know any difference. There's no reason to

200
00:13:33,844 --> 00:13:37,522
wake anyone up. It's the easiest way to lose great teammates is

201
00:13:37,576 --> 00:13:41,394
to page them for things that no one knew

202
00:13:41,432 --> 00:13:44,020
about, that no one actually felt any pain.

203
00:13:45,990 --> 00:13:50,214
So my third tip here is alert on degraded experience

204
00:13:50,332 --> 00:13:54,114
with the service and not much else. A cpu burning

205
00:13:54,162 --> 00:13:57,734
hot again at 90% is not necessarily a bad thing.

206
00:13:57,932 --> 00:14:01,546
It might indicate problems down the road, but correlation does

207
00:14:01,568 --> 00:14:04,906
not equal causation all the time. And what we

208
00:14:04,928 --> 00:14:08,358
should be doing is creating service level objectives that are tied

209
00:14:08,374 --> 00:14:11,966
to a customer experience and alert on those.

210
00:14:12,148 --> 00:14:15,566
Alert on when a customer is feeling a problem, not when

211
00:14:15,588 --> 00:14:18,960
the computer is potentially just doing its job.

212
00:14:19,890 --> 00:14:23,106
People experiencing problems sre the only thing you should

213
00:14:23,128 --> 00:14:26,642
alert on, period. Really, there's no reason to wake anyone

214
00:14:26,696 --> 00:14:29,220
up unless anyone is feeling a problem with your system.

215
00:14:32,390 --> 00:14:36,226
Soundcloud has a great blog post on it. I reference it

216
00:14:36,248 --> 00:14:38,686
all the time. It's called alerting on slos,

217
00:14:38,878 --> 00:14:42,246
but you can apply. What they say is that you should alert on

218
00:14:42,268 --> 00:14:46,054
symptoms and not causes. So going back to the running analogy, if I go

219
00:14:46,092 --> 00:14:49,570
downstairs and I sprint down the block, my heart's going to start beating faster.

220
00:14:49,650 --> 00:14:52,682
That's what it does. But if all of a sudden, if I pass

221
00:14:52,736 --> 00:14:56,442
out and I fall and I hit my head, that's maybe

222
00:14:56,496 --> 00:15:00,202
a problem, right? I shouldn't be passing out just because I

223
00:15:00,336 --> 00:15:04,270
sprinted down the block. That means that something arent

224
00:15:04,340 --> 00:15:07,822
wrong and I should maybe go to the hospital and page

225
00:15:07,876 --> 00:15:11,178
someone. But that so you should only be alerting

226
00:15:11,194 --> 00:15:13,650
on your symptoms, not the causes.

227
00:15:16,550 --> 00:15:20,146
Who do you notify about an incident? And this is

228
00:15:20,328 --> 00:15:24,098
an interesting topic, I think because at a lot of companies,

229
00:15:24,184 --> 00:15:27,786
incidents are high blast radius events.

230
00:15:27,918 --> 00:15:31,446
Everyone in the company knows that you're having an incident in some

231
00:15:31,468 --> 00:15:35,014
way, shape or form. I used to work for

232
00:15:35,132 --> 00:15:38,774
a payroll provider and if our payroll went down, that was a

233
00:15:38,812 --> 00:15:42,666
big deal. A lot of people knew about that. Our HR team knew about it,

234
00:15:42,768 --> 00:15:46,646
our engineers knew about it. Customer success knew about it because their accounts

235
00:15:46,678 --> 00:15:49,898
were calling them saying, hey, I can't run payroll. The sales team knew about it

236
00:15:49,904 --> 00:15:53,454
because they couldn't do demos. It was a big

237
00:15:53,572 --> 00:15:57,086
deal for the payroll system to no longer

238
00:15:57,188 --> 00:16:00,954
be running, and so it became

239
00:16:01,002 --> 00:16:04,766
an issue when you have 600 employees,

240
00:16:04,798 --> 00:16:08,706
500, 600 employees, and everyone wants to

241
00:16:08,808 --> 00:16:12,466
be involved. Everyone. They all feel the pain of it internally at

242
00:16:12,488 --> 00:16:15,682
the company, so they all want to join

243
00:16:15,746 --> 00:16:19,206
an incident channel or a Zoom call or whatever it

244
00:16:19,228 --> 00:16:22,626
is. And incident notifications

245
00:16:22,658 --> 00:16:26,694
can be scary. As an engineering team, do you really need to

246
00:16:26,732 --> 00:16:29,962
tell your entire team about an incident? Are you going to cause

247
00:16:30,096 --> 00:16:33,626
panic and pandemonium by telling your team that there's an

248
00:16:33,648 --> 00:16:37,130
incident? I certainly have. Even though it was a benign incident,

249
00:16:37,470 --> 00:16:40,906
simply saying, hey, this isn't working right now.

250
00:16:41,008 --> 00:16:44,826
People don't know how to maybe take that. So can a

251
00:16:44,848 --> 00:16:48,158
small set of people tackle an incident without disrupting the rest of the

252
00:16:48,164 --> 00:16:51,534
company? Can you have a tiger team that just gets in there really quick

253
00:16:51,572 --> 00:16:54,580
and just fixes a problem and gets out?

254
00:16:55,590 --> 00:16:59,314
When does customer success and support get involved? That's another big deal.

255
00:16:59,352 --> 00:17:03,710
Do they need to be directly attached to the engineering's

256
00:17:03,870 --> 00:17:06,794
communication lines and hip during an incident,

257
00:17:06,862 --> 00:17:10,662
or can there be a push mechanism? Can we give

258
00:17:10,716 --> 00:17:13,942
the success and support team the information that they need

259
00:17:14,076 --> 00:17:17,350
the moment that it becomes available without them maybe being

260
00:17:17,420 --> 00:17:20,150
in, let's say, the figurative kitchen?

261
00:17:21,050 --> 00:17:24,586
And another question is, when do you escalate? When do you actually say, you know

262
00:17:24,608 --> 00:17:27,258
what, maybe we do need to tell everyone right now?

263
00:17:27,424 --> 00:17:30,990
That's another challenge that should have a well defined process

264
00:17:31,060 --> 00:17:34,638
behind it. So my fourth tip is

265
00:17:34,724 --> 00:17:39,390
focused teams will perform the best mitigation there

266
00:17:39,460 --> 00:17:43,554
is such a thing as over communicating about an incident to a company.

267
00:17:43,752 --> 00:17:47,186
I've done it. I've been a person that's even seen it.

268
00:17:47,288 --> 00:17:51,346
And it can cause ridiculous distractions and

269
00:17:51,448 --> 00:17:55,140
really massive logical fallacies among the team. Again,

270
00:17:55,670 --> 00:17:59,414
incidents are big blast radius events. Like, we should be very

271
00:17:59,452 --> 00:18:03,302
careful about how much we actually tell people about

272
00:18:03,356 --> 00:18:05,880
those incidents. And even in New York City,

273
00:18:06,330 --> 00:18:09,686
when there's a fire in the big, tall buildings, like where it's

274
00:18:09,718 --> 00:18:13,370
cement in between each floor, you actually are told

275
00:18:13,440 --> 00:18:17,498
by the fire department if you are above the fire,

276
00:18:17,664 --> 00:18:21,126
I. E. If there's a fire on floor ten and you're on

277
00:18:21,168 --> 00:18:24,494
floor 13, the fire department will

278
00:18:24,532 --> 00:18:28,286
actually tell you, don't leave the building. Don't leave the building.

279
00:18:28,388 --> 00:18:32,014
And that is insane as that sounds. The reason that the fire

280
00:18:32,052 --> 00:18:35,742
department does that is because you're probably not in that much danger.

281
00:18:35,806 --> 00:18:39,202
There's a lot of cement between you and the floors below you.

282
00:18:39,336 --> 00:18:42,802
And two, when you have, let's say

283
00:18:42,936 --> 00:18:47,586
it's a 25 story building. If you have, what is that? 15 floors

284
00:18:47,698 --> 00:18:51,014
of people with each floor having hundreds of people

285
00:18:51,212 --> 00:18:55,026
suddenly on the street down below, the fire trucks can't

286
00:18:55,058 --> 00:18:58,514
get there. They can't even get to the building. So that's why the fire department

287
00:18:58,562 --> 00:19:01,786
says if you are two floors or more above the

288
00:19:01,808 --> 00:19:05,354
fire in New York City, in certain buildings, don't leave

289
00:19:05,392 --> 00:19:08,826
your floor because you're going to make it really hard for the fire department to

290
00:19:08,848 --> 00:19:12,014
even get to the fire to put it out. And then you actually make it

291
00:19:12,052 --> 00:19:15,534
worse. So be careful who you actually loop into

292
00:19:15,572 --> 00:19:17,600
incidents. It really can make a big difference.

293
00:19:19,730 --> 00:19:23,666
And a great quote. Too many cooks spoil the

294
00:19:23,688 --> 00:19:27,550
broth. Too many people mitigating by committee

295
00:19:27,630 --> 00:19:31,650
will produce inferior results. All right,

296
00:19:31,720 --> 00:19:35,170
the last tip that I have for everyone here.

297
00:19:35,320 --> 00:19:38,738
What teams own your services? If you're at a bigger

298
00:19:38,754 --> 00:19:42,470
company, or even if a small one with only a few things or product

299
00:19:42,540 --> 00:19:45,926
areas, this is a big thing for people to think,

300
00:19:45,948 --> 00:19:49,510
but, and you need to be considering

301
00:19:49,590 --> 00:19:53,770
your service ownership before you actually have an outage.

302
00:19:54,190 --> 00:19:57,642
And not only for the purposes of this team

303
00:19:57,776 --> 00:20:01,786
builds these features on this service. That's not really what I

304
00:20:01,968 --> 00:20:05,630
hes that is a part of it, but really it's more important

305
00:20:05,700 --> 00:20:09,674
because people need to feel like they own something to properly

306
00:20:09,722 --> 00:20:13,186
know how to fix it or call the right people or be the

307
00:20:13,208 --> 00:20:15,620
right person to fix those problems.

308
00:20:16,390 --> 00:20:20,082
For example, if there's an authentication service

309
00:20:20,216 --> 00:20:23,954
that my team owns that goes down, it doesn't make

310
00:20:23,992 --> 00:20:27,446
sense to have a different team from maybe a

311
00:20:27,468 --> 00:20:31,762
different product area coming to my neighborhood

312
00:20:31,906 --> 00:20:35,682
to solve the problem. They might be completely capable

313
00:20:35,746 --> 00:20:38,840
of doing it. It's not a capability thing.

314
00:20:39,930 --> 00:20:42,538
They might take a little bit longer to get there. They might take a little

315
00:20:42,544 --> 00:20:46,858
bit longer to get their bearings. Imagine if a fire department from

316
00:20:46,944 --> 00:20:50,406
the northern part of Manhattan had to go to the southern part of Brooklyn.

317
00:20:50,518 --> 00:20:54,142
That doesn't make a ton of sense. They maybe don't know the roads as much,

318
00:20:54,276 --> 00:20:58,094
so that's a big deal. And also the

319
00:20:58,132 --> 00:21:02,234
service owner, they know all the dependencies. They know where all of the dead bodies

320
00:21:02,282 --> 00:21:06,034
are in the application. They are going to be the best people

321
00:21:06,232 --> 00:21:09,886
to resolve that incident. But you're not going to be able to define

322
00:21:09,918 --> 00:21:13,842
that the moment an incident starts. This needs to be

323
00:21:13,896 --> 00:21:17,606
clear beforehand. Everyone should know

324
00:21:17,788 --> 00:21:21,702
when this service has a problem. I'm the person that

325
00:21:21,756 --> 00:21:25,240
resolves it and there should be no questions but that.

326
00:21:27,050 --> 00:21:30,410
Because knowing which team to send to the fire

327
00:21:30,480 --> 00:21:34,502
is critical. When seconds matter, fire departments,

328
00:21:34,566 --> 00:21:37,942
there's a reason that there's a fire department in each neighborhood.

329
00:21:38,006 --> 00:21:41,674
It's because it's the fastest way to get to them. They know the neighborhood,

330
00:21:41,722 --> 00:21:45,422
they know the nuances of streets. They are the better team

331
00:21:45,556 --> 00:21:48,974
to get there. And seconds do matter, of course, in real life

332
00:21:49,012 --> 00:21:51,390
fires, but also with software.

333
00:21:53,110 --> 00:21:56,946
So my fifth tip is to assign clear

334
00:21:57,048 --> 00:22:00,686
ownership, very crystal clear ownership. Ad hoc free cuts

335
00:22:00,718 --> 00:22:03,922
will only continue unless there is a clear line of

336
00:22:03,976 --> 00:22:07,498
who owns what. So providing a service catalog

337
00:22:07,534 --> 00:22:10,626
with clear ownership will help you route people to fires

338
00:22:10,658 --> 00:22:14,194
faster. I promise you. Service catalog is also valuable

339
00:22:14,242 --> 00:22:17,334
because it's a thought exercise. It makes you think, well,

340
00:22:17,372 --> 00:22:21,590
here's everything we own, and you might not actually have a big

341
00:22:21,660 --> 00:22:25,254
database in thinking about that. It can be a great exercise

342
00:22:25,302 --> 00:22:28,634
even just to build a service catalog and actually start to think about your

343
00:22:28,672 --> 00:22:32,922
system at a high level. So build a service catalog,

344
00:22:32,986 --> 00:22:36,746
assign clear ownership lines, and it will greatly

345
00:22:36,778 --> 00:22:40,234
help you in your incident response. So let's

346
00:22:40,282 --> 00:22:44,526
recap really quickly here. Declare and run retros

347
00:22:44,638 --> 00:22:48,286
for the small incidents. It's less stressful. Action items

348
00:22:48,318 --> 00:22:52,686
are more actionable. Don't do giant incidents

349
00:22:52,798 --> 00:22:57,350
for retros yet. Do the small really promise?

350
00:22:57,850 --> 00:23:01,320
Trust me. Do the small incidents first,

351
00:23:03,050 --> 00:23:06,630
decrease the time you take before you even analyze an incident.

352
00:23:08,170 --> 00:23:11,606
Good retros take practice. That's going to take

353
00:23:11,628 --> 00:23:14,346
you a little bit of time, but one of the easiest things that you can

354
00:23:14,368 --> 00:23:17,946
do is just decrease the time before you even have the

355
00:23:17,968 --> 00:23:20,250
retro. Those retros will be more valuable.

356
00:23:22,530 --> 00:23:26,030
Alert on pain felt by people, not computers.

357
00:23:26,370 --> 00:23:29,902
Computers. We might feel bad. My computer is running

358
00:23:29,956 --> 00:23:33,970
hot right now recording this. It's not sentient, doesn't have feelings.

359
00:23:36,230 --> 00:23:39,966
If I suddenly lost this recording, that's something I would alert

360
00:23:39,998 --> 00:23:43,074
on and I'd probably be very upset. So alert on the pain

361
00:23:43,112 --> 00:23:45,330
felt by people, not computers.

362
00:23:46,390 --> 00:23:49,906
And really, it's worth saying the only reason we declare incidents

363
00:23:49,938 --> 00:23:53,830
at all is because of the people on the other side using our software.

364
00:23:55,850 --> 00:23:59,750
Four consciously mitigate without overdoing the communication.

365
00:24:00,330 --> 00:24:03,670
Again, bringing a lot of people into an incident

366
00:24:03,750 --> 00:24:07,530
is not the best way to solve an incident. The fire department doesn't want everyone

367
00:24:07,600 --> 00:24:10,814
on the street, even though they're pretty close to the fire.

368
00:24:10,932 --> 00:24:14,686
It's safer for people to stay above it and out of

369
00:24:14,868 --> 00:24:17,950
responders way down below on the street.

370
00:24:19,570 --> 00:24:23,166
And number five, assign clear service owners. If you don't have

371
00:24:23,188 --> 00:24:26,754
a clear line of ownership between people and the services they build

372
00:24:26,792 --> 00:24:30,430
and run, you sre going to have longer incidents.

373
00:24:30,510 --> 00:24:33,934
You're going to have maybe even more impactful

374
00:24:33,982 --> 00:24:37,302
incidents. Maybe it starts to spread. Maybe you have a thundering herd problem.

375
00:24:37,436 --> 00:24:41,430
It is really important to have your service ownership very well defined.

376
00:24:43,770 --> 00:24:47,126
And with that, I will say thank you to the

377
00:24:47,148 --> 00:24:50,294
organizers, to everyone that watched this. If you are

378
00:24:50,332 --> 00:24:53,558
looking to implement maybe some of these practices, maybe your ears perked up a

379
00:24:53,564 --> 00:24:56,918
little bit on some of them. Firehydrant.com this is what

380
00:24:56,924 --> 00:25:00,254
we do. This is what we started to build this

381
00:25:00,292 --> 00:25:04,138
software to solve our own problems that led to these tips.

382
00:25:04,314 --> 00:25:07,722
So check us out. I'm also bobby tables on Twitter,

383
00:25:07,786 --> 00:25:11,342
bobby tables on GitHub, and we're also at fire hydrant on Twitter as

384
00:25:11,396 --> 00:25:15,182
well. And with that, I hope everyone enjoys the rest of your day.

385
00:25:15,316 --> 00:25:16,300
And thanks for watching.

