{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/b486d235-70ba-45d3-ba26-a01dcf6fed29", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["actions", "be", "behindthescenes", "bitovi", "bitovis", "brief", "but", "can", "catalog", "cloud", "commons", "complex", "conf fourty two", "deployments", "details", "devops consultant", "github", "iac", "involves", "karamveer kaur sangha", "opensource", "prometheus", "provide", "provider", "understand", "using", "workings"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "id": "2a571e71-8ecd-4c19-b5eb-bc546446f5ab", "status": "completed", "error": null, "text": "With GitHub actions. A Prometheus deployments example the agenda for today is we will deploy Prometheus in AWS EC two instance using Bitovi's seamless GitHub action we will explore Bitovi's open source deploy Prometheus GitHub action. We will also explore Bitovi's open source framework, referred as commons, which ensures seamless integration of IAC tools such as terraform and ansible. At the end of this session, you'll be able to leverage the power of GitHub actions as a platform engineering. You'll also witness live deployment of Prometheus using Bitovis GitHub action. You will get insights into the Bitovis action repository. You will also discover that how Bitovi's internal frameworks commons ensure seamless integration of tools such as terraform and ansible without user worrying about installing or setup of these tools. Here we have a deployments repository in which user defines workflow, which would call Bitovi's GitHub action to deploy Prometheus and Grafana. Let's see the content of this repository. Under observability folder we have configuration related to Prometheus and Grafana, such as under Prometheus we have scrape targets for Prometheus to scrape metrics from. Similarly, under Grafana we have a data source for Grafana. Let's see the content of workflow file. Under workflow file we are calling Bitovi's GitHub action to deploy Prometheus and Grafana. You can also see that we are providing mandatory parameters aw access key id and secret access key to deploy Prometheus and Grafana in AWS EC two instance. Along with this, you can also pass AWS default region to deploy Prometheus in and similarly you can also specify which EC two instance type you want. Finally, you can see that we are passing the path for our configuration files here. Let's make a small change into the workflow file. I'm going to comment this line and I'm going to commit these changes directly into the main. Once these changes are committed directly into the main branch, the workflow would make use of Bitovis GitHub action and Commons to deploy Prometheus and Grafana in EC two instance. In the meantime, till this workflow is complex, let's see what's inside the action repository and what is Commons framework. We will start by exploring Bitovis GitHub action repository. Let's see the action file for the Bitovis GitHub action repository. Here you can see that we have all the inputs are exposed to make use by developers. Any steps such as ISE, any scripts or commands are defined into the steps. For example, we are copying all the configuration later to Prometheus and Grafana at appropriate destination. Similarly, we are also calling Bitovi's internal framework named as GitHub action Commons. Here you can see that we have passed this input parameter where we are specifying that the input for our ansible is at path. This in the similar way you can specify your path for other tools such as terraform and helm. And then Commons would make sure that your deployments are ready without you to concern about deploying or installing terraform, ansible or any IAC tools. Let's see the overall structure of commons repository as I shown you that in action we have certain kind of parameter. You can see that if your deployment require terraforms, you can specify the path of terraform using this input parameter. Similarly, you can specify the input for ansible and helm, and then Commons would make sure that the deployment is ready using appropriate IAC tools. Commons is trying to run few scripts and these scripts make sure that the code from deployment and action repo is merged together and it's defined in an order way for Bitovis to construct Ise as infrastructure as code. Let's explore all these repositories from diagram point of view. You can see that we have three repositories deployment repository, action Repo and comma repo. Deployment repo is used by user user would create workflow which would further call Bitovi's internal GitHub action. In Bintovi's internal GitHub action, we specify the deployments of tools such as Prometheus and Grafana, which further call Bitovi's internal framework referred as common, which is can open source framework commons. Make sure that your deployments is ready without you worrying about installing or setup any of IAC tools such as terraform or ansible. Commons is a wrapper around the bitops. Bitops has baked in terraform and ansible as containers commons also make sure to organize the structure of repository by merging the content of deployment repository and action repository commons also expose the output in a way so that they can be reused. This is all about deployments. Repository action repository common repository you can very easily leverage the power of commons and action without setting up any of IAC tools. Let's see the status of our actions. You can see that our action has been completed successfully. Now let's see the status of this into the EC two instance, our deployment for Prometheus and Grafana would be accessible at this IP address along with its respective port such as for Prometheus. We are making use of port number 9090 here you can see that we have our Prometheus deployments ready and from our status we can see the targets and we have our target up and healthy. So this is all about Bitovis GitHub action and Bitovis Open source framework Commons. Let us know if you have any questions or you need help setting your environment using platform Engineering. Thank you.", "words": [], "utterances": null, "confidence": 0.919473102310232, "audio_duration": 486.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- We will explore Bitovi's open source deploy Prometheus GitHub action. We will also explore Bitovis' open source framework, referred as commons. Commons ensures seamless integration of IAC tools such as terraform and ansible. At the end of this session, you'll be able to leverage the power of GitHub actions as a platform engineering.", "auto_highlights_result": {"status": "success", "results": [{"count": 1, "rank": 0.13, "text": "Prometheus GitHub action", "timestamps": [{"start": 56026, "end": 57594}]}, {"count": 2, "rank": 0.12, "text": "Bitovis GitHub action repository", "timestamps": [{"start": 215430, "end": 217810}, {"start": 220488, "end": 222158}]}, {"count": 7, "rank": 0.12, "text": "Bitovis GitHub action", "timestamps": [{"start": 79292, "end": 80610}, {"start": 105236, "end": 107322}, {"start": 138224, "end": 139990}, {"start": 194336, "end": 195942}, {"start": 215430, "end": 216846}, {"start": 220488, "end": 221566}, {"start": 473348, "end": 475106}]}, {"count": 1, "rank": 0.11, "text": "GitHub action Commons", "timestamps": [{"start": 249632, "end": 251570}]}, {"count": 2, "rank": 0.11, "text": "GitHub actions", "timestamps": [{"start": 41788, "end": 42642}, {"start": 73032, "end": 74094}]}, {"count": 1, "rank": 0.11, "text": "Repository action repository common repository", "timestamps": [{"start": 417486, "end": 420290}]}, {"count": 1, "rank": 0.1, "text": "Prometheus GitHub", "timestamps": [{"start": 56026, "end": 56954}]}, {"count": 1, "rank": 0.1, "text": "action repository commons", "timestamps": [{"start": 408292, "end": 410346}]}, {"count": 7, "rank": 0.09, "text": "Bitovis GitHub", "timestamps": [{"start": 79292, "end": 80114}, {"start": 105236, "end": 106794}, {"start": 138224, "end": 139462}, {"start": 194336, "end": 195382}, {"start": 215430, "end": 216542}, {"start": 220488, "end": 221294}, {"start": 473348, "end": 474634}]}, {"count": 2, "rank": 0.09, "text": "deployment repository", "timestamps": [{"start": 352906, "end": 354266}, {"start": 406628, "end": 407898}]}, {"count": 1, "rank": 0.09, "text": "Bitovis Open source framework Commons", "timestamps": [{"start": 475388, "end": 477990}]}, {"count": 1, "rank": 0.08, "text": "commons repository", "timestamps": [{"start": 288752, "end": 289942}]}, {"count": 2, "rank": 0.08, "text": "source framework commons", "timestamps": [{"start": 377496, "end": 380302}, {"start": 476252, "end": 477990}]}, {"count": 1, "rank": 0.08, "text": "Bitovi's internal GitHub action", "timestamps": [{"start": 363176, "end": 365550}]}, {"count": 1, "rank": 0.08, "text": "Bitovi's seamless GitHub action", "timestamps": [{"start": 50740, "end": 52714}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}