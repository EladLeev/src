1
00:00:23,290 --> 00:00:27,638
Hi, this is Samir here. Welcome to this event

2
00:00:27,804 --> 00:00:31,670
by Conf 42 around the observability domain.

3
00:00:33,130 --> 00:00:37,314
I'll be presenting the session on beyond

4
00:00:37,362 --> 00:00:41,250
monitoring the rights of observability, which is around the observability

5
00:00:41,330 --> 00:00:44,258
domain. Just to give you my introduction,

6
00:00:44,354 --> 00:00:48,790
I'm Samir, I'm part of the abidian organization.

7
00:00:49,890 --> 00:00:53,774
I'm based out of Mumbai. I provide architecture and

8
00:00:53,812 --> 00:00:57,822
technology leadership to large

9
00:00:57,876 --> 00:01:01,546
transformation programs and large deals. So I think let's

10
00:01:01,578 --> 00:01:05,310
begin with the session. The first slide

11
00:01:05,390 --> 00:01:09,426
here, it actually provides the

12
00:01:09,448 --> 00:01:13,730
agenda that we would cover as part of this particular session.

13
00:01:14,310 --> 00:01:18,630
So we'll try and understand and

14
00:01:18,780 --> 00:01:22,854
get a view on what observability is

15
00:01:22,892 --> 00:01:27,506
under the hood. Then I'll

16
00:01:27,538 --> 00:01:31,494
walk you through what the open telemetry framework is, what constitutes

17
00:01:31,542 --> 00:01:35,990
the open telemetry framework. Then we have the observability

18
00:01:36,150 --> 00:01:39,606
building blocks in terms of the functional building blocks,

19
00:01:39,638 --> 00:01:42,910
in terms of the framework, in terms of the architecture.

20
00:01:44,450 --> 00:01:47,950
And then there are the KRAs and the KPIs that

21
00:01:48,100 --> 00:01:50,640
are impacted by this particular platform.

22
00:01:53,650 --> 00:02:00,750
Once this platform is deployed as part of various

23
00:02:01,250 --> 00:02:04,918
opportunities, they basically impact those,

24
00:02:05,044 --> 00:02:08,246
those various KRAs and KPIs. So I'll touch upon that as

25
00:02:08,268 --> 00:02:11,526
well. Then there is the exact tooling stack in

26
00:02:11,548 --> 00:02:15,202
terms of what constitutes the solution building blocks,

27
00:02:15,266 --> 00:02:18,770
the ISV solutions, the hyperscalers and the open source

28
00:02:18,930 --> 00:02:23,014
solutions that we have. And then a touch upon the

29
00:02:23,052 --> 00:02:26,742
self healing infrastructures as well. And then a view on the AI Ops.

30
00:02:26,806 --> 00:02:30,106
So this is basically what I want to cover in this

31
00:02:30,128 --> 00:02:34,330
session. So let's begin. So system

32
00:02:34,400 --> 00:02:38,682
unavailability and under performance in a landscape,

33
00:02:38,746 --> 00:02:42,126
they negatively impact the user experience and also the

34
00:02:42,148 --> 00:02:43,570
customer satisfaction.

35
00:02:47,190 --> 00:02:51,250
Obviously this definitely constitutes to a revenue loss. If you see

36
00:02:51,400 --> 00:02:56,230
a solution. If you see a portal where you

37
00:02:56,300 --> 00:03:00,102
basically have issues in terms of the performance or

38
00:03:00,156 --> 00:03:01,830
reliability or scalability,

39
00:03:04,490 --> 00:03:08,234
the users would just run away from the portal if the response time

40
00:03:08,272 --> 00:03:12,730
is not basically

41
00:03:12,800 --> 00:03:15,830
not performing as per the slAs.

42
00:03:15,910 --> 00:03:19,500
And typically it's about 2 seconds or 3 seconds. I think

43
00:03:21,310 --> 00:03:24,974
if it takes time to load more than 2

44
00:03:25,012 --> 00:03:28,286
seconds or 3 seconds, I think the customers or the users would

45
00:03:28,308 --> 00:03:31,806
just run away from your website. So I think that's just

46
00:03:31,828 --> 00:03:35,714
an example. And what

47
00:03:35,752 --> 00:03:38,834
observability does is it

48
00:03:38,872 --> 00:03:42,466
enables the organizations to find needle in a haystack by

49
00:03:42,488 --> 00:03:46,214
identifying the system issues that are happening

50
00:03:46,412 --> 00:03:50,102
even before the system, even before the customers would be able to track

51
00:03:50,156 --> 00:03:53,654
it. Right. So I think that's about

52
00:03:53,852 --> 00:03:57,480
the exact sort of objective. And then we have

53
00:03:58,190 --> 00:04:01,574
observability provides the stakeholders with multiple

54
00:04:01,622 --> 00:04:05,930
actionable insights into the distributed infrastructure and

55
00:04:06,000 --> 00:04:09,482
that's something that is part of large

56
00:04:09,536 --> 00:04:12,682
organizations and large complex architectures,

57
00:04:12,746 --> 00:04:17,338
including the likes of Uber and AWS

58
00:04:17,514 --> 00:04:21,214
and all the sort of complexities that we

59
00:04:21,252 --> 00:04:25,630
have. These are solutions that are deployed.

60
00:04:25,710 --> 00:04:28,980
Obviously, it's something that will be based on

61
00:04:29,350 --> 00:04:32,990
what exactly are the requirements, what constitutes,

62
00:04:33,150 --> 00:04:36,806
or what are the basically requirements that are coming in from an

63
00:04:36,828 --> 00:04:40,840
application standpoint, from a business standpoint. And then you basically build

64
00:04:41,370 --> 00:04:45,174
that platform incrementally. And it's just

65
00:04:45,212 --> 00:04:48,906
not kind of a single dimensional aspect. I think there are various teams and

66
00:04:48,928 --> 00:04:52,490
stakeholders that are basically

67
00:04:52,560 --> 00:04:58,522
the users of these systems to get insights, to get

68
00:04:58,576 --> 00:05:02,762
the insights and inputs around the various elements

69
00:05:02,826 --> 00:05:06,510
that are happening in your IT landscape. So making sure that

70
00:05:06,580 --> 00:05:10,266
in case there are any bottlenecks,

71
00:05:10,298 --> 00:05:14,286
in case there are any predictions around systems

72
00:05:14,398 --> 00:05:17,934
or applications or components going down, this particular solution

73
00:05:18,062 --> 00:05:21,554
tracks it basically in advance, which is

74
00:05:21,592 --> 00:05:25,714
basically making sure that it ensures

75
00:05:25,762 --> 00:05:29,560
the uptime and availability of those solutions. So this is basically about

76
00:05:30,650 --> 00:05:34,920
the overall background of the observability solution or the observability platform.

77
00:05:35,690 --> 00:05:37,670
So next is under the hood.

78
00:05:39,070 --> 00:05:42,906
In a modern complex infrastructure, on a

79
00:05:42,928 --> 00:05:46,698
modern IT landscapes, there are tons and tons of

80
00:05:46,784 --> 00:05:49,862
lecture solutions that are run, be it on premise,

81
00:05:49,926 --> 00:05:53,790
be it on cloud, and the number is

82
00:05:53,860 --> 00:05:57,726
just like humongous, right? I think you have your application

83
00:05:57,828 --> 00:06:01,354
servers, you have your database servers, you have your web servers,

84
00:06:01,402 --> 00:06:04,290
load balancers, the network elements,

85
00:06:08,870 --> 00:06:12,050
the identity and access management systems integration,

86
00:06:12,390 --> 00:06:16,070
your machine learning elements, data warehouses,

87
00:06:16,570 --> 00:06:20,294
and just the list is something that

88
00:06:20,332 --> 00:06:24,386
doesn't stop for this kind of a complex landscape.

89
00:06:24,498 --> 00:06:27,706
What's required is you need to have a system or a

90
00:06:27,728 --> 00:06:31,098
platform in place which ensures that

91
00:06:31,184 --> 00:06:34,762
it gathers the insights from these

92
00:06:34,816 --> 00:06:38,890
endpoints and provides a kind of a glass

93
00:06:39,390 --> 00:06:42,560
pane view, single glass pane view,

94
00:06:43,490 --> 00:06:46,894
to understand what's happening in those

95
00:06:46,932 --> 00:06:50,574
nodes, what's happening in those

96
00:06:50,612 --> 00:06:53,834
various components, various services, and take proactive

97
00:06:53,882 --> 00:06:57,266
actions to make sure that any course correction that needs to be

98
00:06:57,288 --> 00:07:01,342
done, it is done through various

99
00:07:01,406 --> 00:07:04,986
rules and various policies that you implement as part of your self pinning infrastructure.

100
00:07:05,038 --> 00:07:09,320
Right? So that's basically what happens

101
00:07:10,170 --> 00:07:11,350
with the solution.

102
00:07:14,810 --> 00:07:18,570
From a solution standpoint. It does gather all the insights

103
00:07:19,150 --> 00:07:23,670
from various endpoints, it explores the patterns, it explores

104
00:07:23,750 --> 00:07:25,850
the various properties,

105
00:07:26,910 --> 00:07:31,230
and then tries to find and tries to deliver actionable insights

106
00:07:32,370 --> 00:07:36,170
in a way that will make sure that the system uptime and availability

107
00:07:36,330 --> 00:07:39,918
is maintained, not impacting that in a

108
00:07:39,924 --> 00:07:44,330
negative way. So that's about the elements

109
00:07:44,490 --> 00:07:48,526
of observability under the hood. So this

110
00:07:48,548 --> 00:07:53,374
is a quick comparison between observability and monitoring. So we

111
00:07:53,412 --> 00:07:56,502
have in the, in the earlier times.

112
00:07:56,556 --> 00:08:00,838
Right. Monitoring was something that was,

113
00:08:00,924 --> 00:08:04,182
let's say, medium to

114
00:08:04,316 --> 00:08:07,946
understand and analyze what

115
00:08:07,968 --> 00:08:13,062
was happening in your applications, what was happening in your various

116
00:08:13,126 --> 00:08:17,174
applications that are deployed as part of your organization,

117
00:08:17,302 --> 00:08:20,606
your it landscape. But monitoring was, if you see

118
00:08:20,628 --> 00:08:23,600
the table here, it was more reactive, right.

119
00:08:24,370 --> 00:08:27,486
And situational, wherein you really didn't have the

120
00:08:27,508 --> 00:08:31,550
intelligence. You didn't have the

121
00:08:31,700 --> 00:08:35,634
intelligence to monitor it and

122
00:08:35,672 --> 00:08:38,706
take a corrective action on that. So I

123
00:08:38,728 --> 00:08:42,334
think the first two elements are something that compares that. So one is reactive versus

124
00:08:42,382 --> 00:08:45,750
proactive. One is situational, others is predictive.

125
00:08:47,130 --> 00:08:50,534
Those are the two key, let's say, points. We also

126
00:08:50,572 --> 00:08:54,486
have something that was more speculative than data driven. So when

127
00:08:54,508 --> 00:08:57,000
I say speculative year,

128
00:08:57,370 --> 00:09:00,506
monitoring was the case where you will try to, let's say,

129
00:09:00,528 --> 00:09:04,314
basis the data that you had, basis the limited access of data

130
00:09:04,352 --> 00:09:08,486
that you had about applications and your infrastructure.

131
00:09:08,518 --> 00:09:12,350
You would try to, let's say, analyze and

132
00:09:12,420 --> 00:09:16,398
try and understand the root cause of why certain things happen

133
00:09:16,564 --> 00:09:19,760
or certain things have happened in your application.

134
00:09:20,130 --> 00:09:23,550
Maybe a system going down, maybe a database not working,

135
00:09:23,620 --> 00:09:27,010
maybe there's a performance issue, maybe there's a scalability issue,

136
00:09:27,080 --> 00:09:30,754
but it was more speculative. So we really didn't have a concrete answer

137
00:09:30,792 --> 00:09:34,526
to why that happened. Versus observability. Right. Which is data driven.

138
00:09:34,558 --> 00:09:39,170
So observability actually consolidates

139
00:09:39,330 --> 00:09:43,238
it ingests all the data from various infra applications, be it

140
00:09:43,244 --> 00:09:46,018
your cloud environment, be your on premise environment.

141
00:09:46,114 --> 00:09:50,166
And it then analyzes that data to find insights,

142
00:09:50,198 --> 00:09:54,134
to find correlations, to find the patterns

143
00:09:54,182 --> 00:09:57,766
that are required to, let's say, track your bottleneck.

144
00:09:57,798 --> 00:10:01,294
So that's basically the difference what when versus what when, why,

145
00:10:01,332 --> 00:10:05,534
how. So that's basically the

146
00:10:05,572 --> 00:10:08,830
next generation of monitoring. If you have to basically

147
00:10:08,900 --> 00:10:12,206
define it that way, which is observability. Right. Then you

148
00:10:12,228 --> 00:10:15,280
have expected problems and unexpected problems.

149
00:10:17,170 --> 00:10:20,626
When we are doing this comparison, expected is something that there is

150
00:10:20,648 --> 00:10:24,062
something happened in the system. All right? So these known unknowns,

151
00:10:24,126 --> 00:10:27,062
we know that this problem has happened, and now we have to do a course

152
00:10:27,116 --> 00:10:30,614
correction versus the unexpected problem, which is where

153
00:10:30,652 --> 00:10:34,534
you basically try and predict that, okay, something is

154
00:10:34,572 --> 00:10:36,920
going to happen in, let's say,

155
00:10:37,530 --> 00:10:41,386
this node or something is going to happen in this component or this service,

156
00:10:41,488 --> 00:10:44,666
and this is what you need to do to basically correct it. So those

157
00:10:44,688 --> 00:10:48,566
are the two differences. Something which is more predictive versus more situational

158
00:10:48,758 --> 00:10:52,042
data silos. Yes. Monitoring was more built on data silos,

159
00:10:52,106 --> 00:10:55,226
limited access to the data about your applications,

160
00:10:55,258 --> 00:10:59,114
about your infra, about your various solution

161
00:10:59,162 --> 00:11:02,454
components versus data in one place where you're basically aggregating

162
00:11:02,602 --> 00:11:05,950
data from various solutions, various systems,

163
00:11:06,030 --> 00:11:10,210
and then analyzing it to find patterns, to find insights,

164
00:11:11,350 --> 00:11:14,974
and basically leverage that to have actionable,

165
00:11:15,102 --> 00:11:18,406
let's say, decisions taken in terms of how we can improvise the

166
00:11:18,428 --> 00:11:22,322
uptown and availability. And then there was data sampling versus instrument,

167
00:11:22,386 --> 00:11:26,102
everything, which means that we have those

168
00:11:26,156 --> 00:11:30,058
elements monitoring 24 7365 days a week,

169
00:11:30,224 --> 00:11:33,690
making sure that there's no downtime on those systems.

170
00:11:34,670 --> 00:11:38,854
Sorry. As for Gartner, and that's

171
00:11:38,902 --> 00:11:42,570
probably something which says that more and more systems,

172
00:11:42,650 --> 00:11:46,382
more and more, let's say organizations, are adapting it,

173
00:11:46,516 --> 00:11:49,754
knowing what value it brings in knowing how critical

174
00:11:49,802 --> 00:11:53,298
it is, knowing what impact can it make on

175
00:11:53,384 --> 00:11:56,260
system availability and overall, let's say,

176
00:11:57,270 --> 00:12:01,138
in terms of the customer experiences, et cetera. So I

177
00:12:01,144 --> 00:12:04,194
think this is something that is a critical platform,

178
00:12:04,312 --> 00:12:08,374
critical layer of

179
00:12:08,412 --> 00:12:11,910
your it landscapes in the current era.

180
00:12:13,290 --> 00:12:16,834
So we come to next slide, which actually talks about telemetry.

181
00:12:16,962 --> 00:12:21,382
So it is basically an open telemetry architecture which

182
00:12:21,436 --> 00:12:24,390
is arrived by CNCF,

183
00:12:24,810 --> 00:12:28,786
or rather driven by CNCF. I'm sure we have other isvs

184
00:12:28,818 --> 00:12:33,066
and product companies and SIS and consulting organizations supporting

185
00:12:33,098 --> 00:12:36,320
it and driving that community part. But yes,

186
00:12:37,170 --> 00:12:40,974
those are the core pillars of telemetry, which means that those

187
00:12:41,012 --> 00:12:44,702
three elements, right, the telemetry tribes, metrics, logs and traces,

188
00:12:44,846 --> 00:12:48,594
are the ones that are leveraged or

189
00:12:48,632 --> 00:12:52,050
are the parameters that are leveraged to build

190
00:12:52,120 --> 00:12:55,334
your observability stack. Matrixes are nothing but

191
00:12:55,372 --> 00:12:59,160
numeric values measured over an interval of time.

192
00:12:59,690 --> 00:13:03,174
And this is something that can be

193
00:13:03,292 --> 00:13:06,770
related to your cpu, memory,

194
00:13:06,930 --> 00:13:10,602
network bandwidth, et cetera. And those are the ones that

195
00:13:10,736 --> 00:13:15,270
are gathered in your observability

196
00:13:15,350 --> 00:13:19,046
stack. Then we have logs, right? These are the time stamped

197
00:13:19,078 --> 00:13:22,958
text records of the events that occurred at particular interval or a

198
00:13:22,964 --> 00:13:26,510
particular time. Which means stack trace.

199
00:13:27,090 --> 00:13:30,378
It means the call stack, right? What API

200
00:13:30,394 --> 00:13:33,906
is getting called, what time it is getting called.

201
00:13:34,008 --> 00:13:37,826
That API calls which other support APIs, which other things are

202
00:13:37,848 --> 00:13:42,370
embedded into that API. So that entire logging is something that basically

203
00:13:42,440 --> 00:13:45,954
a second type of telemetry parameter, and the third

204
00:13:45,992 --> 00:13:49,366
is a traces, right? And this represents the end

205
00:13:49,388 --> 00:13:52,674
to end journey of a user request to do the entire distributed architecture,

206
00:13:52,722 --> 00:13:56,182
which means it's not just related to your single process

207
00:13:56,236 --> 00:14:00,054
or application, it actually cuts across your various nodes,

208
00:14:00,102 --> 00:14:03,660
various applications and systems to come up

209
00:14:04,670 --> 00:14:07,786
with the details around what is exactly happening in terms

210
00:14:07,808 --> 00:14:11,066
of your end to end user journey. So these three parameters, or these

211
00:14:11,088 --> 00:14:14,510
three telemetry types are the ones that are recorded, are gathered,

212
00:14:15,490 --> 00:14:19,840
and there are derivatives of this that basically constitutes the entire,

213
00:14:20,210 --> 00:14:24,226
let's say, gamut of things around the observability platform,

214
00:14:24,408 --> 00:14:30,034
the user experience, the uptime, the availability, everything is

215
00:14:30,072 --> 00:14:33,538
then calculated based on these parameters, even the KPIs and the

216
00:14:33,544 --> 00:14:36,942
keras, I'll come to that in a bit. But these are the key ones.

217
00:14:37,016 --> 00:14:41,094
And this is basically an opal telemetry framework. All the

218
00:14:41,212 --> 00:14:44,694
isvs and open source tools and the hyperscalers are the ones

219
00:14:44,732 --> 00:14:48,022
which more or less, in a way have to, let's say follow

220
00:14:48,076 --> 00:14:51,866
it, have to abide by it, have to align with

221
00:14:51,888 --> 00:14:55,350
this framework. Because I think ultimately these are the best practices,

222
00:14:55,430 --> 00:14:59,418
right? So I think that's about telemetry, pillars of

223
00:14:59,424 --> 00:15:03,600
telemetry. And here is a good,

224
00:15:03,970 --> 00:15:07,914
let's say details around what are the KPIs

225
00:15:07,962 --> 00:15:11,498
in the KRS that are impacted by your observability,

226
00:15:11,594 --> 00:15:15,410
right? So this is customer experience being one thing,

227
00:15:15,560 --> 00:15:19,134
which is making sure that the impact

228
00:15:19,182 --> 00:15:24,114
on the end to end customer journeys is something that is

229
00:15:24,152 --> 00:15:27,830
something that is also observed, that is also monitoring by

230
00:15:27,900 --> 00:15:32,194
observability. Then there is MTTR and MTBF,

231
00:15:32,242 --> 00:15:36,166
right? So there is mean time to repair and mean time between failures. So if

232
00:15:36,188 --> 00:15:39,382
you have a system in place which can predict

233
00:15:39,526 --> 00:15:43,386
the issues even before they happen, I'm sure all these parameters would

234
00:15:43,408 --> 00:15:46,090
be under control, right? MPTR and MPBF.

235
00:15:46,750 --> 00:15:50,806
It can actually do the

236
00:15:50,928 --> 00:15:54,910
analysis, it can find the insights, it can find the patterns,

237
00:15:55,410 --> 00:15:58,526
it can find the correlations between those patterns and come

238
00:15:58,548 --> 00:16:02,154
up with a decision with an insight

239
00:16:02,202 --> 00:16:05,700
that can be leveraged to do a course correction in terms of

240
00:16:07,910 --> 00:16:12,082
your entire portfolio of applications and

241
00:16:12,136 --> 00:16:15,170
solutions. Then there's reliability and availability.

242
00:16:15,530 --> 00:16:20,262
Definitely. All these parameters are something that are directly getting

243
00:16:20,316 --> 00:16:23,394
impacted by observability. It improves reliability,

244
00:16:23,442 --> 00:16:27,106
it improves availability based on the overall,

245
00:16:27,218 --> 00:16:30,886
let's say goals and objectives that you have. So if there's three nines, if there's

246
00:16:30,918 --> 00:16:35,434
four nines, five nines, right. So I think, I'm sure we

247
00:16:35,472 --> 00:16:39,258
can actually configure these

248
00:16:39,344 --> 00:16:43,614
policies and processes and

249
00:16:43,652 --> 00:16:48,446
rules to make sure that we have this in

250
00:16:48,468 --> 00:16:53,274
control, right? We have this architected,

251
00:16:53,322 --> 00:16:56,042
we have this defined and monitored,

252
00:16:56,106 --> 00:16:59,426
managed as per what the SLas are.

253
00:16:59,528 --> 00:17:03,522
Performance. Yes, it does have an impact on the performance and

254
00:17:03,656 --> 00:17:07,846
scalability both. It can actually provide you

255
00:17:08,028 --> 00:17:11,574
with so much data around, right? You're gathering about

256
00:17:11,612 --> 00:17:15,794
your services, about your network calls,

257
00:17:15,842 --> 00:17:18,150
about your distributed tracing,

258
00:17:18,310 --> 00:17:21,990
logging, all these elements

259
00:17:22,070 --> 00:17:25,846
that come in, right. If you consolidate these details,

260
00:17:25,878 --> 00:17:29,942
you will ultimately find that we will

261
00:17:30,016 --> 00:17:34,314
be having the insights gathered from the various

262
00:17:34,362 --> 00:17:37,982
endpoints, from the various nodes to make sure that we

263
00:17:38,116 --> 00:17:42,158
improve these parameters. We have these parameters under control

264
00:17:42,244 --> 00:17:46,158
so that it doesn't really impact

265
00:17:46,254 --> 00:17:49,682
the user experience, uptime and the availability. So those are

266
00:17:49,736 --> 00:17:51,650
about the KPIs and the KRAs.

267
00:17:53,030 --> 00:17:56,200
This is in terms of the platform objectives, right?

268
00:17:56,890 --> 00:17:59,800
If one decides to build an observability platform,

269
00:18:00,650 --> 00:18:04,454
what constitutes that observability platform? What would really go into

270
00:18:04,492 --> 00:18:06,950
the platform? What are the solution building blocks,

271
00:18:08,030 --> 00:18:09,850
what are the infrastructure elements,

272
00:18:10,990 --> 00:18:15,690
what kind of, let's say what

273
00:18:15,760 --> 00:18:19,606
solutions or tools you would want to leverage, whether it's isvs,

274
00:18:19,638 --> 00:18:21,230
whether it's open source tooling,

275
00:18:23,010 --> 00:18:26,746
whether it's specific to any hyperscalers like Azure or AWS.

276
00:18:26,778 --> 00:18:30,858
So this is just kind of a platform objectives

277
00:18:31,034 --> 00:18:34,770
in terms of what you want to achieve via this observability platform.

278
00:18:34,840 --> 00:18:38,546
So it definitely enhances the visibility of system performance and

279
00:18:38,568 --> 00:18:42,370
health as we saw all the KRAs and the KPIs.

280
00:18:42,790 --> 00:18:46,134
Then it discovers and addresses unknown issues

281
00:18:46,172 --> 00:18:49,702
and with accurate insights. So it has that elements which are built into

282
00:18:49,756 --> 00:18:54,018
it, about root cause analysis, about pattern identification,

283
00:18:54,194 --> 00:18:57,522
about insights, et cetera. So this basically

284
00:18:57,596 --> 00:19:01,034
is that element. Then there are fewer problems and backouts as a result

285
00:19:01,072 --> 00:19:04,300
of predictive capabilities. So it can actually do that.

286
00:19:08,670 --> 00:19:12,830
It can analyze various issues

287
00:19:12,900 --> 00:19:16,720
and bottlenecks that you have and then make sure that you have the

288
00:19:17,170 --> 00:19:20,666
right set of rules deployed, right set of policies deployed

289
00:19:20,698 --> 00:19:24,478
in your landscape. Then comes the predict issues

290
00:19:24,564 --> 00:19:28,334
based on system behavior by

291
00:19:28,372 --> 00:19:31,754
combining observability with aiops, machine learning and automation.

292
00:19:31,882 --> 00:19:35,720
So this is the second stage of your

293
00:19:36,890 --> 00:19:40,726
maturity, right? The first being you have observability in

294
00:19:40,748 --> 00:19:45,174
place now you have to build aiops. Aops actually includes other

295
00:19:45,212 --> 00:19:48,810
elements as well. Not just monitoring, not just observability.

296
00:19:49,310 --> 00:19:52,154
We'll have the ITSm bit as well.

297
00:19:52,272 --> 00:19:55,020
We'll have the automation bit as well into it,

298
00:19:56,510 --> 00:19:59,802
which will make sure that all that

299
00:19:59,856 --> 00:20:03,950
you do, all that you can monitor

300
00:20:04,370 --> 00:20:07,658
in those domains can be leveraged to have your AI Ops,

301
00:20:07,674 --> 00:20:11,326
which is basically nothing but making sure that you

302
00:20:11,348 --> 00:20:15,794
have the artificial intelligence built into it, so that there

303
00:20:15,832 --> 00:20:19,780
are less manual interventions to drive your processes and

304
00:20:20,150 --> 00:20:23,906
orchestrate various, let's say, scenarios that you would

305
00:20:23,928 --> 00:20:27,422
have. So those are what AIops is. And I have

306
00:20:27,496 --> 00:20:31,270
kind of a slide also explaining that. Then catch resolve issues

307
00:20:31,340 --> 00:20:35,094
in early phases of software development process. This is something

308
00:20:35,132 --> 00:20:38,826
that relates to while you are actually building your software, right? If you

309
00:20:38,848 --> 00:20:42,634
have that entire element which

310
00:20:42,672 --> 00:20:45,130
goes through your CI CD automation,

311
00:20:46,510 --> 00:20:50,826
you can actually leverage a lot of tools around that in

312
00:20:50,848 --> 00:20:54,218
your pre production, in your staging before it finally goes to production,

313
00:20:54,314 --> 00:20:57,610
to make sure that you have the right quality of platforms deployed,

314
00:20:57,690 --> 00:21:00,894
right quality of applications deployed, and deep dive into

315
00:21:00,932 --> 00:21:05,474
logs and inspect stack trace error. So this is again, something that is

316
00:21:05,512 --> 00:21:08,674
already covered in the earlier point, and then

317
00:21:08,792 --> 00:21:12,562
the framework part, which basically is nothing but making

318
00:21:12,616 --> 00:21:16,854
sure that once you have those components or

319
00:21:16,892 --> 00:21:20,214
the platform built, created and deployed, you will

320
00:21:20,252 --> 00:21:24,054
make sure that there is the right. So I think each of these

321
00:21:24,252 --> 00:21:27,618
basically mentions about the system of duty.

322
00:21:27,634 --> 00:21:30,700
So if you go to each of these points,

323
00:21:31,470 --> 00:21:35,290
what does it finally do once you have the platform deployed,

324
00:21:35,630 --> 00:21:38,746
what it originally does. So it makes sure that the overall health of the

325
00:21:38,768 --> 00:21:42,110
system, which is basically the uptime and the availability,

326
00:21:44,530 --> 00:21:48,000
is something that is as per

327
00:21:48,530 --> 00:21:52,506
the superior SLA, then we have tooling to

328
00:21:52,548 --> 00:21:55,010
help debug in production systems.

329
00:21:55,830 --> 00:21:59,714
So I think we'll have the exact set of tools with

330
00:21:59,752 --> 00:22:03,074
us to analyze the issues. If something happens

331
00:22:03,112 --> 00:22:07,382
in production, why it happened and what is it that is needed to correct

332
00:22:07,436 --> 00:22:10,982
it and fix it, is what is also

333
00:22:11,036 --> 00:22:15,046
one of the, let's say, things that the

334
00:22:15,068 --> 00:22:20,134
observability platform provides, then you can diagnose

335
00:22:20,182 --> 00:22:23,386
infrastructure problems in production, do the root cause analysis as

336
00:22:23,408 --> 00:22:23,980
well,

337
00:22:27,070 --> 00:22:31,120
which is a capability that the platform provides. And as I said,

338
00:22:31,810 --> 00:22:35,754
it's unknown, unknowns, right? We really have no clue

339
00:22:35,802 --> 00:22:39,680
in terms of what may come up, but the platform

340
00:22:41,250 --> 00:22:44,654
has the intelligence to make sure that it can analyze your data

341
00:22:44,772 --> 00:22:48,750
from various endpoints, from various nodes, to make sure that it does the

342
00:22:48,820 --> 00:22:52,654
anomaly detection and

343
00:22:52,772 --> 00:22:56,802
make sure that time and availability is maintained.

344
00:22:56,866 --> 00:23:01,240
So this is basically the platform framework. This is

345
00:23:02,250 --> 00:23:05,430
the reference architecture for observability.

346
00:23:06,490 --> 00:23:10,490
If you see it's a kind of, let's say pipeline

347
00:23:10,910 --> 00:23:16,214
or a funnel, which starts with ingesting

348
00:23:16,262 --> 00:23:21,390
data from various endpoints into

349
00:23:21,460 --> 00:23:25,246
your observability stack. The first stage of

350
00:23:25,268 --> 00:23:28,878
that platform is data ingestion and collection, which collects the

351
00:23:28,884 --> 00:23:32,074
log data, which collects the application performance

352
00:23:32,122 --> 00:23:35,306
monitoring data, which collects the metrics data, the uptime

353
00:23:35,338 --> 00:23:39,086
data, and user experience data as well, right? The second stage

354
00:23:39,118 --> 00:23:42,770
of it is aggregation and processing. So the second stage is where you actually

355
00:23:42,840 --> 00:23:47,590
make sure that the data is in the right quality right

356
00:23:47,660 --> 00:23:51,670
format, and then the data is aggregated to derive

357
00:23:52,090 --> 00:23:55,606
insights and

358
00:23:55,788 --> 00:23:59,894
also run various machine learning algorithms on

359
00:23:59,932 --> 00:24:02,962
it to have the solution

360
00:24:03,026 --> 00:24:06,982
created so that we can leverage it for anomaly detection,

361
00:24:07,046 --> 00:24:10,730
root cause analysis, pattern discovery, et cetera. So the next stage is

362
00:24:10,800 --> 00:24:14,382
nothing but that analysis part, that machine learning part. So while you have the data

363
00:24:14,436 --> 00:24:18,126
in the right format, it's aggregated. So I think

364
00:24:18,308 --> 00:24:21,790
it's typically three stages, right? So first stage is the raw data,

365
00:24:21,860 --> 00:24:24,818
then you have the cleansed data, and the third you have the aggregated data.

366
00:24:24,904 --> 00:24:29,506
But this machine learning part, right, which actually is like a

367
00:24:29,688 --> 00:24:32,706
system which will run through the data

368
00:24:32,808 --> 00:24:37,190
and make sure that it finds the patterns, it finds

369
00:24:38,170 --> 00:24:41,734
the insights based on the

370
00:24:41,772 --> 00:24:44,678
various, let's say, things,

371
00:24:44,764 --> 00:24:47,800
various rules that would be there.

372
00:24:49,470 --> 00:24:53,786
So this is basically something that is like a

373
00:24:53,808 --> 00:24:58,902
system which goes in a kind of, let's say circular

374
00:24:58,966 --> 00:25:02,654
manner, right? And finally, when you

375
00:25:02,692 --> 00:25:06,654
have that third stage, the fourth stage is the

376
00:25:06,692 --> 00:25:08,910
alerts and your dashboards,

377
00:25:12,470 --> 00:25:16,194
which will be provided to your ops team,

378
00:25:16,392 --> 00:25:18,820
to your SRE team to basically,

379
00:25:21,430 --> 00:25:24,514
finally, let's say, understand the

380
00:25:24,552 --> 00:25:28,502
various elements of your it landscape and

381
00:25:28,556 --> 00:25:31,560
make sure that all the systems are up and running.

382
00:25:32,170 --> 00:25:33,830
There is also an element,

383
00:25:36,250 --> 00:25:39,466
or rather the self healing infrastructure, where in

384
00:25:39,488 --> 00:25:43,290
case there's something

385
00:25:43,360 --> 00:25:47,178
that needs to be fixed, right. The systems can

386
00:25:47,184 --> 00:25:50,666
be built in such a way that even without your service desk

387
00:25:50,698 --> 00:25:54,126
intervention, even without your level one support

388
00:25:54,228 --> 00:25:57,566
or level two supports intervention, the system would be

389
00:25:57,588 --> 00:26:01,614
able to roll out a

390
00:26:01,652 --> 00:26:05,282
fixed basis of some of the issues

391
00:26:05,416 --> 00:26:08,866
that defined in the applications, right, in your

392
00:26:08,888 --> 00:26:12,766
it landscape. So these are systems that invariably

393
00:26:12,878 --> 00:26:16,790
are, let's say, converging towards self

394
00:26:16,940 --> 00:26:20,674
or autonomous systems, where we'll have less and less lean

395
00:26:20,722 --> 00:26:24,486
teams to manage that entire gamut of

396
00:26:24,508 --> 00:26:27,640
your infrastructure and application. So that's about

397
00:26:30,030 --> 00:26:33,900
the observability platform architecture. I would

398
00:26:35,230 --> 00:26:38,870
want to just touch upon

399
00:26:39,030 --> 00:26:40,830
the logical architecture,

400
00:26:42,210 --> 00:26:45,630
which basically has six different elements,

401
00:26:46,290 --> 00:26:49,534
or six different, let's say,

402
00:26:49,572 --> 00:26:53,282
data elements that are captured. So there's log

403
00:26:53,336 --> 00:26:57,266
data, there is metrics data, there is synthetic data, there is

404
00:26:57,288 --> 00:27:00,446
APM data, user experience and uptime,

405
00:27:00,478 --> 00:27:04,146
right? So if you see each of them, if you

406
00:27:04,168 --> 00:27:07,826
see the metrics data, for example, it's the host and container

407
00:27:07,858 --> 00:27:13,590
matrices, then we have the database matrices,

408
00:27:14,810 --> 00:27:23,334
then there is a network metrics as well. So if

409
00:27:23,372 --> 00:27:27,242
there is a kind of, let's say a system

410
00:27:27,296 --> 00:27:31,006
that you built, you basically make sure that these set

411
00:27:31,028 --> 00:27:34,446
of data elements are the ones that are ingested into the platform.

412
00:27:34,548 --> 00:27:39,982
And this is what is leveraged to find insights and

413
00:27:40,116 --> 00:27:43,566
patterns and do the root cause analysis.

414
00:27:43,598 --> 00:27:47,154
I think it may sound very

415
00:27:47,192 --> 00:27:51,474
simplistic when I'm explaining it, but I'm sure there

416
00:27:51,512 --> 00:27:55,226
is these things that are ingested,

417
00:27:55,278 --> 00:27:58,710
they run into terabytes and petabytes, because I think we are monitoring the system

418
00:27:58,780 --> 00:28:01,080
every second to see the,

419
00:28:02,410 --> 00:28:06,566
to actually observe what exactly is happening in

420
00:28:06,588 --> 00:28:09,050
the applications in your infrastructure.

421
00:28:12,750 --> 00:28:16,858
I think the kind of complexities that we have in

422
00:28:16,864 --> 00:28:19,994
the application, I am sure with these

423
00:28:20,032 --> 00:28:23,626
kind of complexities, I think there is no way but to leverage

424
00:28:23,738 --> 00:28:28,014
automation. There is no way but to leverage AI. There's no way but to

425
00:28:28,212 --> 00:28:31,966
only leverage these cutting edge platforms to make sure that

426
00:28:31,988 --> 00:28:34,770
your uptime and your availability is maintained.

427
00:28:35,910 --> 00:28:38,980
I might just want to cover a few more slides here.

428
00:28:39,830 --> 00:28:43,474
One pertaining to. Yeah,

429
00:28:43,512 --> 00:28:47,266
so I think a quick one. This is the tooling

430
00:28:47,298 --> 00:28:51,094
stack of

431
00:28:51,132 --> 00:28:55,126
your system. One is, one on

432
00:28:55,148 --> 00:28:58,626
the left side is the one that actually is an open source

433
00:28:58,658 --> 00:29:02,242
hybrid stack, which constitutes logtash, promntus,

434
00:29:02,306 --> 00:29:06,406
nagios, jagger, java, melody, elasticsearch and kibana.

435
00:29:06,598 --> 00:29:09,734
And the one on the right is open source track, leveraging elk,

436
00:29:09,782 --> 00:29:13,690
which is elastic

437
00:29:14,270 --> 00:29:17,946
search, lockdash and kibana. So this is a mix

438
00:29:17,978 --> 00:29:21,886
of these two things I think ultimately depends on what are

439
00:29:21,908 --> 00:29:25,614
your final requirements. I think the more concrete and

440
00:29:25,652 --> 00:29:29,506
focused solutions you have, there's more capability and features in it.

441
00:29:29,688 --> 00:29:32,626
But definitely I think that's something that needs to be analyzed on a case to

442
00:29:32,648 --> 00:29:36,626
case basis. But this is the open source, let's say stacks

443
00:29:36,658 --> 00:29:39,874
that are typically leveraged for various tiers,

444
00:29:40,002 --> 00:29:44,002
various, let's say stages

445
00:29:44,066 --> 00:29:47,074
that you have as part of your monitoring platform logging, monitoring,

446
00:29:47,202 --> 00:29:49,850
infra monitoring, app monitoring, distributed tracing,

447
00:29:50,270 --> 00:29:54,042
user experience monitoring, et cetera. So I think this basically gives a view

448
00:29:54,176 --> 00:29:56,650
on the tooling part or the tooling architecture.

449
00:29:57,470 --> 00:30:01,406
I think I have almost reached the end of the

450
00:30:01,428 --> 00:30:05,582
presentation. I think rest is. I probably just want to basically touch

451
00:30:05,636 --> 00:30:08,718
upon that. These are the KrAs and

452
00:30:08,724 --> 00:30:12,490
the KPIs that you typically

453
00:30:12,650 --> 00:30:16,026
have built into some of these tools. So you really don't

454
00:30:16,058 --> 00:30:20,306
have to do the heavy lifting around it. You'll make sure that some

455
00:30:20,328 --> 00:30:23,534
of the templates that are there that are rolled out by various

456
00:30:23,582 --> 00:30:27,166
tools, you can just leverage them, do a bit of customization,

457
00:30:27,278 --> 00:30:30,934
do some element of configuration, and they are still up and running. So these are

458
00:30:30,972 --> 00:30:34,262
the various KrIs and the KPIs, the ones that you just saw, the log data,

459
00:30:34,316 --> 00:30:38,360
matrixes data. This is basically what constitutes that. And this is around

460
00:30:38,970 --> 00:30:42,502
the matrix's part. A lot of templates can be leveraged

461
00:30:42,566 --> 00:30:46,410
to build these solutions. And I think this basically is covering

462
00:30:46,830 --> 00:30:50,098
and explaining the elements around applications, the databases

463
00:30:50,214 --> 00:30:54,074
and things like that. This is the dashboard, an azure

464
00:30:54,122 --> 00:30:58,046
monitoring dashboard in terms of what exactly it looks like

465
00:30:58,148 --> 00:31:00,670
when it comes to complex landscapes,

466
00:31:01,010 --> 00:31:04,726
monitoring the security, the application side of things, the infrared

467
00:31:04,778 --> 00:31:08,066
network. But this is just kind of a simplistic view. I'm sure you would

468
00:31:08,088 --> 00:31:11,614
have seen all the command

469
00:31:11,662 --> 00:31:15,540
centers with a number of,

470
00:31:16,790 --> 00:31:20,266
let's say, dashboards that you can find in a room where the SRA

471
00:31:20,318 --> 00:31:23,878
teams and the Ops teams are actually sort of monitoring it

472
00:31:24,044 --> 00:31:27,282
all the time. So this is basically just a view on what it constitutes.

473
00:31:27,346 --> 00:31:30,806
It's probably just extrapolated to the complexity you have in the landscape.

474
00:31:30,838 --> 00:31:34,922
And that's probably the number of, let's say, elements that you will want to basically

475
00:31:34,976 --> 00:31:38,458
analyze, right? So I think that is about

476
00:31:38,544 --> 00:31:42,094
it. I just want one last thing to

477
00:31:42,132 --> 00:31:45,310
include is about aiops. Aiops.

478
00:31:47,090 --> 00:31:50,734
It is the next stage of your

479
00:31:50,772 --> 00:31:54,286
solutioning or your platform. So it's just not

480
00:31:54,308 --> 00:31:58,202
limited to monitoring. It includes your itsm and automation

481
00:31:58,266 --> 00:32:01,822
around that. And it also includes the things

482
00:32:01,876 --> 00:32:05,874
that you will basically leverage to have a kind have an autonomous

483
00:32:05,922 --> 00:32:09,238
architecture, right? So it's a mix of those things, right.

484
00:32:09,324 --> 00:32:12,710
You observe, you engage and you act. So you do the automation.

485
00:32:13,130 --> 00:32:17,400
So I think these are the elements that basically

486
00:32:17,770 --> 00:32:21,382
are the next stage of, let's say, capabilities that you'll have in your landscape.

487
00:32:21,446 --> 00:32:25,546
I think the diagram on the left, it shows that the data collection is

488
00:32:25,728 --> 00:32:29,606
eventually from various systems and your application is not just limited

489
00:32:29,638 --> 00:32:33,190
to your observability stack. And then you have the machine learning systems

490
00:32:33,350 --> 00:32:37,182
to do the real time processing and the historic processing. And then the next level

491
00:32:37,236 --> 00:32:41,066
of let's check up capabilities to do the anomaly detection and pattern

492
00:32:41,098 --> 00:32:44,698
discovery. So this is about it. I think I have covered

493
00:32:44,794 --> 00:32:49,518
most of the things, some of the elements that I couldn't cover are there in

494
00:32:49,524 --> 00:32:53,786
my slide deck and I think that's

495
00:32:53,818 --> 00:32:57,560
about it. I've, on the last slide, I just have

496
00:32:58,250 --> 00:33:01,894
my coordinates. You can just feel free to reach

497
00:33:01,932 --> 00:33:05,410
me if you have any doubts

498
00:33:05,570 --> 00:33:09,330
or you have any specific inputs around the presentation.

499
00:33:09,490 --> 00:33:13,586
And I hope you have found this presentation insightful

500
00:33:13,618 --> 00:33:17,046
and informative. Thank you. Thanks for joining. Thanks for watching. Thanks. Have a nice day.

501
00:33:17,068 --> 00:33:17,170
Bye.

