1
00:00:26,210 --> 00:00:30,200
Flask is a python framework that allows you to build web application.

2
00:00:30,890 --> 00:00:34,614
But in order to use flask you have to install a lot of libraries and

3
00:00:34,652 --> 00:00:38,534
dependencies in your local system that takes so much time and

4
00:00:38,572 --> 00:00:43,030
space. That's why we are going to use Google Colab.

5
00:00:43,370 --> 00:00:46,742
Google Colab is an online Jupyter notebook where you can write

6
00:00:46,796 --> 00:00:50,574
Python program in these small set else and

7
00:00:50,612 --> 00:00:54,062
execute them. So let's see how we can write.

8
00:00:54,196 --> 00:00:57,790
So web application means HTML code.

9
00:00:57,940 --> 00:01:01,440
So how can we write the HTML code here?

10
00:01:02,630 --> 00:01:06,002
In order to do that, if you want to

11
00:01:06,136 --> 00:01:09,570
display any HTML file using Flask, you have to

12
00:01:09,640 --> 00:01:13,346
create a folder as templates. So how can

13
00:01:13,368 --> 00:01:16,838
we create templates folder here? So for that

14
00:01:16,924 --> 00:01:20,882
we have a command as make directory

15
00:01:20,946 --> 00:01:25,186
in Google Colab MKDI and because I want to create folder

16
00:01:25,218 --> 00:01:28,950
with templates name. So I'm going to write templates

17
00:01:29,030 --> 00:01:30,860
and then minus p.

18
00:01:33,070 --> 00:01:36,362
So after writing the line you can

19
00:01:36,416 --> 00:01:40,786
simply run this code and you can see that here it's

20
00:01:40,838 --> 00:01:44,734
working. So if there is no error, you will get

21
00:01:44,772 --> 00:01:48,234
a green tick. We have already created

22
00:01:48,282 --> 00:01:51,646
templates folder, now it's time to write the HTML code in

23
00:01:51,668 --> 00:01:55,710
this folder. So for that we are going to use

24
00:01:55,780 --> 00:01:58,774
command as write file in Google Colab.

25
00:01:58,922 --> 00:02:02,574
And then because we want to write inside the templates folder,

26
00:02:02,702 --> 00:02:06,386
we are going to put the folder name. And now because I

27
00:02:06,408 --> 00:02:10,178
want to keep the name of my HTML file as index HTML,

28
00:02:10,354 --> 00:02:14,086
I'm going to do that now. Here you can write any HTML code.

29
00:02:14,188 --> 00:02:17,960
So I'm going to write HTML 40

30
00:02:19,710 --> 00:02:22,620
and I'm just going to write one text.

31
00:02:26,720 --> 00:02:30,430
Welcome to PI friends 42.

32
00:02:35,920 --> 00:02:40,160
And you can close your body tag and close your HTML.

33
00:02:41,220 --> 00:02:44,304
So let's add one styling as

34
00:02:44,342 --> 00:02:46,930
well. A very simple styling for this.

35
00:02:49,000 --> 00:02:51,750
I'm just going to put style tag here.

36
00:03:18,600 --> 00:03:21,350
So here you can put any HTML code.

37
00:03:22,440 --> 00:03:27,892
You can also copy and paste from

38
00:03:27,946 --> 00:03:31,984
other sources as well. Okay. Yeah, we have missed

39
00:03:32,032 --> 00:03:37,596
1% sign. So that's why it's giving the error you

40
00:03:37,738 --> 00:03:40,830
it. Yeah. So now it's working.

41
00:03:44,000 --> 00:03:47,310
Now let's see how we are going to write the flask code.

42
00:03:49,280 --> 00:03:53,104
So first we are going to import Os and

43
00:03:53,142 --> 00:03:56,716
then import threading because we are going to execute this flask

44
00:03:56,748 --> 00:04:01,664
code in a separate thread and

45
00:04:01,702 --> 00:04:05,940
then we are going to write from

46
00:04:06,090 --> 00:04:11,510
flask first let's see, let's run this and

47
00:04:12,120 --> 00:04:16,820
as we are going to host this flask code in ngroc server.

48
00:04:17,240 --> 00:04:20,456
Basically Ngroc will just give you a

49
00:04:20,478 --> 00:04:24,388
public URL which you can use and accessible

50
00:04:24,484 --> 00:04:28,172
only for 6 hours. So instead of deploying this code

51
00:04:28,226 --> 00:04:31,928
in a local host. I'm going to deploy this in Ngrok server.

52
00:04:32,104 --> 00:04:35,516
So first let's install that here.

53
00:04:35,618 --> 00:04:38,380
Otherwise it will give you error.

54
00:04:40,720 --> 00:04:43,500
So this is the library API ngroc.

55
00:04:44,020 --> 00:04:45,170
Let's install.

56
00:04:50,110 --> 00:04:53,770
Yeah. And now let's import flask.

57
00:05:03,740 --> 00:05:07,656
I have imported this file render template. In order to

58
00:05:07,758 --> 00:05:10,650
render my HTML file and display it,

59
00:05:22,450 --> 00:05:26,154
we have to import Ngroc as well from this API ngroc

60
00:05:26,202 --> 00:05:29,646
that we have installed before. Now here we are

61
00:05:29,668 --> 00:05:31,630
going to build one environment.

62
00:05:34,310 --> 00:05:48,064
I'll keep this environment name as flask and

63
00:05:48,102 --> 00:05:52,480
as we have to initialize this flask.

64
00:05:54,760 --> 00:05:57,670
So we are going to use this app.

65
00:06:08,040 --> 00:06:13,764
I'll provide the port as well. 5000 so

66
00:06:13,802 --> 00:06:17,416
in order to use Ngrock before it used to

67
00:06:17,438 --> 00:06:21,412
be free but now it requests authentication

68
00:06:21,476 --> 00:06:25,100
token. Authentication token is nothing but a key

69
00:06:25,170 --> 00:06:28,284
that you require to provide it here so

70
00:06:28,322 --> 00:06:31,900
that you can use this Ngrok. So how can you get

71
00:06:31,970 --> 00:06:33,740
this authentication token?

72
00:06:36,320 --> 00:06:39,856
You can just go to Ngrok. You can log in

73
00:06:40,038 --> 00:06:43,612
to the Ngrok website and you will easily

74
00:06:43,676 --> 00:06:47,104
get your authentication token. You can

75
00:06:47,142 --> 00:06:48,130
see it here.

76
00:06:50,280 --> 00:06:52,550
So I'll just copy this.

77
00:07:00,980 --> 00:07:02,850
Sorry. And paste it here.

78
00:07:07,720 --> 00:07:11,584
And now we are going to connect this with public URL.

79
00:07:11,712 --> 00:07:15,664
So we are going to connect our local URL with Ngrog.

80
00:07:15,792 --> 00:07:20,090
So for that there is a function as Ngrog connect

81
00:07:20,460 --> 00:07:23,924
and this port is for my public URL.

82
00:07:23,972 --> 00:07:27,400
So I'm going to connect it with Ngrok.

83
00:07:31,660 --> 00:07:35,544
And here I'll just print whether it's showing me that URL

84
00:07:35,592 --> 00:07:36,350
or not.

85
00:08:08,380 --> 00:08:10,484
I'm going to show that public URL.

86
00:08:10,532 --> 00:08:21,372
Here's now

87
00:08:21,426 --> 00:08:23,070
let's configure this.

88
00:08:37,460 --> 00:08:41,452
So basically flask work on several API

89
00:08:41,596 --> 00:08:45,060
and root. So here we are going to pass the root.

90
00:08:46,040 --> 00:08:49,684
So for by default if you pass

91
00:08:49,722 --> 00:08:53,076
it like this with this dash, that means it will take you

92
00:08:53,098 --> 00:08:57,496
to index HTML by default the

93
00:08:57,518 --> 00:09:01,368
main page. But here if you have lot of HTML files like

94
00:09:01,454 --> 00:09:05,272
home HTML or about HTML, then here you can pass

95
00:09:05,326 --> 00:09:09,148
as about. And then if your

96
00:09:09,314 --> 00:09:13,468
website, if anyone open anyone is root to about

97
00:09:13,634 --> 00:09:17,692
then it will render this code. But for now

98
00:09:17,746 --> 00:09:20,960
this will just take us to our main file.

99
00:09:21,380 --> 00:09:27,712
So here I'm going to use render template function and

100
00:09:27,846 --> 00:09:32,100
you can provide your file name, that is index HTML.

101
00:09:32,920 --> 00:09:36,656
And now it's time to run the flask

102
00:09:36,688 --> 00:09:38,180
in a separate thread.

103
00:09:44,620 --> 00:09:48,020
These are some by default code that you will easily

104
00:09:48,100 --> 00:10:06,862
find in ng doc server start

105
00:10:06,916 --> 00:10:10,426
function in order to start this thread. And now let's

106
00:10:10,458 --> 00:10:11,040
see.

107
00:10:23,510 --> 00:10:36,140
Okay, just comment this lined.

108
00:10:37,700 --> 00:10:41,052
Actually I have already used this authentication token.

109
00:10:41,196 --> 00:10:43,810
So now it's not letting me to use again.

110
00:10:44,920 --> 00:10:48,324
So I have changed this authentication token with

111
00:10:48,362 --> 00:10:54,396
new one. Now let's run this so

112
00:10:54,418 --> 00:10:58,000
you can see here you will get two URL. This one

113
00:10:58,070 --> 00:11:02,428
is our local URL, that is localhost

114
00:11:02,524 --> 00:11:05,824
and this one is the ng doc URL. So if you click on

115
00:11:05,862 --> 00:11:09,624
this link it will give you your HTML

116
00:11:09,692 --> 00:11:12,804
output. So similarly you can also create

117
00:11:12,922 --> 00:11:16,804
your new css file and new

118
00:11:16,842 --> 00:11:20,470
directory for different file and

119
00:11:22,200 --> 00:11:25,628
you can write the flask code and you can relink

120
00:11:25,664 --> 00:11:29,816
and render your template here and you will get one ndroc URL that

121
00:11:29,838 --> 00:11:32,904
will be accessible for 6 hours and

122
00:11:32,942 --> 00:11:36,476
along with one localhost URL. If you don't put ndroc and if

123
00:11:36,498 --> 00:11:40,492
you directly simply run the python code, you will only get this

124
00:11:40,546 --> 00:11:44,268
localhost URL which you cannot share it with anyone.

125
00:11:44,434 --> 00:11:48,188
But if you are creating some application and want to test

126
00:11:48,274 --> 00:11:51,564
whether it's working or not, and if you want to

127
00:11:51,602 --> 00:11:55,084
share that link with anyone. So for

128
00:11:55,122 --> 00:11:58,456
that ngrok is very much useful.

129
00:11:58,648 --> 00:12:01,620
So you can see this is our output.

130
00:12:02,120 --> 00:12:06,644
So that's how you can run this flask code in

131
00:12:06,682 --> 00:12:07,360
google collab.

