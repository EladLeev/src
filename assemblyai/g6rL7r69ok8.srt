1
00:00:00,250 --> 00:00:00,800
You.

2
00:00:22,740 --> 00:00:26,512
Hello and welcome to my video. I will make a simple multiplayer game

3
00:00:26,566 --> 00:00:30,760
in this video using react and socket IO

4
00:00:31,100 --> 00:00:34,772
before we begin, let's make a short brief we're going to implement

5
00:00:34,836 --> 00:00:38,692
a battleship game. What is battleship

6
00:00:38,756 --> 00:00:42,092
game? It's a game

7
00:00:42,146 --> 00:00:45,950
for two participants in which player makes

8
00:00:47,120 --> 00:00:52,344
turns, calling or otherwise communicating

9
00:00:52,392 --> 00:00:54,720
the coordinates on the opponent map.

10
00:00:55,220 --> 00:00:59,548
If the enemy has a ship on a viscord

11
00:00:59,564 --> 00:01:02,864
generates ship or its deck killed and the

12
00:01:02,902 --> 00:01:06,612
enemy makes another move a player's goal to be

13
00:01:06,666 --> 00:01:10,256
first to kill all opponent's ship.

14
00:01:10,368 --> 00:01:13,824
On the party enemies each player

15
00:01:13,872 --> 00:01:17,364
has two field, on the first he can see

16
00:01:17,402 --> 00:01:21,300
his own ship and on second opinion ship

17
00:01:24,840 --> 00:01:28,676
each player wake their move and if a player

18
00:01:28,868 --> 00:01:32,460
hits ship he can make another move until he missed.

19
00:01:33,760 --> 00:01:37,630
Each field has ten to ten cells and each

20
00:01:42,400 --> 00:01:46,640
each ship can be placed on vertical on horizontal

21
00:01:46,980 --> 00:01:51,536
but ships can overlap and of

22
00:01:51,558 --> 00:01:54,800
course ship should be hidden from the opponent.

23
00:01:56,820 --> 00:02:00,864
I saw many variants rules for this game and in

24
00:02:00,902 --> 00:02:04,892
our we're going to use next variation carrier

25
00:02:04,956 --> 00:02:09,252
five cells x one battleship

26
00:02:09,316 --> 00:02:12,868
four cell six two cruiser

27
00:02:13,044 --> 00:02:16,612
free cells and free items and destroyer two cells

28
00:02:16,676 --> 00:02:20,296
four items and

29
00:02:20,398 --> 00:02:23,784
how is going b interaction with player

30
00:02:23,832 --> 00:02:27,404
and server and opponent when

31
00:02:27,442 --> 00:02:31,084
player check on board some

32
00:02:31,122 --> 00:02:34,784
position it sends to server and

33
00:02:34,982 --> 00:02:39,170
server ask the opponent about what happens on

34
00:02:39,860 --> 00:02:43,964
this position open end make response

35
00:02:44,012 --> 00:02:47,744
with status can

36
00:02:47,782 --> 00:02:51,776
user make another move and new

37
00:02:51,798 --> 00:02:55,312
board status and server makes some cache for it

38
00:02:55,366 --> 00:03:01,656
and return results layer we

39
00:03:01,678 --> 00:03:06,040
can have next cell statuses unknown

40
00:03:09,260 --> 00:03:14,200
we don't know what happens on this board mist

41
00:03:14,560 --> 00:03:17,964
if we strictly know what on this place where

42
00:03:18,002 --> 00:03:21,784
are nothing killed if we have wrecked

43
00:03:21,832 --> 00:03:28,272
on second ship and field for

44
00:03:28,326 --> 00:03:32,400
access ship but status don't sell to open

45
00:03:32,470 --> 00:03:37,136
end and he replaced us unknown if

46
00:03:37,158 --> 00:03:40,272
we have that's all

47
00:03:40,326 --> 00:03:43,952
on status and

48
00:03:44,086 --> 00:03:48,696
let's make a little bit code I

49
00:03:48,718 --> 00:03:52,650
have prepared some boilerplate for it. We have here

50
00:03:53,580 --> 00:03:55,080
client folder,

51
00:03:57,180 --> 00:04:01,248
server folder and shared folder for components

52
00:04:01,284 --> 00:04:05,260
which will used on both sides and

53
00:04:05,330 --> 00:04:09,356
yeah I know it can be as a normal package but I'm a

54
00:04:09,378 --> 00:04:14,704
little bit lazy to create a normal package for

55
00:04:14,742 --> 00:04:18,050
client we require install

56
00:04:18,900 --> 00:04:24,684
also socket

57
00:04:24,732 --> 00:04:39,530
I o client it

58
00:04:42,700 --> 00:04:48,650
and for server we need to install

59
00:04:56,960 --> 00:05:01,976
expressjs course and circuit

60
00:05:02,008 --> 00:05:14,896
I o libraries and

61
00:05:15,078 --> 00:05:19,104
I'm going to start with shared libraries and first

62
00:05:19,142 --> 00:05:22,160
of all it's one side of library

63
00:05:22,580 --> 00:05:26,800
named the buffer and it will be used in generate

64
00:05:28,780 --> 00:05:32,312
it generate our

65
00:05:32,366 --> 00:05:41,560
boardroom

66
00:05:53,540 --> 00:06:02,384
create types file which

67
00:06:02,422 --> 00:06:06,236
contains cell status and one variation

68
00:06:06,268 --> 00:06:10,192
of ship and

69
00:06:10,326 --> 00:06:14,210
tilts for calculation position

70
00:06:18,100 --> 00:06:29,284
you it let's

71
00:06:29,332 --> 00:06:42,636
create generate board file as

72
00:06:42,658 --> 00:06:47,520
you can see very prepared because it

73
00:06:47,590 --> 00:06:50,944
will be not to take so much

74
00:06:50,982 --> 00:06:56,404
time your time function

75
00:06:56,442 --> 00:07:00,132
generate board accepts ships list and board

76
00:07:00,186 --> 00:07:04,004
sites which by default equal 100.

77
00:07:04,202 --> 00:07:08,256
What happens? We sequently place each of ships

78
00:07:08,288 --> 00:07:10,440
according the following principle.

79
00:07:13,740 --> 00:07:21,256
We get random ship at

80
00:07:21,278 --> 00:07:25,272
first of all we find all possible position for our ships and after

81
00:07:25,326 --> 00:07:28,812
it we take one of them random and place

82
00:07:28,866 --> 00:07:34,000
on board. For place on board we mark

83
00:07:34,070 --> 00:07:37,824
all positions as missed. It will

84
00:07:37,862 --> 00:07:41,072
be used for next iteration of place

85
00:07:41,126 --> 00:07:44,720
on board and after we marked it

86
00:07:44,790 --> 00:07:48,580
marked all we place our ship

87
00:07:49,080 --> 00:07:50,070
on the board.

88
00:07:55,480 --> 00:07:58,952
After we have placed all the ships we clear the game

89
00:07:59,006 --> 00:08:03,064
board and at all we have

90
00:08:03,262 --> 00:08:05,880
only field or unknown cells.

91
00:08:08,300 --> 00:08:12,284
Next what we need is check our

92
00:08:12,322 --> 00:08:14,030
board when sound will fire.

93
00:08:29,700 --> 00:08:36,416
What happens to here? This function takes this

94
00:08:36,438 --> 00:08:39,612
function takes current user

95
00:08:39,676 --> 00:08:43,060
playboards and position what we need to position

96
00:08:43,130 --> 00:08:47,184
what need to be checked and return boolean

97
00:08:47,232 --> 00:08:49,240
and new board status.

98
00:08:50,380 --> 00:08:54,120
If board position is unknown, we marked with a cell and

99
00:08:54,190 --> 00:09:00,024
return false and new board if

100
00:09:00,062 --> 00:09:06,924
this position is filled if

101
00:09:06,962 --> 00:09:10,776
this position is filled is not empty when we begin to check status

102
00:09:10,808 --> 00:09:14,912
of neighbor position and all direction from this

103
00:09:14,966 --> 00:09:18,892
point if all of them killed

104
00:09:18,956 --> 00:09:22,480
when we marked around ships

105
00:09:24,260 --> 00:09:27,840
as missed and return new board status.

106
00:09:28,820 --> 00:09:32,720
Next what we need to create is sunken ships.

107
00:09:46,060 --> 00:09:47,450
What happens here?

108
00:09:49,820 --> 00:09:54,092
The fatching text takes player current board and the return of

109
00:09:54,226 --> 00:09:57,784
sulkan ships verification algorithm

110
00:09:57,832 --> 00:10:01,260
is following. We go from

111
00:10:01,330 --> 00:10:04,976
left to right through all position

112
00:10:05,078 --> 00:10:08,864
and if position is marked skilled we

113
00:10:08,902 --> 00:10:12,640
checked top and left

114
00:10:12,710 --> 00:10:17,030
position and if equals one

115
00:10:19,960 --> 00:10:27,092
as missed we check right

116
00:10:27,146 --> 00:10:33,544
and bottom positions and

117
00:10:33,582 --> 00:10:38,708
if our ship has neighborhood everywhere

118
00:10:38,884 --> 00:10:42,424
missed, we mark this ship as sunken

119
00:10:42,552 --> 00:10:46,350
and in the end we sort from big to

120
00:10:47,280 --> 00:10:48,030
less.

121
00:10:50,400 --> 00:10:54,456
Also we need to get move

122
00:10:54,498 --> 00:10:58,000
ships that will be used for our AI

123
00:11:12,440 --> 00:11:16,084
function really similar to previous but we

124
00:11:16,122 --> 00:11:19,864
find no tank and ship and

125
00:11:19,982 --> 00:11:23,370
we check all available position for next move.

126
00:11:26,060 --> 00:11:29,112
Also we need to clear our

127
00:11:29,166 --> 00:11:41,980
board. I moved it in functional

128
00:11:42,960 --> 00:11:44,590
main principle of it.

129
00:11:46,260 --> 00:11:49,824
If we have onboard field position we

130
00:11:49,862 --> 00:11:54,144
replace it by zero and

131
00:11:54,262 --> 00:12:00,544
we need to check what we

132
00:12:00,582 --> 00:12:05,280
still have the fillet ships

133
00:12:08,020 --> 00:12:17,480
you it's

134
00:12:49,800 --> 00:12:53,700
okay. I think we finish with shared files

135
00:12:54,200 --> 00:12:57,972
files and let's create our

136
00:12:58,026 --> 00:13:01,432
backend. First of all we need

137
00:13:01,486 --> 00:13:05,960
to create server.

138
00:13:08,540 --> 00:13:13,736
Here's really easy and let's

139
00:13:13,768 --> 00:13:31,040
start from make AI almost

140
00:13:31,110 --> 00:13:34,332
forget expert

141
00:13:34,396 --> 00:13:49,530
check file it.

142
00:13:50,860 --> 00:13:54,660
Okay this is our eye. The main algorithm

143
00:13:54,820 --> 00:13:59,844
is following. We generate random board when initialize

144
00:13:59,972 --> 00:14:08,504
this status and when

145
00:14:08,542 --> 00:14:11,930
make moves we get user boards and

146
00:14:13,020 --> 00:14:16,508
five find rack chips and if we have some rack

147
00:14:16,524 --> 00:14:20,450
chips we fire for zero place

148
00:14:21,300 --> 00:14:25,008
otherwise we get random move get

149
00:14:25,094 --> 00:14:28,948
random unknown cell and

150
00:14:29,034 --> 00:14:33,110
make us move and also we

151
00:14:33,720 --> 00:14:37,508
need to handle use requests for

152
00:14:37,594 --> 00:14:43,444
hit we

153
00:14:43,482 --> 00:14:46,904
need let's create game file which

154
00:14:46,942 --> 00:14:49,960
represents main actions,

155
00:14:58,080 --> 00:15:02,110
the main class of game and the main task of this

156
00:15:04,980 --> 00:15:08,368
much simple he has

157
00:15:08,454 --> 00:15:12,672
cached user boards well.

158
00:15:12,726 --> 00:15:16,512
In the future it will be possible to create observer function so

159
00:15:16,566 --> 00:15:20,180
what third party can watch the process and switch

160
00:15:21,720 --> 00:15:25,350
active player depending on where answer.

161
00:15:29,340 --> 00:15:33,480
Also we need to cache games

162
00:15:43,100 --> 00:15:46,772
and create some observers

163
00:15:46,836 --> 00:15:53,696
for socket IO you

164
00:15:53,838 --> 00:16:00,976
it we

165
00:16:00,998 --> 00:16:04,320
need to implement next event handlers

166
00:16:04,740 --> 00:16:10,630
new game AI also

167
00:16:11,240 --> 00:16:15,172
fire v seven will be sent by

168
00:16:15,226 --> 00:16:20,456
user for check position and

169
00:16:20,638 --> 00:16:25,496
catch result to

170
00:16:25,518 --> 00:16:29,160
handle opponent's response to a check and for check

171
00:16:29,230 --> 00:16:34,140
and in our case it will be response for either

172
00:16:34,210 --> 00:16:36,780
request for position from user.

173
00:16:40,400 --> 00:16:56,996
Let's make new

174
00:16:57,018 --> 00:17:00,916
game AI we generate game id cache new

175
00:17:01,018 --> 00:17:04,656
create new game and send to user

176
00:17:04,848 --> 00:17:08,824
game created event. Next will

177
00:17:08,862 --> 00:17:17,944
be fire event and

178
00:17:18,062 --> 00:17:22,348
what happens here? At first of all we get current game

179
00:17:22,514 --> 00:17:25,950
by game id and check

180
00:17:26,320 --> 00:17:31,084
if current move user we

181
00:17:31,122 --> 00:17:36,864
gave our AE position and for

182
00:17:36,902 --> 00:17:40,736
check response and

183
00:17:40,918 --> 00:17:48,070
send this result for place

184
00:17:48,760 --> 00:17:52,452
new status in game class and send

185
00:17:52,506 --> 00:17:56,756
result. Also if

186
00:17:56,778 --> 00:18:00,890
we play in vfai we can from now

187
00:18:04,140 --> 00:18:08,250
make some moves from AI and check

188
00:18:08,700 --> 00:18:13,390
user's position and

189
00:18:14,880 --> 00:18:16,030
catch result.

190
00:18:19,680 --> 00:18:23,352
We also have game id and if current move game id

191
00:18:23,426 --> 00:18:27,232
we pass our data to

192
00:18:27,286 --> 00:18:30,560
AI and if AI

193
00:18:32,740 --> 00:18:37,036
is filled with position is catched

194
00:18:37,068 --> 00:18:40,390
with position he can make move again.

195
00:18:45,160 --> 00:18:49,032
Oh we've backend that's all.

196
00:18:49,086 --> 00:18:51,770
Let's make some little bit front end.

197
00:18:53,580 --> 00:18:57,960
We have boilerplate from yjs.

198
00:18:58,940 --> 00:19:13,480
Let's make some cleanup

199
00:19:13,780 --> 00:19:15,570
it here.

200
00:19:18,580 --> 00:19:22,044
What's our boilerplate also for gamer

201
00:19:22,092 --> 00:19:24,400
we need next variables.

202
00:19:27,220 --> 00:19:30,400
It's a sen it's opening boards,

203
00:19:30,480 --> 00:19:33,030
user board and game id.

204
00:19:34,840 --> 00:19:38,672
While it's neat sen it's current representation

205
00:19:38,736 --> 00:19:42,360
of what we need to draw opening boards

206
00:19:44,460 --> 00:19:47,892
for view. What happens on opening boards user boards it's

207
00:19:47,956 --> 00:19:51,496
our board and game id will be set on one

208
00:19:51,518 --> 00:19:52,920
of next moves.

209
00:19:56,700 --> 00:20:02,120
Also we need to perform next events

210
00:20:02,780 --> 00:20:14,912
from so it IO game

211
00:20:14,966 --> 00:20:18,592
created fire result and catch game

212
00:20:18,646 --> 00:20:22,244
created we give when game

213
00:20:22,282 --> 00:20:27,044
is really created fire result we

214
00:20:27,082 --> 00:20:30,596
have result of what we are fired and

215
00:20:30,698 --> 00:20:34,616
catch if someone to

216
00:20:34,638 --> 00:20:37,864
get know what missed here

217
00:20:38,062 --> 00:20:51,930
or no and

218
00:20:52,860 --> 00:21:10,720
let's create some components and

219
00:21:10,870 --> 00:21:19,530
styles it

220
00:21:23,260 --> 00:21:26,664
draw basic cell for our board. It can be

221
00:21:26,702 --> 00:21:30,696
clickable if you have

222
00:21:30,798 --> 00:21:34,490
special boolean variables and on click function

223
00:21:37,260 --> 00:21:40,836
after it. We need to draw user's

224
00:21:40,868 --> 00:21:49,664
board it it and

225
00:21:49,862 --> 00:21:56,320
styles for it's

226
00:22:06,020 --> 00:22:10,008
it's really simple function and

227
00:22:10,094 --> 00:22:13,480
to be in fact it's just a wrapper for cells

228
00:22:15,500 --> 00:22:19,096
and let's create some sense as

229
00:22:19,118 --> 00:22:23,432
we know we have four sense first

230
00:22:23,486 --> 00:22:27,916
of all sit up second game in

231
00:22:27,938 --> 00:22:31,436
the game and we have finish win and finish

232
00:22:31,538 --> 00:22:34,944
lose sense for our game

233
00:22:34,982 --> 00:22:39,552
result. Let's create

234
00:22:39,686 --> 00:22:40,640
setup.

235
00:22:55,160 --> 00:22:58,976
Here is set up. On the left side we show users

236
00:22:59,008 --> 00:23:02,824
board and on the right side we

237
00:23:02,862 --> 00:23:05,960
have two buttons generate and radio.

238
00:23:10,380 --> 00:23:13,864
User can see his generated board and if he likes

239
00:23:13,912 --> 00:23:17,532
it he can press ready. If not he press

240
00:23:17,586 --> 00:23:20,270
generate and makes new field.

241
00:23:20,880 --> 00:23:27,330
When we have and

242
00:23:28,420 --> 00:23:36,280
next stage is gameplay.

243
00:23:36,380 --> 00:23:40,596
Here is game. On left side we

244
00:23:40,618 --> 00:23:44,950
can see users board and on right side

245
00:23:46,360 --> 00:23:52,260
our opinions board and

246
00:23:52,410 --> 00:23:54,890
let's fill some.

247
00:23:57,100 --> 00:23:59,530
Let's use some sense.

248
00:24:21,380 --> 00:24:24,592
Also we need to create function on

249
00:24:24,646 --> 00:24:27,924
click radio which set

250
00:24:27,962 --> 00:24:33,892
up a user's board and send to our back end event

251
00:24:33,946 --> 00:24:39,396
what we are ready to play and

252
00:24:39,578 --> 00:24:44,916
on click board event which sent to backend users

253
00:24:44,948 --> 00:24:59,052
ask position and

254
00:24:59,186 --> 00:25:02,492
move handlers. First of all on game

255
00:25:02,546 --> 00:25:07,424
created and here

256
00:25:07,462 --> 00:25:10,610
is with set game id

257
00:25:12,660 --> 00:25:22,870
and change send to game next

258
00:25:23,320 --> 00:25:29,844
on fire result if

259
00:25:29,882 --> 00:25:34,024
backend sends what game over. On website we

260
00:25:34,062 --> 00:25:38,264
show send what user wins and return.

261
00:25:38,462 --> 00:25:42,844
Otherwise we set up current opinions board which

262
00:25:42,882 --> 00:25:48,844
will redraw and

263
00:25:48,962 --> 00:26:03,744
on catch event what

264
00:26:03,782 --> 00:26:07,264
happens on this file on this callback. At first of all

265
00:26:07,302 --> 00:26:11,236
we check users board for current position and get result

266
00:26:11,418 --> 00:26:16,548
and check if is game over and

267
00:26:16,714 --> 00:26:19,368
make response with current data.

268
00:26:19,534 --> 00:26:22,984
And if our board is

269
00:26:23,102 --> 00:26:25,492
loose we show what we lose.

270
00:26:25,636 --> 00:26:28,170
Otherwise update our board.

271
00:26:30,300 --> 00:26:33,050
Let's check what happens.

272
00:26:52,590 --> 00:26:56,282
McKenzie started on real

273
00:26:56,336 --> 00:27:10,930
sport and

274
00:27:11,080 --> 00:27:13,220
our front end started too.

275
00:27:22,510 --> 00:27:26,234
Okay? Yes.

276
00:27:26,352 --> 00:27:29,718
As we can see it's guinea

277
00:27:29,734 --> 00:27:32,960
rattle board. We can press guinea rate and

278
00:27:33,810 --> 00:27:37,342
it's change. When we press

279
00:27:37,396 --> 00:27:41,710
radio we show two fields hour and opponents.

280
00:27:41,870 --> 00:27:49,742
Let's play and check how. I'm lucky it's

281
00:27:49,806 --> 00:27:53,682
not correct colors but

282
00:27:53,736 --> 00:28:00,434
you can see what his answers and

283
00:28:00,552 --> 00:28:02,930
backend kills one of my ships.

284
00:28:06,110 --> 00:28:39,618
Mito and

285
00:28:39,704 --> 00:28:40,690
I'm Vin.

286
00:28:42,810 --> 00:28:46,438
Basically we made a little game. I understand what

287
00:28:46,524 --> 00:28:49,910
many aspects are not covered. For example

288
00:28:49,980 --> 00:28:54,946
normal multiplayer. But I think we're

289
00:28:54,978 --> 00:28:58,774
starting small and purpose of this video is to inspire

290
00:28:58,822 --> 00:29:02,940
you to create your own games. And what it's not difficult.

291
00:29:04,350 --> 00:29:07,686
Also what react can be used not only for

292
00:29:07,808 --> 00:29:11,822
forms from

293
00:29:11,876 --> 00:29:14,960
what we can improve in the current game.

294
00:29:16,370 --> 00:29:19,914
First of all, we can send some

295
00:29:19,972 --> 00:29:24,802
hash of our board to prevent what someone

296
00:29:24,856 --> 00:29:28,290
of players is cheating and changing his

297
00:29:28,360 --> 00:29:30,260
field during game.

298
00:29:32,070 --> 00:29:35,800
This happened next in the following way.

299
00:29:36,570 --> 00:29:40,550
First of all, when we generate board we make some hash.

300
00:29:42,410 --> 00:29:45,990
It can be MD five it's not so necessary

301
00:29:47,770 --> 00:29:51,386
and send it to backend and his

302
00:29:51,488 --> 00:29:55,386
story both hashes and in the end

303
00:29:55,408 --> 00:29:59,758
game one of hashes not

304
00:29:59,844 --> 00:30:03,070
equals. That means what someone cheat.

305
00:30:06,770 --> 00:30:10,562
Also possible to

306
00:30:10,616 --> 00:30:14,162
create AI based on some

307
00:30:14,216 --> 00:30:18,158
statistics. For example, after a few games

308
00:30:18,334 --> 00:30:22,082
AI can get some boards which

309
00:30:22,136 --> 00:30:25,554
played and

310
00:30:25,672 --> 00:30:29,374
calculate positions where most popular

311
00:30:29,422 --> 00:30:32,820
position and start playing from them.

312
00:30:35,630 --> 00:30:39,494
Yes, I think that's all. The source

313
00:30:39,542 --> 00:30:42,714
of this game will be available on QR code

314
00:30:42,752 --> 00:30:45,834
on screen. And thank you for watching,

315
00:30:46,032 --> 00:30:46,920
waiting for your questions.

