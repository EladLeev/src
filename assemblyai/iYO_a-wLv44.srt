1
00:01:28,210 --> 00:01:32,098
Hello everyone and welcome to inside your cloud databases session.

2
00:01:32,194 --> 00:01:35,874
The truth about your data security posture my name is Mor Manor

3
00:01:35,922 --> 00:01:39,574
head head head head head head of innovation operations to share

4
00:01:39,612 --> 00:01:43,498
with you with some insights about the importance of cloud data security posture,

5
00:01:43,594 --> 00:01:47,342
as well as presenting with you one of our latest innovations called

6
00:01:47,396 --> 00:01:51,470
Imperva Snapshot, a patent pending technology that can provide

7
00:01:51,620 --> 00:01:56,074
robust insight about the cloud data security posture of your databases.

8
00:01:56,202 --> 00:01:59,874
What we have on today at Xenja is a little bit about the current state

9
00:01:59,912 --> 00:02:03,326
of cloud and data security. Then we'll jump into snapshot

10
00:02:03,358 --> 00:02:06,238
technology and the importance of cloud data security posture.

11
00:02:06,334 --> 00:02:09,750
Then we'll move into more technical part of the

12
00:02:09,820 --> 00:02:13,798
presentation, switching gears, and we'll talk about the pattern pending technology

13
00:02:13,884 --> 00:02:17,030
itself. What are the components that Imperva snapshot tool

14
00:02:17,100 --> 00:02:20,314
runs in the cloud environment? And we will

15
00:02:20,352 --> 00:02:24,662
wrap up the session with some real life example, the latest findings

16
00:02:24,806 --> 00:02:29,078
by cloud operators and users just like you who run Imperva snapshot

17
00:02:29,174 --> 00:02:32,762
tool in their environment. And what are the insights and visibility,

18
00:02:32,826 --> 00:02:36,654
the type of visibility that they gain after running the

19
00:02:36,692 --> 00:02:40,014
tool in their environments. Talking about cloud,

20
00:02:40,132 --> 00:02:43,726
and specifically about the importance of data, I would like to

21
00:02:43,748 --> 00:02:47,506
focus on those two numbers that I believe can reflect the current state

22
00:02:47,688 --> 00:02:50,660
of cloud misconfiguration and data security.

23
00:02:51,030 --> 00:02:54,302
If you're looking in 2020, over 31 billion

24
00:02:54,366 --> 00:02:56,530
data records have been compromised,

25
00:02:57,370 --> 00:03:01,062
while the majority of which were due to cloud data

26
00:03:01,116 --> 00:03:04,486
breach. This is a very high numbers that emphasize to

27
00:03:04,508 --> 00:03:07,930
us the magnitude of the importance to protect our

28
00:03:08,000 --> 00:03:11,514
data, specifically the type of data

29
00:03:11,552 --> 00:03:15,418
that resides on cloud environment. And if we look at the other number,

30
00:03:15,504 --> 00:03:19,526
99%, this number form gardener's prediction

31
00:03:19,638 --> 00:03:22,430
that indicates that by 2025,

32
00:03:22,580 --> 00:03:26,302
99% of misconfiguration that

33
00:03:26,356 --> 00:03:29,902
probably could lead to some sort of data breach would

34
00:03:29,956 --> 00:03:33,698
be due to customer fault. So, meaning the majority of

35
00:03:33,704 --> 00:03:38,066
those misconfiguration can be addressable had we have

36
00:03:38,248 --> 00:03:42,610
the correct visibility and understanding of our cloud security posture

37
00:03:43,030 --> 00:03:46,846
to put us all on the same line understanding what are the

38
00:03:46,888 --> 00:03:50,790
devastating results of cloud data breach and breaches in general.

39
00:03:50,860 --> 00:03:54,662
I do want to share with you a few examples from recent years. For example,

40
00:03:54,716 --> 00:03:58,178
though hit the news are indicates

41
00:03:58,274 --> 00:04:01,930
for small misconfiguration will leads to

42
00:04:02,080 --> 00:04:05,914
devastating results due to the data breaches in those

43
00:04:05,952 --> 00:04:09,846
cases. And the first is from a marketing firm that back in

44
00:04:09,968 --> 00:04:14,078
June 2019 had over 340,000,000

45
00:04:14,164 --> 00:04:17,982
personal records leaked due to a simple

46
00:04:18,116 --> 00:04:21,546
cloud misconfiguration. The database itself was configured

47
00:04:21,578 --> 00:04:25,106
to be publicly accessible and then the bad hackers put

48
00:04:25,128 --> 00:04:28,882
their hands on the databases. And that leads to a very high

49
00:04:28,936 --> 00:04:34,302
volume of records that have been exploited

50
00:04:34,366 --> 00:04:37,522
and exposed. Another example is from a financial

51
00:04:37,586 --> 00:04:41,446
firm back in July 2020 that 7

52
00:04:41,548 --> 00:04:44,818
million exposed users usernames

53
00:04:44,914 --> 00:04:49,066
and passwords have been exposed due to

54
00:04:49,168 --> 00:04:51,770
again, could be a minor misconfiguration.

55
00:04:52,750 --> 00:04:56,774
The databases was unencrypted and the s three bucket

56
00:04:56,822 --> 00:05:00,598
was publicly accessible. Had a security operator had

57
00:05:00,624 --> 00:05:04,206
known about those issues, I guess it would put the

58
00:05:04,228 --> 00:05:08,206
necessary security rules to address those. But that

59
00:05:08,228 --> 00:05:11,994
lack of visibility cloud lead to those scenarios. Data breaches

60
00:05:12,042 --> 00:05:15,826
with devastating results. And with those stories in mind,

61
00:05:15,928 --> 00:05:19,406
and understanding that visibility is in a key into your cloud environment,

62
00:05:19,518 --> 00:05:22,946
specifically understanding the type of data that we have resides on

63
00:05:22,968 --> 00:05:26,630
our databases, we've thought about what are the key

64
00:05:26,700 --> 00:05:31,074
insights and visibility cloud operators needs to have on their daily

65
00:05:31,122 --> 00:05:34,770
basis to understand the security posture of their cloud environment.

66
00:05:34,930 --> 00:05:38,826
And those are the key pillars we're thinking

67
00:05:39,008 --> 00:05:42,714
are necessary for every cloud operator. We would

68
00:05:42,752 --> 00:05:46,598
like to know what is the security posture of the cloud environment

69
00:05:46,694 --> 00:05:50,346
and the selected databases. If we have any vulnerabilities, are there

70
00:05:50,368 --> 00:05:53,646
any software updates required? And if there are any

71
00:05:53,668 --> 00:05:56,990
misconfiguration on the specific databases and the environment.

72
00:05:58,210 --> 00:06:01,726
It's also really important to understand what is the type of data that we

73
00:06:01,748 --> 00:06:05,698
have resides on the databases, do we have sensitive data on that?

74
00:06:05,864 --> 00:06:09,086
Who have access to the database? Regarding permissions,

75
00:06:09,198 --> 00:06:12,850
do we set remote access and what are the group policies

76
00:06:13,190 --> 00:06:16,366
applicable on the selected database. And lastly,

77
00:06:16,398 --> 00:06:19,522
in terms of compliance, it's really important to know what is the compliance

78
00:06:19,586 --> 00:06:23,974
level as well as if we have any PII or PCI information on

79
00:06:24,012 --> 00:06:27,442
a specific database. With that in mind,

80
00:06:27,516 --> 00:06:31,354
we thought about an innovative tool that can provide visibility into

81
00:06:31,392 --> 00:06:35,210
those three main pillars, misconfiguration and bad practices,

82
00:06:36,030 --> 00:06:39,386
known vulnerabilities and specifically to

83
00:06:39,408 --> 00:06:42,718
provide visibility into data, the cloud data security

84
00:06:42,804 --> 00:06:46,362
posture indicating what is the privacy and compliance

85
00:06:46,426 --> 00:06:49,918
and data classification of a

86
00:06:49,924 --> 00:06:52,634
database in your environment. For that,

87
00:06:52,772 --> 00:06:56,094
we came up with Imperva Snapshot, a patent pending

88
00:06:56,142 --> 00:06:59,554
technology. It's important to know that at the moment,

89
00:06:59,672 --> 00:07:03,390
the patent pending technology and the tool itself is dedicated

90
00:07:03,470 --> 00:07:07,010
for AWS environment and RDS databases

91
00:07:07,090 --> 00:07:10,726
only. And what we have in this environment is the

92
00:07:10,748 --> 00:07:14,486
fact that we don't need to any credentials of the

93
00:07:14,508 --> 00:07:18,410
database, the selected databases that a users want to scan.

94
00:07:19,150 --> 00:07:22,506
The tool itself accesses a snapshot of a

95
00:07:22,528 --> 00:07:25,734
selected databases only. We manages

96
00:07:25,782 --> 00:07:29,094
to reset the master password of the snapshot

97
00:07:29,222 --> 00:07:32,190
and open it on an isolated VPC.

98
00:07:32,530 --> 00:07:36,378
That means the tool is production safe,

99
00:07:36,474 --> 00:07:40,238
doesn't have impact on your production environment, and all the data

100
00:07:40,324 --> 00:07:43,762
is also resides within the specific tenant and account

101
00:07:43,816 --> 00:07:47,470
of the user. We also don't need any credential,

102
00:07:47,550 --> 00:07:50,994
the ability to reset the master password and to

103
00:07:51,032 --> 00:07:54,462
open the database. The snapshot database on an isolated

104
00:07:54,526 --> 00:07:57,670
environment allows us to gain a lot of visibility

105
00:07:58,010 --> 00:08:01,174
into the databases itself and

106
00:08:01,212 --> 00:08:04,966
the data resides on the databases. When a user run

107
00:08:04,988 --> 00:08:08,246
impaired a snapshot by the end of

108
00:08:08,268 --> 00:08:11,958
a scan, he receives a PDF directly into your inbox

109
00:08:12,054 --> 00:08:15,260
and I do want to share with you the main highlights of such a report.

110
00:08:15,950 --> 00:08:19,802
First and foremost, the user resides a cloud data security posture high level

111
00:08:19,856 --> 00:08:23,486
executive summary when one can learn and understand

112
00:08:23,668 --> 00:08:26,926
the security posture of the selected database, it will know what

113
00:08:26,948 --> 00:08:30,270
is the risk level. If there are any misconfiguration of the databases,

114
00:08:31,730 --> 00:08:35,778
what are the main vulnerabilities of the database as well as the sensitive data

115
00:08:35,944 --> 00:08:40,114
found on the selected database. A users can also see

116
00:08:40,152 --> 00:08:43,534
what are the top insights and main acts for mitigation

117
00:08:43,662 --> 00:08:47,726
in order to have a solid security posture on the selected database.

118
00:08:47,918 --> 00:08:51,686
As we go through the report, we'll have a deep dive section for each

119
00:08:51,708 --> 00:08:54,898
one of the categories for permissive configuration and best practices.

120
00:08:54,994 --> 00:08:58,866
A user can see what are the security risks, what are the assessment tests

121
00:08:58,898 --> 00:09:02,026
that have been run and what are the outcome of each one of those.

122
00:09:02,128 --> 00:09:05,814
And obviously all of these are being listed based on the severity

123
00:09:05,862 --> 00:09:09,354
level. In terms of known vulnerabilities. The user can

124
00:09:09,392 --> 00:09:13,306
see what are the type of vulnerabilities that have been found that the database

125
00:09:13,338 --> 00:09:17,102
is exposed to being labeled by years later the year.

126
00:09:17,156 --> 00:09:20,986
Obviously it requires a patch. Probably that CV

127
00:09:21,018 --> 00:09:24,558
is being exploited and exploited somewhere in the wild, but the user

128
00:09:24,574 --> 00:09:28,354
really can understand what is the current states of the

129
00:09:28,392 --> 00:09:31,906
database and what is the security level of the selected database that has been

130
00:09:31,928 --> 00:09:35,620
scanned. And lastly, in terms of

131
00:09:36,150 --> 00:09:39,006
cloud data security posture,

132
00:09:39,118 --> 00:09:42,726
imperfect snapshot provide visibility into data resides on the

133
00:09:42,748 --> 00:09:46,326
databases, making the labeling of the sensitive data records that have been

134
00:09:46,348 --> 00:09:49,866
found. What are the categories of each, what are the total items and

135
00:09:49,888 --> 00:09:53,594
on which column and what overall number of columns are

136
00:09:53,632 --> 00:09:56,490
including sensitive data.

137
00:09:56,640 --> 00:10:00,298
The user can also see the compliance level for the selected

138
00:10:00,314 --> 00:10:04,510
databases. Understanding what is the compliance degree for

139
00:10:04,580 --> 00:10:07,934
the selected scan. Understanding what the tool is

140
00:10:07,972 --> 00:10:12,126
doing is great. You get an interesting insight and

141
00:10:12,148 --> 00:10:15,566
a quick posture of the selected databases as

142
00:10:15,588 --> 00:10:18,690
well as visibility into the data.

143
00:10:18,840 --> 00:10:21,842
But I do want to take you through the journey of how the magic happens

144
00:10:21,896 --> 00:10:25,810
and what happened behind the scene. When you're running parava snapshot,

145
00:10:26,230 --> 00:10:29,378
it's important to know that the entire process is fully automated.

146
00:10:29,474 --> 00:10:32,674
As mentioned previously, currently the tool supports

147
00:10:32,722 --> 00:10:36,614
AWS environment and RDS and

148
00:10:36,652 --> 00:10:40,326
Aurora databases, and I do want to take you through the phases

149
00:10:40,438 --> 00:10:44,154
of what is being triggered and what tool that we use

150
00:10:44,272 --> 00:10:48,090
when running parabas snapshot. So really starting that

151
00:10:48,160 --> 00:10:51,062
automated process with basic prerequisite,

152
00:10:51,206 --> 00:10:54,874
obviously we need to make sure that the selected database

153
00:10:54,922 --> 00:10:58,174
is RDS or Aurora and we need to make sure that

154
00:10:58,212 --> 00:11:01,658
the specific RDS has an available snapshot.

155
00:11:01,754 --> 00:11:05,010
Without the snapshot the scan cannot be completed. This specific

156
00:11:05,080 --> 00:11:08,386
snapshot is then being deployed in an isolated VPC and for

157
00:11:08,408 --> 00:11:11,490
that we're also checking that there is an available

158
00:11:11,640 --> 00:11:14,900
VPC to deploy that snapshot into.

159
00:11:15,270 --> 00:11:18,478
Once those prerequisites are done and being checked, I do want to take you

160
00:11:18,504 --> 00:11:22,006
through the journey of provisioning in flow and what are the basic templates that

161
00:11:22,028 --> 00:11:25,686
we use on the cloud formation. It's important to know that

162
00:11:25,708 --> 00:11:28,790
in this point all templates are publicly available,

163
00:11:28,940 --> 00:11:32,662
so imperva snapshot tool is free and production safe

164
00:11:32,726 --> 00:11:35,930
and we have full transparency to help our user to understand

165
00:11:36,080 --> 00:11:40,090
what is being run in their environment while running imperfect snapshot.

166
00:11:40,590 --> 00:11:44,326
So the root templates actually start by collecting all the key

167
00:11:44,368 --> 00:11:48,026
parameters and is the base template to the other templates

168
00:11:48,058 --> 00:11:51,930
that are being used. The setup template and the installer template

169
00:11:52,090 --> 00:11:56,338
the setup templates start with verifying the prerequisite from the slide before

170
00:11:56,504 --> 00:12:00,174
and making sure that the selected database and the DB

171
00:12:00,222 --> 00:12:04,194
identifier are on the same region. Then moving forward into

172
00:12:04,232 --> 00:12:07,910
the installer template where all lambdas

173
00:12:08,410 --> 00:12:11,894
are being set to run pervasnapso tool

174
00:12:12,012 --> 00:12:15,586
itself and to start assess the database

175
00:12:15,698 --> 00:12:19,734
and route all the relevant tests. So what lambdas

176
00:12:19,782 --> 00:12:23,946
are being created and what are the functions of lambda in this process?

177
00:12:24,128 --> 00:12:27,702
The first and foremost is the sandbox or lambda that acts

178
00:12:27,846 --> 00:12:31,598
the devsec expert in the environment. We can say

179
00:12:31,764 --> 00:12:35,502
it creates all the networking resources, it creates the next

180
00:12:35,556 --> 00:12:39,182
lambdas, it restore the selected databases into

181
00:12:39,236 --> 00:12:42,518
the isolated vpcs and it delete all created

182
00:12:42,554 --> 00:12:44,900
resources by the end of the process.

183
00:12:45,510 --> 00:12:49,138
So we make sure that everything is

184
00:12:49,224 --> 00:12:52,642
running on an isolated environment that will have no

185
00:12:52,696 --> 00:12:56,206
impact on your live production environment.

186
00:12:56,318 --> 00:13:00,006
And by the end of the process the isolated VPC as

187
00:13:00,028 --> 00:13:04,120
well as other lambdas and templates are automatically deleting themselves

188
00:13:04,570 --> 00:13:07,750
that they will have no impact on your environment.

189
00:13:08,670 --> 00:13:12,620
The next lambda is the scanner and the key

190
00:13:13,150 --> 00:13:16,422
function of the scanner is pierced to reset the master

191
00:13:16,486 --> 00:13:20,186
password of the restored RDS. This is one of the main part

192
00:13:20,208 --> 00:13:23,774
of the patent pending of Imperibus snapshot, the fact that you don't need

193
00:13:23,812 --> 00:13:26,720
to insert database credentials at any time.

194
00:13:27,330 --> 00:13:31,002
The scanner Lambda delete its master

195
00:13:31,066 --> 00:13:34,702
password and then once you deploy it on the isolated VPC,

196
00:13:34,766 --> 00:13:38,340
we have full access to the databases on the

197
00:13:39,270 --> 00:13:43,054
isolated environment to run all queries and assessment

198
00:13:43,102 --> 00:13:46,582
tests. It ran the scan as well as

199
00:13:46,636 --> 00:13:50,054
classification, and it sends all the data into the

200
00:13:50,092 --> 00:13:53,846
last lambda, the reporter that collects all the results from

201
00:13:53,868 --> 00:13:57,674
the scanners and also generate a PDF report that is

202
00:13:57,712 --> 00:14:01,002
being sent to the user. So by the end of that process,

203
00:14:01,136 --> 00:14:05,222
a user who runs Imperva snapshot in their environment

204
00:14:05,366 --> 00:14:09,078
received that Imperva

205
00:14:09,094 --> 00:14:12,870
snapshot PDF report to gain visibility

206
00:14:13,030 --> 00:14:17,606
into the cloud data security posture of the selected database.

207
00:14:17,798 --> 00:14:21,294
Understanding why the components are great, but I do want to take with you

208
00:14:21,332 --> 00:14:24,818
a step by step through the flow and what is the

209
00:14:24,824 --> 00:14:28,318
process and what's happening through an Imperva

210
00:14:28,334 --> 00:14:32,642
snapshot scan. And if we start with the installer stack who

211
00:14:32,696 --> 00:14:36,242
creates the sandbox lambda, then it creates

212
00:14:36,306 --> 00:14:40,098
the isolated VPC where we can deploy

213
00:14:40,274 --> 00:14:42,722
the selected snapshot.

214
00:14:42,866 --> 00:14:46,374
Obviously it's based on the fact that it

215
00:14:46,412 --> 00:14:49,610
all matched the prerequisite and the selected database has

216
00:14:49,680 --> 00:14:52,650
an available snapshot to be deployed.

217
00:14:53,950 --> 00:14:58,794
Once the snapshot is being deployed and

218
00:14:58,832 --> 00:15:02,794
being restored into that isolated VPC, we create a

219
00:15:02,832 --> 00:15:06,474
security group from the sandbox

220
00:15:06,522 --> 00:15:10,046
or lambda in order to make sure that there is

221
00:15:10,068 --> 00:15:14,222
no Internet gateway and all assets have capabilities

222
00:15:14,286 --> 00:15:18,334
and yam rules only to do relevant

223
00:15:18,382 --> 00:15:21,746
activities and functionalities to impair the snapshot. So the

224
00:15:21,768 --> 00:15:25,554
entire environment is isolated and each one of the resources and

225
00:15:25,592 --> 00:15:29,462
the Yam rule created during the process have access and

226
00:15:29,596 --> 00:15:32,962
permissions to do activities only on the isolated

227
00:15:33,026 --> 00:15:35,430
environment and on the isolated components.

228
00:15:36,490 --> 00:15:40,614
Then there scanner Lambda start dire assessment

229
00:15:40,742 --> 00:15:44,170
and report all insight into the reporter who then

230
00:15:44,240 --> 00:15:48,170
send that final report to the users

231
00:15:48,990 --> 00:15:53,006
with the impairment snapshot final report I mentioned through

232
00:15:53,028 --> 00:15:56,586
the process a few times the importance of production safe

233
00:15:56,618 --> 00:16:00,286
tool obviously for cloud operators to run a new tool in

234
00:16:00,308 --> 00:16:04,890
their environment, that might be tricky

235
00:16:04,970 --> 00:16:08,402
at times, but we do have full transparency of

236
00:16:08,456 --> 00:16:12,034
what Imperva snapshot is doing and we did want to make sure that this is

237
00:16:12,072 --> 00:16:16,242
a really production safe tool. So as mentioned before, we have a

238
00:16:16,296 --> 00:16:19,766
full transparency of imperfect snapshot and it's code and

239
00:16:19,788 --> 00:16:23,906
it's available on our GitHub project. But specifically regarding

240
00:16:23,938 --> 00:16:27,320
the precautions that we have taken developing the tool,

241
00:16:27,790 --> 00:16:31,366
we made sure that the snapshot

242
00:16:31,478 --> 00:16:35,210
is being restored on an isolated VPC. New security

243
00:16:35,280 --> 00:16:39,222
groups in the routing table are being created and no Internet gateway

244
00:16:39,366 --> 00:16:43,294
is in place, so nothing can come in and out from

245
00:16:43,332 --> 00:16:46,606
that isolated VPC. So also important to

246
00:16:46,628 --> 00:16:50,254
know that only resources that were created during that

247
00:16:50,292 --> 00:16:53,954
process the new security groups have access into so

248
00:16:53,992 --> 00:16:57,342
it cannot have access into other resources previously,

249
00:16:57,406 --> 00:16:59,998
resources that have been created in the environment.

250
00:17:00,174 --> 00:17:03,890
Another important note as part of the patent pending

251
00:17:04,950 --> 00:17:08,742
technology of impairment snapshot is the fact that we don't need

252
00:17:08,796 --> 00:17:12,162
an admin permissions to run the tool. Security admin

253
00:17:12,226 --> 00:17:15,846
or cloud tech operators who want to know the security posture of

254
00:17:15,868 --> 00:17:19,306
the selected database can simply run the tool.

255
00:17:19,408 --> 00:17:23,222
No need to admin permissions and no need for credential

256
00:17:23,286 --> 00:17:26,874
for the selected databases. This is a real

257
00:17:26,912 --> 00:17:30,986
game changer that can make your life easier understanding the current security posture

258
00:17:31,018 --> 00:17:34,446
of a selected databases for the

259
00:17:34,468 --> 00:17:37,994
final part of the presentation, I do want to share with you some examples

260
00:17:38,042 --> 00:17:42,062
based on recent scanning and findings from

261
00:17:42,116 --> 00:17:45,694
Imperva snapshot scans by cloud operators just like you

262
00:17:45,732 --> 00:17:49,314
who run Imperva snapshot in their environment and

263
00:17:49,352 --> 00:17:54,162
share with you some insights, common insights that have been identified against

264
00:17:54,216 --> 00:17:58,450
all those users who came up to us seeking more information

265
00:17:58,600 --> 00:18:02,866
about impaired snapshot and how to mitigate the security gaps

266
00:18:02,898 --> 00:18:06,214
in their environment. So the first example

267
00:18:06,332 --> 00:18:09,834
referred to into a marketing organization that had a few

268
00:18:09,872 --> 00:18:14,086
misconfiguration in their environment. Imperva Snapshot has identified

269
00:18:14,278 --> 00:18:18,246
that there were a few misconfiguration about excessive

270
00:18:18,278 --> 00:18:22,990
permissions. The database itself was not encrypted

271
00:18:23,570 --> 00:18:26,720
and a snapshot of the databases was publicly available.

272
00:18:27,730 --> 00:18:31,662
Think about it to yourself for a second. So a bad act has

273
00:18:31,716 --> 00:18:35,346
access to a publicly available snapshot and the database itself is

274
00:18:35,368 --> 00:18:38,500
not even encrypted. Easy win for the bad guys.

275
00:18:39,190 --> 00:18:43,358
Specifically, the databases was also with over 200 known

276
00:18:43,374 --> 00:18:47,298
vulnerabilities, so this is a really bad shape in terms of security

277
00:18:47,384 --> 00:18:50,614
posture for the selected database. Now, if we make

278
00:18:50,652 --> 00:18:54,182
the correlation in order to understand what would be the ideal game plan

279
00:18:54,236 --> 00:18:57,794
and what we need to mitigate, then we have the added

280
00:18:57,842 --> 00:19:01,710
value of cloud data. Security posture and Imperva

281
00:19:01,730 --> 00:19:05,302
snapshot indeed indicate what is the type of data and sensitive

282
00:19:05,366 --> 00:19:08,518
data that have been found on the selected

283
00:19:08,534 --> 00:19:12,490
databases. So over 1.2 million email

284
00:19:12,560 --> 00:19:16,462
addresses have been stored and resides on the database. Over five

285
00:19:16,516 --> 00:19:20,478
hundred k of personal identifiers and over 100,000

286
00:19:20,564 --> 00:19:24,094
mobile phone numbers have been identified

287
00:19:24,222 --> 00:19:27,954
in that scan. So within those

288
00:19:27,992 --> 00:19:31,838
misconfiguration and with that type of sensitive data resides

289
00:19:31,934 --> 00:19:35,880
on the database that could really have been and become

290
00:19:36,250 --> 00:19:40,582
another one of those base scenarios of a massive data

291
00:19:40,636 --> 00:19:44,242
leakage. Another scenario from a financial

292
00:19:44,306 --> 00:19:47,978
firm also points out a common misconfiguration that

293
00:19:47,984 --> 00:19:52,038
we see in an example before databases that was not encrypted,

294
00:19:52,134 --> 00:19:54,700
a snapshot was publicly available.

295
00:19:55,550 --> 00:19:59,530
We also have seen that the specific databases

296
00:20:00,130 --> 00:20:03,994
had the subscription disabled for security group updates,

297
00:20:04,042 --> 00:20:08,474
so you don't get alerts of any security groups for database

298
00:20:08,522 --> 00:20:11,566
specifically, we have found impermanent snapshot has

299
00:20:11,588 --> 00:20:14,990
identified 500 passwords,

300
00:20:15,330 --> 00:20:18,474
100 credit cards and almost 2000 mobile

301
00:20:18,522 --> 00:20:22,202
numbers. Again, a high amount of sensitive

302
00:20:22,266 --> 00:20:26,610
data within those misconfiguration in place can be easily

303
00:20:26,690 --> 00:20:30,054
leaked into the bad guy. And the

304
00:20:30,092 --> 00:20:33,800
last example that I want to bring you is from a cloud service company

305
00:20:34,170 --> 00:20:38,934
that also, as you can see, there is some sort of a

306
00:20:38,972 --> 00:20:42,630
repeating motive. The type of misconfiguration,

307
00:20:43,050 --> 00:20:46,902
a misconfiguration that lead into

308
00:20:46,956 --> 00:20:51,034
excessive permissions, a database that was not encrypted, and a publicly

309
00:20:51,082 --> 00:20:54,350
available snapshot, the specific database,

310
00:20:57,010 --> 00:21:01,354
have been vulnerable to almost 100 known vulnerabilities.

311
00:21:01,482 --> 00:21:04,980
And look about the overall sensitive data that have been stored there.

312
00:21:06,470 --> 00:21:10,158
20,000 addresses, 20,000 email addresses

313
00:21:10,254 --> 00:21:13,140
and close to five k of personal data.

314
00:21:13,830 --> 00:21:18,146
Make the correlation between the security states

315
00:21:18,258 --> 00:21:22,370
of the databases, the misconfiguration that you have, and the sensitive

316
00:21:22,450 --> 00:21:25,590
data being reside on the databases.

317
00:21:26,090 --> 00:21:29,850
A cloud operator can come with a game plan and decide what

318
00:21:29,920 --> 00:21:33,834
database is the top priority to be addressed and

319
00:21:33,872 --> 00:21:36,970
protect and address the security gaps that have been found.

320
00:21:37,120 --> 00:21:40,210
And this is the key thing by Imperva Snapshot,

321
00:21:40,310 --> 00:21:43,614
making that correlation providing that visibility between

322
00:21:43,732 --> 00:21:47,166
misconfiguration, understanding the security posture of

323
00:21:47,188 --> 00:21:50,654
the databases, and what is the type of

324
00:21:50,692 --> 00:21:53,674
data that is being resides on the databases.

325
00:21:53,802 --> 00:21:57,298
And based on that, you can come up with a game plan

326
00:21:57,384 --> 00:22:00,754
to address the security gaps and with

327
00:22:00,792 --> 00:22:04,370
priority and visibility to the content and data

328
00:22:04,440 --> 00:22:08,574
that you want to protect. So in terms of key takeaways

329
00:22:08,622 --> 00:22:12,486
and the common misconfiguration, and what we have seen in the wild from

330
00:22:12,588 --> 00:22:16,870
users in cloud operator, again, just like you who run cloud environment,

331
00:22:17,210 --> 00:22:20,646
we saw that there are some misconfiguration that repeat

332
00:22:20,678 --> 00:22:24,426
themselves and users need to be careful and pay

333
00:22:24,448 --> 00:22:28,186
attention to address those ahead of mind so they will not be

334
00:22:28,208 --> 00:22:31,438
part of the statistics. Going back to that Gartner quoted in the

335
00:22:31,444 --> 00:22:35,246
beginning of the presentation, making sure you

336
00:22:35,268 --> 00:22:38,350
don't have any misconfiguration when it comes into excessive permissions,

337
00:22:39,250 --> 00:22:42,782
publicly available snapshot, it's really easy to fall into this

338
00:22:42,836 --> 00:22:46,386
one. But even if you have a lab environment and you want to

339
00:22:46,408 --> 00:22:49,650
share the snapshot between two different location, and you

340
00:22:49,720 --> 00:22:52,798
want to have access between two different locations,

341
00:22:52,974 --> 00:22:56,494
make sure that if you make a snapshot publicly

342
00:22:56,542 --> 00:23:00,146
available for a certain amount of time, change it into a private mode

343
00:23:00,178 --> 00:23:03,574
right away. Otherwise it's being available out there.

344
00:23:03,612 --> 00:23:07,734
And if your data is not encrypted, the data on

345
00:23:07,772 --> 00:23:10,882
that specific snapshot or on the database is not encrypted.

346
00:23:11,026 --> 00:23:15,174
That's really an easy game and an easy win for the Badax.

347
00:23:15,302 --> 00:23:18,934
And finally, in terms of subscription for security groups,

348
00:23:18,982 --> 00:23:22,506
make sure it's being enabled to be triggered regarding

349
00:23:22,538 --> 00:23:25,642
any security alerts that are related

350
00:23:25,786 --> 00:23:27,630
to your databases.

351
00:23:29,250 --> 00:23:32,686
I really hope you find Imperva Snapshot interesting, and if you want to

352
00:23:32,708 --> 00:23:36,190
learn more to take some of that transparency

353
00:23:36,350 --> 00:23:39,746
to see the code of Imperva Snapshot, I first welcome you to

354
00:23:39,848 --> 00:23:43,666
look into our GitHub project where you can see also our

355
00:23:43,768 --> 00:23:46,966
CLI project in our GitHub where

356
00:23:47,148 --> 00:23:50,454
Imperva snapshot can be activated through a CLI where you can

357
00:23:50,492 --> 00:23:54,422
schedule tasks, automate the process, and get

358
00:23:54,476 --> 00:23:58,486
an immediate posture security posture of a new database that has

359
00:23:58,508 --> 00:24:02,166
been created. And I also recommend you to try impervisnapt yourself if

360
00:24:02,188 --> 00:24:06,134
you go into our landing page. Try Imperva.com

361
00:24:06,172 --> 00:24:09,398
slash snapshot and see it yourself. Get some more information

362
00:24:09,484 --> 00:24:12,814
if you want, run it on your environment and get

363
00:24:12,852 --> 00:24:16,538
some insights to make sure your cloud databases

364
00:24:16,634 --> 00:24:20,302
is fully secure. If you want to reach out, feel free.

365
00:24:20,356 --> 00:24:23,658
Mor Manor hit me up the email or on LinkedIn.

366
00:24:23,754 --> 00:24:27,694
I'm really happy to share those insights with you and hopefully talk

367
00:24:27,732 --> 00:24:30,110
with you soon. Enjoy the rest of the day.

