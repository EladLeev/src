1
00:00:25,410 --> 00:00:29,126
You. Hey everyone, welcome to

2
00:00:29,228 --> 00:00:31,830
Conf 42 platform engineering streaming sessions.

3
00:00:32,330 --> 00:00:36,120
The talk of for this topic is optimize your cloud cost.

4
00:00:39,370 --> 00:00:43,174
In this topic we'll be talking about why cloud cost is important,

5
00:00:43,292 --> 00:00:46,406
how to know your cloud cost, how you could analyze your

6
00:00:46,428 --> 00:00:49,994
cloud cost, what are the quick and long term approaches

7
00:00:50,162 --> 00:00:54,240
you should take? And at the end, we'll talk about some of the

8
00:00:55,170 --> 00:00:58,110
major points related to building the cost culture.

9
00:01:00,050 --> 00:01:03,694
So first step, why cloud cost is important I quoted

10
00:01:03,742 --> 00:01:07,490
here one of the Gartner reports

11
00:01:07,990 --> 00:01:12,082
for April 2023 which says that

12
00:01:12,216 --> 00:01:15,870
worldwide public cloud end user would be spending

13
00:01:15,950 --> 00:01:19,638
almost near to $600 billion in 2023.

14
00:01:19,804 --> 00:01:23,554
You can assess that how important it has become now to measure

15
00:01:23,602 --> 00:01:27,626
your cloud cost to see because it is a big part

16
00:01:27,648 --> 00:01:31,306
of your operational expenses. Before jumping to

17
00:01:31,328 --> 00:01:35,274
Finops maturity assessment, I'll try to make

18
00:01:35,472 --> 00:01:39,322
you aware about the FinOps. So FinOps is a foundation which is based

19
00:01:39,376 --> 00:01:43,386
on kind of similar principle. You could map

20
00:01:43,418 --> 00:01:46,794
with DevOps where developer and operations join

21
00:01:46,842 --> 00:01:50,874
hands. So similarly here, the finance analysts and the operational people join

22
00:01:50,922 --> 00:01:54,354
hands and see about what could be the best done

23
00:01:54,392 --> 00:01:58,210
for the cloud financial management, the best practices about that

24
00:01:58,360 --> 00:02:01,614
and the different specifications has been considered.

25
00:02:01,742 --> 00:02:04,370
So now on the Finops maturity assessment,

26
00:02:05,030 --> 00:02:08,246
that has been again the latest report they have published where they

27
00:02:08,268 --> 00:02:11,686
have shared that how the

28
00:02:11,708 --> 00:02:14,870
industry is moving as of now on the maturity side.

29
00:02:15,020 --> 00:02:18,406
So they said that 71% are as of

30
00:02:18,428 --> 00:02:21,482
now in the crawl mode, 25% in the walk

31
00:02:21,536 --> 00:02:23,930
mode and 3% in the run mode.

32
00:02:24,350 --> 00:02:27,606
So what that means actually. So the crawl mode

33
00:02:27,638 --> 00:02:31,966
means actually the team is getting enough

34
00:02:32,068 --> 00:02:36,174
acquaintance or education about the cloud coast and they

35
00:02:36,212 --> 00:02:38,960
have started now driving enablements around it.

36
00:02:39,570 --> 00:02:43,010
The work is where education is now

37
00:02:43,080 --> 00:02:46,626
getting spread across multiple teams and they

38
00:02:46,648 --> 00:02:49,842
have started adopting the Finops process

39
00:02:49,896 --> 00:02:53,460
and practices like forecasting, budget management and all.

40
00:02:53,830 --> 00:02:57,480
And the last the run is where

41
00:02:58,010 --> 00:03:01,558
cloud cost, education and enablement has been spread across

42
00:03:01,644 --> 00:03:05,686
the multiple or teams or the enterprise level.

43
00:03:05,868 --> 00:03:10,134
And that has been continuously aligned with the organizational

44
00:03:10,182 --> 00:03:14,202
level initiatives, the OKRs and the goals set

45
00:03:14,256 --> 00:03:18,010
by the senior leaders or the board members for that specific organization.

46
00:03:19,230 --> 00:03:21,600
So moving ahead,

47
00:03:24,610 --> 00:03:27,520
the step one is to know your cloud cost.

48
00:03:27,970 --> 00:03:31,626
Our first target always should be the cost transparency.

49
00:03:31,738 --> 00:03:35,618
And then only we should think about what is cost optimization. And the

50
00:03:35,624 --> 00:03:39,330
reason is very simple. You should be able to know

51
00:03:39,400 --> 00:03:42,962
what is the baseline where you have to work over the cost

52
00:03:43,016 --> 00:03:47,094
transparency, to know that

53
00:03:47,132 --> 00:03:50,374
this is what you are spending. This is where your

54
00:03:50,412 --> 00:03:53,382
cloud cost billing has come across actually.

55
00:03:53,516 --> 00:03:57,298
And then you definitely go and further target it about the optimization

56
00:03:57,394 --> 00:04:01,810
and accuracy and all the stuff so I just created the

57
00:04:01,980 --> 00:04:06,138
basic flow. What you need to do step by step.

58
00:04:06,304 --> 00:04:11,274
So first is like you should identify that each

59
00:04:11,312 --> 00:04:14,622
of the cloud resource getting spun up has

60
00:04:14,756 --> 00:04:18,398
accurate tag with respect to the application

61
00:04:18,564 --> 00:04:22,582
it is deployed for. So domains,

62
00:04:22,666 --> 00:04:26,434
applications, everything has to be a metadata and

63
00:04:26,472 --> 00:04:29,890
that metadata is being attached by cloud resource, whether it is EC two,

64
00:04:29,960 --> 00:04:34,418
s, three, ebs, anything which is getting

65
00:04:34,584 --> 00:04:36,420
deployed actually over cloud.

66
00:04:38,010 --> 00:04:41,366
The second step is saying yes, once you have

67
00:04:41,388 --> 00:04:45,826
identified, you enforce that yes, you should have some guardrails,

68
00:04:45,858 --> 00:04:48,650
policies, rules which says that yes,

69
00:04:48,800 --> 00:04:52,330
my cloud resources are getting tagged correctly.

70
00:04:53,390 --> 00:04:56,742
Now once you have identified the tagged,

71
00:04:56,806 --> 00:05:00,554
now you have to identify that yes, what are the different layers

72
00:05:00,602 --> 00:05:04,030
or stages in your organization based on

73
00:05:04,100 --> 00:05:07,886
development environment, operational environment and what

74
00:05:07,908 --> 00:05:11,966
are the maintenance cost as well? Sometimes you need to run in

75
00:05:11,988 --> 00:05:15,666
a staging environment equivalent to production environment and sometimes you

76
00:05:15,688 --> 00:05:19,266
need to run about that. Few applications might

77
00:05:19,288 --> 00:05:22,900
be on need basis where function as a service can be used as well.

78
00:05:23,270 --> 00:05:27,202
So on demand and all those things have to be considered

79
00:05:27,266 --> 00:05:31,080
pretty well while identifying the cloud cost.

80
00:05:31,770 --> 00:05:36,162
And at the end, yes, everything needs a good visualization

81
00:05:36,306 --> 00:05:39,922
to see. So once you have all the data, maybe use

82
00:05:39,996 --> 00:05:43,450
some good dashboards which could actually

83
00:05:43,520 --> 00:05:46,694
visualize that yes, this is the traffic trend. This is the cloud coast

84
00:05:46,742 --> 00:05:50,262
trend according to that. And then you would be able to

85
00:05:50,416 --> 00:05:54,014
get the clear cut picture of what is your cloud cost,

86
00:05:54,052 --> 00:05:58,110
which is the step one. So one of the quote

87
00:05:58,770 --> 00:06:02,486
I have mentioned here from Charles Webbage is inadequate

88
00:06:02,538 --> 00:06:05,090
data gives more error.

89
00:06:05,670 --> 00:06:09,042
So while we always say a less

90
00:06:09,096 --> 00:06:12,574
knowledge is much dangerous than non knowledge.

91
00:06:12,702 --> 00:06:16,440
So the similar way like error using inadequate data are

92
00:06:16,890 --> 00:06:20,200
much less than using no data at all.

93
00:06:22,810 --> 00:06:25,960
Step two is analyze and predict your cloud cost.

94
00:06:26,330 --> 00:06:29,974
So that means now you know your

95
00:06:30,012 --> 00:06:33,514
cloud cost, which is the step one you have done, now go on

96
00:06:33,552 --> 00:06:36,874
and analyzing it. So we have to go from now course grained to fine

97
00:06:36,912 --> 00:06:40,550
grained. You have to break down with respect to the domains.

98
00:06:40,630 --> 00:06:43,930
Your organization have then titled the different units,

99
00:06:44,010 --> 00:06:48,298
how it is being spread across, then going from the application microservices,

100
00:06:48,394 --> 00:06:52,030
all the applications, the databases and now everything running.

101
00:06:52,180 --> 00:06:55,870
And then based on that you could go and further

102
00:06:55,950 --> 00:06:59,714
segregate it with the resources. So is someone using

103
00:06:59,752 --> 00:07:03,890
EC two? Is someone using ECS eks?

104
00:07:04,710 --> 00:07:07,890
I'm just quoting about the AWS services. But yes,

105
00:07:08,040 --> 00:07:11,734
based on whatever cloud you have been using, you have to just take

106
00:07:11,772 --> 00:07:15,362
care of that. What all resources have been using as of now, object storage,

107
00:07:15,426 --> 00:07:18,140
computes, networking resources and everything.

108
00:07:18,750 --> 00:07:22,570
Then think comes about how to

109
00:07:22,720 --> 00:07:25,914
analyze and predict as well. So I think you have

110
00:07:25,952 --> 00:07:29,994
to do a unit economics. And while doing

111
00:07:30,032 --> 00:07:33,470
unit economics, you definitely need a focus group which

112
00:07:33,540 --> 00:07:36,894
is working for the set of practices. And this is what

113
00:07:36,932 --> 00:07:40,670
Finops always suggests, that have a focus group of FinOps member.

114
00:07:41,090 --> 00:07:44,802
The people who know finances and the people who know how cloud

115
00:07:44,936 --> 00:07:48,254
computing works has to be mingled

116
00:07:48,302 --> 00:07:53,090
up and then they can only value the

117
00:07:53,160 --> 00:07:56,486
cloud cost. Actually you have to be getting an

118
00:07:56,508 --> 00:08:00,680
agreement from the cost attribution model how you want to build your different

119
00:08:01,930 --> 00:08:05,350
team. Cloud cost is costing as well,

120
00:08:05,420 --> 00:08:09,386
and that has to be clearly in

121
00:08:09,408 --> 00:08:12,646
a pane glass view, should be available to your top leadership

122
00:08:12,678 --> 00:08:16,554
to consume. Now if I come about

123
00:08:16,672 --> 00:08:21,050
data insights as well. So from analysis

124
00:08:21,130 --> 00:08:25,150
now we have to predict as well. And then prediction definitely needs

125
00:08:25,220 --> 00:08:28,718
that you are doing a regular analysis too.

126
00:08:28,884 --> 00:08:33,074
So every time your cloud billing coming

127
00:08:33,112 --> 00:08:37,234
up to you should be reconciled with

128
00:08:37,272 --> 00:08:41,266
the cloud cost you incurred from the resources you have used. So there

129
00:08:41,288 --> 00:08:45,366
should be a reconciliation mechanism, whether it could be an in

130
00:08:45,388 --> 00:08:48,854
house tool or an open source tools or enterprise tool, but that

131
00:08:48,892 --> 00:08:50,920
reconciliation is definitely needed.

132
00:08:53,610 --> 00:08:57,218
You always have to perform the chargeback to the application domain.

133
00:08:57,314 --> 00:09:01,594
And what do I mean by chargeback is actually so

134
00:09:01,632 --> 00:09:05,014
let's say application a in team a uses

135
00:09:05,062 --> 00:09:08,458
this much cost until, unless you

136
00:09:08,544 --> 00:09:12,510
tell or make them aware about the cloud

137
00:09:12,580 --> 00:09:15,870
cost being used, they won't be able to own that.

138
00:09:15,940 --> 00:09:19,920
So that application owner needs to be very much aware that

139
00:09:20,290 --> 00:09:24,226
might this application have this much used, the compute, the networking and

140
00:09:24,248 --> 00:09:27,874
the calls, and then they would be able to optimise it.

141
00:09:27,912 --> 00:09:31,634
Okay, I know that now what I've been

142
00:09:31,672 --> 00:09:35,842
doing actually, and that comes to the third point, that you

143
00:09:35,896 --> 00:09:39,570
should always be aware about that yes, these are the top idle

144
00:09:39,730 --> 00:09:43,286
unutilized resources. And you always be able to

145
00:09:43,468 --> 00:09:47,206
take back the recommendation to the different teams as

146
00:09:47,228 --> 00:09:50,698
a platform engineer or as a DevOps engineer that yes, or as a

147
00:09:50,704 --> 00:09:54,666
FiNOps member that yes, these are the idle resources or these

148
00:09:54,688 --> 00:09:58,966
are the underutilized resources. And offender

149
00:09:58,998 --> 00:10:02,366
might be the term. But yes, you could always be

150
00:10:02,468 --> 00:10:05,854
able to highlight with the data. Now there are

151
00:10:05,892 --> 00:10:09,646
always, in every business, whatever organization you might be

152
00:10:09,668 --> 00:10:13,262
working on, there are always some seasonalities included which

153
00:10:13,316 --> 00:10:16,874
needs to be induced in your traffic pattern.

154
00:10:16,922 --> 00:10:20,846
So maybe if you are an ecommerce, maybe festival

155
00:10:20,878 --> 00:10:24,194
sale is coming, then you have to induce that yes, during that

156
00:10:24,232 --> 00:10:27,734
time, obviously since the resources would get spinned up, then your

157
00:10:27,772 --> 00:10:31,842
cloud cost would also get increased. So that seasonality

158
00:10:31,906 --> 00:10:35,110
should not be a barrier

159
00:10:36,330 --> 00:10:38,780
when you're calculating your cloud cost.

160
00:10:39,470 --> 00:10:42,586
When you have all these things sorted out, now you are

161
00:10:42,608 --> 00:10:46,042
ready to predict your cost. And obviously you can always

162
00:10:46,096 --> 00:10:49,366
use the business intelligence, different models

163
00:10:49,478 --> 00:10:53,214
for that and for the baseline I would say

164
00:10:53,332 --> 00:10:57,054
let's do it for let's one quarter and then see that how your cloud

165
00:10:57,092 --> 00:11:01,098
cost is increasing or how your cloud cost is having a saturation

166
00:11:01,194 --> 00:11:04,786
or whatever based on number of resources you have spent and then you

167
00:11:04,808 --> 00:11:08,146
will be able to more accurately predict the

168
00:11:08,168 --> 00:11:10,100
upcoming quarters and all those things.

169
00:11:10,790 --> 00:11:14,050
So the main thing is yes,

170
00:11:14,200 --> 00:11:17,654
what the code says that data really power everything what we do.

171
00:11:17,692 --> 00:11:21,206
So whatever we are doing in cloud cost side there should

172
00:11:21,228 --> 00:11:24,806
be a supported data which would give us all the

173
00:11:24,828 --> 00:11:26,200
measurement to do it.

174
00:11:27,850 --> 00:11:31,846
Now coming to the step three. So that is about optimizing

175
00:11:31,878 --> 00:11:35,754
your cloud cost and how we could do on the short term or long

176
00:11:35,792 --> 00:11:39,034
term. So based on experience, I would say

177
00:11:39,072 --> 00:11:43,054
that compute optimization is going

178
00:11:43,092 --> 00:11:46,846
to be your first bet where you

179
00:11:46,868 --> 00:11:50,606
could definitely go and see that. Okay, I am seeing lot of

180
00:11:50,628 --> 00:11:54,286
idle resources. Maybe my instances are not rise

181
00:11:54,318 --> 00:11:57,874
sized, I'm using a lot of cpu memory but I

182
00:11:57,992 --> 00:12:01,582
have requested that is my resources

183
00:12:01,646 --> 00:12:05,958
using that or not. I think that can be definitely drawn up with lot of

184
00:12:06,124 --> 00:12:09,878
open source tools right now, Grafana with the

185
00:12:09,884 --> 00:12:13,586
Kubernetes as well, c advisor and everyone. Every tools

186
00:12:13,618 --> 00:12:17,062
give that definite usage based on

187
00:12:17,196 --> 00:12:20,598
your attribution. Then you can always

188
00:12:20,764 --> 00:12:24,166
do a balancing of your spot instances and on demand instances.

189
00:12:24,278 --> 00:12:27,898
I understand that every business has some critical application. So you need to do a

190
00:12:27,904 --> 00:12:32,106
good business judgments that where you are putting your sport instances

191
00:12:32,218 --> 00:12:36,574
which definitely has a risk of getting

192
00:12:36,612 --> 00:12:40,074
shut off. So that's why there should be a good balance

193
00:12:40,122 --> 00:12:43,406
of on demand and sport instances now on and

194
00:12:43,428 --> 00:12:47,326
off. So maybe your dev environments are not using resources

195
00:12:47,358 --> 00:12:50,994
on your weekends or might

196
00:12:51,032 --> 00:12:54,802
be your business has

197
00:12:54,856 --> 00:12:58,630
some specific festival ops or something like that.

198
00:12:58,700 --> 00:13:02,662
Where that is where the cloud

199
00:13:02,716 --> 00:13:05,782
costs resources or cloud resources are not that much needed.

200
00:13:05,836 --> 00:13:08,906
So maybe you have the capability of doing an on and

201
00:13:08,928 --> 00:13:12,442
off of the resources. Similarly how you could

202
00:13:12,496 --> 00:13:16,826
immediately vertical scale. So scaling is that capability that

203
00:13:16,928 --> 00:13:21,194
yes, you can eventually scale the

204
00:13:21,232 --> 00:13:24,642
resources not only horizontally

205
00:13:24,806 --> 00:13:28,046
means not only you are adding the new machines, but also based on

206
00:13:28,068 --> 00:13:31,502
your you increasing the power of your existing machines, which is the first step we

207
00:13:31,556 --> 00:13:35,346
always do. So how you

208
00:13:35,368 --> 00:13:39,860
are scaling that in and out is also pretty important.

209
00:13:40,630 --> 00:13:45,380
And you should also do a logging storage cost

210
00:13:45,850 --> 00:13:50,198
related activities. So usually we do not take that

211
00:13:50,284 --> 00:13:53,858
in consideration, but that end up incurring

212
00:13:53,874 --> 00:13:57,586
a lot of cost and that's why how much the retention, what is the

213
00:13:57,708 --> 00:14:01,974
means? Maybe any incident happened, how much previous

214
00:14:02,022 --> 00:14:05,660
logs you need, what is your RCA cycle. So all those things are

215
00:14:06,110 --> 00:14:09,354
baked into this infra layer. Now.

216
00:14:09,392 --> 00:14:13,210
Long term strategic wins, which is quite important for building the coast culture,

217
00:14:13,290 --> 00:14:16,958
which we will discuss in upcoming slides as well. But yes,

218
00:14:17,044 --> 00:14:20,846
now you should always think about when you are building some RFC or you

219
00:14:20,868 --> 00:14:24,350
are exploring some tools or you are building some microservices

220
00:14:24,430 --> 00:14:28,530
that am I doing the right thing with the right resources?

221
00:14:29,270 --> 00:14:32,078
Can I switch to some other language?

222
00:14:32,254 --> 00:14:35,650
Recently rust is being getting very properly in terms of

223
00:14:35,720 --> 00:14:39,654
performance and the resource optimisation. So can my application be

224
00:14:39,772 --> 00:14:43,190
built with rust? Then the second step

225
00:14:43,260 --> 00:14:46,934
should be whenever you are doing a buy versus build kind of thing as well.

226
00:14:46,972 --> 00:14:51,106
So definitely keep cost as a big factor

227
00:14:51,298 --> 00:14:55,018
and in your judgment in one of the factors to make

228
00:14:55,104 --> 00:14:58,426
the choices. And I

229
00:14:58,448 --> 00:15:02,190
won't say that any of has

230
00:15:02,260 --> 00:15:05,982
any specific inclination. Buy is

231
00:15:06,036 --> 00:15:09,886
something, you are buying it directly, an enterprise edition tool and

232
00:15:09,908 --> 00:15:14,066
ingesting that and then you are totally on the

233
00:15:14,248 --> 00:15:17,346
third party vendors to manage that and build something.

234
00:15:17,448 --> 00:15:21,006
You're building your own which also incurs the cost definitely. And that's

235
00:15:21,038 --> 00:15:24,990
why I'm saying that that has definitely inbuilt

236
00:15:25,070 --> 00:15:26,920
tendency of measuring the cost.

237
00:15:28,810 --> 00:15:32,358
Your DB, your DBS, how you are sharding your DB, which are

238
00:15:32,364 --> 00:15:36,294
the cost optimization queries, all those things are to be taken in pretty

239
00:15:36,332 --> 00:15:39,554
much consideration while deciding the different database

240
00:15:39,602 --> 00:15:43,386
usage as well, which DB suits the best for your use case

241
00:15:43,568 --> 00:15:47,270
that has to be taken in very well consideration in based off cost optimisation.

242
00:15:47,430 --> 00:15:50,910
How your networking calls are being done are you using lot of

243
00:15:51,060 --> 00:15:54,986
net gateway calls? Are you using lot of transit gateway calls?

244
00:15:55,098 --> 00:15:58,960
Is your network is specifically isolated? Do you definitely need a

245
00:16:00,770 --> 00:16:03,774
multi domain calls as well?

246
00:16:03,812 --> 00:16:07,106
So all those networking calls has to be pretty much aligned based on what you

247
00:16:07,128 --> 00:16:10,526
are designing at the very high level itself, your API

248
00:16:10,558 --> 00:16:13,570
calls. Now if you are doing a lot of API calls,

249
00:16:13,990 --> 00:16:17,522
does that draw any cost to any third party tools as well?

250
00:16:17,576 --> 00:16:21,030
And what are the cost implications of those?

251
00:16:21,180 --> 00:16:24,866
And at the end, yes, your data transfer, you're storing

252
00:16:24,898 --> 00:16:28,326
some data. You are uploading data directly on some

253
00:16:28,348 --> 00:16:31,126
of the object storage or some of the cold storage.

254
00:16:31,318 --> 00:16:34,858
What is the cost of retrieving those data? What is the

255
00:16:34,864 --> 00:16:38,346
cost of archiving those data? All those things has to be

256
00:16:38,368 --> 00:16:41,994
considered pretty much in depth with your design architecture

257
00:16:42,042 --> 00:16:46,154
team once you are building that long term strategy

258
00:16:46,202 --> 00:16:50,590
for your cloud cost final

259
00:16:50,660 --> 00:16:54,446
step, which is like build the cost culture.

260
00:16:54,638 --> 00:16:58,286
So I have shared two approaches.

261
00:16:58,478 --> 00:17:02,162
I won't say that there is one best or one not

262
00:17:02,216 --> 00:17:05,522
that better maybe. I would

263
00:17:05,576 --> 00:17:09,666
definitely recommend that we should do both in parallel

264
00:17:09,858 --> 00:17:13,410
based on whatever setup you are in as of now in your organization.

265
00:17:13,490 --> 00:17:17,174
So first is top down approach. So top down approach is

266
00:17:17,372 --> 00:17:21,050
from the leadership, from the senior leadership that is coming that yes,

267
00:17:21,200 --> 00:17:24,278
in any of the organization wide strategic initiatives,

268
00:17:24,454 --> 00:17:27,994
cost is being placed as one of the factor, as one of the

269
00:17:28,032 --> 00:17:31,550
metrics and being continuously considered.

270
00:17:32,450 --> 00:17:35,886
And it is kind of

271
00:17:35,908 --> 00:17:39,454
a key performance indicators when you are building your goals for any of the

272
00:17:39,492 --> 00:17:42,430
new feature, any of the new development.

273
00:17:43,170 --> 00:17:46,900
And this is not, I'm talking about a lot of stuff

274
00:17:47,510 --> 00:17:50,946
related to marketing and all those things. We are just as of now focused on

275
00:17:50,968 --> 00:17:54,882
cloud cost. So yes, whenever you are deploying a new feature, what all

276
00:17:54,936 --> 00:17:58,806
cloud cost it could draw actually. So that has to be

277
00:17:58,908 --> 00:18:02,280
baked in, in your organization goals as well.

278
00:18:02,890 --> 00:18:06,406
Add cost optimization as definition of requirement criteria. So if you are

279
00:18:06,428 --> 00:18:10,106
using an agile format where you are working on Jira or working on

280
00:18:10,128 --> 00:18:13,450
any of the task management system, task workflow system,

281
00:18:13,520 --> 00:18:16,650
so maybe ingest a culture

282
00:18:17,390 --> 00:18:21,034
of that, yes, every time a new

283
00:18:21,072 --> 00:18:25,280
task comes or a new initiative gets spawned up, a new strategy is being built.

284
00:18:25,650 --> 00:18:29,214
We always have a factor of cost optimization consideration that

285
00:18:29,252 --> 00:18:32,738
yes, can this be done in a way where the

286
00:18:32,744 --> 00:18:36,386
cost could be optimized? Now on

287
00:18:36,408 --> 00:18:41,218
the right side you're seeing the bottom approach which is like from

288
00:18:41,384 --> 00:18:45,198
ingenious level. This is going up till up and showing

289
00:18:45,214 --> 00:18:49,110
the data that yes, the cloud cost is getting saved.

290
00:18:49,690 --> 00:18:53,826
Now here we are talking about eventually

291
00:18:53,938 --> 00:18:57,938
there are a lot of ids as of now supporting a lot of visualization

292
00:18:58,034 --> 00:19:02,010
and metrics for cloud coast as well. So your code commit,

293
00:19:02,590 --> 00:19:06,794
you can use those automation and your code commit can actually make

294
00:19:06,832 --> 00:19:10,902
you visualize that yes, this resource

295
00:19:10,966 --> 00:19:14,686
or this is what is going to happen when I run this terraform job or

296
00:19:14,708 --> 00:19:18,286
run this ansible job and this is what going to create the

297
00:19:18,308 --> 00:19:22,480
resources and how that resources is mapping to the cloud cost.

298
00:19:23,590 --> 00:19:27,074
Now the other thing could be from

299
00:19:27,112 --> 00:19:30,674
the team level itself that yes, you automate your all

300
00:19:30,712 --> 00:19:33,934
CI CD pipelines with kind of a retention

301
00:19:33,982 --> 00:19:37,486
policy that yes, nobody has to take care of once

302
00:19:37,528 --> 00:19:41,650
you have run that spannecker jobs or GitHub action jobs

303
00:19:41,730 --> 00:19:45,174
or a Jenkins job and then your prs are getting cleaned up after

304
00:19:45,212 --> 00:19:49,338
a certain time whenever you need that. Or maybe a good retention policy

305
00:19:49,424 --> 00:19:52,826
is being established that yes, if I'm using

306
00:19:52,848 --> 00:19:56,966
in a dev environment, my all cluster labs are automatically

307
00:19:56,998 --> 00:20:00,934
getting cleaned up after seven days of time until unless there is no movement

308
00:20:00,982 --> 00:20:04,106
happening on that specific machine, we could always monitor

309
00:20:04,138 --> 00:20:07,870
and do such kind of thing with lot of automation in place.

310
00:20:08,020 --> 00:20:11,262
So make sure you have those alerts, you have those notification coming

311
00:20:11,316 --> 00:20:13,680
up and then you are working around it.

312
00:20:15,650 --> 00:20:18,846
Draw dashboard for cost and alert based on identified thresholds.

313
00:20:18,878 --> 00:20:21,874
This is I think the pretty basic requirement that yes,

314
00:20:21,992 --> 00:20:25,246
anytime you are seeing that your cpu and memory is being idle

315
00:20:25,278 --> 00:20:29,746
for a certain amount of period and then you go back and shoot

316
00:20:29,778 --> 00:20:33,142
an alert that yes, since last 15

317
00:20:33,196 --> 00:20:36,786
days this application has not been using the cpu and memory

318
00:20:36,818 --> 00:20:40,078
it has been requested for. So please take a look and re optimise

319
00:20:40,114 --> 00:20:43,962
your resources. I'm just quoting an example of 15 days. Maybe your business

320
00:20:44,016 --> 00:20:47,820
is too critical then maybe you could take 30 days or maybe your

321
00:20:48,190 --> 00:20:52,246
application running on only on dev and test environments,

322
00:20:52,358 --> 00:20:56,110
then you could take an approach of more stringent with seven days and so

323
00:20:56,260 --> 00:20:59,642
that I will leap up to your best judgment.

324
00:20:59,706 --> 00:21:04,190
But yes, there should be some alerts and based on your thresholds

325
00:21:04,350 --> 00:21:07,854
that alert not only giving the cpu and memory

326
00:21:07,902 --> 00:21:11,262
thresholds alert, but also the cost alert.

327
00:21:11,406 --> 00:21:15,090
So once the people saw the data that yes okay,

328
00:21:15,160 --> 00:21:18,566
I have requested this much core but I am using this core and this is

329
00:21:18,588 --> 00:21:22,070
spending actually this much of cost. So then everyone

330
00:21:22,140 --> 00:21:25,574
owning that application would have an open eye and would see that

331
00:21:25,612 --> 00:21:28,922
yes, that's where they need to make save, that's where

332
00:21:28,976 --> 00:21:32,554
they need to do the resource optimization at their

333
00:21:32,592 --> 00:21:36,442
side. And the data

334
00:21:36,496 --> 00:21:40,202
usually speaks a lot. So maybe a good analytics needs

335
00:21:40,256 --> 00:21:44,826
to be done based on what we are predicting, based on what we are forecasting.

336
00:21:44,858 --> 00:21:48,926
And that forecast also gives an alert as well. Once there

337
00:21:48,948 --> 00:21:53,434
is a reconciliation and the forecasting get mixed

338
00:21:53,482 --> 00:21:56,606
up or get not matched, so then all those alerts can

339
00:21:56,628 --> 00:22:00,238
be established. That is all. For this talk,

340
00:22:00,404 --> 00:22:03,946
I hope I have been able to provide a good insights

341
00:22:03,978 --> 00:22:07,366
on what we could do do and then maybe you

342
00:22:07,388 --> 00:22:10,502
could take away that yes, how you could map with your

343
00:22:10,636 --> 00:22:14,534
specific organization culture and then start

344
00:22:14,572 --> 00:22:17,622
doing the things in the right fashion, in the right manner to save your cloud

345
00:22:17,676 --> 00:22:19,860
cost. Cool. Happy learning. Thank you.

