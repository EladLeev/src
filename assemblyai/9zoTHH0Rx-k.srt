1
00:01:41,810 --> 00:01:45,418
Hi, I'm Brian Contos. I'm the chief security officer with phosphorus

2
00:01:45,434 --> 00:01:49,002
cybersecurity. And this presentation is cameras, caCs, and clocks.

3
00:01:49,066 --> 00:01:52,334
XioT security sucks, a story of 2

4
00:01:52,372 --> 00:01:56,026
million interrogated devices. So let's go ahead and just jump

5
00:01:56,058 --> 00:01:59,754
right in. So, first off, what is XioT?

6
00:01:59,882 --> 00:02:03,374
So fundamentally, IoT is a combination of

7
00:02:03,492 --> 00:02:06,870
three disk but overlapping areas. The first

8
00:02:06,940 --> 00:02:10,226
is what we might consider enterprise IoT, or Internet

9
00:02:10,258 --> 00:02:13,762
of things. Those are things such as printers, voiceover,

10
00:02:13,826 --> 00:02:16,630
IP phones, KVM switches, ups,

11
00:02:19,210 --> 00:02:22,858
any kind of sort of enterprise dumb, if you will,

12
00:02:22,944 --> 00:02:26,154
device that's operating on the network. In addition, two that those

13
00:02:26,192 --> 00:02:30,634
are network devices such as network attached storage, wireless access points,

14
00:02:30,832 --> 00:02:33,674
load balancers, switches, so on and so forth.

15
00:02:33,802 --> 00:02:37,070
And then finally, it's the OT or industrial control

16
00:02:37,140 --> 00:02:40,426
system side SCADA devices. These are things like plcs

17
00:02:40,458 --> 00:02:43,938
or programmable logic controllers that typically operate in batch and

18
00:02:43,944 --> 00:02:48,034
discrete manufacturing oil and has production power

19
00:02:48,072 --> 00:02:51,854
and energy and many other sort of utility or critical infrastructure

20
00:02:51,902 --> 00:02:55,954
type organizations. Collectively, we call those IoT

21
00:02:56,082 --> 00:02:59,286
or attendee Internet of Things.

22
00:02:59,468 --> 00:03:03,746
Now, these are purpose built devices, typically with specific hardware and software.

23
00:03:03,938 --> 00:03:07,746
They're usually running operating systems we're all familiar with, like Linux,

24
00:03:07,858 --> 00:03:11,178
Android, BSD. Sometimes on the OT side, it's a

25
00:03:11,184 --> 00:03:14,710
real time operating system like Vxworks. They're network connected.

26
00:03:14,790 --> 00:03:18,266
Not all OT devices are network connected, most are these days,

27
00:03:18,368 --> 00:03:21,594
but certainly on the enterprise IoT and on the network device side,

28
00:03:21,632 --> 00:03:25,454
hence the name network, they're network connected and

29
00:03:25,492 --> 00:03:28,686
they can't run endpoint security, which is a big one, right? I mean, we talk

30
00:03:28,708 --> 00:03:33,258
about our servers, our rotations, our laptops, a critical database,

31
00:03:33,434 --> 00:03:36,434
whatever the case might be, even in a virtual machine, we're going to have some

32
00:03:36,472 --> 00:03:40,014
of endpoint security, anti malware, intrusion prevention,

33
00:03:40,062 --> 00:03:44,194
localized firewalls, so on and so forth. These devices, you cannot do

34
00:03:44,232 --> 00:03:47,414
that. So at Fosfer cybersecurity, we've been

35
00:03:47,452 --> 00:03:50,838
researching this space for over five years. We've looked at millions and

36
00:03:50,844 --> 00:03:54,310
millions of devices across public companies, private companies,

37
00:03:54,460 --> 00:03:57,782
healthcare, financial services, military, government, you name

38
00:03:57,836 --> 00:04:01,018
it. And in doing so, we found some really interesting

39
00:04:01,104 --> 00:04:04,198
sort of trends and statistics and use cases,

40
00:04:04,374 --> 00:04:07,750
as well as a group of devices that we like to call the devices

41
00:04:07,830 --> 00:04:11,866
that suck, not because they sucks in terms of how they operate, but their security

42
00:04:11,968 --> 00:04:15,386
certainly is lacking. So hence the title

43
00:04:15,418 --> 00:04:18,480
for this presentation. But we'll get into that in just a little bit.

44
00:04:18,850 --> 00:04:22,286
So I want to share just a couple kind of interesting things here.

45
00:04:22,388 --> 00:04:25,358
I recently went on showdown, and I think most of you are familiar with that.

46
00:04:25,364 --> 00:04:28,706
It's like a Google search, if you will, for devices that are connected. Two,

47
00:04:28,728 --> 00:04:32,222
the Internet. I just typed in words like camera, voiceover,

48
00:04:32,286 --> 00:04:36,462
IP, phone, printer ups, things like that. It's not a very scientific

49
00:04:36,526 --> 00:04:39,698
study, but I just wanted to see roughly how many of these devices weve exposed.

50
00:04:39,794 --> 00:04:43,574
And there's probably some percentage of honeypots and some percentage of mistakes there.

51
00:04:43,612 --> 00:04:47,442
But even if it's 5% or so, still we have about 5 million

52
00:04:47,516 --> 00:04:51,174
cameras. We have over a quarter million voiceover IP

53
00:04:51,222 --> 00:04:54,938
phones, printers, about 83,000. And I have no idea why,

54
00:04:55,024 --> 00:04:59,414
but over 13,000 ups systems connected.

55
00:04:59,462 --> 00:05:02,874
Now, IoT devices don't need to be Internet

56
00:05:02,922 --> 00:05:06,670
accessible to be attacked and manipulated and used for a number of

57
00:05:06,820 --> 00:05:10,270
nefarious things, but it's certainly one way in.

58
00:05:10,420 --> 00:05:14,106
In fact, most attacks we're seeing today, interestingly enough, like a phishing

59
00:05:14,138 --> 00:05:17,666
attack, they're going after someone's laptop, and then once they get in through

60
00:05:17,768 --> 00:05:21,378
it, they're looking for XIoT devices to IoT to.

61
00:05:21,464 --> 00:05:25,170
And then from there, they're attacking both XIot and it

62
00:05:25,240 --> 00:05:29,026
assets, and even cloud assets from those XIoT devices because they

63
00:05:29,048 --> 00:05:32,934
can maintain persistence and avoid detection. But we'll talk a little bit more about that

64
00:05:32,972 --> 00:05:36,726
in a compiled of use cases in just a moment. But a funny thing

65
00:05:36,748 --> 00:05:40,578
about this, maybe it's not too funny, but take upss, for example, so uninterrupted

66
00:05:40,594 --> 00:05:44,554
power supplies, generally speaking, if you have something plugged into that, it's because it's really

67
00:05:44,592 --> 00:05:48,106
important because you don't want the power to be interrupted. And one

68
00:05:48,128 --> 00:05:51,638
of the most popular brands is APC. It's a very common ups that we see

69
00:05:51,664 --> 00:05:55,082
out there. Now, if you go onto Google and you just type in default password

70
00:05:55,146 --> 00:05:58,414
for APC ups, you'll find very

71
00:05:58,452 --> 00:06:02,186
quickly it displaying, saying, hey, the password is APC

72
00:06:02,298 --> 00:06:05,150
and the username is APC, and they're both lowercase.

73
00:06:05,810 --> 00:06:10,126
I've never seen an APC UpS system where the password is changed.

74
00:06:10,238 --> 00:06:13,538
In fact, we have a running joke at phosphorus. That is, if we ever actually

75
00:06:13,624 --> 00:06:17,166
find an APC ups system where the password and username

76
00:06:17,198 --> 00:06:20,754
aren't APC, APC and lowercase, we'll buy everybody in the company a steak

77
00:06:20,802 --> 00:06:24,134
dinner. We've been eating a lot of chicken. So all

78
00:06:24,172 --> 00:06:27,158
this to say that one of the easiest ways to get into a lot of

79
00:06:27,164 --> 00:06:30,346
these devices are, number one, is it Internet accessible? And number two, does it run

80
00:06:30,368 --> 00:06:33,578
the default creds? That's all the hacking is involved, if you can

81
00:06:33,584 --> 00:06:34,650
call it hacking.

82
00:06:37,310 --> 00:06:40,606
Now, nation states get this, cybercriminals get

83
00:06:40,628 --> 00:06:43,886
this, too nefarious operators have taken notice of

84
00:06:43,908 --> 00:06:47,534
XioT over the last few years. And a great example of

85
00:06:47,572 --> 00:06:51,274
this is Russia. So Russia, the russian

86
00:06:51,322 --> 00:06:55,102
FSB actually hired some contractors to build an XioT

87
00:06:55,166 --> 00:06:58,510
tool that would actually go out and discover XioT devices,

88
00:06:58,670 --> 00:07:02,834
compromise those devices, and allow them to be controlled for

89
00:07:02,872 --> 00:07:06,638
multiple nefarious things, for spying, for distribution

90
00:07:06,734 --> 00:07:09,954
of malware, for ransomware attacks,

91
00:07:10,002 --> 00:07:13,650
to add to botnets, and again, to my point earlier,

92
00:07:13,810 --> 00:07:17,026
to actually use to attack it assets. In a lot of these cases,

93
00:07:17,058 --> 00:07:20,774
it's used to attack IoT assets to then exfiltrate sensitive

94
00:07:20,822 --> 00:07:24,806
data. So these Russian FSB had this XIoT hacking

95
00:07:24,838 --> 00:07:28,380
tool built. It's called frontin. Now, frontin is

96
00:07:28,750 --> 00:07:32,634
a military grade, nation state built XioT

97
00:07:32,682 --> 00:07:35,866
hacking tool. Unfortunately for Russia,

98
00:07:35,978 --> 00:07:39,466
the digital revolution hacking group got wind of this. They actually stole

99
00:07:39,498 --> 00:07:42,818
a copy of the tool and they released it online. So if you go to

100
00:07:42,824 --> 00:07:46,866
some of your favorite torrents and places where you get such tools and you can

101
00:07:46,968 --> 00:07:51,282
read Russian, you can have access to a nation state

102
00:07:51,416 --> 00:07:55,714
grade, military designed XIoT hacking tool

103
00:07:55,832 --> 00:07:59,798
available to the world. So again, nation states are taking interest in

104
00:07:59,804 --> 00:08:03,174
these types of tools. Another example, nation states,

105
00:08:03,212 --> 00:08:07,138
is China. So China actually kind of skips the middle ground.

106
00:08:07,234 --> 00:08:10,362
So instead of having a device to go out and find

107
00:08:10,416 --> 00:08:14,166
IoT devices or malware to compromise those devices,

108
00:08:14,278 --> 00:08:17,386
they actually manufacture the devices with the malware pre built.

109
00:08:17,488 --> 00:08:20,966
So it's already inside you. Just skip that middleman. And I'm

110
00:08:20,998 --> 00:08:24,894
not calling out China or all chinese companies. There's just a few companies that

111
00:08:24,932 --> 00:08:28,670
certainly have been identified here. In fact, in the United

112
00:08:28,740 --> 00:08:32,046
States, weve actually passed a law that prohibits the use of many of

113
00:08:32,068 --> 00:08:35,354
these devices in government organizations and with government contractors.

114
00:08:35,402 --> 00:08:39,342
Those are things like Hickvision, Huawei ZTE,

115
00:08:39,406 --> 00:08:42,850
and a few others. And some of the problems with a few of these,

116
00:08:42,920 --> 00:08:45,506
and I'm not going to call it the specific brands, but some of them have

117
00:08:45,528 --> 00:08:49,234
a little light on them that's green or red. So green means I'm recording

118
00:08:49,282 --> 00:08:52,978
video and I'm recording audio. Red supposed to mean I'm

119
00:08:52,994 --> 00:08:56,022
not recording video, I'm not recording audio. Pretty simple,

120
00:08:56,076 --> 00:08:59,674
right? But what we found in some of our testing is when you actually say,

121
00:08:59,792 --> 00:09:03,162
stop recording video and stop recording audio, it does turn the green

122
00:09:03,216 --> 00:09:07,098
light to red, but it still continues to record audio and video.

123
00:09:07,264 --> 00:09:10,734
Furthermore, it's piping that information out to

124
00:09:10,772 --> 00:09:14,174
some location remotely, which theoretically is making

125
00:09:14,212 --> 00:09:17,530
its way back to whoever designed this malware in the beginning,

126
00:09:17,610 --> 00:09:21,022
this organizations in China. So these are

127
00:09:21,076 --> 00:09:24,506
architectural capabilities

128
00:09:24,698 --> 00:09:27,966
that have been built into these devices specifically to spy

129
00:09:27,998 --> 00:09:31,026
on organizations. And a lot of the compromised that you see in

130
00:09:31,048 --> 00:09:33,790
Iot or a large number of them, are about spying.

131
00:09:33,950 --> 00:09:37,794
I can see you, I can hear you, I can use this to capture data.

132
00:09:37,912 --> 00:09:40,726
You see other attacks that are more physically based, like, I'm going to shut your

133
00:09:40,748 --> 00:09:44,134
power off, stop your elevator, modify your HVAC system,

134
00:09:44,252 --> 00:09:47,862
open all the doors to your building. Those are kind of physical arena

135
00:09:47,926 --> 00:09:51,638
attacks. And then there's the other attacks. The ransomware

136
00:09:51,814 --> 00:09:55,766
compromised 10,000 devices so you can do cryptojacking. So mining

137
00:09:55,798 --> 00:09:59,030
cryptocurrency. Actually, a Iot of organizations

138
00:09:59,110 --> 00:10:02,646
sadly detect that these 10,000 security cameras

139
00:10:02,678 --> 00:10:06,354
have been compromised and been uploaded with a crypto minor,

140
00:10:06,502 --> 00:10:10,314
not because of some great cybersecurity tool or some xiot

141
00:10:10,362 --> 00:10:13,470
security tool or some great incident responders. It's their power bill.

142
00:10:13,540 --> 00:10:16,578
Their power bill is a lot higher because, as most of you know here,

143
00:10:16,664 --> 00:10:19,540
if you're mining crypto, it takes a lot of power and energy.

144
00:10:19,990 --> 00:10:23,634
So certainly attackers like that. But again, the biggest ones

145
00:10:23,672 --> 00:10:26,962
are using these devices to attack it assets and

146
00:10:27,016 --> 00:10:30,434
hide, maintain persistence and evading detection.

147
00:10:30,562 --> 00:10:33,894
These allowing me to attack other tools. So this is just

148
00:10:33,932 --> 00:10:37,158
one example. China is not the only country that has devices like this that are

149
00:10:37,164 --> 00:10:40,902
doing nefarious things, but it was interesting that Russia

150
00:10:40,966 --> 00:10:44,822
built a tool specifically to attack these tools, and China ships the tools

151
00:10:44,886 --> 00:10:48,170
already with nefarious capabilities built in.

152
00:10:48,320 --> 00:10:51,866
Now, going back, one of the cameras here that's been banned is

153
00:10:51,888 --> 00:10:55,386
hickvision. So we already know hickvision kind of makes a malicious

154
00:10:55,418 --> 00:10:58,714
camera. Well, in addition to that just announced,

155
00:10:58,762 --> 00:11:02,206
and this was on August 23 of 2022,

156
00:11:02,388 --> 00:11:06,002
over 80,000 hickvision cameras were found

157
00:11:06,056 --> 00:11:09,442
to be exposed online. So just like we saw in that search

158
00:11:09,496 --> 00:11:13,522
that we did for cameras a little bit earlier, using showdown 80,000

159
00:11:13,576 --> 00:11:16,958
cameras that were hickvision specifically that

160
00:11:16,984 --> 00:11:20,534
were vulnerable to a critical command injection flaw. CSO, not only do they

161
00:11:20,572 --> 00:11:23,880
ship with kind of malicious design,

162
00:11:24,250 --> 00:11:28,134
but they also have vulnerabilities on them, too, that can be exploited by

163
00:11:28,172 --> 00:11:32,158
other attackers. In this case, it was discovered that over 2000 organizations

164
00:11:32,194 --> 00:11:35,866
across about 100 countries had not applied the security firmware patch that

165
00:11:35,888 --> 00:11:39,482
had been available all the way as far back as September 2021.

166
00:11:39,616 --> 00:11:42,586
This doesn't surprise me at all, and I'm going to share some statistics with you

167
00:11:42,608 --> 00:11:46,094
in a little while. But a lot of the firmware that we

168
00:11:46,132 --> 00:11:49,726
come across is like six, seven years old, and a

169
00:11:49,748 --> 00:11:53,246
lot of it has actually been end of life beyond six or

170
00:11:53,268 --> 00:11:56,762
seven years. So the fact that this patch was around for over a year,

171
00:11:56,916 --> 00:12:00,018
we think of that for maybe a mobile phone or laptop. Oh, why would you

172
00:12:00,024 --> 00:12:03,762
wait a year for a lot of these devices, they're simply not being

173
00:12:03,816 --> 00:12:07,566
managed. So I'd be remiss

174
00:12:07,598 --> 00:12:10,806
if I didn't talk about the Marai botnet. If I'm talking about Xiot security,

175
00:12:10,908 --> 00:12:14,310
this was kind of the Godfather, or the grandfather, if you will,

176
00:12:14,380 --> 00:12:17,762
of Xiot attacks. IoT started back in 2016.

177
00:12:17,826 --> 00:12:20,798
So that's why I call it these grandfather of these attacks.

178
00:12:20,834 --> 00:12:24,534
So what was it essentially? So people were using Shodan

179
00:12:24,582 --> 00:12:27,754
or other tools to find Internet connected cameras. At least

180
00:12:27,792 --> 00:12:30,394
that's where it started. So once they found the cameras, they said,

181
00:12:30,432 --> 00:12:33,930
furthermore, I want to see if they're running the Cleartext protocol Telnet.

182
00:12:34,010 --> 00:12:37,578
Okay, so I found the cameras. Now they're Internet connected, they're running Telnet.

183
00:12:37,674 --> 00:12:41,918
Furthermore, I want to see are they running default passwords or maybe one of

184
00:12:42,084 --> 00:12:45,166
know, eight or so pretty common passwords that we

185
00:12:45,188 --> 00:12:49,006
run across. And sure enough, they were able to find these cameras.

186
00:12:49,118 --> 00:12:53,026
Well, just with those basic searching. And remember, we're not hacking anything. We're looking

187
00:12:53,048 --> 00:12:56,646
for a camera that's connected to the Internet, that's running Telnet with a default or

188
00:12:56,668 --> 00:12:59,826
a relatively common password. That's it. No hacking involved,

189
00:12:59,858 --> 00:13:01,270
nothing was exploited.

190
00:13:02,810 --> 00:13:06,200
Just creating a botnet predicated on that

191
00:13:06,650 --> 00:13:10,294
set of cameras. They're able to, nefarious users

192
00:13:10,342 --> 00:13:14,374
were able to use the Marai botnet to control these cameras, to conduct DDoS

193
00:13:14,422 --> 00:13:18,086
attackers that were very impactful on big companies with big networks,

194
00:13:18,118 --> 00:13:21,254
right, Reddit, Netflix, Sony, PayPal, Twitter,

195
00:13:21,302 --> 00:13:24,762
GitHub and a few others, especially some big telecoms as well.

196
00:13:24,816 --> 00:13:28,094
Internationally, these, it took them down just a few little

197
00:13:28,132 --> 00:13:31,610
cameras, right? But the cameras collectively had massac

198
00:13:31,690 --> 00:13:35,758
process and network capability. But this is what's even more interesting about Mariah

199
00:13:35,774 --> 00:13:38,914
Botnet, because there's a lot of

200
00:13:38,952 --> 00:13:42,370
white labeling and shared libraries in the Xiot world.

201
00:13:42,520 --> 00:13:46,306
That means the build that went into things camera might

202
00:13:46,328 --> 00:13:49,878
be very similar to what was used in this printer or this voiceover IP phone

203
00:13:49,964 --> 00:13:53,814
or this audio video equipment. So they're being explored running

204
00:13:53,932 --> 00:13:57,954
Telnet with the same default passwords, maybe the same vulnerabilities

205
00:13:58,002 --> 00:14:01,178
and things like that. So even though I'm sharing your library, that's allowing me to

206
00:14:01,184 --> 00:14:04,070
do ABC, that library also has vulnerabilities,

207
00:14:04,150 --> 00:14:07,690
XYZ. And I'm sharing that and sharing that and sharing that.

208
00:14:07,840 --> 00:14:11,930
So what we found is even though they started with cameras, this expanded was past

209
00:14:12,000 --> 00:14:15,534
cameras and started including printers and phones and other devices as

210
00:14:15,572 --> 00:14:18,926
well. What's also interesting about this is it was way back in

211
00:14:18,948 --> 00:14:22,846
2016. We still see devices today when

212
00:14:22,868 --> 00:14:25,970
we're out at customer sites and we're all over the world. So this isn't just

213
00:14:26,040 --> 00:14:29,986
specific two, one country or another that are still vulnerable to these.

214
00:14:30,008 --> 00:14:33,710
Marai botnet back from 2016, they're still vulnerable.

215
00:14:33,870 --> 00:14:37,678
And we're even finding devices that have Mariah Botnet

216
00:14:37,774 --> 00:14:40,886
still on them because they've never been fixed. Hey, as long as

217
00:14:40,908 --> 00:14:44,326
the printer is printing or the camera is recording, we don't really

218
00:14:44,348 --> 00:14:47,126
know how to manage it or who's managing it or what to do, so just

219
00:14:47,148 --> 00:14:50,246
let it do its thing. They're not being monitored, they're not

220
00:14:50,268 --> 00:14:53,462
being managed. So again, maintaining persistence, evading detection

221
00:14:53,526 --> 00:14:57,514
is a big deal. This is back in 2016, and things really haven't gotten any

222
00:14:57,552 --> 00:15:00,422
better. So this is a little bit more werent.

223
00:15:00,486 --> 00:15:04,094
So this is can attack. That was announced by Mandian called

224
00:15:04,132 --> 00:15:07,070
quiet exit, and this was May 2 of 2022,

225
00:15:07,140 --> 00:15:10,554
so pretty recent. And this is all about achieving that persistence

226
00:15:10,602 --> 00:15:13,934
from this apt. So what these attackers did is

227
00:15:13,972 --> 00:15:17,070
we feel they got in through phishing attacks, again through a laptop,

228
00:15:17,230 --> 00:15:20,994
social media, whatever the email or whatever

229
00:15:21,032 --> 00:15:24,030
it was, they got in through some type of attack that got into someone's laptop.

230
00:15:24,110 --> 00:15:27,106
We all know there's a gazillion ways to do that. So once they're on the

231
00:15:27,128 --> 00:15:30,194
laptop, they started looking to pivot to XioT

232
00:15:30,242 --> 00:15:33,158
devices. Why? Because no one's looking at them. Also,

233
00:15:33,244 --> 00:15:36,950
they generally have default passwords. If they don't have a default password, they're probably

234
00:15:37,020 --> 00:15:40,578
running in an old firmware with lots of vulnerabilities that could be easily exploited.

235
00:15:40,674 --> 00:15:44,582
A lot of these guys, we see levels, eight, nine, and ten level cves

236
00:15:44,646 --> 00:15:48,154
on a score of one to 1010 being the worst. So in this

237
00:15:48,192 --> 00:15:51,386
particular case, once they got into the environment, they started looking for these

238
00:15:51,408 --> 00:15:54,922
IoT devices, and they found some, and they were looking for some network devices,

239
00:15:54,986 --> 00:15:59,450
wireless access points, load balancers, NAS switches.

240
00:15:59,530 --> 00:16:03,950
A lot of these systems run BSD, and they're also looking for traditional IoT

241
00:16:04,030 --> 00:16:07,954
devices. Voiceover, IP, phone, security cameras, printers. Most of those run

242
00:16:07,992 --> 00:16:11,534
Linux, some of those run Android, but very popular

243
00:16:11,582 --> 00:16:15,454
operating systems. So they recompiled, reconfigured their solution.

244
00:16:15,582 --> 00:16:19,494
And their solution, the attacker solution, was dropbear. Ssh. Nothing too crazy

245
00:16:19,532 --> 00:16:23,366
about dropbear, but they installed it on these particular devices, which allowed them to

246
00:16:23,388 --> 00:16:27,334
have a reverse SSH tunnel, CSO client, server, communicate and

247
00:16:27,372 --> 00:16:30,422
control these devices remotely. So typical command and control,

248
00:16:30,476 --> 00:16:34,186
c two tunnel back and forth over SSh. But they were communicating with

249
00:16:34,208 --> 00:16:37,498
these XIoT devices, which made it a little bit more novel, right?

250
00:16:37,664 --> 00:16:41,302
Once they got onto these devices, they used those devices

251
00:16:41,366 --> 00:16:44,702
not to hack really, but to make API calls to the local

252
00:16:44,756 --> 00:16:48,062
exchange server and the Microsoft 365

253
00:16:48,116 --> 00:16:51,946
in the cloud. So both on Prem and in cloud, API calls

254
00:16:51,978 --> 00:16:55,294
were made to extract sensitive information. And what was the sensitive

255
00:16:55,342 --> 00:16:58,450
information? Email between corporate executives,

256
00:16:58,790 --> 00:17:02,130
corporate development folks think m a think BD people,

257
00:17:02,200 --> 00:17:06,034
and even security staff. So they Iot in through it,

258
00:17:06,152 --> 00:17:09,554
pivoted to XIoT, used that to attack both cloud and

259
00:17:09,592 --> 00:17:13,398
on Prem. It exfiltrate the data. And the worst part of this,

260
00:17:13,484 --> 00:17:17,126
in most cases, these guys maintain persistence and

261
00:17:17,148 --> 00:17:20,262
evaded detection for over a year and a half. Again,

262
00:17:20,316 --> 00:17:23,834
because no one's looking at these devices, no one's paying attention. The bad

263
00:17:23,872 --> 00:17:27,434
guys know it, the nation states know it, the cybercriminals know it. So they're really

264
00:17:27,472 --> 00:17:30,746
taking advantage of these. And I can almost guarantee, as we

265
00:17:30,768 --> 00:17:34,106
all know, there's probably plenty of organizations out there that have been compromised

266
00:17:34,138 --> 00:17:37,342
with this, where data is still being exfiltrated as we

267
00:17:37,396 --> 00:17:40,846
watch this video. So another one I wanted to share with

268
00:17:40,868 --> 00:17:44,042
you was a russian xiot botnet. And this was a takedown.

269
00:17:44,106 --> 00:17:47,166
So this was a success case. The US, the UK, Germany,

270
00:17:47,198 --> 00:17:51,010
Netherlands, and actually a couple other companies or countries working together

271
00:17:51,160 --> 00:17:54,626
took down a botnet. And as we all know, botnets are kind of like

272
00:17:54,648 --> 00:17:58,322
DNS, right? Or a Christmas tree. It's very scalable. So you take out a piece

273
00:17:58,376 --> 00:18:01,878
here, a piece here, maybe it pops up someplace else, but if you get to

274
00:18:01,884 --> 00:18:05,574
the top of it, you take that down, maybe you've taken it down now

275
00:18:05,612 --> 00:18:07,814
for a few weeks or a few months, you're not going to take it down

276
00:18:07,852 --> 00:18:11,862
forever. People can rebuild someplace else, but it does cost time,

277
00:18:11,916 --> 00:18:15,066
money and resources for the bad guys. So it is a success case.

278
00:18:15,168 --> 00:18:18,838
But the reason I wanted to call this specific one out, it's called Rsox,

279
00:18:18,934 --> 00:18:23,190
was pretty interesting. Primarily it targeted in the IoT realm,

280
00:18:23,270 --> 00:18:27,070
the OT devices, those PLC skated devices that we talked about.

281
00:18:27,140 --> 00:18:30,606
There was some network gear, and there was some IoT gear, just to

282
00:18:30,708 --> 00:18:34,446
be fair, truth in advertising. But the majority of it were industrial

283
00:18:34,478 --> 00:18:38,334
control systems, programmable logic controllers, these types of things that are digital

284
00:18:38,382 --> 00:18:41,566
equipment that operates physics, flow, pressure,

285
00:18:41,678 --> 00:18:45,230
voltage mixtures, robotics, arms, things of this nature.

286
00:18:45,310 --> 00:18:48,786
And again, these are usually real time operating systems, Vxworks and things

287
00:18:48,808 --> 00:18:52,006
of that nature. And there's some other more esoteric ones that are out

288
00:18:52,028 --> 00:18:54,886
there. And what they were doing was, it was so successful, they were saying,

289
00:18:54,908 --> 00:18:57,494
hey, we're going to rent this out. We're going to rent this out to people

290
00:18:57,532 --> 00:19:00,646
for about $30 a day. I actually think if you pay, I think,

291
00:19:00,668 --> 00:19:04,106
$100 a day, they give you access to the broader network, and they

292
00:19:04,128 --> 00:19:07,434
also provided technical support, which was, they operate these things

293
00:19:07,472 --> 00:19:10,906
like a real business. Right. Obviously, they're money makers. But I thought, again, what was

294
00:19:10,928 --> 00:19:14,638
interesting about this, the reason why I wanted to share it, was primarily based

295
00:19:14,724 --> 00:19:18,158
on those OT devices. So they're not safe from this either.

296
00:19:18,244 --> 00:19:21,694
And again, it wasn't attacking the OT device to break

297
00:19:21,892 --> 00:19:25,674
manufacturing of a vehicle or screw up batch manufacturing

298
00:19:25,722 --> 00:19:29,838
of some chemical or some pharmaceutical or blow something up on an oil pipeline.

299
00:19:29,934 --> 00:19:33,506
It was simply adding this device to a network of botnets to use it

300
00:19:33,528 --> 00:19:37,506
to attack other organizations. Now, could they have been used for what

301
00:19:37,528 --> 00:19:41,318
I would consider much more nefarious things like blowing up a pipeline or screwing up

302
00:19:41,324 --> 00:19:44,422
a medical batch that's being produced? Absolutely.

303
00:19:44,556 --> 00:19:47,830
They had control of these devices, but in the cases we saw,

304
00:19:47,900 --> 00:19:51,738
they were Iot being used for that. Another example on

305
00:19:51,744 --> 00:19:56,134
the ot side, and again, ot makes up one of the these pillars.

306
00:19:56,182 --> 00:19:59,782
Of course, for XioT, this was an attack on Siemens.

307
00:19:59,846 --> 00:20:03,434
And how we think of attackers on the it cyber side today

308
00:20:03,472 --> 00:20:06,782
is a little bit different than these because they're really, really based. So basically,

309
00:20:06,836 --> 00:20:10,494
if you sent packets to this specific device, and this was called the s

310
00:20:10,532 --> 00:20:13,758
seven plus crash, that was the name of the attack.

311
00:20:13,844 --> 00:20:17,294
You send packets over TCP port 102 to a remote

312
00:20:17,342 --> 00:20:20,818
device. It's unauthenticated. Not most, but a

313
00:20:20,824 --> 00:20:24,146
lot of these devices operate with no authentication. CSo, you use any kind of

314
00:20:24,168 --> 00:20:27,714
tool you want, Netcat, whatever it might be, to send packets port

315
00:20:27,752 --> 00:20:31,126
102 to that device, it causes a DOS attack. Now, some of these

316
00:20:31,148 --> 00:20:34,694
devices have what are called set points. Like my temperature can go up to 75

317
00:20:34,732 --> 00:20:38,086
degrees and down to 65 degrees, and it has to stay between those two.

318
00:20:38,108 --> 00:20:41,298
If it drops too low or goes too high, it means it passes that

319
00:20:41,324 --> 00:20:44,282
set point, an alarm goes off, tells my ScadA system, hey,

320
00:20:44,336 --> 00:20:48,186
something's happened. Take a look. Well, if you increase the temperature of something

321
00:20:48,288 --> 00:20:51,706
and you're dosing it IoT doesn't have any time to respond, it can't send out

322
00:20:51,728 --> 00:20:55,134
the packets because it's basically sucks. So maybe now the temperature is at 100

323
00:20:55,172 --> 00:20:58,794
degrees instead of 75, but it can't do anything about it because it's

324
00:20:58,842 --> 00:21:02,686
stuck. It can't communicate that an issue has happened. The reason I want to bring

325
00:21:02,708 --> 00:21:05,726
this attack up, yes. It's extremely simple. Right. And it can

326
00:21:05,748 --> 00:21:09,106
have a big impact as well on the organization. But Siemens came out

327
00:21:09,128 --> 00:21:12,594
and said, hey, here are some suggestions to fix this. I like to show

328
00:21:12,632 --> 00:21:16,914
this because in the XioT world, XioT security today

329
00:21:17,032 --> 00:21:21,174
is kind of like iT security was like back in 1995,

330
00:21:21,292 --> 00:21:24,850
we didn't really know where all our devices are. We had kind of poor discovery,

331
00:21:24,930 --> 00:21:28,546
we had poor patch management and software update.

332
00:21:28,578 --> 00:21:31,926
Management just wasn't as broad as we would have liked

333
00:21:31,958 --> 00:21:35,366
or as well adopted when it came to credentials and password, rotation,

334
00:21:35,398 --> 00:21:38,982
complexity, things like that. It was all pretty early stage,

335
00:21:39,046 --> 00:21:42,398
but this is what Siemens came out and said, look, for this attack. This is

336
00:21:42,404 --> 00:21:46,186
what you should do. Number one, update your firmware. You should be running more recent

337
00:21:46,218 --> 00:21:50,094
firmware. Number two, enable access controlled. Consider using

338
00:21:50,132 --> 00:21:53,690
a username and password. Number three, set a password.

339
00:21:53,770 --> 00:21:57,234
So don't just enable it, but actually set one. And I would say set

340
00:21:57,272 --> 00:22:00,338
a good one and make sure it's rotated. And all the things we

341
00:22:00,344 --> 00:22:04,078
all know also disable unneeded protocols.

342
00:22:04,174 --> 00:22:07,218
A lot of these devices speak, a lot of extra protocols they don't need.

343
00:22:07,304 --> 00:22:10,786
Certainly on some of these devices, they probably speak TCP, IP, maybe serial

344
00:22:10,818 --> 00:22:14,114
over Ethernet, some more proprietary stuff like Modbus or DNP.

345
00:22:14,162 --> 00:22:17,506
Three, they've got wired, they've got wireless Bluetooth,

346
00:22:17,538 --> 00:22:20,694
Bluetooth, low energy. So some of them are actually very much what I would call

347
00:22:20,732 --> 00:22:23,434
hyper connected. But I just thought it was very interesting.

348
00:22:23,552 --> 00:22:27,526
Hey, patch your firmware, set a username and password,

349
00:22:27,638 --> 00:22:31,546
and get rid of services that you don't need. Again, it security

350
00:22:31,648 --> 00:22:35,230
kind of 1995 CSO. In our research,

351
00:22:35,300 --> 00:22:38,414
again, we've been doing this for a little over five years. What we found on

352
00:22:38,452 --> 00:22:41,914
average is there's about three, two, five XioT

353
00:22:41,962 --> 00:22:45,762
devices per employee in the organization. So a 10,000

354
00:22:45,816 --> 00:22:49,906
person organization probably has somewhere between 30 to 50,000

355
00:22:50,088 --> 00:22:53,886
XioT devices. Now, when we go into an organization, at the beginning of a proof

356
00:22:53,918 --> 00:22:56,866
of value, a POV, and we say, hey, take a guess, what do you think

357
00:22:56,888 --> 00:23:00,598
you have? Almost consistently, they're off by 40% to

358
00:23:00,604 --> 00:23:04,198
60%. These say, hey, Brian, we think we have 20,000. In the back of

359
00:23:04,204 --> 00:23:07,458
my head, I'm thinking, okay, so they got about 40,000 devices,

360
00:23:07,554 --> 00:23:10,538
and that's about what it turns out to be. Now, there's a bit of a

361
00:23:10,544 --> 00:23:13,430
curve on this. So, for example, a law firm,

362
00:23:13,590 --> 00:23:17,610
they're going to have a little bit fewer. A retailer or somebody

363
00:23:17,680 --> 00:23:21,114
that's working with industrial control systems, they're probably going to have a lot

364
00:23:21,152 --> 00:23:24,554
more. So there are some differences, but on average, what we

365
00:23:24,592 --> 00:23:28,190
see healthcare, financial services on and on

366
00:23:28,260 --> 00:23:31,406
about three, two, five, devices per employee, and it's always a lot more

367
00:23:31,428 --> 00:23:34,946
than people think they have. So what percentage of

368
00:23:34,968 --> 00:23:38,866
Xiot devices operate with default passwords? So think

369
00:23:38,888 --> 00:23:42,770
about that. What do you think it might be? It's actually about half.

370
00:23:42,920 --> 00:23:46,874
About half the devices operate with default passwords.

371
00:23:46,942 --> 00:23:50,514
As I just said. Go Google. Default passwords, APC,

372
00:23:50,562 --> 00:23:54,502
UPs, it's no super secret. And it's like that for

373
00:23:54,556 --> 00:23:58,326
a ton of these devices. So you don't need to hack anything, you just

374
00:23:58,348 --> 00:24:01,402
need to log in. So whether it's Internet accessible or you're already

375
00:24:01,456 --> 00:24:04,906
within the internal network, it's default password. Now.

376
00:24:04,928 --> 00:24:08,726
Forget rotation frequency every 30, 60, 90 days, forget complexity,

377
00:24:08,838 --> 00:24:12,186
even when the passwords are changed, and sometimes they're changed at the point of

378
00:24:12,208 --> 00:24:15,966
deployment. For some newer devices, it's usually changed to something pretty weak and

379
00:24:15,988 --> 00:24:19,342
usually not very long. When we say uppercase, lowercase numbers,

380
00:24:19,396 --> 00:24:22,554
special characters, at least 20 characters, passwords, not password.

381
00:24:22,602 --> 00:24:26,494
All these things that we talk about in good practices, they're not happening here,

382
00:24:26,612 --> 00:24:29,346
right? And there's a bit of a curve to this one has, well, we say

383
00:24:29,368 --> 00:24:32,882
50% on average, but upS systems, as I mentioned before,

384
00:24:32,936 --> 00:24:36,894
that's closer to like 100%. When we talk about audio, video equipment,

385
00:24:36,942 --> 00:24:40,562
we find that's actually in the high are some devices,

386
00:24:40,626 --> 00:24:43,926
again, where the password is changed. Two implementation. We don't see that

387
00:24:43,948 --> 00:24:47,238
as much actually on the enterprise side as the consumer side. We focus mostly on

388
00:24:47,244 --> 00:24:50,566
the enterprise side. But in those cases, when they're changed, sometimes they're just

389
00:24:50,588 --> 00:24:53,946
changed to what the product is, security camera or the name of the company.

390
00:24:54,048 --> 00:24:57,606
They're pretty basic things. It's certainly things that could be added to a brute

391
00:24:57,638 --> 00:25:00,954
force attack pretty easily. But default passwords half the

392
00:25:00,992 --> 00:25:04,234
time. So think about this one. What percentage of xiot

393
00:25:04,282 --> 00:25:07,774
devices operate with end of life firmware? Again, these are

394
00:25:07,812 --> 00:25:10,858
devices where the firmware has been dead.

395
00:25:10,874 --> 00:25:14,750
It's like running windows nt three, five one, or Windows Nt 4.0,

396
00:25:14,820 --> 00:25:17,934
which actually, I bring those up because we do see those on the critical infrastructure

397
00:25:17,982 --> 00:25:21,346
side, because they depreciate the servers that operate the turbine at these

398
00:25:21,368 --> 00:25:25,234
same rate. They depreciate the turbine, which is over decades, Iot over

399
00:25:25,272 --> 00:25:28,854
like five years. So the answer to this is 26,

400
00:25:28,892 --> 00:25:32,582
werent. 26% of the firmware is actually

401
00:25:32,636 --> 00:25:36,022
end of life. And the remaining 74%,

402
00:25:36,076 --> 00:25:40,146
the average age is about six years. Could you imagine your smartphone?

403
00:25:40,178 --> 00:25:43,338
I'm sure all of you watching this have some kind of smart device. If you

404
00:25:43,344 --> 00:25:46,282
didn't upgrade the underlying operating system for six years,

405
00:25:46,416 --> 00:25:48,938
or even the apps that are running on top of it.

406
00:25:49,024 --> 00:25:52,746
Honestly, it probably wouldn't even work. You probably couldn't even connect to the environment you

407
00:25:52,768 --> 00:25:56,526
wanted to connect to. Everything would just be broken. But these devices on

408
00:25:56,548 --> 00:26:00,442
average is six years old, which means it comes with a lot of vulnerabilities.

409
00:26:00,586 --> 00:26:04,438
So think about this. What percentage of IoT operates with Endeli firmware?

410
00:26:04,474 --> 00:26:08,100
We said that was 26%. Look what comes along with this.

411
00:26:08,710 --> 00:26:12,270
We're seeing that about 50% of the devices

412
00:26:12,430 --> 00:26:16,110
have CVSS scores. Again, one to 1010 being the greatest.

413
00:26:16,270 --> 00:26:19,702
CVS scores of 850 percent of these have level

414
00:26:19,756 --> 00:26:23,062
eight. That means they're very hackable. Can additional 18%

415
00:26:23,116 --> 00:26:26,598
have nine and ten? That means very hackable with almost zero

416
00:26:26,684 --> 00:26:30,306
skill remotely done. And to give me full administrative

417
00:26:30,338 --> 00:26:34,410
access to that device, that's 68%. That's almost

418
00:26:34,480 --> 00:26:37,290
70% of all the devices have level eight, nine and ten.

419
00:26:37,360 --> 00:26:40,906
That's crazy. If I just told you your it assets had that, you jump off

420
00:26:40,928 --> 00:26:44,606
this video right now and go fix them. And again, I've got in a

421
00:26:44,628 --> 00:26:48,574
company of 10,000 people, I've got 32 50,000 of these things,

422
00:26:48,692 --> 00:26:52,378
half of them with default passwords, old end of life firmware,

423
00:26:52,474 --> 00:26:56,018
and 78% or 68% of them have level eight, nine and

424
00:26:56,024 --> 00:26:59,742
ten CVSS scores. What? That's insane.

425
00:26:59,886 --> 00:27:03,570
It's not even fair, right? This is really making things easy

426
00:27:03,640 --> 00:27:07,234
for the bad guys. So let's talk about

427
00:27:07,272 --> 00:27:10,886
the biggest offenders. Now, I dont have them all listed here. I'm not calling out

428
00:27:10,908 --> 00:27:14,326
a specific brand or model number or anything like that, that wouldn't be fair at

429
00:27:14,348 --> 00:27:18,262
all. But I did want to share some of the devices that we find time

430
00:27:18,316 --> 00:27:21,738
and time again that are just, they're super vulnerable and

431
00:27:21,744 --> 00:27:25,514
they're being exploited at a very, very high rate.

432
00:27:25,712 --> 00:27:29,606
So the first one, KVM switches, suck. Now I love KVM

433
00:27:29,638 --> 00:27:32,874
switches, stands for keyboard, video and mouse, as most of you know. And the idea

434
00:27:32,912 --> 00:27:36,794
is I've got one of these switches with one keyboard, one monitor and one mouse

435
00:27:36,842 --> 00:27:40,202
connected to 510, 50 different devices,

436
00:27:40,266 --> 00:27:42,974
whatever the number might be, and you find them a lot of racks and data

437
00:27:43,012 --> 00:27:46,430
centers and things like that, and they allow us to be extensible.

438
00:27:46,950 --> 00:27:50,626
The problem is, and these run Linux like most of these devices do.

439
00:27:50,648 --> 00:27:53,874
Linux is by far the most popular operating system we see out there for these

440
00:27:53,912 --> 00:27:58,040
XioT devices. These run Ubuntu. They run Ubuntu version ten quite often.

441
00:27:59,530 --> 00:28:02,006
We're on version 21 now, right?

442
00:28:02,108 --> 00:28:05,494
So it's a little

443
00:28:05,532 --> 00:28:09,346
dated. It's about a decade old and they're shipping and they're shipping

444
00:28:09,458 --> 00:28:13,254
with tons of vulnerabilities because it's a decade old version

445
00:28:13,302 --> 00:28:16,458
of Ubuntu, right? And you can go find out all the vulnerabilities that are

446
00:28:16,464 --> 00:28:19,622
on bunto version ten that come by default on these devices.

447
00:28:19,766 --> 00:28:23,290
Now the problem is this is a device that manages devices.

448
00:28:23,630 --> 00:28:26,926
So if you can get access to the KVM switch, you can cause a lot

449
00:28:26,948 --> 00:28:30,330
of problems on the devices. Managing network changes, power down the device,

450
00:28:30,410 --> 00:28:34,094
make other configuration adjustments, et cetera. Next one,

451
00:28:34,132 --> 00:28:38,094
lights out management. Controlled suck things is kind of like KVM

452
00:28:38,142 --> 00:28:41,806
on steroids, but for a point device. Now that little arrow

453
00:28:41,838 --> 00:28:44,798
there is pointing to what looks like an Ethernet port, but it's actually a lights

454
00:28:44,814 --> 00:28:48,278
out management port. What this allows you to do is access that device. By the

455
00:28:48,284 --> 00:28:51,894
way, that's a Linux. It's running Linux, right? It's nothing crazy.

456
00:28:52,012 --> 00:28:55,350
You might have heard terms like iDrac, ipmi,

457
00:28:55,690 --> 00:28:59,558
Ilo. It depends if it's HP, Dell or supermicro. Those are the

458
00:28:59,564 --> 00:29:02,458
big ones that you see in this. But it allows me to get access to

459
00:29:02,464 --> 00:29:06,342
the device. What's interesting about this is I can actually open up a shell.

460
00:29:06,406 --> 00:29:10,074
I can spawn a virtual terminal. I can actually even upload software or

461
00:29:10,112 --> 00:29:13,562
malware. These are very simple

462
00:29:13,616 --> 00:29:17,038
areas to attack. These get plugged in, nobody updates them. A lot

463
00:29:17,044 --> 00:29:20,974
of times there's no password, they're vulnerable. It's just giving me full access to actually

464
00:29:21,012 --> 00:29:24,378
do malicious things. And people don't think about it. When I say, how many

465
00:29:24,404 --> 00:29:27,986
devices do you think you have? Nobody's thinking about KVM switches or

466
00:29:28,008 --> 00:29:30,020
lights out management. And this is why.

467
00:29:31,350 --> 00:29:35,134
Server cabinets and racks. Here's another thing. A lot of these are smart

468
00:29:35,182 --> 00:29:39,394
cabinets and racks. They've got tamper detection and temperature controls

469
00:29:39,442 --> 00:29:43,122
and cable management power, a whole bunch of other capabilities.

470
00:29:43,186 --> 00:29:46,422
Again, these devices have all the same problems

471
00:29:46,476 --> 00:29:49,762
with the other devices we talked about. Old firmware, default passwords,

472
00:29:49,826 --> 00:29:53,754
extraneous protocols. These problems with this particular group of devices is,

473
00:29:53,792 --> 00:29:57,158
generally speaking, if you want to update the firmware on a rack,

474
00:29:57,254 --> 00:30:00,874
you have to do a power cycle, which means everything that's connected, two, the power

475
00:30:00,912 --> 00:30:04,526
supply there has two, then be cycled. So when people are scheduling downtime to

476
00:30:04,548 --> 00:30:08,254
update servers and databases, web servers, critical assets like that,

477
00:30:08,372 --> 00:30:12,186
not really taking into consideration the racks

478
00:30:12,218 --> 00:30:15,626
that kind of manage these devices and that they operate in, so they never get

479
00:30:15,668 --> 00:30:18,866
updated, which means they're highly vulnerable. You get access to a rack now,

480
00:30:18,888 --> 00:30:22,210
and you can do nefarious things to all the devices within that rack.

481
00:30:22,950 --> 00:30:26,354
Physical access controllers suck. This is a big one.

482
00:30:26,392 --> 00:30:30,086
We actually did a pov with a very large financial services company where

483
00:30:30,108 --> 00:30:33,686
weve able to, with no hacking, we were able to access and say we

484
00:30:33,708 --> 00:30:37,538
can open and close 6400 doors

485
00:30:37,714 --> 00:30:40,898
at our discretion, including things like the front door.

486
00:30:40,994 --> 00:30:44,682
Right, and the back door doors that are probably pretty important for them.

487
00:30:44,736 --> 00:30:48,298
But 6400, forget all the cybersecurity you have in

488
00:30:48,304 --> 00:30:51,514
place. If I can just access this system and make some changes.

489
00:30:51,712 --> 00:30:55,710
There's a very popular version of physical access controlled called nortech security

490
00:30:55,780 --> 00:30:59,166
control. I don't want to pick on them, but it's pretty well known that they

491
00:30:59,188 --> 00:31:02,926
were shipping with CVSS scores of 9.8 out of ten and ten out of

492
00:31:02,948 --> 00:31:06,526
ten on their devices. So has you unpackaged it? You took

493
00:31:06,548 --> 00:31:09,234
out of the box? You took it out of the wrapping paper. Oh, it looks

494
00:31:09,272 --> 00:31:13,122
so great. You're all excited. You plug it in, it's got level

495
00:31:13,176 --> 00:31:16,502
ten vulnerabilities on there, just right out of the box.

496
00:31:16,636 --> 00:31:19,974
So craziness. And this is allowing people to do really

497
00:31:20,012 --> 00:31:23,366
malicious things, because we talked before about shutting down power,

498
00:31:23,468 --> 00:31:27,154
stealing intellectual property, doing cryptojacking.

499
00:31:27,202 --> 00:31:30,614
Well, this is actually physically unlocking, or maybe during

500
00:31:30,652 --> 00:31:34,346
our emergency, locking doors that shouldn't be locked. So there's a lot of crazy things

501
00:31:34,368 --> 00:31:36,970
that could happen there with physical access controls.

502
00:31:37,470 --> 00:31:41,878
Another one are printers. Everyone's got them. They're super promiscuous.

503
00:31:42,054 --> 00:31:46,078
So printers really suck. And why do they suck so bad? When I

504
00:31:46,084 --> 00:31:49,706
say promiscuous, what I mean is they want to be connected. Two, so they're

505
00:31:49,738 --> 00:31:53,306
running wired and wireless and Bluetooth and other communication protocols.

506
00:31:53,338 --> 00:31:57,086
And you can connect to me via HTTP or HTTPs or SSH, or Telnet or

507
00:31:57,108 --> 00:31:59,486
FTP or whatever it is. They've got all these ways because these want to make

508
00:31:59,508 --> 00:32:01,598
it easy. And that makes sense because at the end of the day, I want

509
00:32:01,604 --> 00:32:05,286
to use my printer to print. The issue that we found of these

510
00:32:05,308 --> 00:32:08,454
guys is a lot of them are running like, they're mostly running

511
00:32:08,492 --> 00:32:11,922
Linux operating systems, but they've got like 60 to 80 gig hard drives,

512
00:32:11,986 --> 00:32:15,734
not huge, not small at today's measure, but it's a pretty big hard drive.

513
00:32:15,852 --> 00:32:19,014
When they're being compromised, they're being compromised because of all the problems we talked

514
00:32:19,052 --> 00:32:22,334
about before, default passwords, vulnerabilities, old firmware,

515
00:32:22,402 --> 00:32:25,642
but they're a great place to hide. And because of that big fat hard drive

516
00:32:25,696 --> 00:32:29,210
on there, they're extracting sensitive data. We actually saw one customer

517
00:32:29,280 --> 00:32:33,386
where they were pivoting from hundreds and hundreds of printers that have been compromised,

518
00:32:33,498 --> 00:32:36,746
attacking it assets, downloading the data compressing

519
00:32:36,778 --> 00:32:39,998
it, exfiltrating IoT over ICMP because no one's watching that. Some of

520
00:32:40,004 --> 00:32:43,746
these cases longer than a year, right? We work with hotel chains that have

521
00:32:43,848 --> 00:32:46,610
20, 30, 40,000 printers,

522
00:32:46,950 --> 00:32:50,562
so it's not uncommon to just have an astronomical number

523
00:32:50,616 --> 00:32:54,306
of printers out there. And if they're all or possibly a

524
00:32:54,328 --> 00:32:57,154
great majority of them can be compromised and used to attack you.

525
00:32:57,192 --> 00:33:00,626
That's a huge attack surface, right? That no one's looking at, no one's

526
00:33:00,658 --> 00:33:04,818
managing, no one's monitoring. Black has, back in 2019, they announced

527
00:33:04,914 --> 00:33:08,978
the discovery of critical level vulnerabilities on over 10,000 different types of

528
00:33:09,004 --> 00:33:12,538
printer brands. Again, it's not surprising at all,

529
00:33:12,624 --> 00:33:16,074
but it's actually one of the most targeted. Not the most, but one of the

530
00:33:16,112 --> 00:33:19,020
most targeted XioT assets out there.

531
00:33:19,950 --> 00:33:23,678
Voiceover IP phones, video conferencing systems, I kind of put those in the same group.

532
00:33:23,764 --> 00:33:27,310
Those are usually Android OSS. But what's interesting about

533
00:33:27,380 --> 00:33:31,434
these guys is we saw some commonality between some video conferencing

534
00:33:31,562 --> 00:33:35,374
systems and some voiceover IP phones because of that whole white

535
00:33:35,412 --> 00:33:38,786
labeling and shared libraries we talked about before. So one

536
00:33:38,808 --> 00:33:41,714
of these phones, it's a very major vendor. If I said the brand, you'd go,

537
00:33:41,752 --> 00:33:45,830
oh my God, they shipped with their phone running SSH

538
00:33:46,490 --> 00:33:51,240
undocumented. It was never written that they even had it with

539
00:33:51,690 --> 00:33:55,862
default username and password. The problem with that was

540
00:33:55,916 --> 00:33:59,366
they didn't even have a security development lifecycle mature enough to say, hey, let's figure

541
00:33:59,388 --> 00:34:02,178
out what ports are running on this thing before we ship it out. And oh,

542
00:34:02,204 --> 00:34:05,500
lo and behold, it's running Ssh. What kind of password set on that thing?

543
00:34:06,110 --> 00:34:09,798
So that's pretty grievous. And I don't want to call these out and say they're

544
00:34:09,814 --> 00:34:13,174
doing a bad job, but when it comes to security, it's not their primary goal.

545
00:34:13,302 --> 00:34:15,886
They want to get to market, they want blinky lights, they want it to do

546
00:34:15,908 --> 00:34:19,118
cool things for the end user. And I get that. But if it's in

547
00:34:19,124 --> 00:34:22,206
an enterprise and opens up these vulnerabilities in the back end, of course,

548
00:34:22,388 --> 00:34:25,858
that's a huge risk, right? That's something that we need to concern ourselves with.

549
00:34:26,024 --> 00:34:29,486
I bring up the video conferencing cameras as well. Again, because of the white labeling,

550
00:34:29,518 --> 00:34:33,442
these shared libraries, that exact same build was existing on these

551
00:34:33,496 --> 00:34:37,022
video conferencing systems, which again, we talked about spying before

552
00:34:37,096 --> 00:34:41,270
with the cameras. These devices can be used for that as well. We've actually seen

553
00:34:41,340 --> 00:34:45,734
instances in production customers where those devices, in fact,

554
00:34:45,932 --> 00:34:49,438
were being used for that purpose. So again, these devices aren't

555
00:34:49,474 --> 00:34:52,794
really being built with security development lifecycle in

556
00:34:52,832 --> 00:34:56,218
mind. So I've covered a lot

557
00:34:56,224 --> 00:34:59,466
of devices here, but I haven't covered the number one. So think

558
00:34:59,488 --> 00:35:03,230
about what do you think is the number one biggest offender?

559
00:35:04,850 --> 00:35:07,930
It's security cameras. Security cameras suck.

560
00:35:08,010 --> 00:35:11,406
The know, security cameras are great doing their

561
00:35:11,428 --> 00:35:14,658
security camera thing, but we talked about some of the ones out of China that

562
00:35:14,664 --> 00:35:18,660
have actually been based. Certainly they're bad.

563
00:35:19,030 --> 00:35:23,026
They often run operating systems like busybox and other forms of Linux out

564
00:35:23,048 --> 00:35:27,326
there. Sometimes, again, they ship with the malware. There's exploits

565
00:35:27,358 --> 00:35:30,614
to take advantage of them, like we saw with the Hikvision camera and all those

566
00:35:30,652 --> 00:35:33,778
Internet accessible devices where you could run remote commands

567
00:35:33,794 --> 00:35:37,302
on these devices. But the biggest problem with security cameras is

568
00:35:37,356 --> 00:35:40,486
actually this. You have to understand that. Are they

569
00:35:40,508 --> 00:35:43,814
a dumb device? Yeah, they're a dumb device, but they have the same storage

570
00:35:43,862 --> 00:35:47,786
and processing capability and memory and input output capabilities as

571
00:35:47,808 --> 00:35:51,130
a laptop. Some of them actually even more. Some of these are really quite

572
00:35:51,200 --> 00:35:54,718
heavy duty. Consider them like workstation level security

573
00:35:54,804 --> 00:35:58,266
cameras. They're very powerful, so don't think of them like as a weak device.

574
00:35:58,298 --> 00:36:01,818
They're actually a very powerful device. These just happen to be an insecure,

575
00:36:01,914 --> 00:36:05,278
very powerful device running an operating system that allows you to do all the

576
00:36:05,284 --> 00:36:08,530
same things you could do on a laptop. So just think of it. That was

577
00:36:08,680 --> 00:36:12,386
these other thing with security cameras is most people don't have in the enterprise a

578
00:36:12,408 --> 00:36:15,486
handful. They have thousands. In some cases.

579
00:36:15,518 --> 00:36:19,014
We've seen tens and tens of thousands. We're working with a major

580
00:36:19,052 --> 00:36:22,790
casino that actually has over 50,000. 50,000 security

581
00:36:22,860 --> 00:36:26,086
cameras. Right? So the worst part of

582
00:36:26,108 --> 00:36:29,738
it is this, when we're talking to these organizations, two say, hey, here's the

583
00:36:29,744 --> 00:36:33,414
problem, we can come in here and help you. Who manages

584
00:36:33,462 --> 00:36:36,666
these? Oh, it's corporate security thinking. They're like, oh,

585
00:36:36,688 --> 00:36:39,866
no, it's network operations. Not us, it's the

586
00:36:39,888 --> 00:36:42,938
Iot sec. No, no, it's a third party vendor. So it's kind of

587
00:36:42,944 --> 00:36:45,646
like the end of Spider man. Everyone's point, who is it? Is this guy?

588
00:36:45,668 --> 00:36:48,890
Is this that guy? So nobody wants to take responsibility.

589
00:36:48,970 --> 00:36:53,258
And I get it because historically there was no way to really fix these devices

590
00:36:53,354 --> 00:36:56,478
at scale safely. These, you're going to have somebody,

591
00:36:56,644 --> 00:37:00,178
a football team of people with a paperclip to go do a physical reset to

592
00:37:00,184 --> 00:37:03,906
update these firmware. That would be nuts, right? You'd never do it. So if

593
00:37:03,928 --> 00:37:07,686
you can, what happens? It's just not done. And that's what the bad guys are

594
00:37:07,708 --> 00:37:10,120
counting on, that you're just not going to do anything.

595
00:37:11,610 --> 00:37:15,906
Now, weve mostly been talking about Enterprise Xiot

596
00:37:15,938 --> 00:37:18,198
a little bit on the industrial side with OT, but I want to call it

597
00:37:18,204 --> 00:37:21,506
just a few other areas before I go deeper. There's also Internet

598
00:37:21,538 --> 00:37:25,098
of battlefield things. These are tied to all the military devices out there. There are

599
00:37:25,104 --> 00:37:28,586
certainly things that are specific to the industrial side. We kind of got

600
00:37:28,608 --> 00:37:32,094
these tip of the iceberg there, but there's a lot of very specific purpose built

601
00:37:32,132 --> 00:37:35,162
devices for batch and discrete manufacturing.

602
00:37:35,226 --> 00:37:37,754
Oil and gas, power and energy, water, traffic,

603
00:37:37,802 --> 00:37:41,146
sanitation, agriculture, you name it. That's a really big realm

604
00:37:41,178 --> 00:37:44,558
of the OT devices, right? Healthcare also has a

605
00:37:44,564 --> 00:37:48,254
lot of specific things. Another big one is things like smart buildings,

606
00:37:48,302 --> 00:37:51,506
smart cities, smart ships. Difference between smart ships and

607
00:37:51,528 --> 00:37:55,134
smart buildings is one floats. They're all the same devices,

608
00:37:55,262 --> 00:37:58,482
to be quite frank. But if you look at this all collectively,

609
00:37:58,546 --> 00:38:01,798
it kind of gives you. Okay, wow. Beyond the enterprise, things actually has a

610
00:38:01,804 --> 00:38:05,286
global impact, right, on cities and counties and states and

611
00:38:05,308 --> 00:38:08,930
countries and regions. Everything is ultra connected.

612
00:38:09,010 --> 00:38:12,406
And if you think about these first official, the first unofficial

613
00:38:12,438 --> 00:38:16,218
IoT device was back in the 1980s. It was a coke machine. That was

614
00:38:16,224 --> 00:38:20,206
an arpanet. Okay. But then we fast forward to the.

615
00:38:20,228 --> 00:38:24,346
We had a TCP IP toaster that was connected. That was the first official

616
00:38:24,458 --> 00:38:26,634
IoT device. Well, Dublin,

617
00:38:26,682 --> 00:38:30,090
Ireland, is the first official

618
00:38:30,250 --> 00:38:35,774
smart city. So within 25

619
00:38:35,812 --> 00:38:40,146
years, plus or minus, we went from a toaster to an entire city.

620
00:38:40,328 --> 00:38:43,470
So everything I've talked about here and everything I'm showing on this slide,

621
00:38:43,550 --> 00:38:46,446
this is only going to expand exponentially.

622
00:38:46,558 --> 00:38:50,850
Everything everywhere always is going to be connected with these devices,

623
00:38:51,010 --> 00:38:54,440
and hopefully we can get them beyond 1995 security.

624
00:38:55,290 --> 00:38:58,678
So I've talked a little bit about, or a lot of it, about sort

625
00:38:58,684 --> 00:39:02,026
of the bad side of this, right. The use cases, the things that suck the

626
00:39:02,048 --> 00:39:05,670
most. But let's talk about getting rid of that suck.

627
00:39:05,750 --> 00:39:08,954
Let's talk about making it so it's not easy for the nation state

628
00:39:08,992 --> 00:39:12,902
hackers, the cybercriminals, malicious insiders, so on and so forth.

629
00:39:12,966 --> 00:39:15,934
So what can we do? Well, the first thing is discovering, as we talked about

630
00:39:15,972 --> 00:39:19,518
before, three to five XIoT devices per employee is a lot.

631
00:39:19,604 --> 00:39:23,038
And the fact that if you don't know where even half of those devices are,

632
00:39:23,124 --> 00:39:26,394
that's a big problem. Now, old school discovery solutions,

633
00:39:26,442 --> 00:39:30,158
and I say old school because they're really based on it and it centric adaptations.

634
00:39:30,254 --> 00:39:33,378
You look at like a vulnerability scanner for discovery. They're going to

635
00:39:33,384 --> 00:39:36,386
send malform packets and kind of see what the device is going to come back

636
00:39:36,408 --> 00:39:40,342
as. That could be a tenable, a qualis rapid seven, great for

637
00:39:40,396 --> 00:39:44,354
it, not really fantastic for IoT. They can actually crash

638
00:39:44,402 --> 00:39:48,054
systems. You don't want to scan in an OT environment, for example,

639
00:39:48,172 --> 00:39:52,154
sending malformed packets to a PLC device from the 1990s,

640
00:39:52,272 --> 00:39:55,354
you got about a 99% chance you're going to crash that thing. In a world

641
00:39:55,392 --> 00:39:59,190
where availability is everything, right? So the traditional

642
00:39:59,270 --> 00:40:02,460
scanners don't really kind of work.

643
00:40:02,830 --> 00:40:06,478
Then you say, okay, well, what about packet sniffing? Well, sniffing is okay.

644
00:40:06,564 --> 00:40:09,754
You Iot, a lot of span ports, a lot of taps, there's a big network

645
00:40:09,802 --> 00:40:13,102
out there, but also a lot of the communication is encrypted, so you're not really

646
00:40:13,156 --> 00:40:16,258
able to glean a lot of metadata. You might be able to say, I think

647
00:40:16,264 --> 00:40:19,470
it's a printer, maybe even it's a HP printer,

648
00:40:19,550 --> 00:40:23,314
but I can't really get deep into it from sniffing to really

649
00:40:23,432 --> 00:40:26,526
give granular detail. So that's kind of lacking. And then there's

650
00:40:26,558 --> 00:40:29,746
traditional asset management solutions, again geared for it environments.

651
00:40:29,858 --> 00:40:33,314
A lot of them look at Mac addresses. So the OUI, the organizationally

652
00:40:33,362 --> 00:40:37,270
unique identifier. Oh, you're a jet direct. You must be a printer. Well, could be.

653
00:40:37,340 --> 00:40:40,502
Could also be a phone. Right? So those are great

654
00:40:40,556 --> 00:40:43,670
again for it. Not so great in this world. They have a lot of lacking.

655
00:40:43,750 --> 00:40:46,906
So there's a new kind of based of solution. I'm going to share some of

656
00:40:46,928 --> 00:40:50,934
the vendors at the end of the presentation, but it's called enterprise Xiot

657
00:40:50,982 --> 00:40:54,586
security platforms. And the way these usually work is they actually communicate

658
00:40:54,618 --> 00:40:57,806
with these devices. They interrogate these. Think of like c

659
00:40:57,828 --> 00:41:01,758
three po from Star wars. He could speak like a million languages and

660
00:41:01,844 --> 00:41:05,038
even water evaporators and things like that. Very cool.

661
00:41:05,204 --> 00:41:08,366
So being able to not can the device, not sniff the device,

662
00:41:08,398 --> 00:41:11,890
but communicate with that device in the way it was designed to be communicated with,

663
00:41:12,040 --> 00:41:15,602
being able to scale that for obtain million types of devices,

664
00:41:15,746 --> 00:41:18,918
that's really key because now that you can communicate with it,

665
00:41:18,924 --> 00:41:25,080
you can extract much more data, firmware model number,

666
00:41:26,250 --> 00:41:29,330
serial number, ports and protocols that are operating

667
00:41:29,410 --> 00:41:33,146
credentials. All the little isms within that product can be pulled out

668
00:41:33,168 --> 00:41:37,002
through that interrogation. So that gives you a very robust sort of starting

669
00:41:37,056 --> 00:41:40,314
point. Now I know what I've got, and it's not based on

670
00:41:40,352 --> 00:41:43,774
some packet scanner that was developed or

671
00:41:43,812 --> 00:41:47,210
based on technology in the 1990s with malformed packets

672
00:41:47,290 --> 00:41:50,414
or sniffing. It's actually communicating, interrogated these

673
00:41:50,452 --> 00:41:53,758
devices. Right. So that's step one. The other part of

674
00:41:53,764 --> 00:41:56,586
this is upgrading firmware and hardening.

675
00:41:56,618 --> 00:41:59,666
So now we found the devices, now I want to remediate it.

676
00:41:59,688 --> 00:42:03,074
I actually want to fix it. So back in the day, a lot of people

677
00:42:03,112 --> 00:42:05,726
said, well, there was really no way to fix it, so we're going to hide

678
00:42:05,758 --> 00:42:08,882
it behind a Vlan. Nothing against

679
00:42:08,936 --> 00:42:12,614
VLans. I think Vlans do add an added level of security. But, man,

680
00:42:12,812 --> 00:42:16,594
if you're a 10,000 person company again, 32, 50,000 xiot devices,

681
00:42:16,642 --> 00:42:19,878
you're going to vlan all that stuff off. And Vlans aren't the

682
00:42:19,884 --> 00:42:23,218
end all, be all of security. Plus, what are you evaluating? Off. You're vlanning

683
00:42:23,234 --> 00:42:27,218
off devices that have bad passwords, old firmware full of vulnerabilities,

684
00:42:27,314 --> 00:42:30,478
kind of covering your ears and your eyes and just hoping nothing's going to happen.

685
00:42:30,564 --> 00:42:33,166
I mean, think of it this way. Like I'm typing and, oh, I cut my

686
00:42:33,188 --> 00:42:36,286
hand, my left hand's bleeding and I really need to go to the doctor and

687
00:42:36,308 --> 00:42:38,878
get this looked at, but instead I'm going to put a sandwich bag on it

688
00:42:38,884 --> 00:42:42,126
and wrap it up with duct tape. Okay, well, now I'm not getting blood in

689
00:42:42,148 --> 00:42:44,960
my right hand or my keyboard, so that's good,

690
00:42:45,330 --> 00:42:49,442
I guess, but I still got a bloody hand in a bag, which is

691
00:42:49,576 --> 00:42:52,802
really not the best thing to do in a VlaN situation.

692
00:42:52,856 --> 00:42:56,974
Your seal is saying, I got all these vulnerable, broken, defaulted password devices,

693
00:42:57,102 --> 00:43:00,862
but they're behind a vLan, so it's okay. Not a great approach.

694
00:43:00,926 --> 00:43:04,406
It's great to use in addition to fixing your devices, but who wants to do

695
00:43:04,428 --> 00:43:06,758
that? You would never do that with your it assets. Why would you do it

696
00:43:06,764 --> 00:43:10,754
with Xiot? Now with enterprise XioT security platforms,

697
00:43:10,802 --> 00:43:13,002
part of what they do is say, okay, I know what my device is,

698
00:43:13,056 --> 00:43:16,070
I can communicate with it, I can also upgrade the firmware.

699
00:43:16,230 --> 00:43:20,070
And because of these interrogated process, there's a lot of minutiae

700
00:43:20,150 --> 00:43:23,686
that can be extracted. Like, hey, I'm on version seven. The latest version

701
00:43:23,718 --> 00:43:26,718
is version ten. Can I go right from seven to ten or do I have

702
00:43:26,724 --> 00:43:29,886
to go seven 8910 or let's say

703
00:43:29,908 --> 00:43:33,354
I'm on version five and there's a log for j vulnerability. On version

704
00:43:33,402 --> 00:43:36,238
five we tell the vendor, the vendor goes, look, we're not going to have a

705
00:43:36,244 --> 00:43:40,034
fix for this version six for like another seven months. I can't wait that

706
00:43:40,072 --> 00:43:42,754
long. Everybody and their brother is hacking everything with log for j right now.

707
00:43:42,792 --> 00:43:46,318
But version four didn't have that. So maybe I want to downgrade

708
00:43:46,334 --> 00:43:49,266
my devices until that new version is actually available.

709
00:43:49,448 --> 00:43:52,934
So when you do that interrogation, as part of the discovery phase, you actually have

710
00:43:52,972 --> 00:43:56,150
that type of knowledge, which is really, really cool now.

711
00:43:56,220 --> 00:43:59,586
So now I can actually upgrade the firmware and downgrade the firmware

712
00:43:59,618 --> 00:44:02,774
if I need to as well, and do pre flight checks. Two, make sure that,

713
00:44:02,812 --> 00:44:05,994
hey, I'm not basing this on a Mac address. I actually know

714
00:44:06,032 --> 00:44:09,066
this is an MRI machine, or I know this is a printer, because the last

715
00:44:09,088 --> 00:44:12,038
thing I want to do is I don't want to turn my MRI machine that's

716
00:44:12,054 --> 00:44:15,486
$2 million into a printer. That's $500 with the wrong

717
00:44:15,508 --> 00:44:19,054
firmware. People tend Iot to like that, right? So you have to have very

718
00:44:19,092 --> 00:44:22,734
high levels of accuracy. In fact, you have to be 100% accurate. There's no room

719
00:44:22,772 --> 00:44:25,914
for 99%, certainly 5100 percent accuracy

720
00:44:25,962 --> 00:44:29,714
during discovery, so you can do the upgrading of the firmware. And while

721
00:44:29,752 --> 00:44:33,134
you're doing that, we talked about the Siemens stuff earlier with the OT hack

722
00:44:33,182 --> 00:44:36,546
by sending TCP packets to port 102.

723
00:44:36,648 --> 00:44:39,506
Siemens said, hey, turn off some of the protocols you don't need.

724
00:44:39,608 --> 00:44:42,614
Well, in hardening, you might say, you know what, I only want to run

725
00:44:42,652 --> 00:44:46,326
wired. I don't want to run wireless on all my printers, for example. And no

726
00:44:46,348 --> 00:44:50,198
more bluetooth, low energy, and no more clear text protocols. In fact,

727
00:44:50,284 --> 00:44:53,546
I just want to run SSH and HTTPs, period. Port 22 and four,

728
00:44:53,568 --> 00:44:56,806
four, three. That's it. Anything else for this particular set of devices,

729
00:44:56,918 --> 00:44:59,846
I want to change it. I want to do that for just devices in North

730
00:44:59,878 --> 00:45:03,014
America or just HP printers, or just HP printers.

731
00:45:03,062 --> 00:45:07,114
Model ABC. One, two, three. CSO. You can be very fine grained

732
00:45:07,162 --> 00:45:10,126
in how you push it out, and you can push those out manually, one at

733
00:45:10,148 --> 00:45:13,358
a time, or say, I'm going to batch those up into a large group.

734
00:45:13,444 --> 00:45:17,158
Right? So again, that's another value add that you get from these enterprise XIoT

735
00:45:17,194 --> 00:45:20,238
security platforms. And again, this is a relatively new thing. These haven't

736
00:45:20,254 --> 00:45:23,362
been around. It's not like a firewall or IPS or a scanner. It's been around

737
00:45:23,416 --> 00:45:27,026
forever. So I found my device, I've fixed

738
00:45:27,058 --> 00:45:30,354
the firmware, I've hardened the device.

739
00:45:30,402 --> 00:45:34,722
Now I get into credentials and certs. So Pam

740
00:45:34,786 --> 00:45:38,354
solutions, things like Cyberark, Thicotic, Hashicorp,

741
00:45:38,402 --> 00:45:42,034
some of these others that you see are great. They're fantastic tools

742
00:45:42,082 --> 00:45:44,646
and been used forever, and they add a lot of value. They store your passwords,

743
00:45:44,678 --> 00:45:48,586
they have rotation policies, frequency, complexity, all that.

744
00:45:48,688 --> 00:45:52,026
But they don't speak to Xiot. They can't, and they don't want to have to

745
00:45:52,048 --> 00:45:55,294
build that. So these enterprise XioT security platforms that are again,

746
00:45:55,332 --> 00:45:58,670
like C three Po. They can talk to all these devices and say, hey,

747
00:45:58,740 --> 00:46:02,554
there's 50,000 devices on this network. I'm going to automatically enroll them in Cyberark,

748
00:46:02,602 --> 00:46:05,754
for example. And in doing so, I'm actually going to also tell Cyberark,

749
00:46:05,802 --> 00:46:09,026
just like I knew the firmware upgrade paths. I'm going to tell you for my

750
00:46:09,048 --> 00:46:12,914
credentials. Hey, this guy can only take a four digit pin. This guy can take

751
00:46:12,952 --> 00:46:16,286
ten characters, but he can't use a backslash escape sequence.

752
00:46:16,318 --> 00:46:19,678
Stuff for like, SQL injection, whatever. Or this guy can go up

753
00:46:19,704 --> 00:46:22,854
to 20 characters, but IoT can't use the number nine. We see

754
00:46:22,892 --> 00:46:26,614
all sorts of crazy things. I don't know who designed some of these, but there

755
00:46:26,652 --> 00:46:30,086
are some crazy isms that are related to that. Well, all that intelligence is put

756
00:46:30,108 --> 00:46:33,802
in when you create that policy, automatically enroll that device. So I've just enrolled 30,000

757
00:46:33,856 --> 00:46:37,194
devices. This group falls into this category. This group that, this group

758
00:46:37,232 --> 00:46:40,854
that. Then you can apply your whole 30, 60, 90 day rotation,

759
00:46:40,982 --> 00:46:45,050
complexity, length, all those variables that you would in the IT environment.

760
00:46:45,130 --> 00:46:48,238
But now you're doing it with your Pam solution, which talks to an

761
00:46:48,244 --> 00:46:51,774
enterprise XioT security platform, which then talks to all these

762
00:46:51,812 --> 00:46:55,306
devices. Very clean, very simple, very scalable,

763
00:46:55,338 --> 00:46:58,546
and takes advantage of some of your existing controls. The same thing

764
00:46:58,568 --> 00:47:01,778
applies to the certs. You might find out that, especially on the

765
00:47:01,784 --> 00:47:05,166
network side, about a wireless access point. That's like TLS version

766
00:47:05,198 --> 00:47:08,338
1.1 or 1.2, go, oh, it's too old, or it's a

767
00:47:08,344 --> 00:47:11,670
self signed cert, or it's an explored cert. We see this all the time,

768
00:47:11,740 --> 00:47:14,802
not just on network devices, but other XioT devices,

769
00:47:14,866 --> 00:47:18,326
too. But wireless access points are a big offender in

770
00:47:18,348 --> 00:47:21,914
things world. So by talking to those devices that

771
00:47:21,952 --> 00:47:25,466
manage the certs, just like Pam, for managing the credentials, you can go

772
00:47:25,488 --> 00:47:29,334
ahead and make those changes and make those updates. So I found my device,

773
00:47:29,382 --> 00:47:33,626
I'm managing the firmware. I'm harding, the device, I'm managing credentials,

774
00:47:33,658 --> 00:47:37,598
I'm managing the certs. Now you're getting your xiot devices to

775
00:47:37,604 --> 00:47:41,214
the level of your IT security, which is pretty incredible, because your

776
00:47:41,252 --> 00:47:44,834
solution before was do nothing, cover your eyes, cover your

777
00:47:44,872 --> 00:47:48,098
ears, and hope that nothing happens. Maybe Vlan, a couple of

778
00:47:48,104 --> 00:47:50,900
your devices, if you can get at it, but probably not.

779
00:47:52,550 --> 00:47:56,270
So we found our devices, we fixed our devices,

780
00:47:56,430 --> 00:47:59,526
and you'd be remiss if you said, okay, that's it. What you want to do

781
00:47:59,548 --> 00:48:03,078
is you want to have those devices automatically reinterrogated, probably on

782
00:48:03,084 --> 00:48:05,990
a daily basis. That's kind of the gold standard, right?

783
00:48:06,060 --> 00:48:09,382
And by reinterrogation, what I mean is let's reconfirm that years

784
00:48:09,436 --> 00:48:12,486
you were on version seven and you're still on version seven of the firmware,

785
00:48:12,518 --> 00:48:16,518
and that's the latest version. You did have a great password through Cyberark,

786
00:48:16,614 --> 00:48:20,058
and that password is still being managed. But what if someone walks up with a

787
00:48:20,064 --> 00:48:23,446
paperclip and does a hard reset? I was on seven, but now I'm on version

788
00:48:23,478 --> 00:48:26,474
five. I did have a great password, but now I'm back to the default password,

789
00:48:26,522 --> 00:48:29,966
ABC, one, two, three. Well, now you can say

790
00:48:29,988 --> 00:48:33,278
across my 50,000 devices, these are the five devices I have to take a look

791
00:48:33,284 --> 00:48:36,510
at right now because they've drifted, either because somebody did a paperclip

792
00:48:36,590 --> 00:48:39,986
attack, paperclip hack where they've reset the device with

793
00:48:40,008 --> 00:48:42,690
the little black button on the back of these XIoT devices,

794
00:48:43,190 --> 00:48:46,158
or maybe there was some kind of fault in the system that made it revert

795
00:48:46,174 --> 00:48:50,050
back to default. We all know there's reasons why these things can happen, some nefarious,

796
00:48:50,130 --> 00:48:53,362
some benign, but in any case, you know that something's

797
00:48:53,426 --> 00:48:56,326
changed. And these are the devices that now you can look at and you can

798
00:48:56,348 --> 00:48:59,746
manage them by exception. And this is important because it means now

799
00:48:59,788 --> 00:49:03,674
the enterprise IoT security platform provides scale because

800
00:49:03,712 --> 00:49:07,606
you can manage by exception. You can have a team manage tens of thousands

801
00:49:07,638 --> 00:49:11,106
or hundreds of thousands of more of devices, because now you're going to be notified

802
00:49:11,158 --> 00:49:14,606
when one of those devices has a material change in

803
00:49:14,628 --> 00:49:18,366
addition to being able to productivity push, credential changes,

804
00:49:18,548 --> 00:49:21,594
new hardening gold standards, if you will, firmware updates,

805
00:49:21,642 --> 00:49:24,882
patches, so on and so forth. So I really like the value

806
00:49:24,936 --> 00:49:28,290
they add in terms of monitoring for that environmental drift. To me,

807
00:49:28,360 --> 00:49:32,146
that's how automation equals scalability right there, plain and

808
00:49:32,168 --> 00:49:35,586
simple. The last thing is reporting these enterprise X

809
00:49:35,608 --> 00:49:38,866
Iot security platforms can actually report on what you've got. How great would

810
00:49:38,888 --> 00:49:42,102
it be to know that, yes, I've got 50,000 devices, and by the way,

811
00:49:42,156 --> 00:49:45,958
I've got 300 that have end of life firmware. I've Iot 3000

812
00:49:46,044 --> 00:49:50,006
that have default passwords still. I've got 4000 that I've enrolled through

813
00:49:50,028 --> 00:49:53,962
my Pam, I've got these vulnerabilities, I've got 1200

814
00:49:54,016 --> 00:49:57,754
that have level ten cves. These are the types of things

815
00:49:57,792 --> 00:50:01,114
I know, and now I can trends things over time. We were this bad last

816
00:50:01,152 --> 00:50:04,366
month, now we're only this bad, and hopefully next month we're going to be

817
00:50:04,388 --> 00:50:07,966
that bad, right? And it's this continuous process of reporting on

818
00:50:07,988 --> 00:50:11,946
this and having APIs that tie into your existing reporting structures,

819
00:50:12,138 --> 00:50:15,642
being able to talk to splunk, being able to talk to ServiceNow Demisto

820
00:50:15,706 --> 00:50:19,122
other tools like that is really important. And these enterprise X Iot security

821
00:50:19,176 --> 00:50:22,674
platforms provide that. So last slide here.

822
00:50:22,712 --> 00:50:26,434
I just want to touch on a few things. In general, organizations don't know what

823
00:50:26,472 --> 00:50:29,540
they have, so discovery is so important,

824
00:50:30,070 --> 00:50:32,614
so they don't know what to fix. So if you don't know what you have,

825
00:50:32,652 --> 00:50:36,226
forget remediation. But remediation is so key. What's the point of finding

826
00:50:36,258 --> 00:50:38,886
your devices if you're not going to fix them? Okay, I didn't know what I

827
00:50:38,908 --> 00:50:41,638
have, and now I do know what I have, and everything's broken. What do I

828
00:50:41,644 --> 00:50:45,286
do? Okay, what's the next step? But if you don't know what you have,

829
00:50:45,308 --> 00:50:48,614
you don't know what to fix, then you're not able to fix these,

830
00:50:48,652 --> 00:50:50,478
even if you did know what you had to fix. Are you going to be

831
00:50:50,484 --> 00:50:54,602
able to fix 20,000 cameras or 40,000 printers manually

832
00:50:54,666 --> 00:50:58,138
without some type of automated solution? And then once they stay fixed,

833
00:50:58,154 --> 00:51:00,826
you want to be able to monitor those devices, and people aren't able to monitor

834
00:51:00,858 --> 00:51:04,730
them because they don't have tools to inspect them. You can't monitor by sniffing traffic

835
00:51:04,810 --> 00:51:08,274
or doing a scan. You have to be able to interact with that device at

836
00:51:08,312 --> 00:51:12,206
scale across, again, hundreds of thousands of devices.

837
00:51:12,398 --> 00:51:16,286
And this isn't just putting your XioT devices at risk, your printers, your cameras,

838
00:51:16,318 --> 00:51:19,638
your ot devices, your network gear, but the IT and the

839
00:51:19,644 --> 00:51:23,622
cloud based assets as well. Like we talked about in quiet exit. Right? It's putting

840
00:51:23,676 --> 00:51:26,978
that infrastructure and all the sensitive data that lives in that infrastructure

841
00:51:27,074 --> 00:51:31,370
at risk. And this results in everything from data theft and ransomware,

842
00:51:31,790 --> 00:51:34,854
so on and so forth, spying, physical attacks,

843
00:51:34,902 --> 00:51:38,902
et cetera. Right. So the results of attacks on xit

844
00:51:39,046 --> 00:51:43,370
are very wide and can be extremely painful for organizations.

845
00:51:43,530 --> 00:51:46,714
IoT doesn't have to be that way. This new generation of solutions,

846
00:51:46,762 --> 00:51:49,950
these XioT security platforms, again,

847
00:51:50,100 --> 00:51:53,646
phosphorus, we offer one as well. But there's other vendors out there that do

848
00:51:53,668 --> 00:51:57,078
things. We all do things a little bit differently. Some of these companies, Armist,

849
00:51:57,114 --> 00:52:00,766
Nizomi, they're really focused on just discovery. Other companies like phosphorus,

850
00:52:00,798 --> 00:52:03,746
we look at discovery and we integrate with them as partners as well. And we

851
00:52:03,768 --> 00:52:07,586
also primarily focus on remediation. And some of these others do something in

852
00:52:07,608 --> 00:52:11,494
between. But there are solutions now. So I implore you,

853
00:52:11,532 --> 00:52:14,966
take a look at your IoT environment. Try to determine what

854
00:52:14,988 --> 00:52:18,454
it is you've got and what the problems might be. And if you think

855
00:52:18,492 --> 00:52:21,686
you might be in a situation where hey, what Brian just

856
00:52:21,708 --> 00:52:24,690
covered in this presentation makes some sense, I think I'd like to kick the tires,

857
00:52:24,770 --> 00:52:27,398
reach out to phosphorus or some of these companies and say hey, I'd like to

858
00:52:27,404 --> 00:52:30,366
do a proof of value. I'd like to find out what I've got and what

859
00:52:30,388 --> 00:52:33,358
problems I've got in my environment and what I can do to fix it.

860
00:52:33,444 --> 00:52:37,354
Because I'm telling you right now, the XioT problem is growing exponentially.

861
00:52:37,482 --> 00:52:41,194
It's a much larger footprint than traditional endpoint

862
00:52:41,242 --> 00:52:44,850
devices or cloud combined by

863
00:52:44,920 --> 00:52:48,050
several orders of magnitude. And again,

864
00:52:48,120 --> 00:52:51,970
they're all traditional servers, Linux, Android based. They're just

865
00:52:52,040 --> 00:52:55,954
unmanaged and insecure and access points to attack

866
00:52:55,992 --> 00:52:59,502
your rest of your environment. And the bad guys are hoping you're not paying attention

867
00:52:59,566 --> 00:53:02,790
because things is a window of opportunity for these. They know it's there,

868
00:53:02,860 --> 00:53:05,698
but do you know it's there? And are you going to take steps to remediate

869
00:53:05,714 --> 00:53:09,602
IoT? So with that, thanks everybody for listening to my presentation.

870
00:53:09,666 --> 00:53:13,474
Again, I'm Brian Contos, I'm the chief security officer with phosphorus.

871
00:53:13,522 --> 00:53:16,566
If you'd like to reach out to me, here's my email and you can

872
00:53:16,588 --> 00:53:20,174
hit me up on LinkedIn and Twitter. I'd love to chat more about about

873
00:53:20,212 --> 00:53:23,646
XioT security platforms and certainly what phosphorus and some of

874
00:53:23,668 --> 00:53:26,542
these other players can provide. You have a great rest of the event.

