1
00:00:23,930 --> 00:00:27,286
Hello. Good day everyone. My name is Tejendra Bhandari and today I'm going

2
00:00:27,308 --> 00:00:30,866
to present the business impacts of multidomain use chaos engineering

3
00:00:30,898 --> 00:00:34,262
use cases. I hope you are all doing good and welcome

4
00:00:34,316 --> 00:00:38,102
to Con 42. This is my second presentation for Con 42

5
00:00:38,156 --> 00:00:41,778
and I'm happy and glad to meet you all virtually.

6
00:00:41,954 --> 00:00:46,514
So let's start and dig into the business impacts

7
00:00:46,562 --> 00:00:51,146
which helps to gauge presalespeople, the architects

8
00:00:51,258 --> 00:00:55,274
and the people who are willing to present the chaos

9
00:00:55,322 --> 00:00:59,630
engineering towards organizations which are new to implementation and

10
00:00:59,780 --> 00:01:03,086
basically finding it difficult for how to gauge

11
00:01:03,118 --> 00:01:07,074
the impacts and how to basically redeem the benefits which

12
00:01:07,112 --> 00:01:11,662
have been applied by chaos engineering experiments.

13
00:01:11,806 --> 00:01:14,926
So let's start with the agenda. So today I'm

14
00:01:14,958 --> 00:01:18,706
going to present an introduction about chaos engineering

15
00:01:18,738 --> 00:01:22,450
and myself. Then we'll focus upon the session details

16
00:01:22,530 --> 00:01:26,102
and then last question and answers. You can post the questions

17
00:01:26,156 --> 00:01:29,626
and answers on the Slack channel and I'll be happy to take up

18
00:01:29,648 --> 00:01:33,580
them. So let's start. So basically

19
00:01:34,510 --> 00:01:38,474
when we say business, right, how we are going to gauge the

20
00:01:38,512 --> 00:01:42,154
impact which chaos been created by chaos experiments and

21
00:01:42,192 --> 00:01:45,950
how you can get the outputs in the business form for

22
00:01:46,020 --> 00:01:49,790
any organization which are willing to invest in it, but they want to actually

23
00:01:49,860 --> 00:01:53,460
see what is the actual safe or

24
00:01:53,830 --> 00:01:57,314
basically what is the actual revenue which has been come from

25
00:01:57,352 --> 00:02:01,006
the chaos tools which has been implemented.

26
00:02:01,198 --> 00:02:05,006
So basically, to start with, there are lot

27
00:02:05,048 --> 00:02:08,274
of impactful cases which can be across domains,

28
00:02:08,322 --> 00:02:12,802
can be applied and you can gain insights from multiple experiments

29
00:02:12,866 --> 00:02:16,690
and also from a single experiment in multiple domains.

30
00:02:16,850 --> 00:02:20,378
So create first of all a strategy where you find a

31
00:02:20,384 --> 00:02:24,234
lot of similar AWS or any platform

32
00:02:24,352 --> 00:02:27,818
pool basically. So let's say for example,

33
00:02:27,904 --> 00:02:32,550
you have used AWS as in chaos experiment

34
00:02:32,630 --> 00:02:35,914
platform and you have gate insights out of this AWS.

35
00:02:36,042 --> 00:02:39,246
You can start multiplying them within the

36
00:02:39,428 --> 00:02:43,294
forte of AWS and can use these similar platforms

37
00:02:43,342 --> 00:02:46,894
as a single bucket and can create a strategy

38
00:02:46,942 --> 00:02:50,402
out of it and then can portray these are the

39
00:02:50,536 --> 00:02:54,222
strategically good areas where you can actually implement chaos

40
00:02:54,286 --> 00:02:57,726
engineering experiments. Now to drive the experiments,

41
00:02:57,758 --> 00:03:00,966
right? We are always in a jiffy that

42
00:03:01,068 --> 00:03:04,786
how you are driving the experiments? How is the business case being created?

43
00:03:04,898 --> 00:03:08,546
So you have to drive the experiments based on the business requirements. And I'm

44
00:03:08,578 --> 00:03:12,346
sure a lot of businesses do not know their requirements, but you have to start

45
00:03:12,448 --> 00:03:15,866
from somewhere. So we have to understand what are the business requirements which they are

46
00:03:15,888 --> 00:03:20,018
willing to. Either it's a resiliency, either they're volume

47
00:03:20,054 --> 00:03:23,966
drawing the outages, what is the impact they want actually out

48
00:03:23,988 --> 00:03:27,850
of the chaos engineering domain,

49
00:03:28,010 --> 00:03:31,758
then working with teams that have a full

50
00:03:31,844 --> 00:03:35,106
picture multiple times. You do not get a team which

51
00:03:35,128 --> 00:03:38,354
has full organization picture, but we have to dig

52
00:03:38,392 --> 00:03:41,966
out the team which actually work with lot of other teams

53
00:03:41,998 --> 00:03:45,874
and can serve as a single platform owners for them

54
00:03:45,992 --> 00:03:49,750
and gain the insights and interact with them and then learn how

55
00:03:49,900 --> 00:03:53,414
technically they are facing the problems and what are the challenge areas which they are

56
00:03:53,452 --> 00:03:57,442
actually facing it. This happens in all the domains

57
00:03:57,506 --> 00:04:01,062
as per my understanding. I have worked in media, I have worked in medical,

58
00:04:01,126 --> 00:04:05,622
I have worked in delivery,

59
00:04:05,686 --> 00:04:08,986
I have worked in multiple domains within technology

60
00:04:09,088 --> 00:04:12,640
for hours implementation and I found it very

61
00:04:14,130 --> 00:04:17,838
resourceful to interact with people who are actually

62
00:04:18,004 --> 00:04:21,694
engaged with infrastructure, actually engaged with

63
00:04:21,732 --> 00:04:25,114
writing of the services across the organization or multiple

64
00:04:25,162 --> 00:04:28,962
service lines. So it is helpful then you get

65
00:04:29,016 --> 00:04:32,066
started with the most painful area. If they are able to give you the most

66
00:04:32,088 --> 00:04:35,886
painful area, I'm sure they would be because there are a lot of painful areas

67
00:04:36,078 --> 00:04:39,638
which are actually impacting the organization and the run of

68
00:04:39,644 --> 00:04:43,014
the chaos, or probably they are failing lot

69
00:04:43,052 --> 00:04:46,914
of cases internally. But there will be surely

70
00:04:46,962 --> 00:04:50,746
a lot of sres where you can actually sort out your chaos experiments which

71
00:04:50,768 --> 00:04:55,082
you have designed or you want to design. So that would be very

72
00:04:55,136 --> 00:04:59,306
helpful to start with. Then a lot of time we create lot

73
00:04:59,328 --> 00:05:02,886
of use cases to portray the challenges and the outcomes

74
00:05:02,918 --> 00:05:06,254
of it. So you start converting those cases into

75
00:05:06,292 --> 00:05:09,914
a common pool. And then where you do not have the business to interact

76
00:05:09,962 --> 00:05:13,486
with or you do not have any information on the business or the

77
00:05:13,508 --> 00:05:17,074
platform or the infrastructure, you can start playing around in an

78
00:05:17,112 --> 00:05:20,386
environment where the customer or the organization wants to you

79
00:05:20,408 --> 00:05:26,578
to start with. You start using the common and the most easiest

80
00:05:26,754 --> 00:05:30,678
experiments to gain out the insights of the infrastructure or

81
00:05:30,764 --> 00:05:33,990
the network where you want to hit the experiments from.

82
00:05:34,140 --> 00:05:37,378
So it would be helpful in multiple domains then

83
00:05:37,564 --> 00:05:41,082
artifacts. As I say, it's the most important thing

84
00:05:41,136 --> 00:05:44,874
to create awareness and to create lot

85
00:05:44,912 --> 00:05:48,778
of traction towards what you are doing. So create an

86
00:05:48,864 --> 00:05:52,682
impacts artifact and publish across organization

87
00:05:52,746 --> 00:05:56,222
and publish it multiple times. Reach out to teams which are

88
00:05:56,276 --> 00:05:59,534
actually using

89
00:05:59,652 --> 00:06:03,406
your domain. As I say, using your domain means either they

90
00:06:03,428 --> 00:06:06,660
are using AWS as a platform or any cloud platform

91
00:06:07,110 --> 00:06:10,146
and they are using it on daily basis, but they are not aware of the

92
00:06:10,168 --> 00:06:13,874
challenges which they are actually they

93
00:06:13,912 --> 00:06:17,474
can face off. So publish them, publish them

94
00:06:17,512 --> 00:06:21,078
and then basically make them aware of what you

95
00:06:21,084 --> 00:06:24,182
are doing and if there is a result or not result.

96
00:06:24,236 --> 00:06:27,570
But you can start applying with them and learning from them

97
00:06:27,660 --> 00:06:31,990
is a very meaningful exercise which can be done on your past experiences

98
00:06:32,150 --> 00:06:36,106
or your strategy where you have defined for any platform or

99
00:06:36,128 --> 00:06:40,762
any organization, you can basically systemize

100
00:06:40,826 --> 00:06:44,762
these insights into an experiment and then curate

101
00:06:44,826 --> 00:06:48,394
a set of experiments for that particular organization

102
00:06:48,522 --> 00:06:52,622
or service line. So this is all about

103
00:06:52,756 --> 00:06:56,466
how you are creating an impact on multiple domains. Now, how do

104
00:06:56,488 --> 00:07:00,050
you create a value to this business using these experiments?

105
00:07:00,870 --> 00:07:04,306
I'm sure a lot of people have run the experiments and

106
00:07:04,328 --> 00:07:07,970
they would have got some insights out of it, but they are failing to

107
00:07:08,040 --> 00:07:11,094
convert these insights into a business use case.

108
00:07:11,132 --> 00:07:14,406
Right, because at the end you have to win the business and then once you

109
00:07:14,428 --> 00:07:18,886
win the business, then only the traction or the

110
00:07:18,908 --> 00:07:22,662
organization benefits would be known to other people who are willing to take

111
00:07:22,716 --> 00:07:26,870
these experiments on their services also.

112
00:07:27,020 --> 00:07:30,686
So you have to understand the organizational landscape where

113
00:07:30,708 --> 00:07:34,320
you want to portray, how do you want to portray and what are the business

114
00:07:34,850 --> 00:07:38,478
outcomes you want to actually levy on. Then you

115
00:07:38,484 --> 00:07:42,486
have to create an experiment bucket which has an agility to run on multiple

116
00:07:42,538 --> 00:07:46,226
services, whether it's serving in

117
00:07:46,248 --> 00:07:49,582
a different domain itself, but in the same organization. The experiment

118
00:07:49,646 --> 00:07:53,234
should be so agile that someone can create

119
00:07:53,352 --> 00:07:57,480
a small change in the experiment and can utilize them in their services.

120
00:07:58,170 --> 00:08:01,234
As I said, gaining insight is most powerful and most useful.

121
00:08:01,282 --> 00:08:04,374
When you gain insights, you actually portray them into

122
00:08:04,412 --> 00:08:07,810
your documentations and then people understand these

123
00:08:07,980 --> 00:08:11,402
technical terms and insights which you have

124
00:08:11,536 --> 00:08:14,874
given. They can also correlate with their services and then allow

125
00:08:14,912 --> 00:08:18,490
you to come into their area and then experiment.

126
00:08:18,910 --> 00:08:22,126
Now, acceptance of the use cases across organization. As I

127
00:08:22,148 --> 00:08:26,266
said, you create a pool of use cases which are very generic

128
00:08:26,298 --> 00:08:30,106
in nature and very generic towards the organization where you are implementing

129
00:08:30,138 --> 00:08:34,482
it. And then slowly and gradually start giving

130
00:08:34,536 --> 00:08:37,682
these experiments to run on services,

131
00:08:37,816 --> 00:08:41,266
first manually and then create these use cases as

132
00:08:41,288 --> 00:08:44,594
an automation pipeline based use cases where

133
00:08:44,712 --> 00:08:47,926
people do not have to come and edit your use cases, they just have

134
00:08:47,948 --> 00:08:51,014
to run the use case and then get the output out of it.

135
00:08:51,132 --> 00:08:56,550
So more and more ease

136
00:08:57,050 --> 00:08:59,894
of use cases you give to the user.

137
00:09:00,022 --> 00:09:03,978
They will be highly appreciating to run them and then very less

138
00:09:04,064 --> 00:09:07,594
conflicts would be there to challenge their

139
00:09:07,632 --> 00:09:10,746
environment because these use cases would run internally to them

140
00:09:10,768 --> 00:09:14,314
and then they will get the insights. And slowly and gradually

141
00:09:14,442 --> 00:09:17,774
this will become a pool of use cases where you start

142
00:09:17,812 --> 00:09:21,550
getting the insights. Then the most important

143
00:09:21,620 --> 00:09:25,426
part is conversion of these use cases into revenue. So the business is

144
00:09:25,448 --> 00:09:28,962
revenue. So how do you convert these use cases, your business

145
00:09:29,016 --> 00:09:32,642
use case into revenue? You have to gauge how much and

146
00:09:32,696 --> 00:09:36,370
what have you saved or what have you found,

147
00:09:36,440 --> 00:09:39,558
basically. So for example, you have found an application

148
00:09:39,644 --> 00:09:43,494
which is running on a load balancer, and these load balancers seems

149
00:09:43,532 --> 00:09:47,014
to be very intact and these services are running very

150
00:09:47,052 --> 00:09:50,314
fine, you do not have any challenge in that. But when you run the use

151
00:09:50,352 --> 00:09:54,074
case which you have defined as an experiment on the

152
00:09:54,272 --> 00:09:57,690
load balancer or in basic infrastructure, and you find

153
00:09:57,840 --> 00:10:01,254
that there are projections

154
00:10:01,302 --> 00:10:04,682
of the transactions which are going on internally

155
00:10:04,746 --> 00:10:08,862
and the teams are not able to find out this, and you create

156
00:10:08,996 --> 00:10:12,302
an outcome of this run and then tell them,

157
00:10:12,356 --> 00:10:16,242
say, hey, you know, 30% of your rejections have been going when your

158
00:10:16,376 --> 00:10:20,258
ha is switching over, and 30% means

159
00:10:20,424 --> 00:10:24,210
some amount of x amount of dollars which you have probably

160
00:10:24,360 --> 00:10:28,342
would have lost. Or if in any case of big billion day,

161
00:10:28,396 --> 00:10:32,390
your revenues would be majorly impacted because of these failures

162
00:10:33,290 --> 00:10:37,202
and how this x amount would be calculated. It would be calculated

163
00:10:37,266 --> 00:10:40,778
based on the failures which may happen and

164
00:10:40,944 --> 00:10:47,434
the time or the manner which

165
00:10:47,472 --> 00:10:51,034
would be able to rectify this. In the outage which is in production

166
00:10:51,082 --> 00:10:54,666
or in a big billion day environment, you can calculate the manners

167
00:10:54,698 --> 00:10:58,126
and man days and then how

168
00:10:58,148 --> 00:11:01,678
much time it would take to rectify this use case.

169
00:11:01,764 --> 00:11:05,566
So these terms will give you some sort of revenue

170
00:11:05,758 --> 00:11:09,086
or number and these numbers would be then mapped to your use cases

171
00:11:09,118 --> 00:11:12,338
and outcomes. So the best part is to

172
00:11:12,424 --> 00:11:17,134
try, try, and then try with multiple landscapes

173
00:11:17,182 --> 00:11:20,998
in your other organizations and then create a pool of

174
00:11:21,084 --> 00:11:24,902
use cases which can run automatically into a CI CD line and then

175
00:11:24,956 --> 00:11:28,658
these CI CD lines when they come up with some outcomes,

176
00:11:28,834 --> 00:11:32,826
as I said, you can map them into a menage or a revenue term and

177
00:11:32,848 --> 00:11:35,500
then can win a use case to any business.

178
00:11:35,950 --> 00:11:39,866
So moving on, how you are creating value with

179
00:11:39,888 --> 00:11:43,466
this technology, the use cases could be from open source

180
00:11:43,498 --> 00:11:47,134
use cases, from your learning use cases, creation from the

181
00:11:47,172 --> 00:11:50,958
experiments which have been tried and tested but failed before.

182
00:11:51,124 --> 00:11:54,766
There would be multiple ways you can try these experiments

183
00:11:54,798 --> 00:11:57,730
and create a value using these experiments.

184
00:12:00,230 --> 00:12:03,986
Working on the experiments may be challenging because a lot of times you do

185
00:12:04,008 --> 00:12:08,106
not have an idea where and how to start with an experiment.

186
00:12:08,238 --> 00:12:11,846
So I would recommend go to open source tools, go to

187
00:12:11,868 --> 00:12:15,586
open source communities, find out which are the relevant experiments

188
00:12:15,618 --> 00:12:18,970
which have been driven earlier in the past or probably present in the system,

189
00:12:19,040 --> 00:12:22,698
and then curate your experiment based on that and start

190
00:12:22,784 --> 00:12:26,566
hitting the infrastructure API or any layer

191
00:12:26,598 --> 00:12:29,978
you want for that reason, and start creating your

192
00:12:30,064 --> 00:12:33,486
own experiments with that particular background of your

193
00:12:33,508 --> 00:12:37,054
knowledge. And then either you can use any automation tool to

194
00:12:37,092 --> 00:12:40,846
make it into a CI CD line and probably getting an

195
00:12:40,948 --> 00:12:45,118
experiment result every day, every run or

196
00:12:45,204 --> 00:12:49,234
whenever it is required. So basically you get to know how your system is

197
00:12:49,272 --> 00:12:52,302
behaving and you are hitting the system in the right mode.

198
00:12:52,446 --> 00:12:56,050
Once you hit the system and you get the learning out of it.

199
00:12:56,200 --> 00:12:59,634
You can use these experiment and create a depthful experiment.

200
00:12:59,682 --> 00:13:03,046
Say for example series of experiments. Like once you hit

201
00:13:03,068 --> 00:13:06,914
the infrastructure, then you hit the network layer and in sequence you hit the API

202
00:13:06,962 --> 00:13:10,106
or the application layer. Then you get an end to end result of

203
00:13:10,128 --> 00:13:14,090
an experiment and can create depthful experiment for an organization.

204
00:13:14,590 --> 00:13:18,380
So yes, creating the experiments with technology will help.

205
00:13:18,910 --> 00:13:21,840
A lot of people have asked me a question,

206
00:13:23,730 --> 00:13:27,902
which open source or which license cases tool

207
00:13:27,956 --> 00:13:31,594
would be helpful for me or for my organization? It solely solely

208
00:13:31,642 --> 00:13:35,586
depend upon your experiments. First you hit manually and then

209
00:13:35,608 --> 00:13:39,806
gauge whether my technology which I'm using, chaos, a landscape

210
00:13:39,838 --> 00:13:43,394
which can use a license based tool or can I go

211
00:13:43,432 --> 00:13:47,474
around to an open source community and get my experiments to be created.

212
00:13:47,522 --> 00:13:51,586
And then slowly, gradually when I create a pool of experiments,

213
00:13:51,618 --> 00:13:55,234
can I turn it to a serviceable or a license

214
00:13:55,282 --> 00:13:59,298
based investment or whatever I'm investing right now is

215
00:13:59,404 --> 00:14:02,954
giving me an output which I wanted. So it's again based

216
00:14:02,992 --> 00:14:06,026
on the business requirements and the technology landscape which you

217
00:14:06,048 --> 00:14:09,898
are already using and invested in. So moving on,

218
00:14:10,064 --> 00:14:13,342
I'll not take much of time here, but we have talked in length here.

219
00:14:13,396 --> 00:14:16,602
So experiments in depth. As I said, you create your experiments,

220
00:14:16,666 --> 00:14:20,640
create a series of experiment and then try pushing into

221
00:14:21,170 --> 00:14:25,118
an area where you think these experiments

222
00:14:25,134 --> 00:14:28,802
would help me. And then a prediction of these

223
00:14:28,936 --> 00:14:32,386
experiments and outcomes will help you to

224
00:14:32,408 --> 00:14:35,638
reduce the outages and issues which you are facing in your

225
00:14:35,724 --> 00:14:39,750
landscapes of chaos engineering.

226
00:14:40,090 --> 00:14:44,006
Then revenue realization is the most important part. As I said, convert your use

227
00:14:44,028 --> 00:14:47,458
cases into revenues which help you to map a revenue for

228
00:14:47,484 --> 00:14:51,322
an outage or a time effort saved for

229
00:14:51,456 --> 00:14:54,620
any outcome of a chaos engineering result.

230
00:14:54,990 --> 00:14:59,260
Infrastructure, network and application changes which

231
00:15:01,410 --> 00:15:05,422
impacts any kind of issue or outage can

232
00:15:05,476 --> 00:15:09,134
help to realize what are the major areas in any

233
00:15:09,172 --> 00:15:12,206
application or any infrastructure or any landscape of

234
00:15:12,228 --> 00:15:15,662
an organization. You can dig in and can create

235
00:15:15,716 --> 00:15:18,898
a lot of chaos internally with small, small changes which

236
00:15:18,984 --> 00:15:22,226
may or may not be tested by thoroughly, but you would

237
00:15:22,248 --> 00:15:25,698
be the person who would be able to get the insights out.

238
00:15:25,864 --> 00:15:29,542
Then last but the most important ease of use for

239
00:15:29,596 --> 00:15:33,334
any user across organization which helps or which

240
00:15:33,372 --> 00:15:37,206
can take your chaos engineering experiments without any pain and can run them

241
00:15:37,308 --> 00:15:41,386
without any disruption in their current running services would

242
00:15:41,408 --> 00:15:44,938
be the major business impact which you

243
00:15:44,944 --> 00:15:49,050
can create and these small, small impacts. You can actually

244
00:15:49,120 --> 00:15:52,430
map it to your revenue and based on the runs, based on

245
00:15:52,500 --> 00:15:56,640
multiple runs, usage and outcomes, you can actually drive your business

246
00:15:57,970 --> 00:16:01,040
changes and business revenue impacts across.

247
00:16:01,970 --> 00:16:05,490
So you can please post your question and answers. I would be happy to help.

248
00:16:05,560 --> 00:16:08,814
I have been working with presales and sales and practices

249
00:16:08,942 --> 00:16:12,654
to implement this and have been interacting

250
00:16:12,702 --> 00:16:18,594
with lot of CTO, CXOs and Devsecops,

251
00:16:18,642 --> 00:16:21,990
people who are willing to implement security

252
00:16:22,140 --> 00:16:25,698
as well as resiliency in their application layer and infrastructure layer

253
00:16:25,714 --> 00:16:29,174
or network layer. So thanks for your patience and thanks

254
00:16:29,212 --> 00:16:32,806
for listening me and hope this session will give you a

255
00:16:32,828 --> 00:16:37,720
lot of insight and which will make some

256
00:16:39,450 --> 00:16:43,322
really your organization and you by yourself facing the challenges

257
00:16:43,386 --> 00:16:47,166
and implementing chaos engineering. Thank you so much. Have a good

258
00:16:47,188 --> 00:16:47,260
day.

