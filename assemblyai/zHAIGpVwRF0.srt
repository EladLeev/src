1
00:00:23,200 --> 00:00:27,156
Hi, I'm Ankit and I have close to four years of experience

2
00:00:27,258 --> 00:00:30,620
in web development. Today we are going to talk about

3
00:00:30,690 --> 00:00:34,616
unlocking the power of Shadow Dom. So let's get started. So here's

4
00:00:34,648 --> 00:00:38,168
what we are using to cover. We'll start with what is Shadow Dom?

5
00:00:38,264 --> 00:00:42,156
What are the different types of Shadow Dom? Real world examples of

6
00:00:42,178 --> 00:00:45,436
Shadow Dom in action. How you can implement Shadow Dom

7
00:00:45,468 --> 00:00:49,344
in popular web developers frameworks like React and angular. Then we are

8
00:00:49,382 --> 00:00:52,530
going to end with a hands on demo to put it all together.

9
00:00:53,220 --> 00:00:56,500
So what is Shadowdom? In simple terms,

10
00:00:56,570 --> 00:01:00,452
it is a fundamental web technology that helps you encapsulate your web

11
00:01:00,506 --> 00:01:03,936
components and styles, making them immune to global

12
00:01:03,968 --> 00:01:07,248
scope. Think of it as a protective shell around your

13
00:01:07,274 --> 00:01:10,776
components, ensuring that your code won't interfere with or be

14
00:01:10,798 --> 00:01:13,530
interfered by other parts of your web application.

15
00:01:14,220 --> 00:01:17,508
Shadow Dom comes in two flavors, open and closed.

16
00:01:17,604 --> 00:01:21,470
The distinction between them is how much they expose the outside world.

17
00:01:21,920 --> 00:01:25,790
Open Shadow Dom allows you to style your components from the outside.

18
00:01:26,160 --> 00:01:29,230
To create an open shadow dom you can use this code,

19
00:01:29,600 --> 00:01:33,496
whereas the closed shadow Dom keeps everything hidden away from the global

20
00:01:33,528 --> 00:01:37,090
style. To create a closed shadow dom you can use this code.

21
00:01:37,460 --> 00:01:40,752
Shadow Dom has been embraced by some of the most popular web

22
00:01:40,806 --> 00:01:45,220
applications including YouTube, Google Maps and even material UI.

23
00:01:45,560 --> 00:01:48,784
YouTube utilizes shadow Dom for its video player,

24
00:01:48,832 --> 00:01:52,336
ensuring that your custom styles don't break the player's layout.

25
00:01:52,528 --> 00:01:56,724
Google Maps uses Shadow Dom to encapsulate the maps component,

26
00:01:56,852 --> 00:01:59,290
providing a seamless integration experience.

27
00:01:59,980 --> 00:02:04,100
You can also use shadow Dom in all popular frameworks like React,

28
00:02:04,180 --> 00:02:07,448
angular or just simple web components. Here you

29
00:02:07,454 --> 00:02:11,004
can see to use Shadow Dom in react, we use

30
00:02:11,042 --> 00:02:14,632
the attached shadow function on the reference of a JSX

31
00:02:14,696 --> 00:02:18,584
element. Shadow Dom is at the core of angular's

32
00:02:18,632 --> 00:02:21,932
component encapsulation. You can see that we can add

33
00:02:21,986 --> 00:02:25,644
can encapsulation property in the component directive

34
00:02:25,692 --> 00:02:29,756
of any angular component. You can also create shadow DOm

35
00:02:29,788 --> 00:02:33,250
and simple web components using the attached shadow function.

36
00:02:33,700 --> 00:02:36,996
Now comes the fun part. Let's look at shadow Dom in

37
00:02:37,018 --> 00:02:40,710
action. Here you can see we have created a simple web page.

38
00:02:41,160 --> 00:02:45,156
Here we have a tag that says custom button in the

39
00:02:45,178 --> 00:02:48,840
script. We have reference to this custom button element

40
00:02:49,260 --> 00:02:52,804
using the query selector. Then we are creating

41
00:02:52,852 --> 00:02:56,216
a shadow dom using the attach shadow function.

42
00:02:56,398 --> 00:02:59,852
Note that the mode is closed. That means other

43
00:02:59,906 --> 00:03:03,180
components cannot access this shadow Dom.

44
00:03:03,600 --> 00:03:06,750
We are also creating a style for our button.

45
00:03:07,200 --> 00:03:11,420
Then we are attaching the styles to the shadow Dom.

46
00:03:11,760 --> 00:03:15,360
Then we are creating a button using the create

47
00:03:15,430 --> 00:03:19,040
element and we are naming the button unlocking.

48
00:03:19,380 --> 00:03:22,816
Then we are attaching the button to the shadow dot here you can see

49
00:03:22,838 --> 00:03:26,276
the output. Now since this is closed, if I

50
00:03:26,298 --> 00:03:30,372
just add in a style on the button and

51
00:03:30,426 --> 00:03:34,884
say background color equals to green and

52
00:03:34,922 --> 00:03:37,960
save it, you can see that no changes occur.

53
00:03:38,460 --> 00:03:41,930
Now if I just change this mode to open

54
00:03:42,540 --> 00:03:45,256
then also this doesn't work.

55
00:03:45,438 --> 00:03:48,756
This is normal in shadow Dom because how shadow

56
00:03:48,788 --> 00:03:52,148
Dom works is it creates encapsulation, right?

57
00:03:52,334 --> 00:03:55,996
So to access the open shadow Dom what we can do is

58
00:03:56,178 --> 00:03:59,964
we have to create a script tag and then we'll just type in

59
00:04:00,002 --> 00:04:03,090
document getelement by Id.

60
00:04:03,540 --> 00:04:08,880
Then we have our custom button shadowboot

61
00:04:10,100 --> 00:04:13,596
queryselector. Then we will select the

62
00:04:13,718 --> 00:04:16,580
button style.

63
00:04:17,160 --> 00:04:20,784
Then here we can change the background, choose the background

64
00:04:20,832 --> 00:04:25,140
color and set it to green. Now you can see the color

65
00:04:25,210 --> 00:04:29,112
of the button has changed. Now if I just change this

66
00:04:29,166 --> 00:04:32,232
mode open to close and save it,

67
00:04:32,286 --> 00:04:35,592
you can see that the color is reverted back to

68
00:04:35,646 --> 00:04:40,190
blue. If I check console, you can see that

69
00:04:40,560 --> 00:04:44,044
cannot read properties of null. That means

70
00:04:44,082 --> 00:04:47,628
the shadow Dom is not accessible. Now if we

71
00:04:47,634 --> 00:04:51,116
just go to elements and expand this custom button, you'll see

72
00:04:51,138 --> 00:04:54,560
a shadow root and in bracket you can see closed.

73
00:04:54,900 --> 00:04:58,592
This means the shadow Dom is there, but it's not accessible by

74
00:04:58,646 --> 00:05:01,820
the other components. You can see all the styles

75
00:05:01,900 --> 00:05:04,630
as well as the button here,

76
00:05:05,400 --> 00:05:09,012
but it is not accessible. So if we change

77
00:05:09,066 --> 00:05:12,564
this to open and save, you can

78
00:05:12,602 --> 00:05:16,544
see that the color of the button changed and the shadow

79
00:05:16,592 --> 00:05:20,688
root is now again changed to open. You can still see the styles

80
00:05:20,784 --> 00:05:24,516
and modify it using the JavaScript functions. So this

81
00:05:24,538 --> 00:05:28,392
is how you can use shadow Dom in your web applications.

82
00:05:28,576 --> 00:05:31,964
You can scan this QR code to connect to me on LinkedIn and also

83
00:05:32,002 --> 00:05:34,090
access the port. Thank you for joining in.

