1
00:00:25,410 --> 00:00:28,726
You. Hello everyone. Welcome to my

2
00:00:28,748 --> 00:00:32,326
talk in Conf 42, DevOps 2023 about baking in

3
00:00:32,348 --> 00:00:35,846
reliability. Let me start by thanking the organization for

4
00:00:35,868 --> 00:00:39,254
accepting my talk and thanking all of you for attending this

5
00:00:39,292 --> 00:00:41,960
talk. So let's get to it.

6
00:00:42,890 --> 00:00:46,854
So what sre we going to cover today? So we're basically going to cover how

7
00:00:46,892 --> 00:00:50,890
you can start and keep the ball running about bake in reliability

8
00:00:50,970 --> 00:00:54,478
within your organization. So we'll start by giving a

9
00:00:54,484 --> 00:00:58,078
little bit of context. I'll describe the first thing I do when I

10
00:00:58,164 --> 00:01:01,594
try to approach this kind of thing and then we'll go through some very useful

11
00:01:01,642 --> 00:01:04,914
tips that we can do to get thats ball running. And then

12
00:01:04,952 --> 00:01:08,020
at the end we're going to do a quick recap of what we learned today.

13
00:01:10,950 --> 00:01:14,654
So how did this all started, all this commotion about reliability

14
00:01:14,702 --> 00:01:18,262
engineering and SRE? And it's mostly due to this book

15
00:01:18,316 --> 00:01:22,054
in particular. So in 2016, Google came out

16
00:01:22,092 --> 00:01:25,878
with this book about site reliability engineering and it described the was that

17
00:01:25,964 --> 00:01:30,010
Google did operations. This is what was very interesting because

18
00:01:30,080 --> 00:01:33,242
we have been dealing with the DevOps movement for

19
00:01:33,296 --> 00:01:36,746
a few years now. And although the

20
00:01:36,768 --> 00:01:39,674
DevOps movement started to gain form around 2007,

21
00:01:39,712 --> 00:01:43,200
2008 and the term was coined around 2009,

22
00:01:44,370 --> 00:01:47,582
many organizations still struggle to implement what DevOps is.

23
00:01:47,636 --> 00:01:51,358
Because DevOps is a culture, it's not a set of practical things.

24
00:01:51,444 --> 00:01:55,090
From its start, it can be quite hard for some companies to actually

25
00:01:55,160 --> 00:01:58,862
understand what they need to do or what they could do to implement DevOps.

26
00:01:59,006 --> 00:02:02,994
So it wasn't any surprise when Google came out with the site

27
00:02:03,032 --> 00:02:06,786
reliability engineering book, which describes both an

28
00:02:06,808 --> 00:02:10,182
engineering practice and a position that companies started

29
00:02:10,236 --> 00:02:13,926
to look this as a new approach to do things. Also on

30
00:02:13,948 --> 00:02:17,174
top of that, it's a book that describes how Google does things,

31
00:02:17,212 --> 00:02:20,938
right? So Google is one of the most successful companies in the entire world,

32
00:02:21,024 --> 00:02:24,074
and it's very appealing for companies to just

33
00:02:24,112 --> 00:02:27,626
look at what these type of companies do and start to implement the

34
00:02:27,648 --> 00:02:30,934
same things. The problem is that this book covers

35
00:02:30,982 --> 00:02:34,906
a lot of stuff. So it can be quite hard to really understand what's

36
00:02:34,938 --> 00:02:38,126
going on and it can be quite hard to adapt that

37
00:02:38,148 --> 00:02:41,198
reality to our own reality. And that's the other problem,

38
00:02:41,284 --> 00:02:45,034
is that Google has a set of challenges that most companies won't

39
00:02:45,082 --> 00:02:48,834
have and the way that they have to deal with that might

40
00:02:48,872 --> 00:02:52,226
be different. So it's sometimes hard to make that transition from the way

41
00:02:52,248 --> 00:02:55,678
that Google or any other big company does things to

42
00:02:55,704 --> 00:02:58,982
our reality. So we need to have a set of things that we can do

43
00:02:59,036 --> 00:03:01,400
to actually approach that in that way.

44
00:03:04,250 --> 00:03:07,720
So how do I first start when people

45
00:03:08,090 --> 00:03:11,270
want to talk about reliability or implement reliability.

46
00:03:11,350 --> 00:03:14,940
So the first thing that I do is ask this set of questions.

47
00:03:15,470 --> 00:03:18,874
So I approach people and ask what does reliability mean

48
00:03:18,912 --> 00:03:22,726
to you and what does reliability mean to the organization?

49
00:03:22,918 --> 00:03:26,254
So what am I trying to achieving with these couple

50
00:03:26,292 --> 00:03:29,774
of questions? First of all, I want to understand people's expectations and what

51
00:03:29,812 --> 00:03:33,434
they think that reliability means to them. And simultaneously

52
00:03:33,482 --> 00:03:37,966
I want to try to find out if there is a common language

53
00:03:37,998 --> 00:03:41,426
to talk about reliability among the organization and if there

54
00:03:41,448 --> 00:03:44,818
is a mismatch between what people think reliability is and thats the

55
00:03:44,824 --> 00:03:48,818
organization wants reliability to be. By having that

56
00:03:48,984 --> 00:03:52,194
sense, we can approach the way that we implement reliability engineering

57
00:03:52,242 --> 00:03:55,974
in different ways. Of course you need to ask these questions to many,

58
00:03:56,012 --> 00:03:59,720
many people so that you can try and figure out if, even if different

59
00:04:00,030 --> 00:04:03,834
clusters of people within your organization have a different sense of what that

60
00:04:03,872 --> 00:04:07,066
means. And then that can help you approach the way

61
00:04:07,088 --> 00:04:09,530
that you're going implement a reliability culture.

62
00:04:10,270 --> 00:04:14,218
So let's get to some useful tips on how to approach this baking in reliability

63
00:04:14,314 --> 00:04:17,406
thing. So the format that I'm going

64
00:04:17,428 --> 00:04:20,618
to try and do these tips is that I'm

65
00:04:20,634 --> 00:04:24,014
going to try and to describe why this tip is

66
00:04:24,052 --> 00:04:28,238
important, how we can implementing it and then give in the thats section

67
00:04:28,334 --> 00:04:32,206
actually useful tips and practical things thats you can do on a daily

68
00:04:32,238 --> 00:04:35,586
basis. So the first one might not come as a

69
00:04:35,608 --> 00:04:38,806
surprise and it will be will

70
00:04:38,828 --> 00:04:41,890
be common across trying to implement whatever practice

71
00:04:41,970 --> 00:04:45,622
that you want. And is the concept just asking questions?

72
00:04:45,756 --> 00:04:49,170
So what were we trying to do with this asking questions tip?

73
00:04:49,250 --> 00:04:53,190
So we want to understand the pain points that the company or the engineers

74
00:04:53,270 --> 00:04:56,762
or whoever works in a company have. We also

75
00:04:56,816 --> 00:05:00,758
want to understand the current perceptions that people have about reliability

76
00:05:00,854 --> 00:05:04,574
or even just why things are the way they are. And also

77
00:05:04,612 --> 00:05:07,662
at the same time you want to understand where you can contribute, where you can

78
00:05:07,716 --> 00:05:11,278
put some effort to actually improve people's lives.

79
00:05:11,444 --> 00:05:15,274
So how are we going to do this? We want to increase our knowledge based

80
00:05:15,332 --> 00:05:19,074
on the experience of the people that are already working in the company.

81
00:05:19,272 --> 00:05:23,054
So very important, what can we do? We mustn't be afraid

82
00:05:23,102 --> 00:05:26,546
to ask questions, no matter how stupid they might seem or no

83
00:05:26,568 --> 00:05:29,846
matter the forum. Even you could be in a meeting or you

84
00:05:29,868 --> 00:05:33,480
can be in an incident. Don't be afraid to ask questions.

85
00:05:34,010 --> 00:05:37,378
Something that I like to do when I join an organization or I join

86
00:05:37,394 --> 00:05:40,534
a new part of the organization is to use the career

87
00:05:40,582 --> 00:05:44,070
cold Start algorithm, which was popularized

88
00:05:44,150 --> 00:05:48,022
by Google's, by Meta's CTO, and essentially

89
00:05:48,086 --> 00:05:51,926
a set of three questions that you ask in 30 minutes meetings.

90
00:05:51,958 --> 00:05:55,182
So you book 30 minutes meetings with a few people and then you ask

91
00:05:55,236 --> 00:05:57,790
three questions. First of all, usually you ask,

92
00:05:57,940 --> 00:06:01,406
what should I need to know to do my job? And this could be

93
00:06:01,428 --> 00:06:04,810
for you, in particular a team that you're building, or a whole cluster,

94
00:06:04,970 --> 00:06:08,306
or even a practice that you want to implement. Then you

95
00:06:08,328 --> 00:06:12,082
can ask what they think will be the difficulties that

96
00:06:12,136 --> 00:06:15,314
you will encounter doing that. And you list them out.

97
00:06:15,432 --> 00:06:19,686
And the last question is, who should I talk to next with

98
00:06:19,708 --> 00:06:23,462
those three questions? When you start talking with many people,

99
00:06:23,516 --> 00:06:26,966
you will start to encounter common things. So you will start to understand what

100
00:06:26,988 --> 00:06:30,598
are the pain points, what people think reliability is, what are the difficulties that you're

101
00:06:30,614 --> 00:06:34,314
going to encounter. And you will start algo building a graph of people and

102
00:06:34,352 --> 00:06:37,434
start understanding who does what within the company and who you should

103
00:06:37,472 --> 00:06:41,134
talk with. The second

104
00:06:41,172 --> 00:06:44,542
tip is to expose yourself. So the idea

105
00:06:44,596 --> 00:06:48,606
here is thats you will try to the why for this

106
00:06:48,788 --> 00:06:51,934
part is fairly similar to the ask questions.

107
00:06:52,052 --> 00:06:55,682
You will also want to understand the pain points and encounter the current

108
00:06:55,736 --> 00:06:59,534
perceptions and were you want to contribute. Again, you want to gain

109
00:06:59,582 --> 00:07:03,634
your knowledge by the experience of others,

110
00:07:03,752 --> 00:07:07,294
but you also want to build empathy. You want to put yourself on the shoes

111
00:07:07,342 --> 00:07:10,646
of other people and really feel what they feel and have to

112
00:07:10,668 --> 00:07:14,646
deal with what they deal. So what can you do? You can participate in

113
00:07:14,668 --> 00:07:20,242
many events. It could be meetings, it could be incident

114
00:07:20,306 --> 00:07:23,226
bridges, incident reports. Whatever it is makes sense.

115
00:07:23,328 --> 00:07:26,886
With time you will start to filter those out. Some of them you can expose

116
00:07:26,918 --> 00:07:30,266
yourself and understand. Okay, I might not be the best

117
00:07:30,288 --> 00:07:33,338
use of my time to be here, but in the beginning, just expose yourself,

118
00:07:33,424 --> 00:07:37,230
be there and try to understand how things are. One very important

119
00:07:37,300 --> 00:07:40,654
thing is that you should listen a lot more than you speak and

120
00:07:40,692 --> 00:07:44,126
of course ask questions. You should be there in observing capacity and

121
00:07:44,148 --> 00:07:47,058
trying to understand things. Just listen. Listen what people say,

122
00:07:47,144 --> 00:07:50,402
observe what they are doing. When you don't understand something,

123
00:07:50,456 --> 00:07:54,146
just ask questions and take a lot of notes. If you're anything

124
00:07:54,328 --> 00:07:58,214
like me, you will forget most of the stuff. So I just take as many

125
00:07:58,252 --> 00:08:01,430
notes as I can and then I can try to summarize.

126
00:08:01,770 --> 00:08:04,790
As you might have figured out by now,

127
00:08:04,860 --> 00:08:08,102
exposing yourself and asking questions go hand in hand.

128
00:08:08,156 --> 00:08:11,258
So you can expose yourself and ask a lot of questions. And the other way

129
00:08:11,344 --> 00:08:15,130
around is also true, although that being said,

130
00:08:15,200 --> 00:08:18,602
I wanted to highlight this separate because you could ask questions

131
00:08:18,736 --> 00:08:22,066
without deliberately exposing yourself and you can deliberately

132
00:08:22,118 --> 00:08:27,040
expose yourself and not ask questions. So these two actually go very well

133
00:08:27,410 --> 00:08:30,910
hand in hand. So it's two things that will actually

134
00:08:30,980 --> 00:08:34,094
will help you progress a lot, especially in the beginning when you're starting

135
00:08:34,132 --> 00:08:37,486
your practice or you're starting in a new company, because you will gain knowledge

136
00:08:37,518 --> 00:08:41,140
from the ones that sre already in the question in the company

137
00:08:42,790 --> 00:08:46,802
next. Also very important is thats you want to educate yourself

138
00:08:46,856 --> 00:08:50,262
about what this reliability thing might mean.

139
00:08:50,396 --> 00:08:53,474
So you want to understand the fundamental concepts around reliability

140
00:08:53,522 --> 00:08:57,046
engineering and you also want to understand thats other companies are doing right.

141
00:08:57,148 --> 00:09:00,826
You want to understand how company X does this, or maybe Google does this,

142
00:09:00,848 --> 00:09:04,042
or maybe metaverse or even companies that are within

143
00:09:04,176 --> 00:09:07,530
your region. So how are you going to do this? So you're going to build

144
00:09:07,600 --> 00:09:10,694
your own foundational knowledge. You will have to read books,

145
00:09:10,742 --> 00:09:14,454
watch videos, do courses, attend events. So here are a few tips

146
00:09:14,502 --> 00:09:18,014
in the thats section. So the first one is the site reliability engineering book,

147
00:09:18,052 --> 00:09:21,038
the one that I described in the beginning. Although there is a lot of information

148
00:09:21,124 --> 00:09:24,686
there, it's like the Bible for site reliability engineering and

149
00:09:24,708 --> 00:09:27,934
there's a lot of information there thats could be useful

150
00:09:27,982 --> 00:09:31,490
for you and for anyone who's implementing reliability engineering.

151
00:09:31,910 --> 00:09:35,726
Second book, very interesting book is the implementing service level objectives by

152
00:09:35,768 --> 00:09:39,286
Alex Algo and talks about slos and how you

153
00:09:39,308 --> 00:09:42,722
can implement a reliability culture and have a reliability

154
00:09:42,786 --> 00:09:46,306
framework to actually measure and assess your reliability.

155
00:09:46,498 --> 00:09:50,150
The third link is a course on Coursera. It's about reliability

156
00:09:50,310 --> 00:09:53,894
engineering. It's taught by a few engineers

157
00:09:54,022 --> 00:09:57,978
from Google and it's more practical. You'll have videos and you have assignments that

158
00:09:57,984 --> 00:10:01,766
you can do and start building that reliability engineering foundation.

159
00:10:01,878 --> 00:10:05,534
And of course was important as the other ones it's just

160
00:10:05,572 --> 00:10:09,182
going to events, it could be conferences, could be meetups. It's very interesting,

161
00:10:09,236 --> 00:10:12,974
but you can interact directly with people, see what they're doing,

162
00:10:13,092 --> 00:10:16,882
ask follow up questions, and more importantly you can see what worked

163
00:10:16,936 --> 00:10:20,334
for them and thats didn't. So it's very useful to just go to meetups,

164
00:10:20,382 --> 00:10:24,020
find one in your geographical area, go there and talk with people.

165
00:10:25,670 --> 00:10:29,574
Something that you can do in the beginning is immediately start

166
00:10:29,612 --> 00:10:33,078
to attack pinpoints thats the company has. So why would you do that? So you

167
00:10:33,084 --> 00:10:37,238
want to alleviate issues that are hurting engineers and the business as a whole.

168
00:10:37,404 --> 00:10:40,886
And you also want to create space for project work. So you want

169
00:10:40,908 --> 00:10:44,794
to alleviate some pain points, reduce some toil so that you can actually focus on

170
00:10:44,832 --> 00:10:48,538
long term sustaining projects. And of course you want to make yourself

171
00:10:48,624 --> 00:10:52,734
valuable. So from the get go you want to increase your

172
00:10:52,772 --> 00:10:56,426
value to the company. So it's good that you help attack painting

173
00:10:56,458 --> 00:11:00,410
points. So again, so how do you do this? You will address your organization

174
00:11:00,490 --> 00:11:04,014
pains. So what can you do in practice for this?

175
00:11:04,132 --> 00:11:07,486
You have to make a deliberate effort to identify recurring

176
00:11:07,518 --> 00:11:10,946
issues. So it might mean that you can go to

177
00:11:10,968 --> 00:11:14,574
events or meetings just to understand what's really hurting people's

178
00:11:14,622 --> 00:11:18,394
lives in a daily basis. And after you identify

179
00:11:18,462 --> 00:11:22,242
those, you will have to schedule work to address them. One caveat

180
00:11:22,306 --> 00:11:25,462
here, if you're not careful, there's a serious risk of

181
00:11:25,596 --> 00:11:29,494
that being the only thing that you do. And people get used to this new

182
00:11:29,532 --> 00:11:33,098
team or this new part of the organization, just years with this kind of stuff.

183
00:11:33,184 --> 00:11:36,490
And if you want to create the space for project work, this needs to be

184
00:11:36,560 --> 00:11:40,234
time bounded, for example, or very contained. So you address some pain points,

185
00:11:40,272 --> 00:11:42,960
but you need to create the space for project work.

186
00:11:45,250 --> 00:11:48,506
Another important aspect when starting a reliability engineering

187
00:11:48,538 --> 00:11:52,266
practice is to make yourself available. So you want to build relationships

188
00:11:52,298 --> 00:11:55,954
with other teams, you want to reduce friction with

189
00:11:55,992 --> 00:11:59,566
communication, and you want to make people comfortable addressing

190
00:11:59,598 --> 00:12:03,106
you. For just discussing reliability in

191
00:12:03,128 --> 00:12:07,234
practice or because they have some kind of trouble, they need to be at

192
00:12:07,272 --> 00:12:10,934
ease to just coming to you and ask questions. So you want to create

193
00:12:11,052 --> 00:12:14,534
easy to use communication channels. How can you do that? You can

194
00:12:14,572 --> 00:12:17,462
create some communication channel, like a slack channel, for example,

195
00:12:17,516 --> 00:12:21,190
where people just can ask questions and someone from the team answer them.

196
00:12:21,340 --> 00:12:24,906
You can also create office hours. It will be, for example, a schedule hour

197
00:12:25,088 --> 00:12:28,314
every day, every week where someone from the team is

198
00:12:28,352 --> 00:12:31,338
just there and people can just pop up. It could be physically or it can

199
00:12:31,344 --> 00:12:34,640
be a Zoom call. People can just pop up and ask questions.

200
00:12:35,010 --> 00:12:38,382
Another thing is to have, for example, a mailing list where people can just send

201
00:12:38,436 --> 00:12:41,934
questions or want to discuss something and people from the team just

202
00:12:41,972 --> 00:12:45,758
answer. Overall, what you want to create is an open door

203
00:12:45,774 --> 00:12:49,314
policy where people feel at ease just coming to you and asking questions or

204
00:12:49,352 --> 00:12:53,650
discussing a theme around this part of operations and reliability engineering.

205
00:12:56,490 --> 00:12:59,686
Also important is to communicate extensively. Why would

206
00:12:59,708 --> 00:13:03,414
you want to do that? So everyone should contribute to the

207
00:13:03,452 --> 00:13:06,966
reliability efforts in the thing in the company.

208
00:13:07,068 --> 00:13:10,406
It doesn't make sense for one specific team on its own to

209
00:13:10,428 --> 00:13:14,550
do reliability work. So it should be a collaborative effort.

210
00:13:14,710 --> 00:13:18,266
And for something to be addressed, people need to be aware of it. You need

211
00:13:18,288 --> 00:13:21,866
to keep the topic of reliability fresh. You don't want people to think

212
00:13:21,888 --> 00:13:25,790
that reliability is just something that one team does or

213
00:13:25,860 --> 00:13:29,246
that all the work has been done and everything is fine. So you want

214
00:13:29,268 --> 00:13:33,086
to make sure that reliability is present in people's minds. So how

215
00:13:33,108 --> 00:13:36,766
can you do that? You can do talks both internally or external.

216
00:13:36,878 --> 00:13:40,494
You can create a newsletter where you periodically send information about reliability

217
00:13:40,542 --> 00:13:43,746
or efforts thats are being done within the company. You can

218
00:13:43,768 --> 00:13:47,302
create documentation that people can refer to when they are doing their

219
00:13:47,356 --> 00:13:51,510
work. You can create blog posts, you can create articles

220
00:13:52,810 --> 00:13:56,294
that you share within the company or outside with things about

221
00:13:56,332 --> 00:14:00,166
reliability in operational work. And of course you can send periodical surveys.

222
00:14:00,198 --> 00:14:04,118
For example, if you have, let's say you could have a reliability

223
00:14:04,294 --> 00:14:07,882
maturity model and you periodically can send surveys asking

224
00:14:07,936 --> 00:14:12,602
for your colleagues how they think their operational

225
00:14:12,666 --> 00:14:16,442
work fits within that model and that will keep the reliability efforts

226
00:14:16,506 --> 00:14:17,950
in people's minds.

227
00:14:19,890 --> 00:14:23,898
Something very important is to make reliability work visible.

228
00:14:23,994 --> 00:14:27,454
So reliability, as we said in the previous slide, shouldn't be something obscure

229
00:14:27,502 --> 00:14:30,766
or something that just the team does. If people know what's

230
00:14:30,798 --> 00:14:34,290
going on, what people are working on, thats the efforts are going to be,

231
00:14:34,360 --> 00:14:38,434
they will be more comfortable about it because it's not something obscure that just

232
00:14:38,552 --> 00:14:41,634
someone is doing and that will then somehow

233
00:14:41,682 --> 00:14:45,286
will impact their work and it will also open the door for other people to

234
00:14:45,308 --> 00:14:48,806
collaborate. So you want to turn reliability work as a first

235
00:14:48,828 --> 00:14:51,990
class citizen. So the first thing is to make it visible.

236
00:14:52,070 --> 00:14:55,574
People should be able to quickly find out what work is being done in round

237
00:14:55,622 --> 00:14:59,546
operations or reliability work and understand what is

238
00:14:59,568 --> 00:15:02,986
being done. So you can track it any way you

239
00:15:03,008 --> 00:15:06,778
track any other type of work. For example, if you use tools like Jira

240
00:15:06,794 --> 00:15:09,982
or Trello, you could use the same thing. You could create tickets, you could have

241
00:15:10,036 --> 00:15:13,886
epics, so you could use a similar set of tools that people already understand and

242
00:15:13,908 --> 00:15:17,938
sre used to using. And you could use similar

243
00:15:18,024 --> 00:15:21,602
working models. For example, if the company is using an agile development process,

244
00:15:21,656 --> 00:15:24,946
be it scrum, combine, or whatever it is, you could use a similar type of

245
00:15:24,968 --> 00:15:28,710
working model so that people can quickly understand what's being done, when it's going to

246
00:15:28,780 --> 00:15:30,390
be delivered, et cetera.

247
00:15:32,890 --> 00:15:36,278
Finding your niche is especially important when you're starting out in

248
00:15:36,284 --> 00:15:40,498
a company that already has some size. So many companies

249
00:15:40,604 --> 00:15:43,674
have different teams already addressing operational work and

250
00:15:43,712 --> 00:15:47,018
it doesn't make sense to have competing efforts because that will be just a

251
00:15:47,024 --> 00:15:50,182
waste of resources. And of course, competing efforts

252
00:15:50,246 --> 00:15:53,934
create bad incentives and promote a bad culture. So we

253
00:15:53,972 --> 00:15:57,754
would want to find reliability areas not being actively addressed

254
00:15:57,802 --> 00:16:01,626
and tackle those. So make sure that your work doesn't

255
00:16:01,658 --> 00:16:05,082
overlap too much with other teams. You want to identify

256
00:16:05,146 --> 00:16:08,514
and stop competing efforts as soon as possible and you want to create

257
00:16:08,552 --> 00:16:12,034
a collaborative culture. So maybe you have a cloud engineering team or

258
00:16:12,072 --> 00:16:15,346
a DevOps team that is focusing on a particular area.

259
00:16:15,448 --> 00:16:18,574
It doesn't really make sense to go there and try to change all their work.

260
00:16:18,632 --> 00:16:22,210
It makes a lot of sense to focus on something else. For example, in observability,

261
00:16:22,290 --> 00:16:25,640
you don't have a team focusing that in particular. And then

262
00:16:26,410 --> 00:16:30,022
when some work will overlap with those teams, you will want to collaborate

263
00:16:30,086 --> 00:16:33,340
with them and not replace the work that they're doing.

264
00:16:34,990 --> 00:16:38,758
Very, very important for any effort and reliability engineering

265
00:16:38,774 --> 00:16:42,602
in particular is to promote independence. So teams

266
00:16:42,666 --> 00:16:46,462
should be as autonomous as possible. Your team or

267
00:16:46,516 --> 00:16:50,254
your practice shouldn't be the bottleneck you need to allow people to

268
00:16:50,292 --> 00:16:54,174
learn and build things on their own. You would want to build

269
00:16:54,372 --> 00:16:57,774
tools that allow people to progress on their own and make and

270
00:16:57,812 --> 00:17:01,530
gain traction. You can do that by providing documentation,

271
00:17:01,610 --> 00:17:04,902
both written and videos. You can build tools, you can build platform,

272
00:17:04,996 --> 00:17:08,758
you can build Clis, you can build bots, et cetera. And of course you

273
00:17:08,764 --> 00:17:12,274
can do training. It could be follow training, for example certification,

274
00:17:12,402 --> 00:17:16,022
or you can do your own internal workshops. The idea here

275
00:17:16,076 --> 00:17:19,762
is that teams can independently

276
00:17:19,906 --> 00:17:23,302
the traction they have, the necessary tools, they have the necessary documentation

277
00:17:23,366 --> 00:17:27,114
to progress on their own, and they don't have to wait for you to do

278
00:17:27,152 --> 00:17:28,300
some kind of work.

279
00:17:31,310 --> 00:17:35,690
Talking about more specific about reliability

280
00:17:36,130 --> 00:17:39,834
itself, it's very helpful to have a reliability framework.

281
00:17:39,882 --> 00:17:43,250
Why is that? By having a reliability framework,

282
00:17:44,790 --> 00:17:48,002
you want to have a way to define reliability. Also,

283
00:17:48,056 --> 00:17:52,050
you want to have a way to measure and assess reliability.

284
00:17:52,710 --> 00:17:56,422
It will create a shared language to talk about reliability between

285
00:17:56,476 --> 00:18:00,374
teams and it will facilitate prioritization so

286
00:18:00,412 --> 00:18:03,666
you can create your own or use a reliability framework.

287
00:18:03,778 --> 00:18:08,406
One very popular at the moment is the use of slos to

288
00:18:08,428 --> 00:18:12,314
gain more knowledge about that. You can read about slos in the SRE book,

289
00:18:12,432 --> 00:18:16,410
you can read about in the SRE workbook, which is the second book that Google

290
00:18:16,480 --> 00:18:19,786
released with more practical implementations. And of course you can

291
00:18:19,808 --> 00:18:24,110
read the implementing service level objectives by Alex Hildalgo, which was extensive,

292
00:18:25,250 --> 00:18:28,446
talks extensively about reliability. The idea here is

293
00:18:28,468 --> 00:18:31,722
that different teams talk about reliability using the same language.

294
00:18:31,786 --> 00:18:35,314
And this will help avoid conflict because,

295
00:18:35,352 --> 00:18:38,580
for example, you won't have a development team saying that

296
00:18:39,590 --> 00:18:42,722
this service needs to be reliable for

297
00:18:42,776 --> 00:18:46,434
x, y or z and for example, operations teams talking about reliability in a different

298
00:18:46,472 --> 00:18:49,890
way. And that will also of course facilitate prioritization.

299
00:18:49,970 --> 00:18:53,766
Because if you have a way to measure NSS reliability, you can invest in

300
00:18:53,788 --> 00:18:57,538
what makes sense. So if you're within your reliability bounds, probably you can

301
00:18:57,564 --> 00:19:01,754
release more features for your system. But if you're below

302
00:19:01,872 --> 00:19:04,986
reliability, the reliability that you have defined, maybe you need to

303
00:19:05,008 --> 00:19:06,700
invest in more operational work.

304
00:19:08,830 --> 00:19:12,606
As with any practice, having executive support can

305
00:19:12,628 --> 00:19:16,542
be very beneficial. So executives need to understand why

306
00:19:16,596 --> 00:19:20,560
reliability efforts are important and why they affect the business

307
00:19:21,330 --> 00:19:25,042
along the way. Some changes could be hard and could

308
00:19:25,096 --> 00:19:29,106
require push from the top, and it's also helpful to

309
00:19:29,128 --> 00:19:33,026
align business with engineering. So you will do that by

310
00:19:33,128 --> 00:19:36,566
being engaged periodically with executives. So you need

311
00:19:36,588 --> 00:19:39,926
to interact with executives regularly. Very important is

312
00:19:39,948 --> 00:19:42,950
that you need to back your claims with data. For example,

313
00:19:43,020 --> 00:19:46,600
dormetrics are a good way to translate engineering metrics to

314
00:19:47,450 --> 00:19:51,066
things that business can understand for being beneficial in terms of

315
00:19:51,088 --> 00:19:54,774
operational work, and you want to connect reliability engineering efforts

316
00:19:54,822 --> 00:19:57,626
directly to business outcomes. That way,

317
00:19:57,808 --> 00:20:02,154
executives will understand the impact that these engineering

318
00:20:02,282 --> 00:20:04,800
practices will have on the business as a whole.

319
00:20:06,370 --> 00:20:09,914
And last but not least, very important for reliability engineering

320
00:20:09,962 --> 00:20:13,054
is to invest in observability. Why is that?

321
00:20:13,092 --> 00:20:17,220
You want to understand how users are interacting with your services.

322
00:20:17,670 --> 00:20:21,460
You want to understand how happy users sre with your own services.

323
00:20:22,070 --> 00:20:25,310
For that, you need to understand how your systems are behaving.

324
00:20:25,470 --> 00:20:28,834
You want to improve your meantime to detection, you want to improve

325
00:20:28,882 --> 00:20:32,150
your meantime to repair. And of course you want to reduce the change

326
00:20:32,220 --> 00:20:36,114
failure rates. So you can do that by investing

327
00:20:36,162 --> 00:20:39,974
in observability. So you'll need to equip

328
00:20:40,022 --> 00:20:42,982
your system with metrics, logs, traces, stack traces,

329
00:20:43,046 --> 00:20:46,554
continuous profiling, etc. There's a good

330
00:20:46,592 --> 00:20:49,866
book about observability engineering released by the

331
00:20:49,888 --> 00:20:53,246
team at Honeycomb, and it talks about what reliability is and how you

332
00:20:53,268 --> 00:20:56,526
can implementing reliability within your systems. And you

333
00:20:56,548 --> 00:21:00,394
can also use open source tools and standards like open telemetry

334
00:21:00,442 --> 00:21:04,100
and even leverage automatic instrumentation to get something

335
00:21:05,590 --> 00:21:08,994
out of the ground very quickly and making your

336
00:21:09,032 --> 00:21:10,530
lives a lot easier.

337
00:21:12,790 --> 00:21:16,262
So before we go, let's quick recap what we already

338
00:21:16,316 --> 00:21:19,762
talked about. So first of all, we talked about context.

339
00:21:19,826 --> 00:21:23,506
So we talked about why there's a sudden interest in reliability engineering

340
00:21:23,538 --> 00:21:27,010
and SRE in particular. So that's

341
00:21:27,090 --> 00:21:30,218
when Google released their own book. A lot of people saw that as a

342
00:21:30,224 --> 00:21:34,650
new approach to doing operations and they try to incorporate

343
00:21:35,230 --> 00:21:38,506
SRE within your organizations. But because SRE can be so

344
00:21:38,528 --> 00:21:42,154
broad and so diverse and some of the things that might

345
00:21:42,192 --> 00:21:45,726
work for Google might work within your organization, it can be quite hard to

346
00:21:45,748 --> 00:21:49,534
make that translation between what works at Google and what will work within your

347
00:21:49,572 --> 00:21:53,214
company. So the first thing I do, I usually ask two individuals what

348
00:21:53,252 --> 00:21:56,546
they think reliability means or reliability means to them and what it

349
00:21:56,568 --> 00:22:00,526
means within your organization. And that will help you set you the stage

350
00:22:00,558 --> 00:22:03,874
for you to understand was the company or have the

351
00:22:03,912 --> 00:22:07,022
people have an idea they have a framework in place or they don't,

352
00:22:07,086 --> 00:22:10,374
and will help you understand if there's a mismatch between

353
00:22:10,412 --> 00:22:14,246
what they think reliability is and what the company thinks that reliability is.

354
00:22:14,348 --> 00:22:16,946
And then we went through some useful tips,

355
00:22:16,978 --> 00:22:20,442
things that I usually do on a daily basis to help

356
00:22:20,496 --> 00:22:26,054
me do this reliability work regularly.

357
00:22:26,182 --> 00:22:30,202
Keep in mind that most of these tips are not done

358
00:22:30,256 --> 00:22:34,174
once and then forgotten. These are things that you can help you start but

359
00:22:34,212 --> 00:22:38,394
keep the ball running. And most of these things can be done in parallel,

360
00:22:38,522 --> 00:22:43,118
so you can, for example, attack pain points and make yourself available.

361
00:22:43,204 --> 00:22:46,670
At the same time, it makes sense for you to do these things in parallel.

362
00:22:47,810 --> 00:22:52,014
And this is all from my part. I hope this talk was informative for

363
00:22:52,052 --> 00:22:55,366
you. Each of these topics on their own thats that I

364
00:22:55,388 --> 00:22:59,846
mentioned. These tips could be a

365
00:22:59,868 --> 00:23:03,926
presentation on its own, so feel free to reach out to me during.

366
00:23:04,108 --> 00:23:07,766
You could meet me at events or you could send me

367
00:23:07,788 --> 00:23:11,474
a message on social and we can keep discussing these topics.

368
00:23:11,522 --> 00:23:13,410
So thank you very much and have a great conference.

