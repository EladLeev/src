1
00:02:14,760 --> 00:02:18,144
Hey, folks, how sre you doing? I'm Ramon. I'm a site reliability

2
00:02:18,192 --> 00:02:22,276
engineer at Google in Therick, Switzerland, and we

3
00:02:22,298 --> 00:02:25,670
are going to be talking about postmortem culture at Google today.

4
00:02:26,040 --> 00:02:30,020
So first of all, we're going to cover an introduction of what postmortem are

5
00:02:30,170 --> 00:02:34,276
and how we are going to write them. So at

6
00:02:34,298 --> 00:02:38,184
Google, we have embraced their culture, meaning that we know that everything is failing

7
00:02:38,232 --> 00:02:41,784
underneath us, right? So we have disks, machines, network rings

8
00:02:41,832 --> 00:02:45,032
failing all the time. Therefore, the 100% is a wrong reliability

9
00:02:45,096 --> 00:02:49,630
target for basically everything. And what we do is we use the

10
00:02:50,080 --> 00:02:53,216
reliability target under 100% to

11
00:02:53,238 --> 00:02:56,636
our failure. So the opposite of the reliability target of SLO

12
00:02:56,668 --> 00:03:00,076
is going to be our budget. We use that for taking risk

13
00:03:00,108 --> 00:03:03,860
into our services, adding new features changes, rollouts, et cetera.

14
00:03:04,200 --> 00:03:07,364
So when something fails, what we do is we typically write

15
00:03:07,402 --> 00:03:11,328
a postmortem. So postmortems are written records

16
00:03:11,344 --> 00:03:15,524
of an incident. So whenever something happens, either an outage,

17
00:03:15,652 --> 00:03:19,128
privacy incident, security vulnerability, a near miss.

18
00:03:19,214 --> 00:03:22,904
So we have a problem with our service, but it doesn't trigger into

19
00:03:23,022 --> 00:03:26,440
or translates into an actual outages that customers srE,

20
00:03:26,510 --> 00:03:30,372
we write a postmortem. Postmortem is a documentation of an incident.

21
00:03:30,516 --> 00:03:33,948
So exactly what happened? Like what was the state of the system?

22
00:03:34,034 --> 00:03:37,836
What were the actions that were taking before and after the incident and

23
00:03:37,858 --> 00:03:41,116
what was the impact? So what the customer or our

24
00:03:41,138 --> 00:03:44,560
users saw as a result of the outage,

25
00:03:44,900 --> 00:03:48,108
we went to detail the summary of the root causes and the triggers.

26
00:03:48,124 --> 00:03:51,276
So the root cause is the actual reason why the postmortem

27
00:03:51,308 --> 00:03:55,328
occurred, and the trigger was the event that was actually triggering

28
00:03:55,424 --> 00:03:58,804
or activating that root cause. Like for example, you might have a bag that was

29
00:03:58,842 --> 00:04:02,950
written in your code base years before, and then

30
00:04:03,320 --> 00:04:06,676
it never materializes until you made some certain change in

31
00:04:06,698 --> 00:04:09,930
your system and you exercise it, and then you got advantage, right?

32
00:04:10,300 --> 00:04:13,428
Another key part of a postmortem is the action items. So it's

33
00:04:13,444 --> 00:04:18,060
very important that within your postmortem, you not only specify

34
00:04:20,160 --> 00:04:23,356
the root cause and the incident and the status of the system, but what are

35
00:04:23,378 --> 00:04:26,716
you doing? So this outage never occurs again.

36
00:04:26,818 --> 00:04:30,440
Postmortems are gaining popularity in the IT industry, but they

37
00:04:30,450 --> 00:04:34,364
are very, very common to have them in other industries, like aviation

38
00:04:34,412 --> 00:04:38,256
and medical industries. Like for example, when an

39
00:04:38,278 --> 00:04:41,488
airplane has near miss in an airport, there is going to be

40
00:04:41,494 --> 00:04:45,140
a detailed analysis that has the same shared of a postmortem.

41
00:04:45,640 --> 00:04:48,960
So why are we going to write postmortems?

42
00:04:49,040 --> 00:04:52,884
Basically, it's a learning exercise. So we want to learn how the

43
00:04:52,922 --> 00:04:56,952
system behaves when some changes

44
00:04:57,086 --> 00:05:00,584
with some interactions with some problems in our back

45
00:05:00,622 --> 00:05:04,136
ends will happen. There are many root causes that we need to understand how our

46
00:05:04,158 --> 00:05:07,860
systems happens. So the reasons that we do this learning exercise

47
00:05:07,940 --> 00:05:11,404
is to prevent outages to happen again. So they are

48
00:05:11,442 --> 00:05:15,276
a great tool for learning about the system for reason, how the system

49
00:05:15,458 --> 00:05:19,220
works and reacts to third time complex systems.

50
00:05:19,400 --> 00:05:22,576
And then they will enable us to take qualitative and

51
00:05:22,598 --> 00:05:26,364
quantitative measures and actions to prevent the outage,

52
00:05:26,412 --> 00:05:30,130
to respond in an unexpected or an undesirable way until

53
00:05:31,560 --> 00:05:35,350
some changes on back ends or some changes in

54
00:05:36,280 --> 00:05:39,604
the systems itself, et cetera. Right. It's very important

55
00:05:39,642 --> 00:05:43,524
that the postmortems are blameless. Blameless postmortems seems

56
00:05:43,642 --> 00:05:47,684
or means that we want to fix our system and our processes,

57
00:05:47,732 --> 00:05:52,248
but not people, right? At some point in time, we will have

58
00:05:52,334 --> 00:05:55,608
effectively, like someone pushing a production release or changing a

59
00:05:55,614 --> 00:05:59,032
button or whatever. But that's not the root cause of the problem.

60
00:05:59,086 --> 00:06:02,124
The root cause of the problem is that our system was vulnerable to third time

61
00:06:02,162 --> 00:06:05,864
code pads or the iCAR systems did incorporate

62
00:06:05,912 --> 00:06:09,416
a library and has a bag or whatever, was it? Right. And the trigger

63
00:06:09,448 --> 00:06:12,476
was something changed in the system. A new version

64
00:06:12,508 --> 00:06:16,240
came out, some customer behavior change, et cetera.

65
00:06:16,660 --> 00:06:20,304
In general, what we want to do with the postmortems is learn and

66
00:06:20,342 --> 00:06:23,140
make our system more resilient and more reliable in general.

67
00:06:23,210 --> 00:06:26,564
Right. Another thing that we want to as well take into account

68
00:06:26,602 --> 00:06:30,544
for postmortem writing and analysis is don't celebrate heroism.

69
00:06:30,672 --> 00:06:34,212
So heroes are people that they will just be available

70
00:06:34,266 --> 00:06:37,432
all the time. You can page them all the time. They will put long hours

71
00:06:37,486 --> 00:06:42,132
in postmortems, et cetera. What we want to have is systems and processes

72
00:06:42,276 --> 00:06:46,436
that do not depend on people, like overworking or overstretching

73
00:06:46,468 --> 00:06:50,092
or whatever, right. Because dot by itself might be a flaw on our system

74
00:06:50,146 --> 00:06:54,184
if that person is not available for one reason, are we able to sustain

75
00:06:54,232 --> 00:06:57,388
the system? Is the system healthy? Right?

76
00:06:57,474 --> 00:07:00,936
So just to emphasize, let's fix systems

77
00:07:00,968 --> 00:07:04,768
and processes, not people, right? So when do you write a

78
00:07:04,774 --> 00:07:07,564
postmortem? First of all, when you have an outage, if you have an outage,

79
00:07:07,612 --> 00:07:10,928
you have to write a postmortem and analyze what happens.

80
00:07:11,014 --> 00:07:14,864
So did you affect or did your outage

81
00:07:14,912 --> 00:07:18,256
affect so many users? Do you have so much revenue loss, et cetera,

82
00:07:18,288 --> 00:07:22,164
et cetera. Classify it with severity so you can understand what

83
00:07:22,202 --> 00:07:26,580
was more or less the importance of this outages

84
00:07:26,740 --> 00:07:29,850
and then write it and have an internal review.

85
00:07:30,780 --> 00:07:34,776
It's important to define the criteria beforehand to guide the

86
00:07:34,798 --> 00:07:38,264
person supporting the service so they know when to write one or not.

87
00:07:38,302 --> 00:07:42,270
Right. And as well be flexible because there are times that you might have

88
00:07:42,720 --> 00:07:46,232
some criteria, but then things change or the company grows, et cetera,

89
00:07:46,296 --> 00:07:49,624
and you might want to write a postmortem anyway. If you have a near miss,

90
00:07:49,682 --> 00:07:53,120
I would recommend as well to write a postmortem because even if

91
00:07:53,270 --> 00:07:57,024
the outage didn't immediately translate it into

92
00:07:57,222 --> 00:08:00,656
customers seeing your service down or your data not available,

93
00:08:00,838 --> 00:08:04,620
it's interesting because you can actually use it to

94
00:08:04,710 --> 00:08:08,628
prevent the outage for happening for real in the future. And as

95
00:08:08,634 --> 00:08:12,180
well, another option for postmortem is when you have a learning opportunity.

96
00:08:12,330 --> 00:08:16,004
So if there is some integrate kind of alert that you

97
00:08:16,042 --> 00:08:19,296
hunt, if you sre other

98
00:08:19,338 --> 00:08:23,240
customers that they are interested, if you see that

99
00:08:23,310 --> 00:08:27,112
this potential near means that you have had, or this potential alert could

100
00:08:27,166 --> 00:08:31,084
actually escalate in the future to something that our customers

101
00:08:31,282 --> 00:08:35,096
could see or that could actually become an actual outage,

102
00:08:35,208 --> 00:08:39,212
write a postmortem. You might want to do it a bit lightweight, have less

103
00:08:39,266 --> 00:08:42,252
amount of review, or have a postmortem that is just internal for the team.

104
00:08:42,306 --> 00:08:45,648
Right. That's totally okay. Right. And it's as well a nice documentation for

105
00:08:45,654 --> 00:08:49,792
the risk assessments for your service. And as well, it's a nice way

106
00:08:49,846 --> 00:08:52,528
of training new members of the team that they are going to be supporting the

107
00:08:52,534 --> 00:08:56,148
service on how you write postmortems, and then they will have

108
00:08:56,154 --> 00:08:59,332
a trail of postmortems that they can analyze and read

109
00:08:59,386 --> 00:09:02,704
and understand how the system works and the risk

110
00:09:02,752 --> 00:09:05,636
that the service will have.

111
00:09:05,818 --> 00:09:08,840
So who writes a postmortem? In principle,

112
00:09:09,180 --> 00:09:12,408
there's going to be an owner that is going to contribute or is going to

113
00:09:12,414 --> 00:09:16,152
coordinate the contribution doesn't necessarily mean that this person

114
00:09:16,206 --> 00:09:18,990
is going to write every single line of the postmortem. Right.

115
00:09:19,680 --> 00:09:23,388
The popular choices are usually the incident commander that was responding to the

116
00:09:23,394 --> 00:09:27,020
outage or anyone in the deaf or SRE

117
00:09:27,520 --> 00:09:31,876
team that is like a TL or a manager, depending how your company organizes.

118
00:09:32,008 --> 00:09:35,644
This owner will ask for contributors.

119
00:09:35,692 --> 00:09:39,004
Right. There's going to be an SRE team on another service that was affected,

120
00:09:39,052 --> 00:09:42,688
or there was a backend that was actually some sort of like,

121
00:09:42,774 --> 00:09:46,624
affecting your service. So they will need to contribute, like, the timeline

122
00:09:46,672 --> 00:09:50,484
of events, the root cause action items that they're going to be taking out.

123
00:09:50,522 --> 00:09:54,116
Right. Other dev teams or other SRE teams that they were impacted. So it's not

124
00:09:54,138 --> 00:09:57,544
only the persons or the teams that had services that

125
00:09:57,582 --> 00:10:01,144
impacted your service reliability, but how you affected or your

126
00:10:01,182 --> 00:10:04,730
service affected other products in a company, right?

127
00:10:05,340 --> 00:10:08,984
All of this is a collaborative effort, and producing a good postmortem is something

128
00:10:09,022 --> 00:10:12,568
that takes time. It takes effort and will need reviews

129
00:10:12,584 --> 00:10:17,420
and iterations until it's an informative and a useful document.

130
00:10:18,160 --> 00:10:22,076
Who reads the postmortem? So the

131
00:10:22,098 --> 00:10:25,616
first class of audience is going to be the team. The team that supports a

132
00:10:25,638 --> 00:10:29,708
service will have to read and understand every single detail of all postmortems

133
00:10:29,724 --> 00:10:33,510
that happens for a service, basically because that's how they understand

134
00:10:33,960 --> 00:10:37,316
which action items they will have to produce. What are the

135
00:10:37,338 --> 00:10:40,900
priorities for their own project, prioritization process,

136
00:10:40,970 --> 00:10:44,724
et cetera. The company if you have postmortems that they have

137
00:10:44,762 --> 00:10:47,896
impact, near misses, or cross team postmortems, they are

138
00:10:47,918 --> 00:10:50,952
interesting to have some people outside of the team to review, like for example,

139
00:10:51,006 --> 00:10:54,600
directors, BPS, architects, whoever in the company

140
00:10:54,670 --> 00:10:58,748
will have a role of understanding how the architecture of the services

141
00:10:58,834 --> 00:11:02,604
and the products go. In this

142
00:11:02,642 --> 00:11:06,620
case, details might not be as needed or going as needed.

143
00:11:06,690 --> 00:11:10,520
An executive summary, for example, would certainly help understanding the impact

144
00:11:10,600 --> 00:11:13,788
how this relates to other systems, but it's

145
00:11:13,804 --> 00:11:17,088
definitely a worthy exercise to do. And then customers

146
00:11:17,174 --> 00:11:20,668
in the public, they are another part of audience for postmortems

147
00:11:20,684 --> 00:11:23,664
that they are interesting as well to consider.

148
00:11:23,782 --> 00:11:26,548
If you, for example, run a public cloud or you run a software as a

149
00:11:26,554 --> 00:11:29,908
service company, you will have customers that trust you with their data,

150
00:11:29,994 --> 00:11:33,396
their processing, whatever is what you offer to them, right? When you have

151
00:11:33,418 --> 00:11:36,856
an outage, the trust between you and your customers might be

152
00:11:36,878 --> 00:11:40,890
affected and the postmortem is a nice exercise to actually regain that trust.

153
00:11:41,260 --> 00:11:44,648
Additionally, if you have slas for example, and you

154
00:11:44,654 --> 00:11:48,376
are not able to meet them, postmortems might not only become something that is useful

155
00:11:48,408 --> 00:11:52,540
for your customers, but something that is required as your agreements.

156
00:11:53,680 --> 00:11:57,116
So what will you include in the postmortem? This is

157
00:11:57,138 --> 00:12:00,664
like the bare minimum postmortem that you can write. Like the minimal postmortem,

158
00:12:00,712 --> 00:12:04,000
it will include the root cause, which is in red. In this case was something

159
00:12:04,070 --> 00:12:07,964
a survey is a product that did have some canary metrics that didn't detect

160
00:12:08,012 --> 00:12:11,916
a bug in a feature, right? The feature was enabled

161
00:12:11,948 --> 00:12:15,332
at some point. That was the trigger. Think that the root cause might be just

162
00:12:15,386 --> 00:12:19,364
sitting in your code for a long time and until the trigger happens,

163
00:12:19,482 --> 00:12:23,808
it will not be exercised and therefore the outage will not be materialized

164
00:12:23,984 --> 00:12:27,236
and then you have an impact measure. So in this case, the product ordering

165
00:12:27,268 --> 00:12:30,836
feature for this web or this software as a service was unavailable

166
00:12:30,868 --> 00:12:35,000
for 4 hours and therefore yielded a revenue loss of so many dollars.

167
00:12:35,150 --> 00:12:38,584
It's interesting to always link your impact to business metrics because

168
00:12:38,622 --> 00:12:42,076
that makes everyone in the company able to understand exactly where

169
00:12:42,098 --> 00:12:45,230
is the impact, even if they sre not directly from the same team.

170
00:12:45,600 --> 00:12:49,084
Additionally, we have an action plan. So in this case

171
00:12:49,122 --> 00:12:53,280
that's two ais, two action items. So this implement

172
00:12:53,700 --> 00:12:57,696
better the canary analysis, we can detect problems, right. And then

173
00:12:57,878 --> 00:13:01,376
this is a reactive measure, right. So when something happens, you are

174
00:13:01,398 --> 00:13:05,264
able to detect it and then prevent. This is a preventive measure

175
00:13:05,312 --> 00:13:08,950
which is like to avoid things to happen again, which is

176
00:13:09,320 --> 00:13:13,140
all the features will have a rollout checklist for example, or a review

177
00:13:13,210 --> 00:13:17,140
or whatever it is. What you incorporate there is as well the lessons

178
00:13:17,220 --> 00:13:20,804
learned, which are very interesting to have what went well, what went poorly.

179
00:13:20,852 --> 00:13:24,600
We got lucky, right? And those are interesting questions because

180
00:13:24,670 --> 00:13:28,212
it's never that the outage is all negative.

181
00:13:28,276 --> 00:13:31,432
There may be things that they worked well. For example, team was well trained,

182
00:13:31,496 --> 00:13:34,380
we have proper escalation measures, et cetera, et cetera.

183
00:13:35,200 --> 00:13:38,728
And then some supporting materials, chat logs. When you were responding

184
00:13:38,744 --> 00:13:41,984
to the outage, you were typing into IRC, into your slack, into whatever

185
00:13:42,022 --> 00:13:45,952
is the chat that you use into your company, right. Metrics, for example,

186
00:13:46,006 --> 00:13:49,324
showing screenshots or links to your monitoring

187
00:13:49,372 --> 00:13:52,932
system that shows the metrics and so on for posteriority to understand,

188
00:13:53,066 --> 00:13:56,576
for example how to protect them and so on. Documentations,

189
00:13:56,688 --> 00:14:00,372
links to commits code, excepts of code. That was actually

190
00:14:00,426 --> 00:14:04,208
for example, the part of the root cause for incorporating measures

191
00:14:04,224 --> 00:14:07,928
like when you review some comments, et cetera. That's as well been interesting to

192
00:14:07,934 --> 00:14:11,924
have in your pm useful

193
00:14:11,972 --> 00:14:15,496
metadata to capture who is the owner, collaborators, what is

194
00:14:15,518 --> 00:14:19,756
the review status like if there is some reviews that

195
00:14:19,778 --> 00:14:23,596
are happening, who is signing off the post mortem. So the list of

196
00:14:23,618 --> 00:14:27,800
action items are validated and can move into implementation.

197
00:14:27,880 --> 00:14:31,276
Right. And then we should have for example, impact and root

198
00:14:31,308 --> 00:14:34,844
cause. That's important. We have quantification of that impact.

199
00:14:34,892 --> 00:14:38,592
So was the slow violation impacts in terms of revenue or

200
00:14:38,646 --> 00:14:41,596
customer affectation, et cetera.

201
00:14:41,708 --> 00:14:45,364
Timeline is something that is very interesting, which is like

202
00:14:45,402 --> 00:14:49,232
a description of all the things that what happened from the root cause incorporation

203
00:14:49,296 --> 00:14:53,152
to the trigger to what was the response. And that's a nice learning exercise

204
00:14:53,216 --> 00:14:57,224
for the team that is supporting a service to understand how

205
00:14:57,262 --> 00:15:00,250
the response should go in the future. Right.

206
00:15:01,020 --> 00:15:04,632
This is a postmortem metadata. You have stuff like for example,

207
00:15:04,686 --> 00:15:08,312
the date authors. There is an

208
00:15:08,366 --> 00:15:11,720
impact measure in this case. I think it's very interesting because the impact measure

209
00:15:11,800 --> 00:15:15,196
is measured in queries lost, right? But there

210
00:15:15,218 --> 00:15:17,710
is no revenue impact. That could be, for example,

211
00:15:18,160 --> 00:15:21,468
postmortems, that they do have an actual hard revenue impact in there.

212
00:15:21,554 --> 00:15:25,104
And then you have a trigger and the root cause, see that the root cause,

213
00:15:25,142 --> 00:15:28,844
for example, in this case is a cascading failure through some high load

214
00:15:28,892 --> 00:15:32,470
and blah, blah, blah, right? That was in the system.

215
00:15:32,840 --> 00:15:37,296
That vulnerability that the system had for this complex behavior

216
00:15:37,408 --> 00:15:41,284
was there and only materialized when the trigger was like the

217
00:15:41,322 --> 00:15:44,528
increase in traffic actually exercised

218
00:15:44,624 --> 00:15:48,196
that latent back that you have in your code, right? And you have detection.

219
00:15:48,228 --> 00:15:50,330
That is, who told you, like, could be your customer,

220
00:15:51,580 --> 00:15:54,920
your monitoring system, sending you an alert, et cetera.

221
00:15:56,060 --> 00:15:59,336
The action plan. In this case, we have five action items.

222
00:15:59,368 --> 00:16:02,744
I think it's important to classify by type, the classification by mitigation

223
00:16:02,792 --> 00:16:06,568
and prevention. I think it's interesting because you will have action items

224
00:16:06,664 --> 00:16:09,836
that will reduce the risk, right? So the risk is

225
00:16:09,858 --> 00:16:13,356
always a probability of something materializing. And what was the impact

226
00:16:13,388 --> 00:16:17,536
of that risk? So mitigation would reduce either the probability of something happen or

227
00:16:17,558 --> 00:16:20,300
the impact. And then you have prevention,

228
00:16:20,460 --> 00:16:23,536
which will be like, we want to reduce the probability of

229
00:16:23,558 --> 00:16:27,488
something happening, or ideally

230
00:16:27,504 --> 00:16:31,156
up to zero, so it never happens again. So, learnings and

231
00:16:31,178 --> 00:16:34,116
timeline, this is something that is very interesting, at least for me. The timeline is

232
00:16:34,138 --> 00:16:37,716
my favorite part of postmortem. So lesson

233
00:16:37,748 --> 00:16:41,716
learned is things that are going well. For example, in this case, the monitoring

234
00:16:41,748 --> 00:16:44,728
was working well for this service,

235
00:16:44,814 --> 00:16:48,356
right. Things that were going wrong is staff that is prime

236
00:16:48,388 --> 00:16:51,388
candidates for becoming action items to solve. Right?

237
00:16:51,474 --> 00:16:55,116
And you are always lucky. Just we need to realize that. And there

238
00:16:55,138 --> 00:16:58,296
are some places that we got lack in this case as well. Those are prime

239
00:16:58,328 --> 00:17:02,956
candidates for action items. You don't want to depend on luck for your system reliability.

240
00:17:03,068 --> 00:17:06,624
And then you have the timeline. You see that the timeline covers many

241
00:17:06,662 --> 00:17:10,144
action items. Sorry, many items, right. And then the

242
00:17:10,182 --> 00:17:13,168
outage begins is not exactly at the beginning.

243
00:17:13,264 --> 00:17:17,076
So you see that there are some reports happening

244
00:17:17,178 --> 00:17:20,484
for the Shakespeare ID and Sonnet and there could be

245
00:17:20,522 --> 00:17:24,112
even entries that they are older. That is like this commit

246
00:17:24,176 --> 00:17:28,324
was incorporated in the code base and that contained the actual bug

247
00:17:28,372 --> 00:17:31,688
that was latent for months even, right. And then there was a trigger and

248
00:17:31,694 --> 00:17:34,170
the outage actually proceeded to begin.

249
00:17:35,020 --> 00:17:38,216
So the postmortem, first of all, how you go

250
00:17:38,238 --> 00:17:41,564
for the process? Need a postmortem, yes or no? Yes. Then let's write

251
00:17:41,602 --> 00:17:45,132
a draft. The draft is something you need to put together very quickly with whatever

252
00:17:45,186 --> 00:17:48,888
forensics you can gather from the incident response, like logs,

253
00:17:48,984 --> 00:17:51,804
timeline. Just dump everything into the document. Everything.

254
00:17:51,922 --> 00:17:55,376
Even if it's ugly or it's just disorganized, just dump it so you

255
00:17:55,398 --> 00:17:58,368
don't lose it. And then you can just work it around and make it a

256
00:17:58,374 --> 00:18:01,264
bit prettier. Then analyze root cause,

257
00:18:01,302 --> 00:18:04,636
like internal reviews, clarify, add action items,

258
00:18:04,668 --> 00:18:07,892
et cetera, and then publish it. When you understand the root cause

259
00:18:07,946 --> 00:18:11,344
and you have reviewed the action plan, publish it, have reviews.

260
00:18:11,392 --> 00:18:14,468
Right. And then there is the last part, which is, well, the most important.

261
00:18:14,554 --> 00:18:18,376
You need to prioritize those action items within your project. Work for

262
00:18:18,398 --> 00:18:22,372
your team. Right. Because at the same time, a postmortem without action items,

263
00:18:22,516 --> 00:18:26,244
there's no difference between nothing and a postmortem without action items.

264
00:18:26,372 --> 00:18:29,656
The action items need follow up and need execution,

265
00:18:29,768 --> 00:18:33,260
need closure for that. So actually the system improves.

266
00:18:34,160 --> 00:18:37,532
So ais action items. So what I was saying,

267
00:18:37,586 --> 00:18:41,592
a postmortem without action item is indistinguishable for postmortem,

268
00:18:41,736 --> 00:18:44,992
for a. No, postmortem for our customers. And that's true because you might have a

269
00:18:45,046 --> 00:18:47,840
postmortem. Right. It doesn't have action items.

270
00:18:48,180 --> 00:18:51,456
The customer won't see any improvement in the service. And if you have an

271
00:18:51,478 --> 00:18:54,756
action item list that you don't follow up. Right. The system think

272
00:18:54,778 --> 00:18:57,956
that it's in the same status as it was prior to the

273
00:18:57,978 --> 00:19:01,620
outage. So how

274
00:19:01,690 --> 00:19:05,412
you are going to go for understanding your root causes? Five whys.

275
00:19:05,476 --> 00:19:09,364
Right. The key idea is asking why until the root causes are understood

276
00:19:09,412 --> 00:19:13,210
and actionable. This is very important because

277
00:19:14,060 --> 00:19:17,464
the root causes might be just red herring that they are not the actual one.

278
00:19:17,502 --> 00:19:20,756
So you need to keep asking until you know what was the root cause.

279
00:19:20,798 --> 00:19:24,332
Because that's how you are going to derive some action items, that they are nice

280
00:19:24,386 --> 00:19:27,324
and they are actually improving your system. In this case,

281
00:19:27,442 --> 00:19:31,132
the users couldn't order products worldwide. Why? Because feature x

282
00:19:31,186 --> 00:19:35,084
had a bag. But why had a bag, right? Because the feature

283
00:19:35,132 --> 00:19:39,184
was rolled out globally in one step or we were missing test

284
00:19:39,222 --> 00:19:42,940
case forex. Both can happen. Right. Why? Because the canaries

285
00:19:43,020 --> 00:19:46,484
didn't evaluate that and blah, blah, blah until you just have it more well

286
00:19:46,522 --> 00:19:50,224
defined and crystal clear best practices for the action

287
00:19:50,272 --> 00:19:54,096
plan. So there are some action items that they're going to be band aids

288
00:19:54,128 --> 00:19:57,696
that they are like short term stuff. Those Sre valid shouldn't

289
00:19:57,728 --> 00:20:00,936
be the only thing that you do. It's nice to have some action items that

290
00:20:00,958 --> 00:20:04,024
will just make the system incrementally better or more resilient just

291
00:20:04,062 --> 00:20:06,916
in a short term. Right. But you need to do as well the long term

292
00:20:06,948 --> 00:20:10,752
follow up. We need to think beyond prevention

293
00:20:10,836 --> 00:20:14,408
as well, because there might be cases that you can just prevent

294
00:20:14,424 --> 00:20:17,916
it to happen 100%. That's ideal, right? But you might want to as

295
00:20:17,938 --> 00:20:21,616
well to mitigate, so reduce the probability of something happening, but as

296
00:20:21,638 --> 00:20:25,548
well if some risk materializes, reduce the impact of feed affecting

297
00:20:25,644 --> 00:20:28,864
your service, right? And then humans as a

298
00:20:28,902 --> 00:20:32,336
root cause is a problem because you can have action items fixing

299
00:20:32,368 --> 00:20:35,812
humans. So it should be the processes or the system. Remember that.

300
00:20:35,866 --> 00:20:39,200
So don't fix human, fix like the documentation,

301
00:20:39,280 --> 00:20:42,800
fix the processes for rolling out new binaries,

302
00:20:42,880 --> 00:20:46,760
fix the monitoring that is going to tell you that something is broken.

303
00:20:48,940 --> 00:20:52,004
So you have your postmortem done and published,

304
00:20:52,052 --> 00:20:55,544
right? And it's excellent. So you have it. So we

305
00:20:55,582 --> 00:20:58,936
have some review clubs, we have some postmortem of the month and

306
00:20:58,958 --> 00:21:02,076
so on in the company, especially in a company as large as Google. I think

307
00:21:02,098 --> 00:21:06,044
it's interesting for socializing it and for other people to understand what

308
00:21:06,162 --> 00:21:09,356
failure modes a system has. Because if

309
00:21:09,378 --> 00:21:12,888
a system like my systems for example, are the authentication stack,

310
00:21:12,984 --> 00:21:16,108
if I have some failure modes that I'm subject to, perhaps other systems

311
00:21:16,124 --> 00:21:19,408
that they sre similar will have them too. So it's an interesting exercise to read

312
00:21:19,494 --> 00:21:22,540
how other teams fail, how other sorry services fail,

313
00:21:22,620 --> 00:21:26,436
right? So I can see like wait, am I subject to

314
00:21:26,458 --> 00:21:29,796
that? So I can prevent. And as well, the wheel of misfortune is

315
00:21:29,818 --> 00:21:33,972
a nice replay for training. So for when a new member team

316
00:21:34,026 --> 00:21:37,488
joins, we say, let's just take this postmortem and we just replay

317
00:21:37,504 --> 00:21:40,856
it and see how the response would go and how we approach it.

318
00:21:40,878 --> 00:21:44,488
Right? So it's a nice learning exercise as well. So how do

319
00:21:44,494 --> 00:21:48,436
we execute on action plans? First of all, we need to pick the right priorities,

320
00:21:48,628 --> 00:21:52,660
right? Not all of the action items in your postmortem are going

321
00:21:52,670 --> 00:21:55,276
to be all of the highest priorities that they can be because you will have

322
00:21:55,298 --> 00:21:59,092
a capacity to execute on them. So you perhaps need to choose and go sequentially,

323
00:21:59,176 --> 00:22:03,152
like addressing them. Right. Reviews are very important,

324
00:22:03,286 --> 00:22:07,004
so you have to review how you sre progressing and if your burn

325
00:22:07,052 --> 00:22:10,156
rate of action items

326
00:22:10,188 --> 00:22:13,650
is actually making you to completion, right. And then

327
00:22:14,280 --> 00:22:18,112
have some focus for the executives, even if your postmortem

328
00:22:18,176 --> 00:22:22,052
might be those that are not reviewed by the executive for one reason,

329
00:22:22,106 --> 00:22:25,624
right? It's nice to have high level visibility as well because of your

330
00:22:25,662 --> 00:22:28,968
customers. Your customers, either teams in

331
00:22:28,974 --> 00:22:32,456
the company or your actual external customers can see that and can see that

332
00:22:32,478 --> 00:22:35,370
you are making progress to make the service better.

333
00:22:36,700 --> 00:22:39,310
So that's all I have for today.

334
00:22:39,680 --> 00:22:43,528
This is all about postmortems. But there are many more scenarios

335
00:22:43,544 --> 00:22:46,636
and many more angles for site reliability engineering. So we

336
00:22:46,658 --> 00:22:50,044
have these two books. The first one is the original SRE book,

337
00:22:50,082 --> 00:22:54,392
which covers the principles and the general practices. And the second one, the workgroup,

338
00:22:54,456 --> 00:22:57,596
is an extension of the SRE book that will tell you

339
00:22:57,618 --> 00:23:01,148
how to put them in practice. So we cover a lot

340
00:23:01,154 --> 00:23:05,344
of space in these books about postmortems and action items and incident response

341
00:23:05,392 --> 00:23:09,190
that might be interesting for you to read if you have enjoyed this talk.

342
00:23:10,280 --> 00:23:12,290
And that's all, and thank you very much for watching.

