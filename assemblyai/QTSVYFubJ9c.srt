1
00:00:17,770 --> 00:00:21,486
Hi everyone, I'm Giovanni Laquidara, developer advocate in Huawei and

2
00:00:21,508 --> 00:00:25,314
today we will see how to develop an Android video editing application session

3
00:00:25,362 --> 00:00:28,966
in five simple steps. Nowadays we are surrounded by video

4
00:00:28,988 --> 00:00:32,502
application. Video is the main content and

5
00:00:32,556 --> 00:00:36,018
the video application are the most all loaded one in the stores.

6
00:00:36,194 --> 00:00:40,150
All the videos that we are sharing are not only the recordings

7
00:00:40,230 --> 00:00:43,866
of our moments. These are also in a sort

8
00:00:43,888 --> 00:00:47,462
of sense customized by us, by adding stickers,

9
00:00:47,526 --> 00:00:51,226
sound effects or even virtual object on top of it in a way

10
00:00:51,248 --> 00:00:54,830
that we will feel like this is impossible if you have to think about it

11
00:00:54,900 --> 00:00:58,446
many years ago or maybe too expensive to do, but this

12
00:00:58,468 --> 00:01:01,486
is now easy to be done by you and

13
00:01:01,508 --> 00:01:05,506
by the user of your application. So to create

14
00:01:05,608 --> 00:01:09,534
this kind of video, we can install video editing apps. The most famous

15
00:01:09,582 --> 00:01:12,606
are like here in the slides from Adobe Premiere.

16
00:01:12,638 --> 00:01:15,926
Rush plies quick and sometimes they

17
00:01:15,948 --> 00:01:19,414
are really complex to use and the people

18
00:01:19,452 --> 00:01:23,942
that want to download them and many times the

19
00:01:23,996 --> 00:01:27,706
application of the socials are

20
00:01:27,728 --> 00:01:31,830
already integrated inside them. A video editing feature

21
00:01:31,910 --> 00:01:35,414
that allows the user to create, record and augment

22
00:01:35,462 --> 00:01:38,940
these video that he will produce by using these app.

23
00:01:39,870 --> 00:01:43,614
Especially if we consider the Android world. If you

24
00:01:43,652 --> 00:01:47,274
go to the Google Play core, look for video editing

25
00:01:47,322 --> 00:01:50,622
apps, you can find a lot of application. But it's a common

26
00:01:50,676 --> 00:01:54,226
opinion that the quality of this app is sometimes part of what we

27
00:01:54,248 --> 00:01:56,980
can find in the iOS world.

28
00:01:57,350 --> 00:02:01,118
This is also due because it's hard to use the app

29
00:02:01,214 --> 00:02:04,260
for Android. About video,

30
00:02:04,630 --> 00:02:08,510
about all that. It's about

31
00:02:08,680 --> 00:02:12,326
video editing. So what if I as a

32
00:02:12,348 --> 00:02:15,794
developer want to develop an application that allow my user

33
00:02:15,842 --> 00:02:19,866
to become a director, a video editor? What can I do

34
00:02:20,048 --> 00:02:24,630
in Huawei? We can help you and we develop HMS

35
00:02:24,710 --> 00:02:28,854
core video editor kit. This is an SDK

36
00:02:28,902 --> 00:02:31,920
that is part of the big family of the HMS core services.

37
00:02:32,290 --> 00:02:35,982
And these is compatible from all

38
00:02:36,036 --> 00:02:39,310
the Android smartphone running Android seven

39
00:02:39,380 --> 00:02:43,362
and above. And it's offering a lot of features like video

40
00:02:43,416 --> 00:02:47,490
editing function, really extensive

41
00:02:48,230 --> 00:02:51,854
material library, multireson export,

42
00:02:51,982 --> 00:02:56,574
multiple multivideal or image import supporting

43
00:02:56,622 --> 00:03:00,082
a lot of extension files. So it offer a

44
00:03:00,136 --> 00:03:03,766
really big set of feature. We will see

45
00:03:03,788 --> 00:03:06,950
today how we can use this kit in five simple

46
00:03:07,020 --> 00:03:10,742
step but the prerequirement of these steps

47
00:03:10,806 --> 00:03:14,854
is just to record to register

48
00:03:14,902 --> 00:03:19,094
yourself inside the AppGallery developer console.

49
00:03:19,222 --> 00:03:22,654
To do this, you have to create a Huawei id and this will allow

50
00:03:22,692 --> 00:03:26,346
you not only to assess the power of HMS video editor kit,

51
00:03:26,378 --> 00:03:30,234
but even to assess all the feature that are offered

52
00:03:30,282 --> 00:03:33,598
by HMS Core. So to register, just go

53
00:03:33,604 --> 00:03:36,946
to developer huawei.com and just compile the

54
00:03:36,968 --> 00:03:40,066
form using your phone id, choosing the

55
00:03:40,088 --> 00:03:44,894
password and so on. And in a couple of days you will be allowed

56
00:03:44,942 --> 00:03:48,294
to access the app gallery console. This is like

57
00:03:48,412 --> 00:03:52,386
the main UI throughout. You can manage all the apps

58
00:03:52,418 --> 00:03:55,606
and all the API that you can use and

59
00:03:55,628 --> 00:03:59,354
all the apps and process you can create using the app gallery services and

60
00:03:59,392 --> 00:04:03,082
HMS Core. But just remember, if you

61
00:04:03,136 --> 00:04:07,146
want to create an application to select new app,

62
00:04:07,328 --> 00:04:10,666
select these package type of the application. So if

63
00:04:10,688 --> 00:04:14,382
it's an app or an IPK, these is our kickweek app

64
00:04:14,436 --> 00:04:17,950
site. Even choosing the device where

65
00:04:18,020 --> 00:04:21,742
the application will run in like in this case we

66
00:04:21,796 --> 00:04:25,202
choose mobile phone and don't forget to put these app

67
00:04:25,256 --> 00:04:29,074
name and so on. All the information about the applications and

68
00:04:29,112 --> 00:04:32,866
the AppGal content console is also important because if you

69
00:04:32,888 --> 00:04:36,450
go to general information tab you will see all

70
00:04:36,520 --> 00:04:39,814
the API key that you will need to run to connect your

71
00:04:39,852 --> 00:04:43,830
app with our services API. And even from this

72
00:04:43,900 --> 00:04:47,574
webpage you can download the heconnectservices jSon. That is

73
00:04:47,612 --> 00:04:51,334
the main configuration file that you will have to include inside your source

74
00:04:51,382 --> 00:04:55,242
code of your Android application. It is similar of the Google

75
00:04:55,296 --> 00:04:59,018
Pay services JSon, so it's just a configuration file that will allow the application

76
00:04:59,104 --> 00:05:02,410
to be interfaced with the services provided appGallery

77
00:05:02,490 --> 00:05:05,742
provided by the appGallery console. So let's start

78
00:05:05,796 --> 00:05:09,562
together to see how we can use the HMS video kit.

79
00:05:09,706 --> 00:05:13,326
So first of all you have to go to

80
00:05:13,508 --> 00:05:17,798
these main developer AppGallery

81
00:05:17,994 --> 00:05:21,458
connect console and then from that part

82
00:05:21,624 --> 00:05:25,186
you will be able to see your project.

83
00:05:25,288 --> 00:05:29,414
By clicking on my project here you can select

84
00:05:29,532 --> 00:05:32,358
your project and then from general information.

85
00:05:32,444 --> 00:05:35,830
Like I said before, you can see all the information about your project.

86
00:05:35,900 --> 00:05:39,994
If you select manage API tab and

87
00:05:40,032 --> 00:05:44,426
you want to use the video editor kit, you have just to enable the

88
00:05:44,448 --> 00:05:47,926
tick box with correspondent video editor kit.

89
00:05:47,958 --> 00:05:51,680
Just enable it and you will be ready to use it inside your application.

90
00:05:52,450 --> 00:05:55,710
Enabling this option will help you to

91
00:05:55,780 --> 00:05:59,578
access the video editor menu. The video editor kit menu.

92
00:05:59,754 --> 00:06:03,614
It's a menu that you can find on the left side of

93
00:06:03,652 --> 00:06:07,330
the interface and if you go there on the left side

94
00:06:07,400 --> 00:06:11,006
click on video editor kit. You will see the main user interface

95
00:06:11,038 --> 00:06:14,954
of the video editor kit web app gallery web interface

96
00:06:15,022 --> 00:06:18,898
so in which you can manage all the resources that belongs

97
00:06:18,914 --> 00:06:23,094
to your project. After that you

98
00:06:23,212 --> 00:06:26,918
need to remember to download and put inside your Android application

99
00:06:27,004 --> 00:06:32,414
directory the file, the configuration file. So EdgyconnectServices

100
00:06:32,482 --> 00:06:35,834
JSON file and this will enable your app to connect

101
00:06:35,872 --> 00:06:39,322
with the gallery services and also take notes of your

102
00:06:39,376 --> 00:06:44,558
API key. Because this will be used in

103
00:06:44,644 --> 00:06:47,886
your source core to enable your application to

104
00:06:47,908 --> 00:06:51,966
connect with the API services that we are offering all this information.

105
00:06:52,068 --> 00:06:56,014
So the G content services JSON and the API

106
00:06:56,062 --> 00:06:59,634
key, it's accessible for you inside the general information

107
00:06:59,752 --> 00:07:03,300
tab. So this is the first step. Second step

108
00:07:03,670 --> 00:07:07,000
second step is open your Android application project.

109
00:07:07,370 --> 00:07:10,690
Go inside your build gradle file,

110
00:07:10,770 --> 00:07:14,440
the one that is belonging to the project. Add the main

111
00:07:14,970 --> 00:07:18,710
URL of the mammon repository that will point

112
00:07:18,780 --> 00:07:22,714
to the repository of HMS Core from Huawei. So add this line

113
00:07:22,752 --> 00:07:26,970
of core inside the repository blocks into your

114
00:07:27,040 --> 00:07:29,900
build gradle file belonging to your project.

115
00:07:30,530 --> 00:07:34,206
Remember to add also the dependency of the

116
00:07:34,388 --> 00:07:38,782
AjI connect so appgallery connect plugin inside

117
00:07:38,836 --> 00:07:42,174
the dependency block of the buildlock gradle file and this

118
00:07:42,212 --> 00:07:45,474
will allow you to use the classes that

119
00:07:45,512 --> 00:07:48,846
will parse the edgyconnectservices JSon file

120
00:07:48,878 --> 00:07:52,754
so it's all done for you. Another step

121
00:07:52,872 --> 00:07:56,886
is to add these dependency inside

122
00:07:56,988 --> 00:08:00,294
the building gradle file of your application of your app.

123
00:08:00,332 --> 00:08:03,974
So inside the directory of your

124
00:08:04,012 --> 00:08:08,090
app build gradle file create add

125
00:08:08,240 --> 00:08:11,930
the line corresponding to the usage of the edgy content

126
00:08:12,000 --> 00:08:15,450
plugin from Huawei inside your builder graph file.

127
00:08:16,110 --> 00:08:19,494
Then add the line corresponding

128
00:08:19,542 --> 00:08:23,626
to the video editor SDK to your builder

129
00:08:23,658 --> 00:08:27,566
graddle file as an implementation. So plain and

130
00:08:27,588 --> 00:08:30,942
easy. The third step

131
00:08:30,996 --> 00:08:34,606
is to declare the permission that your application will

132
00:08:34,628 --> 00:08:37,934
need to use the power of HMS

133
00:08:38,062 --> 00:08:41,426
video editor kit. Like you can see there are a lot of

134
00:08:41,448 --> 00:08:44,946
permissions. So the first question from you can be oh, why do

135
00:08:44,968 --> 00:08:48,598
you need to use all this permission? So first of all, we have

136
00:08:48,604 --> 00:08:52,726
the Internet permission because it's a services that

137
00:08:52,908 --> 00:08:56,482
is API based. So it will need the Internet connection.

138
00:08:56,626 --> 00:08:59,946
It will need to write and read from external storage because you will have

139
00:08:59,968 --> 00:09:03,514
to import some resources from the storage and

140
00:09:03,552 --> 00:09:07,734
even to export your video editor, your videos file

141
00:09:07,862 --> 00:09:11,786
inside the external storage. So you will need this permission.

142
00:09:11,898 --> 00:09:16,478
You will need these permission to record the audio from the microphone because

143
00:09:16,564 --> 00:09:20,270
maybe you will want to add the voice or

144
00:09:20,420 --> 00:09:24,174
some recording sound inside your video editor project.

145
00:09:24,292 --> 00:09:28,018
And you also will need a vibrate permission because we

146
00:09:28,024 --> 00:09:32,350
are using these in sour SDK to handle

147
00:09:32,430 --> 00:09:36,486
the main user experience of the video editor kit. We will see

148
00:09:36,508 --> 00:09:40,646
in a bit that when

149
00:09:40,668 --> 00:09:43,910
the user will use the main UI of video editor kit,

150
00:09:44,890 --> 00:09:48,182
he can add resources on top

151
00:09:48,236 --> 00:09:52,186
of the video. But if it adds resources on top on

152
00:09:52,208 --> 00:09:55,606
a video in area that is not allowed to, the device

153
00:09:55,638 --> 00:09:58,986
will be vibrate. So that's the reason why we need a permission for

154
00:09:59,008 --> 00:10:02,830
the vibration. So step three done step four,

155
00:10:02,900 --> 00:10:06,522
let's go in the code and the step four is about declaring

156
00:10:06,586 --> 00:10:09,806
a callback. This callback is

157
00:10:09,828 --> 00:10:13,282
called Media export callback and this step

158
00:10:13,336 --> 00:10:16,898
is mandatory because it's needed

159
00:10:16,984 --> 00:10:21,986
by the video editor SDK to know what he

160
00:10:22,008 --> 00:10:26,058
has to do when the video exported is exported.

161
00:10:26,094 --> 00:10:30,230
So in this case in our sample in the slide, we are just putting

162
00:10:30,380 --> 00:10:32,920
a log. So plain and easy.

163
00:10:33,370 --> 00:10:36,546
Step five so the last steps

164
00:10:36,578 --> 00:10:40,314
is just to create the code that is needed to configure these

165
00:10:40,352 --> 00:10:44,746
the video editor and launch it. So first of all we

166
00:10:44,768 --> 00:10:48,266
need to declare and assign a license id.

167
00:10:48,368 --> 00:10:52,106
The license id is an id editing

168
00:10:52,138 --> 00:10:55,662
the user of your application and you can use these to

169
00:10:55,796 --> 00:10:59,802
assign some quotas to your user. So just assign

170
00:10:59,946 --> 00:11:03,298
random uuid it will work at

171
00:11:03,304 --> 00:11:07,150
the moment for this sample. After that you need to authorize

172
00:11:07,230 --> 00:11:10,738
the video editor kit inside your application to

173
00:11:10,824 --> 00:11:14,850
communicate with these video editor kit part server part inside

174
00:11:14,920 --> 00:11:18,054
our cloud services. To do this we have just

175
00:11:18,092 --> 00:11:21,926
these metal set API key with the API key that can be

176
00:11:21,948 --> 00:11:26,150
found inside the itchyConnectservices JSon or you can

177
00:11:26,300 --> 00:11:30,238
look for it from the appGallery

178
00:11:30,274 --> 00:11:34,186
Connect main UI inside the

179
00:11:34,208 --> 00:11:38,054
web services. After that you need to assign

180
00:11:38,182 --> 00:11:41,578
these media export callback that we defined in the

181
00:11:41,584 --> 00:11:45,054
previous steps on the step number four. To do this you just need to

182
00:11:45,092 --> 00:11:48,554
call set on media export callback with a callback to your previously

183
00:11:48,602 --> 00:11:51,662
decredit. After that you just need to

184
00:11:51,716 --> 00:11:55,250
launch the video editor kit and to do it just

185
00:11:55,320 --> 00:11:59,342
call media application get distance launch editor activities with this parameter.

186
00:11:59,406 --> 00:12:03,070
These are the full parameter. If you go inside our documentation

187
00:12:03,150 --> 00:12:07,650
page in developer orway.com you can find all the parameters

188
00:12:07,730 --> 00:12:10,886
that can reach this call with a

189
00:12:10,908 --> 00:12:14,566
new feature with farter feature. So if you do

190
00:12:14,588 --> 00:12:18,250
this, it's done. Your application

191
00:12:18,400 --> 00:12:22,054
will launch our video editor kit

192
00:12:22,102 --> 00:12:25,354
UI that will allow your user to maybe

193
00:12:25,472 --> 00:12:29,482
import some resources like some videos. Move these

194
00:12:29,536 --> 00:12:33,450
resources inside the timeline to play pose

195
00:12:33,610 --> 00:12:36,874
or assigning like sticker

196
00:12:36,922 --> 00:12:40,206
or effect on top of it like in this video we can see

197
00:12:40,228 --> 00:12:44,230
that I wanted to assign a sticker, then I changed

198
00:12:44,250 --> 00:12:47,586
an idea and then I wanted to write some text on

199
00:12:47,608 --> 00:12:52,050
top of my video like Chow and I can move the

200
00:12:52,120 --> 00:12:56,206
text on top of the videos that I imported.

201
00:12:56,318 --> 00:12:59,510
If obviously the user want to move the text

202
00:12:59,580 --> 00:13:02,546
outside these video, there will be the replression from the smartphone,

203
00:13:02,578 --> 00:13:06,086
the one that I told you before. So this is the

204
00:13:06,108 --> 00:13:09,546
main UI of these video editor application. So we

205
00:13:09,568 --> 00:13:13,450
are offering these services for free and just

206
00:13:13,520 --> 00:13:16,938
with five steps you can achieve this.

207
00:13:17,024 --> 00:13:20,218
So battery power already

208
00:13:20,304 --> 00:13:23,790
battery included services for video editor

209
00:13:24,930 --> 00:13:28,462
for video editor feature so your fifth question could be yes,

210
00:13:28,516 --> 00:13:31,950
but we are talking about the stickers, maybe sound

211
00:13:32,020 --> 00:13:35,614
effects transition, where are all these resources?

212
00:13:35,662 --> 00:13:39,614
And maybe can I upload mine? Can I use my resources

213
00:13:39,662 --> 00:13:41,940
as well? So first of all,

214
00:13:42,790 --> 00:13:45,950
I said before that assessing the

215
00:13:45,960 --> 00:13:49,426
video editor kit from the app gallery console

216
00:13:49,618 --> 00:13:53,638
will enable you to enable or disable all

217
00:13:53,724 --> 00:13:57,046
the usage of these resources so you can enable the stickers to

218
00:13:57,068 --> 00:14:00,826
be used. You can select which stickers are used

219
00:14:01,008 --> 00:14:05,450
and even selecting the stickers,

220
00:14:05,870 --> 00:14:09,820
choosing them from our extensive library. But you still

221
00:14:10,770 --> 00:14:14,030
cannot upload your own resources. You cannot upload

222
00:14:14,610 --> 00:14:18,442
your own png or gif file

223
00:14:18,506 --> 00:14:22,766
to be used as stickers. This is a feature that we

224
00:14:22,788 --> 00:14:26,366
will provide in the future. So at the moment you just assess

225
00:14:26,398 --> 00:14:30,350
these video editor kit Main UI inside these app gallery

226
00:14:30,430 --> 00:14:33,746
net console and select the resources that you want to use

227
00:14:33,768 --> 00:14:37,414
for your application. So even this plain and easy,

228
00:14:37,612 --> 00:14:40,854
the next question you can have it could be

229
00:14:40,892 --> 00:14:45,798
like okay, I have all these videos

230
00:14:45,884 --> 00:14:49,510
editor pre configured. The UI is pre configured. So like

231
00:14:49,580 --> 00:14:53,274
it's a fixed UI. So what I have to do if I want to do

232
00:14:53,312 --> 00:14:56,822
up some features or I don't want some feature, like for instance,

233
00:14:56,886 --> 00:15:00,534
I don't want to allow my user to add stickers to

234
00:15:00,592 --> 00:15:04,078
their project, to their video project or how

235
00:15:04,164 --> 00:15:07,870
can I customize the user journey? How can I just simply

236
00:15:08,210 --> 00:15:11,694
modify the appearance these these of the main video

237
00:15:11,732 --> 00:15:15,326
editor UI. What can I do? So what I showed

238
00:15:15,358 --> 00:15:18,946
you before is what we call the UI SDK of

239
00:15:18,968 --> 00:15:22,430
the video editor Kit SDK.

240
00:15:22,590 --> 00:15:26,534
But we have another SDK that

241
00:15:26,572 --> 00:15:30,760
will enable you as a developer to

242
00:15:31,130 --> 00:15:34,886
customize even more the feature of the video editor kit that

243
00:15:34,908 --> 00:15:38,226
you want to use. And this SDK is called a

244
00:15:38,268 --> 00:15:42,570
fundamentals capability SDK. So this will

245
00:15:42,640 --> 00:15:46,490
enable you to have the superpower to configure whatever

246
00:15:46,560 --> 00:15:47,340
you want.

247
00:15:50,990 --> 00:15:54,634
As long you want to customize it, you can use it straight

248
00:15:54,682 --> 00:15:58,302
away. So let's see what we can do to use

249
00:15:58,356 --> 00:16:03,654
this. So first of all, don't forget inside the build gradle

250
00:16:03,722 --> 00:16:07,986
file of your project to add the edgyconnect plugin. Never forget this.

251
00:16:08,168 --> 00:16:12,178
Second is instead of adding the dependency line

252
00:16:12,344 --> 00:16:15,662
of the video editor UI, just add the dependency

253
00:16:15,726 --> 00:16:19,186
line with video editor SDK. By the

254
00:16:19,208 --> 00:16:22,550
way, this is in these slide is the last version supported by us.

255
00:16:22,700 --> 00:16:26,534
So just add implementation or to away HMS video

256
00:16:26,572 --> 00:16:29,080
editor SDK. That's it.

257
00:16:29,690 --> 00:16:33,514
After using this, after adding this dependency, you have the power to

258
00:16:33,552 --> 00:16:37,354
use all the feature of HMS video editor kits and

259
00:16:37,392 --> 00:16:40,814
to customize it. But I want to leave you with the

260
00:16:40,852 --> 00:16:44,554
main structure of the video editor kit fundamentals

261
00:16:44,602 --> 00:16:48,462
capability SDK because you will need to know how to

262
00:16:48,516 --> 00:16:52,942
build your own UI, how to enable your

263
00:16:52,996 --> 00:16:56,478
decided feature with it. So first of all, we have the main object. These is

264
00:16:56,484 --> 00:17:01,022
these Huawei video editor. This object content inside himself.

265
00:17:01,166 --> 00:17:05,210
An object is called Timeline. This timeline

266
00:17:05,310 --> 00:17:09,218
object, it's the object that is containing

267
00:17:09,314 --> 00:17:13,314
all the timelines of the resources of the video editor,

268
00:17:13,442 --> 00:17:16,710
video project, video editor video editing project. So like

269
00:17:16,780 --> 00:17:20,618
there is the video lane, there is the audio lane, and the

270
00:17:20,624 --> 00:17:24,522
video lane is the timeline that

271
00:17:24,576 --> 00:17:28,026
contains all the video associated to these video project.

272
00:17:28,128 --> 00:17:31,694
The transition, maybe some effects on

273
00:17:31,732 --> 00:17:34,910
top. The audio lane will contain just the audio.

274
00:17:35,570 --> 00:17:39,742
The sticker lane will be like the stickers contain the

275
00:17:39,876 --> 00:17:43,642
timeline containing the stickers and the all

276
00:17:43,716 --> 00:17:47,394
day lifecycle. And the effect also is

277
00:17:47,432 --> 00:17:51,502
the sound effect and video effect timeline

278
00:17:51,566 --> 00:17:56,134
for it. So this is the main structure to

279
00:17:56,252 --> 00:18:00,338
essentially to use the video editor component

280
00:18:00,514 --> 00:18:04,534
that you want to use in your project. You can just call these create

281
00:18:04,732 --> 00:18:08,186
of Huawei videos editor kit. Or if you

282
00:18:08,208 --> 00:18:11,290
already created just use the gate distance.

283
00:18:12,030 --> 00:18:15,594
That's it. When you

284
00:18:15,632 --> 00:18:19,498
created this video editor object,

285
00:18:19,664 --> 00:18:23,946
you can just prepare

286
00:18:23,978 --> 00:18:27,566
it for launch with the init environment. These will initialize for

287
00:18:27,588 --> 00:18:31,470
you all the things needed for the usage of video editor.

288
00:18:32,370 --> 00:18:36,034
But just don't forget that because the editor is

289
00:18:36,072 --> 00:18:39,666
something associated to these user interface, it's something that

290
00:18:39,688 --> 00:18:43,538
will be associated to a layout. So don't forget before to create

291
00:18:43,624 --> 00:18:46,930
a layout associated to the editor.

292
00:18:47,090 --> 00:18:50,534
In this case in this sample, a linear layout will work and

293
00:18:50,572 --> 00:18:54,390
then to assign with the set display and pass in the

294
00:18:54,540 --> 00:18:58,838
inside layout. Just assign this to your editor.

295
00:18:59,014 --> 00:19:03,446
So plain Edition as it is to assess the timelines

296
00:19:03,478 --> 00:19:07,526
that I show you before on the main structure

297
00:19:07,638 --> 00:19:10,986
slide you just need to call the get timeline of

298
00:19:11,008 --> 00:19:14,978
the editor object and from that you will be held

299
00:19:15,014 --> 00:19:18,606
to assess. Maybe if you want the video lane. So the

300
00:19:18,628 --> 00:19:22,542
video timeline accessible with append videos

301
00:19:22,596 --> 00:19:25,902
time video lane colored by the timeline

302
00:19:25,966 --> 00:19:26,580
object.

303
00:19:29,350 --> 00:19:33,010
Using the video lane you can append

304
00:19:34,950 --> 00:19:38,910
video or image just using your own resources.

305
00:19:38,990 --> 00:19:43,266
So you can upload your own resource inside your own server or maybe integrate

306
00:19:43,458 --> 00:19:47,026
some video to be some video resources

307
00:19:47,058 --> 00:19:50,314
inside your application image from your application and

308
00:19:50,352 --> 00:19:53,722
you can append this one with disk methods inside your

309
00:19:53,776 --> 00:19:57,274
main video timeline. If you want to use the

310
00:19:57,312 --> 00:20:01,462
sound timeline timeline, you just need to call timeline

311
00:20:01,606 --> 00:20:05,066
append Audiolane. You will in this way be

312
00:20:05,088 --> 00:20:08,366
able to use the audiolane and with this audio lane you can

313
00:20:08,388 --> 00:20:11,866
append audio on top of your videos editor

314
00:20:11,898 --> 00:20:15,734
project. So with the append audio offset passing

315
00:20:15,802 --> 00:20:20,110
inside the main resources the name of the file

316
00:20:20,270 --> 00:20:24,146
that correspond to the sound that you want to associate or the

317
00:20:24,168 --> 00:20:26,938
music to use the sticker.

318
00:20:27,054 --> 00:20:30,406
Just get the main timeline for

319
00:20:30,428 --> 00:20:33,894
the stickers with append stickers lane and then you will be able

320
00:20:33,932 --> 00:20:37,266
to attach stickers on top of your project using append sticker

321
00:20:37,298 --> 00:20:40,874
asset. Or maybe if you want to append text you just

322
00:20:40,912 --> 00:20:43,706
need to call append word with the text that you want to use it and

323
00:20:43,728 --> 00:20:47,722
decides that's it. And all

324
00:20:47,776 --> 00:20:52,634
this timeline can be actionable

325
00:20:52,762 --> 00:20:55,882
by command like play and pose.

326
00:20:56,026 --> 00:20:59,742
We have the method for it. So just call editor set

327
00:20:59,796 --> 00:21:03,354
play callback if you want to assign some callback to the play

328
00:21:03,412 --> 00:21:07,202
action or if you want straight away to play all the timeline together,

329
00:21:07,336 --> 00:21:11,186
just call editor play timeline with the starting time and

330
00:21:11,208 --> 00:21:13,490
the ending time of the playback.

331
00:21:13,910 --> 00:21:17,426
Great. And in the end if you want to export

332
00:21:17,538 --> 00:21:20,934
the video project that your user created, you can

333
00:21:20,972 --> 00:21:25,046
define the extension file. You can define with

334
00:21:25,068 --> 00:21:28,746
these line of core the property of the project that

335
00:21:28,768 --> 00:21:32,140
you will be exported. So the final video and

336
00:21:33,470 --> 00:21:37,334
you can export the video calling be export manager

337
00:21:37,382 --> 00:21:40,446
export video with all these parameters that you

338
00:21:40,468 --> 00:21:43,610
will need. So this is for the final steps.

339
00:21:43,770 --> 00:21:47,134
If you want to navigate throughout the code of

340
00:21:47,172 --> 00:21:50,846
our samples, just go inside

341
00:21:51,028 --> 00:21:55,006
our main GitHub repository. So GitHub.com HMS core

342
00:21:55,118 --> 00:21:59,140
and these you will find the HMS video editor demo

343
00:21:59,670 --> 00:22:03,086
source code in which we divided

344
00:22:03,198 --> 00:22:06,574
the two main SDK behavior.

345
00:22:06,622 --> 00:22:09,698
So you will find these project for the UI demo, the one that I showed

346
00:22:09,714 --> 00:22:13,682
you before and the project for the fundamentals capability SDK

347
00:22:13,746 --> 00:22:17,490
inside the directory SDK demo. So try to explore

348
00:22:17,570 --> 00:22:21,210
the source code and to play with it and to see if

349
00:22:21,280 --> 00:22:24,874
it actually can be useful to your idea

350
00:22:24,992 --> 00:22:28,778
to create video editor project for your video editor application

351
00:22:28,864 --> 00:22:32,142
or video editing feature for your

352
00:22:32,196 --> 00:22:36,014
user. If you want to learn more. Also you

353
00:22:36,132 --> 00:22:40,426
feel free to go inside our main developer

354
00:22:40,458 --> 00:22:43,886
documentation website. You can scan the

355
00:22:43,908 --> 00:22:48,046
QR code on the left to go inside the HMS core official website

356
00:22:48,228 --> 00:22:51,626
and if you want just if you are curious about these video editor kit

357
00:22:51,658 --> 00:22:55,734
but you don't want to look to the source code that you want just to

358
00:22:55,932 --> 00:22:59,506
use the main mobile application to these the feature.

359
00:22:59,618 --> 00:23:03,094
Feel free to scan the core code on the right and

360
00:23:03,132 --> 00:23:07,282
download and install the demo application like I said in the beginning is compatible

361
00:23:07,346 --> 00:23:11,014
with all these Android smartphone running Android seven

362
00:23:11,132 --> 00:23:14,486
and above. So yeah, thank you

363
00:23:14,508 --> 00:23:16,310
so much for attending this talk.

