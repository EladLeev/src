1
00:01:28,450 --> 00:01:31,846
Hello everyone, my name is Otavio Santana. I'm glad to be

2
00:01:31,868 --> 00:01:35,154
here today. Let's talk about cloud, these survival guide

3
00:01:35,202 --> 00:01:39,270
for the Java activate cloud era. Right now we're going to cover why

4
00:01:39,340 --> 00:01:43,502
should a move to cloud and why should I keep it and

5
00:01:43,556 --> 00:01:47,230
how can I increase my interaction with cloud, especially the cloud

6
00:01:47,300 --> 00:01:50,478
native techniques and

7
00:01:50,564 --> 00:01:54,594
tools. A little bit about me my name is

8
00:01:54,712 --> 00:01:58,642
Otavio Santana. Today I am

9
00:01:58,776 --> 00:02:01,810
distinct engineer at Soup innovation.

10
00:02:02,470 --> 00:02:05,802
Besides that I enjoy a lot open source.

11
00:02:05,966 --> 00:02:09,874
That's why I become Java champion Oracle

12
00:02:09,922 --> 00:02:13,522
Ace, member of TSP

13
00:02:13,586 --> 00:02:16,802
as a chief member Apache

14
00:02:16,866 --> 00:02:20,922
Eclipse committer. I enjoy the

15
00:02:20,976 --> 00:02:24,678
Java could. So I'm also working several specifications,

16
00:02:24,774 --> 00:02:28,790
mainly in Jakarta ee microprofile right now a member

17
00:02:28,870 --> 00:02:32,990
of CLCF, Linux foundation and Phenos.

18
00:02:33,410 --> 00:02:37,278
Besides that, when I do have free time, I enjoy

19
00:02:37,364 --> 00:02:41,166
to write book and articles, especially about

20
00:02:41,268 --> 00:02:44,466
cloud, Java and architecture. But today is

21
00:02:44,488 --> 00:02:48,238
not about me, it's about how we can increase

22
00:02:48,334 --> 00:02:51,522
our experience in the cloud, right?

23
00:02:51,656 --> 00:02:55,506
Everything is around cloud. We enjoy cloud. Cloud is

24
00:02:55,528 --> 00:02:59,000
so lovely, why not move to the cloud right now?

25
00:02:59,530 --> 00:03:02,726
Previously we need to understand why we are doing that.

26
00:03:02,828 --> 00:03:06,582
If you take a look at the whole history, we could see that in

27
00:03:06,636 --> 00:03:10,294
2001 we had the agile manifesto

28
00:03:10,422 --> 00:03:13,754
where the main focus was to have

29
00:03:13,792 --> 00:03:17,590
a time integration between developers or engineers

30
00:03:17,750 --> 00:03:21,774
and a user where we know the right

31
00:03:21,812 --> 00:03:25,070
direction doing incremental delivery.

32
00:03:26,130 --> 00:03:30,286
After that we could see in around 2010.

33
00:03:30,388 --> 00:03:34,334
So we don't have the exactly time in DevOps because

34
00:03:34,372 --> 00:03:37,202
we don't have DevOps manifesto. But what do you know,

35
00:03:37,256 --> 00:03:41,490
it is after the agile where we

36
00:03:41,560 --> 00:03:45,462
put also the operation on that future to have

37
00:03:45,516 --> 00:03:49,400
tight integration to deliver fast and fast and fast.

38
00:03:49,850 --> 00:03:53,862
Fast of course with quality. And then

39
00:03:53,996 --> 00:03:57,362
we finally understood as well that okay, we need to think about

40
00:03:57,436 --> 00:04:02,410
security not in the reactive way, but as

41
00:04:02,480 --> 00:04:06,154
prevention. Right now we are able to put

42
00:04:06,272 --> 00:04:09,562
security in a process these to avoid any kind

43
00:04:09,616 --> 00:04:11,550
of SQL protection,

44
00:04:12,370 --> 00:04:16,174
some data leak or any kind of thing that

45
00:04:16,372 --> 00:04:20,400
might impact and security of our organization and our technology.

46
00:04:21,970 --> 00:04:25,518
For sure we know the writer

47
00:04:25,614 --> 00:04:29,060
of cloud and what does cloud mean?

48
00:04:29,990 --> 00:04:33,310
Cloud computing is a model for enabling

49
00:04:33,390 --> 00:04:37,106
builders convenient on demand network. Yes, and blah, blah blah,

50
00:04:37,138 --> 00:04:40,790
blah. It belongs to NIS National Institute

51
00:04:41,130 --> 00:04:44,774
of Standard and Technology. But to

52
00:04:44,812 --> 00:04:48,086
me cloud is basically somebody else's problem.

53
00:04:48,268 --> 00:04:51,814
Where I delegate these issue to somebody else,

54
00:04:51,852 --> 00:04:55,174
you solve to me probably. You know that analogy

55
00:04:55,222 --> 00:04:58,330
between pizza and cloud where we put cloud

56
00:04:58,480 --> 00:05:00,720
and pizza both as service.

57
00:05:02,210 --> 00:05:06,542
We started with on premise where we need to do everything by

58
00:05:06,676 --> 00:05:10,414
our hands like make at home the pizza and

59
00:05:10,452 --> 00:05:14,606
move through, go dine out and have

60
00:05:14,708 --> 00:05:18,110
everything fade

61
00:05:18,550 --> 00:05:22,020
for us right. That is soft in a sense.

62
00:05:23,030 --> 00:05:26,578
On the someone else problem perspective.

63
00:05:26,674 --> 00:05:30,438
The idea is, okay, I want to do everything by my bare hands,

64
00:05:30,524 --> 00:05:34,040
I need to have knowledge, infrastructure, everything.

65
00:05:34,970 --> 00:05:38,614
But I had less time to focus

66
00:05:38,732 --> 00:05:42,082
on my business and I want to increase

67
00:05:42,146 --> 00:05:45,706
the experience on my business. So I delegate the hardware to

68
00:05:45,728 --> 00:05:49,642
somebody else. I pay somebody else to handle the hardware to me.

69
00:05:49,776 --> 00:05:52,560
So it is infrastructure as a service,

70
00:05:53,730 --> 00:05:57,262
but sometimes it is not enough,

71
00:05:57,396 --> 00:06:01,850
right? I want to focus even more on my business perspective.

72
00:06:02,010 --> 00:06:05,502
So I delegate the hardware and the operation

73
00:06:05,646 --> 00:06:08,994
on that. In these case I will

74
00:06:09,112 --> 00:06:12,722
use path or platform as service where

75
00:06:12,856 --> 00:06:16,760
I just need to write a code, I don't need to

76
00:06:17,210 --> 00:06:21,094
do something else, for example platform,

77
00:06:21,212 --> 00:06:25,030
Sage, Heroku and so on. And these last

78
00:06:25,180 --> 00:06:29,274
step is I don't want to handle anything,

79
00:06:29,392 --> 00:06:33,194
I just want to use it. So I

80
00:06:33,232 --> 00:06:36,794
delegate the hardware plus the operation and finally the

81
00:06:36,832 --> 00:06:40,206
software knowledge to create these software. So the

82
00:06:40,228 --> 00:06:43,994
Gmail suites, the G suites, I feel like that. So I delegate

83
00:06:44,042 --> 00:06:47,054
everything to another companies to

84
00:06:47,092 --> 00:06:50,910
make my life easier and several perspectives.

85
00:06:51,650 --> 00:06:55,694
But it doesn't matter. In each scale

86
00:06:55,742 --> 00:06:59,826
we are in abstraction. The whole point about cloud is

87
00:06:59,928 --> 00:07:03,058
why won with that. So we want success.

88
00:07:03,224 --> 00:07:07,702
And to us success is faster innovation without

89
00:07:07,836 --> 00:07:11,250
impacting these stability. Okay, that sounds impossible,

90
00:07:11,330 --> 00:07:15,462
but that's what we are looking for with

91
00:07:15,516 --> 00:07:19,290
cloud. At least that's what we're trying to

92
00:07:19,440 --> 00:07:23,210
achieve. Okay, that's why right now we have

93
00:07:23,280 --> 00:07:26,554
several options of cloud providers and service.

94
00:07:26,752 --> 00:07:30,942
We started with yes, infrastructure as a service,

95
00:07:31,076 --> 00:07:33,760
platform as a service and software as a service.

96
00:07:34,210 --> 00:07:37,390
And right now we have more flavors of service

97
00:07:37,460 --> 00:07:41,070
in the cloud. So you probably have heard

98
00:07:41,140 --> 00:07:45,010
about cas, that is container as a service, where we

99
00:07:45,080 --> 00:07:49,026
provide containers. And also

100
00:07:49,128 --> 00:07:53,074
we have decision process as a service,

101
00:07:53,272 --> 00:07:56,466
database as a service management event,

102
00:07:56,568 --> 00:08:00,294
streaming as a service, back end as a service or serverless and

103
00:08:00,332 --> 00:08:04,086
so on. The main point here is those are

104
00:08:04,268 --> 00:08:07,554
new service and we

105
00:08:07,612 --> 00:08:11,354
try to put a category on that situation where caused

106
00:08:11,472 --> 00:08:14,140
it is between yas and cases.

107
00:08:14,590 --> 00:08:17,942
And these manage application service such as database

108
00:08:18,006 --> 00:08:22,694
as a service and serverless are unspecialization

109
00:08:22,822 --> 00:08:24,480
of cases. Okay,

110
00:08:26,050 --> 00:08:29,550
but these is a new discussion. It's not stuttered.

111
00:08:30,610 --> 00:08:34,020
And every time that we talk about cloud,

112
00:08:34,470 --> 00:08:38,722
we are living in a cloud trained moment where we had cloud,

113
00:08:38,856 --> 00:08:42,210
just cloud was a buzzword around

114
00:08:42,280 --> 00:08:46,654
technology. Right now it is not anymore.

115
00:08:46,782 --> 00:08:49,380
Then we moved to cloud. Ready?

116
00:08:50,070 --> 00:08:53,574
Moved to cloud friend. Finally, right now

117
00:08:53,612 --> 00:08:57,442
we are living in a cloud native era where everybody's talking

118
00:08:57,516 --> 00:09:01,498
about cloud native. But wait, what does

119
00:09:01,664 --> 00:09:03,340
cloud native means?

120
00:09:05,150 --> 00:09:08,410
Unfortunately, I have a bad news. You. That is,

121
00:09:08,480 --> 00:09:12,298
I have no idea what does that mean, and I'm

122
00:09:12,314 --> 00:09:16,778
being to tell you what I guess nobody knows

123
00:09:16,954 --> 00:09:20,554
because cloud native become a kind of hakuna matata

124
00:09:20,602 --> 00:09:23,422
where everybody has your perspective.

125
00:09:23,486 --> 00:09:27,474
These about that definition, okay, if you go to

126
00:09:27,512 --> 00:09:31,058
several articles, several discussions probably

127
00:09:31,144 --> 00:09:34,754
these discussion this article, this book has your own definition about

128
00:09:34,792 --> 00:09:39,574
cloud native. Each company probably has own

129
00:09:39,612 --> 00:09:43,142
definition and you might have your

130
00:09:43,196 --> 00:09:46,726
own definition about cloud native. Let's go on

131
00:09:46,828 --> 00:09:50,026
some samples here. For example, in the

132
00:09:50,048 --> 00:09:53,194
pivotal website, cloud native is an approach to

133
00:09:53,232 --> 00:09:56,506
building and running application that explode and

134
00:09:56,528 --> 00:09:59,100
take advantage of the cloud computing model.

135
00:10:00,270 --> 00:10:03,914
There is this amazing book here, or learning path

136
00:10:03,962 --> 00:10:07,146
attaching cloud native application. The main goal

137
00:10:07,178 --> 00:10:10,270
here is to focus more infrastructure

138
00:10:10,690 --> 00:10:14,450
where cloud native is more about infrastructure than soft

139
00:10:14,520 --> 00:10:17,922
development. There is this book here,

140
00:10:17,976 --> 00:10:20,690
cloud native development partner and best practice.

141
00:10:21,110 --> 00:10:25,042
It has a similar ideology around

142
00:10:25,176 --> 00:10:27,880
cloud native to the previous book.

143
00:10:29,290 --> 00:10:32,406
Indeed they have

144
00:10:32,588 --> 00:10:35,682
a new word third that means in deployment,

145
00:10:35,746 --> 00:10:39,322
deploy, up and replace and scale. So it's more about

146
00:10:39,376 --> 00:10:43,274
infrastructure than soft development. Then we

147
00:10:43,312 --> 00:10:46,938
have this book that put everything around

148
00:10:47,024 --> 00:10:50,254
soft development in some level of

149
00:10:50,292 --> 00:10:53,770
cloud native. So today cloud native

150
00:10:53,850 --> 00:10:58,320
is more than a tool set, is a complete architecture and

151
00:10:58,690 --> 00:11:02,378
philosophical approach. So everything is

152
00:11:02,484 --> 00:11:06,274
around cloud native. In the past we

153
00:11:06,312 --> 00:11:09,794
had waterfall, right now we are

154
00:11:09,832 --> 00:11:13,426
living in the agile methodology and the

155
00:11:13,448 --> 00:11:17,538
next move to you is move to cloud native where

156
00:11:17,704 --> 00:11:20,100
everything is around cloud.

157
00:11:24,250 --> 00:11:28,202
We also have CNCF that is an organization around cloud

158
00:11:28,256 --> 00:11:32,650
native by Linux foundation that

159
00:11:32,720 --> 00:11:36,790
has your own definition as well. So cloud native technology empower organization

160
00:11:36,870 --> 00:11:38,940
to build run scalable application.

161
00:11:40,130 --> 00:11:43,070
It has several simple approach, okay,

162
00:11:43,140 --> 00:11:46,494
container service, mesh, microservice. But as you can

163
00:11:46,532 --> 00:11:49,710
see it's abstract enough to fit

164
00:11:49,780 --> 00:11:55,300
everything because it's too abstract and

165
00:11:56,710 --> 00:12:00,414
it looks like more a marketing and sales pitch,

166
00:12:00,462 --> 00:12:04,562
they are technical perspective. But anyway we

167
00:12:04,616 --> 00:12:08,470
saw several articles around, okay, if you create

168
00:12:08,620 --> 00:12:12,066
an application that is container based or it's

169
00:12:12,098 --> 00:12:15,554
ready to cloud and it was burned in these cloud, okay, it's a cloud native

170
00:12:15,602 --> 00:12:18,540
application. And be happy with that.

171
00:12:20,110 --> 00:12:23,290
The whole point here is today is to explain to you

172
00:12:23,360 --> 00:12:26,582
that right now we have 1000 of definition

173
00:12:26,646 --> 00:12:29,418
of cloud native. And that is okay,

174
00:12:29,584 --> 00:12:32,606
that if you have no idea, what does that mean? Because right

175
00:12:32,628 --> 00:12:36,318
now the whole market has no idea either. Okay,

176
00:12:36,404 --> 00:12:40,186
so every article might have a different perspective

177
00:12:40,218 --> 00:12:42,842
of cloud native because it's a new trend.

178
00:12:42,986 --> 00:12:45,460
These everybody is looking at.

179
00:12:46,230 --> 00:12:49,986
And yes, I have my own definition as well based on

180
00:12:50,008 --> 00:12:53,842
the previous book that I read and article as well. So to me

181
00:12:53,896 --> 00:12:57,926
cloud native is a set of good practice to optimize an application in

182
00:12:57,948 --> 00:13:01,106
the cloud through three steps, containers,

183
00:13:01,218 --> 00:13:04,070
orchestration and finally automation.

184
00:13:06,410 --> 00:13:09,706
And yes, we talked about what we want to

185
00:13:09,728 --> 00:13:13,398
achieve with cloud. That is innovation

186
00:13:13,494 --> 00:13:18,090
without impact and use

187
00:13:18,160 --> 00:13:21,962
stability in the software development. And that is these expectation,

188
00:13:22,026 --> 00:13:26,094
right? So we want to be like Apollo, closer to

189
00:13:26,132 --> 00:13:29,360
the sun and the highest as possible.

190
00:13:29,730 --> 00:13:33,562
However, the reality is we become Icarus

191
00:13:33,626 --> 00:13:37,574
where you fall as closer we go to the clouds.

192
00:13:37,722 --> 00:13:40,180
That's sad, but unfortunately that's true.

193
00:13:40,950 --> 00:13:45,114
And we have a thousand challenge when talk about soft development

194
00:13:45,182 --> 00:13:46,440
plus cloud.

195
00:13:49,370 --> 00:13:53,254
Besides the political area

196
00:13:53,372 --> 00:13:57,062
discussions and something like that, we also have

197
00:13:57,116 --> 00:14:00,770
technical challenge to us. We have security routes,

198
00:14:00,930 --> 00:14:05,450
Opengrid database and language backups optimization

199
00:14:06,190 --> 00:14:09,900
such as CI cts at a stand for

200
00:14:11,650 --> 00:14:14,682
as software developers,

201
00:14:14,746 --> 00:14:18,782
architecture and senior engineer. We must know

202
00:14:18,836 --> 00:14:21,886
that everything is around trade off, right? We need

203
00:14:21,908 --> 00:14:25,610
to handle with complexity, we handle with risk,

204
00:14:25,690 --> 00:14:29,714
we handle with cost. And also we need to handle with the

205
00:14:29,832 --> 00:14:34,066
knowledge management. These I need to know what

206
00:14:34,168 --> 00:14:37,830
everybody knows. And I need to move these right person to the right team

207
00:14:37,900 --> 00:14:41,414
to the right knowledge. These is this amazing book that is

208
00:14:41,452 --> 00:14:45,586
fundamental of soft architecture. It's an engineering

209
00:14:45,618 --> 00:14:48,522
approach and everything is about trade off.

210
00:14:48,656 --> 00:14:52,102
Okay. When I mentioned the sauce,

211
00:14:52,246 --> 00:14:56,166
probably it might is more expensive,

212
00:14:56,358 --> 00:14:59,994
however it has less risk. When you go to

213
00:15:00,032 --> 00:15:02,834
yas it might be cheaper than a sauce.

214
00:15:02,902 --> 00:15:06,782
However, I need to handle with more stuff. I need to handle with more

215
00:15:06,836 --> 00:15:10,800
details that I usually don't need to handle when I go

216
00:15:12,050 --> 00:15:13,860
as fast. Okay.

217
00:15:15,750 --> 00:15:19,266
And yes, I talked to why we are moving to the

218
00:15:19,288 --> 00:15:23,118
cloud, the history reason, the expectation,

219
00:15:23,214 --> 00:15:26,530
what we want to achieve, the challenge.

220
00:15:26,690 --> 00:15:29,682
And finally let's talk about the survival guide.

221
00:15:29,746 --> 00:15:33,202
How can we handle with cloud Java

222
00:15:33,346 --> 00:15:36,534
and how we can move our application to the cloud.

223
00:15:36,732 --> 00:15:40,006
These survival guide today is a flight

224
00:15:40,038 --> 00:15:43,434
plan. Oh wait, what do

225
00:15:43,472 --> 00:15:46,774
you mean about flight plan? Because a flight

226
00:15:46,822 --> 00:15:51,006
plan is a plan to go to somewhere in

227
00:15:51,028 --> 00:15:55,018
the cloud, right? So it's a plan. So we need to define the routes,

228
00:15:55,114 --> 00:15:58,190
these schedule, these definition,

229
00:15:58,690 --> 00:16:02,250
the external points like weather equipment,

230
00:16:02,330 --> 00:16:06,062
the crew, the internal tails

231
00:16:06,126 --> 00:16:09,822
and of course with security, with safety

232
00:16:09,886 --> 00:16:13,730
to keep our organization moving while

233
00:16:13,800 --> 00:16:15,880
everything is moving on.

234
00:16:16,570 --> 00:16:18,710
That's why we have etops.

235
00:16:20,170 --> 00:16:23,986
And basically the idea and the analogy with the flight

236
00:16:24,018 --> 00:16:28,138
plan is exactly like that. I need to know where am I,

237
00:16:28,304 --> 00:16:31,498
how far I want to go. I need to check the

238
00:16:31,504 --> 00:16:34,582
internal conditions, the external condition, the budget,

239
00:16:34,646 --> 00:16:37,926
and more precisely these safety.

240
00:16:38,038 --> 00:16:41,434
Remember the point I want to achieve a

241
00:16:41,472 --> 00:16:45,454
success is move faster. If doubt impact our

242
00:16:45,492 --> 00:16:46,270
organization.

243
00:16:49,810 --> 00:16:53,314
And that's the question that we want to answer with

244
00:16:53,352 --> 00:16:56,562
the flight plan. Where are

245
00:16:56,616 --> 00:16:59,220
we? These should we go next?

246
00:16:59,670 --> 00:17:03,250
How do I get there? Because in the flight plan

247
00:17:03,400 --> 00:17:07,006
if it's too far. Sometimes you're not able to go directly between

248
00:17:07,048 --> 00:17:11,080
Sao Paul and Brazil to Japan. We need to have stops for example.

249
00:17:11,450 --> 00:17:14,966
Because once it's too far, I need to create scales on

250
00:17:14,988 --> 00:17:18,406
that stops. And that's the idea I need

251
00:17:18,428 --> 00:17:22,570
to understand where am I and where I want to go. It is if

252
00:17:22,640 --> 00:17:27,046
it is too far, maybe do cases

253
00:17:27,238 --> 00:17:31,020
and to understand everything around it.

254
00:17:31,710 --> 00:17:36,194
And every time when we talk about abdominal

255
00:17:36,262 --> 00:17:39,710
framework in the cloud, we need to talk about the

256
00:17:39,780 --> 00:17:42,480
maturity models that we have so far.

257
00:17:43,270 --> 00:17:46,260
Frameworks adoption that we have so far.

258
00:17:46,870 --> 00:17:50,290
Right now I believe every cloud provider has

259
00:17:50,360 --> 00:17:53,938
your own definition or one information about

260
00:17:54,104 --> 00:17:57,654
the framework of cloud adoption to that

261
00:17:57,772 --> 00:18:00,360
cloud providers. Okay.

262
00:18:02,170 --> 00:18:05,862
And that is okay. In the soft development you probably know

263
00:18:05,916 --> 00:18:09,146
the Richard maturity model where

264
00:18:09,248 --> 00:18:13,642
we simply call cloud rest. Where we have application

265
00:18:13,776 --> 00:18:17,994
that wants to go to these perfect state of art of

266
00:18:18,112 --> 00:18:21,542
rest application where we start with none

267
00:18:21,686 --> 00:18:26,414
and go through hype media controls these hate was and

268
00:18:26,452 --> 00:18:30,240
that is exactly what we want to achieve with cloud.

269
00:18:31,170 --> 00:18:34,910
And the flight plan is basically that it's a growing of

270
00:18:34,980 --> 00:18:38,782
cloud for sure. It's not a good name. Yes these

271
00:18:38,836 --> 00:18:42,354
might be impact religion thing, but the idea is to start

272
00:18:42,392 --> 00:18:45,522
with none and then go to most

273
00:18:45,576 --> 00:18:47,060
optimized as possible.

274
00:18:48,550 --> 00:18:51,894
And let's move on to that flight plane idea.

275
00:18:52,092 --> 00:18:56,034
The first level or none. We understood

276
00:18:56,082 --> 00:18:59,114
that there is no cloud adoption. We are not

277
00:18:59,152 --> 00:19:03,594
using cloud yet, but we'd like to use the

278
00:19:03,632 --> 00:19:06,886
first point on that moment is to understand the methodology

279
00:19:06,998 --> 00:19:09,878
to move our application far as possible.

280
00:19:10,064 --> 00:19:14,030
So I need level o, so need to

281
00:19:14,100 --> 00:19:17,630
create MVP or a buck, create a small application,

282
00:19:17,780 --> 00:19:21,050
prepare if everything is okay, expand,

283
00:19:21,130 --> 00:19:23,870
optimize to finally self sustain.

284
00:19:24,030 --> 00:19:27,794
Okay, so a buck put prepare to

285
00:19:27,832 --> 00:19:31,970
production, go to production, create more

286
00:19:32,120 --> 00:19:36,018
steps, optimize these step to using automation

287
00:19:36,114 --> 00:19:38,390
and then finally self sustain.

288
00:19:40,250 --> 00:19:43,990
Once we understood these methodology and want to move to these cloud,

289
00:19:44,140 --> 00:19:46,600
let's move to the initial step.

290
00:19:47,790 --> 00:19:52,038
We have a little bit of automation of observability

291
00:19:52,214 --> 00:19:56,170
or law on existent cloud

292
00:19:56,240 --> 00:19:57,210
adoption.

293
00:19:59,070 --> 00:20:02,686
Also I mentioned before, the idea is to

294
00:20:02,708 --> 00:20:05,806
handle risk and cost and especially the

295
00:20:05,828 --> 00:20:10,062
complexity because the complexity is the main key on

296
00:20:10,116 --> 00:20:12,880
that situation. Okay,

297
00:20:13,670 --> 00:20:17,540
we need to understand that as much risk I have,

298
00:20:19,110 --> 00:20:23,134
I need to think how to decrease that complexity because the risk

299
00:20:23,182 --> 00:20:27,302
is on the part that I have no idea how to handle or

300
00:20:27,356 --> 00:20:30,982
I understand that's hard to maintain or to keep

301
00:20:31,036 --> 00:20:34,866
moving. There is this amazing book, the philosophy

302
00:20:34,898 --> 00:20:38,694
of soft design where the main focus is exactly to

303
00:20:38,732 --> 00:20:42,860
talk about complexity. So take a look on that.

304
00:20:45,150 --> 00:20:48,698
Okay, we went to none, we understood the

305
00:20:48,704 --> 00:20:52,142
methodology, we moved to

306
00:20:52,196 --> 00:20:55,870
initial where, okay, I need to understand and measure

307
00:20:56,450 --> 00:21:00,186
the risk and these complexity around cloud. And let's

308
00:21:00,218 --> 00:21:04,002
put some automation on our application. So let's move application that I have

309
00:21:04,056 --> 00:21:07,314
to the cloud. And right now let's put a little

310
00:21:07,352 --> 00:21:11,218
bit more CI ACD practice to become natural in

311
00:21:11,224 --> 00:21:14,514
the cloud environment. It doesn't matter if

312
00:21:14,552 --> 00:21:17,058
it's Amazon, Google,

313
00:21:17,224 --> 00:21:21,202
Microsoft or Oracle. And the first

314
00:21:21,256 --> 00:21:24,934
advice you in the level three is make it more observable and

315
00:21:24,972 --> 00:21:29,014
modifiable. How? With infrastructure

316
00:21:29,062 --> 00:21:32,186
as a code? With infrastructure as a code we have

317
00:21:32,208 --> 00:21:35,942
more transparency on what you're doing. It's more observable,

318
00:21:36,006 --> 00:21:38,460
more testable, it has more security.

319
00:21:39,310 --> 00:21:42,414
Unfortunately it's a goodbye that, okay, it works

320
00:21:42,452 --> 00:21:46,474
on my machine. You're not able to make this joke anymore because the whole infrastructure

321
00:21:46,522 --> 00:21:50,990
is these code. And if I want you to

322
00:21:51,060 --> 00:21:54,958
do any kind of modification, I need to have my code that's

323
00:21:55,054 --> 00:21:57,780
totally observable and transparent to me.

324
00:21:59,110 --> 00:22:03,522
The next step of infrastructure code

325
00:22:03,576 --> 00:22:06,978
is Gitops where I have a

326
00:22:06,984 --> 00:22:09,650
merge of several amazing approach.

327
00:22:09,990 --> 00:22:13,954
I have infrastructure code plus prs and plus CI

328
00:22:14,002 --> 00:22:17,618
CD where I have git a single source of

329
00:22:17,644 --> 00:22:21,210
truth, a git as a single place

330
00:22:21,280 --> 00:22:24,902
to operate. And all chains are observable

331
00:22:24,966 --> 00:22:28,810
and verifiable in both areas in the development side

332
00:22:28,880 --> 00:22:31,710
and operation side. Again default.

333
00:22:32,610 --> 00:22:36,778
And for example, right now I'm using these application with Java eleven

334
00:22:36,954 --> 00:22:40,234
and I want to move to the next lts that is Java

335
00:22:40,282 --> 00:22:44,260
17. What can I do? I can create a pr

336
00:22:44,870 --> 00:22:47,810
with that modification in the infrastructure.

337
00:22:48,310 --> 00:22:52,210
If everything is okay, I will run these CI.

338
00:22:52,630 --> 00:22:56,034
If everything is okay, I merge this

339
00:22:56,152 --> 00:22:59,746
application to the cloud. Once everything

340
00:22:59,848 --> 00:23:03,094
is amazing, I'm in

341
00:23:03,132 --> 00:23:06,422
the merge, it's automatically deploying application

342
00:23:06,556 --> 00:23:10,746
with the latest version in the kit. If something

343
00:23:10,848 --> 00:23:14,890
goes wrong and only was able to check on production,

344
00:23:15,630 --> 00:23:19,654
that's sad, but sometimes happened you were able to do a kit

345
00:23:19,702 --> 00:23:24,414
revert and these return to previous version of the

346
00:23:24,452 --> 00:23:27,978
code. Okay, so with GitHub,

347
00:23:28,074 --> 00:23:31,774
the integration between infrastructure code, prs and

348
00:23:31,812 --> 00:23:35,550
cis, indeed you make your code more observable,

349
00:23:35,630 --> 00:23:39,202
verifiable and use git as

350
00:23:39,256 --> 00:23:42,354
a single source of true to both to developers and

351
00:23:42,392 --> 00:23:43,170
operations.

352
00:23:46,250 --> 00:23:49,938
The last step. Okay, I understood

353
00:23:50,114 --> 00:23:53,682
these. No, because I had the methodology, I moved

354
00:23:53,826 --> 00:23:57,160
to understand the complexity around cloud.

355
00:23:57,550 --> 00:24:01,242
I started to do automation in my application.

356
00:24:01,376 --> 00:24:05,050
I make it more observable and modifiable to finally go

357
00:24:05,120 --> 00:24:08,220
to optimization through hybrid cloud.

358
00:24:09,710 --> 00:24:13,390
And every time that I talk about cloud automation,

359
00:24:14,610 --> 00:24:18,686
there is several amazing tips. For example, there is this amazing book here,

360
00:24:18,788 --> 00:24:22,302
19 things every college engineer should know that

361
00:24:22,356 --> 00:24:27,810
has and

362
00:24:27,960 --> 00:24:31,678
I'll highlight, I really recommend to you read once and twice

363
00:24:31,774 --> 00:24:35,634
these use managed service please sometimes, okay? If you

364
00:24:35,672 --> 00:24:39,000
are using some past products,

365
00:24:39,450 --> 00:24:43,074
if you don't have nobody in your team that knows that deeply,

366
00:24:43,202 --> 00:24:46,966
okay. Or maybe you don't have budget. So focus on

367
00:24:46,988 --> 00:24:50,746
development and use cases. For example, it is okay

368
00:24:50,768 --> 00:24:53,206
if you are running kubernetes,

369
00:24:53,398 --> 00:24:56,778
okay? That's not an issue.

370
00:24:56,944 --> 00:25:00,346
Keep it simple please. The source

371
00:25:00,378 --> 00:25:03,774
code, the management for soft delivery and

372
00:25:03,812 --> 00:25:07,022
containers are magic. So those are just

373
00:25:07,076 --> 00:25:10,720
a highlight of these book. Please take it and read it.

374
00:25:11,570 --> 00:25:15,230
And the chocolate application right now is so classic.

375
00:25:15,310 --> 00:25:18,514
I don't need to go deep on that. But if you never heard about it,

376
00:25:18,552 --> 00:25:21,746
please Google it to go deep on your

377
00:25:21,848 --> 00:25:25,590
application. Those books are

378
00:25:25,660 --> 00:25:29,398
classics. Could but code especially to

379
00:25:29,404 --> 00:25:32,882
the Java developers. So the effective Java to optimize

380
00:25:32,946 --> 00:25:36,802
your code style and design code where Joshua

381
00:25:36,866 --> 00:25:40,134
Block wrote several tips Joshua Block

382
00:25:40,182 --> 00:25:44,170
was one of the person who wrote a collection API

383
00:25:44,910 --> 00:25:49,114
Ddd domain driven design to make

384
00:25:49,152 --> 00:25:52,538
your code closer to the business. Remember DevOps and Java

385
00:25:52,554 --> 00:25:56,400
methodology, clean architecture and clean code by

386
00:25:56,930 --> 00:26:00,270
Robin Martin, the uncle Bob please

387
00:26:00,340 --> 00:26:03,822
read carefully these books. Read once, read twice.

388
00:26:03,886 --> 00:26:07,620
It's okay to review the book once you read it,

389
00:26:09,430 --> 00:26:13,554
especially to have more information. And every

390
00:26:13,592 --> 00:26:17,254
time that I talk about cloud native these is

391
00:26:17,292 --> 00:26:21,234
a link between microservice. Okay, should I move to microservice

392
00:26:21,282 --> 00:26:24,502
just because everybody else is doing? The answer

393
00:26:24,556 --> 00:26:27,866
to that is a no, right? You don't need to

394
00:26:27,888 --> 00:26:31,820
move to microservice only because everybody else is doing

395
00:26:32,270 --> 00:26:36,122
indeed, there is three amazing books where you should go and read.

396
00:26:36,256 --> 00:26:39,930
Two by Sanjeevan and one by Naga.

397
00:26:40,770 --> 00:26:44,062
And these three books has two things in common.

398
00:26:44,196 --> 00:26:48,830
Those books are talking about microservice and

399
00:26:48,900 --> 00:26:51,280
those books also has.

400
00:26:53,030 --> 00:26:56,260
These books also have a warning about okay,

401
00:26:57,430 --> 00:27:00,606
not everything is around microservice.

402
00:27:00,798 --> 00:27:04,500
Sometimes it's okay to keep the model application.

403
00:27:05,430 --> 00:27:09,170
I put the highlight on ET booking

404
00:27:09,330 --> 00:27:13,158
and okay, just because Netflix and Amazon are using

405
00:27:13,324 --> 00:27:16,710
it does not mean that you are Netflix and Amazon.

406
00:27:17,390 --> 00:27:21,194
Like your problem said, you are not

407
00:27:21,312 --> 00:27:24,918
everybody, you are unique. Your company is unique,

408
00:27:25,014 --> 00:27:28,970
has minimal requirements. Please pay attention that

409
00:27:29,120 --> 00:27:33,200
okay, especially because it matters to us.

410
00:27:33,970 --> 00:27:36,000
And remember the colors law.

411
00:27:37,490 --> 00:27:41,034
If the organization there's no structure, probably the software

412
00:27:41,162 --> 00:27:45,234
will follow these trends to

413
00:27:45,272 --> 00:27:49,086
make our life easier and advice

414
00:27:49,278 --> 00:27:53,054
we have this amazing book, the best practice in soft architecture

415
00:27:53,102 --> 00:27:56,454
in the cloud era. It is in English and it is

416
00:27:56,492 --> 00:27:59,638
for free. Please take a look at this QR code.

417
00:27:59,724 --> 00:28:03,590
Go deep on that where we have several tips about cloud developments.

418
00:28:04,410 --> 00:28:07,718
It is agnostic most of these time.

419
00:28:07,804 --> 00:28:11,438
However, there are several tips to these other developers.

420
00:28:11,554 --> 00:28:15,274
Okay, I want to know more about cloud. How can I use

421
00:28:15,392 --> 00:28:19,014
DevOps with DDD and a cloud integration

422
00:28:19,062 --> 00:28:22,926
with Kubernetes? These are agnostic but

423
00:28:23,028 --> 00:28:26,606
these is also performance training, something like that. So if you want to take

424
00:28:26,628 --> 00:28:28,320
a look, want to learn more,

425
00:28:30,770 --> 00:28:35,118
take and read it. And yes,

426
00:28:35,204 --> 00:28:38,000
that is it. Again,

427
00:28:38,370 --> 00:28:41,870
hopefully you enjoy my application.

428
00:28:42,020 --> 00:28:45,254
Thank you everybody again, please follow

429
00:28:45,292 --> 00:28:48,774
me on Twitter. My name is otas santana. My twitter is

430
00:28:48,812 --> 00:28:52,182
at archapjava and if you have any questions please let me know.

431
00:28:52,236 --> 00:28:56,054
So send me an email, send me a twitter, any kind of thing.

432
00:28:56,172 --> 00:28:59,702
Thank you, bye bye and that is it.

433
00:28:59,756 --> 00:29:00,260
See you soon.

