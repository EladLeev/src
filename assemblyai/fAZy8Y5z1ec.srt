1
00:00:27,090 --> 00:00:30,482
Hello and welcome to my talk about securing your pipes with the taco.

2
00:00:30,546 --> 00:00:34,482
This is all about automating governance. When we work in these highly regulated,

3
00:00:34,546 --> 00:00:38,306
complex organizations, or even when you're just working in an organization that's

4
00:00:38,338 --> 00:00:42,370
trying to work out, how do I properly manage changes to regulation,

5
00:00:42,450 --> 00:00:45,782
changes to security standards, changes to how I

6
00:00:45,836 --> 00:00:49,682
govern my organization and how do I align those into the way I operate.

7
00:00:49,746 --> 00:00:53,690
So this is all about those kind of things. So stay tuned and I hopefully

8
00:00:53,770 --> 00:00:57,390
we'll have some good advice and guidance for you. So,

9
00:00:57,540 --> 00:01:00,686
to get us started, I like to run things through in terms of

10
00:01:00,708 --> 00:01:03,854
a talk map. Now, these talk maps are basically a way for me

11
00:01:03,892 --> 00:01:07,166
to communicate with you, like what's going to happen in the talk and

12
00:01:07,188 --> 00:01:09,626
where we're going to be going with it. We'll start off with an introduction.

13
00:01:09,658 --> 00:01:12,526
We'll talk a bit about risk and where some of this comes from. We'll talk

14
00:01:12,548 --> 00:01:16,050
about how you can go about automation governance, and we'll have some conversations

15
00:01:16,130 --> 00:01:19,366
about why and how a taco can be helpful in

16
00:01:19,388 --> 00:01:22,726
these circumstances. And after all that, we can

17
00:01:22,748 --> 00:01:26,514
wrap up and have some q a so who am I? I'm Peter

18
00:01:26,562 --> 00:01:30,406
Maddison. I'm a coach, a consultant, and a founder of a consulting

19
00:01:30,438 --> 00:01:33,734
organization called Zodiac. We help organizations adopting

20
00:01:33,782 --> 00:01:37,306
new ways of working. My particular speciality is

21
00:01:37,408 --> 00:01:41,374
around DevOps strategy and in particular around lean controls and working

22
00:01:41,412 --> 00:01:44,798
with senior executives around understanding how do we

23
00:01:44,884 --> 00:01:48,494
marry up the need to go fast with the need to understand how

24
00:01:48,532 --> 00:01:52,126
to do that safely. And so

25
00:01:52,148 --> 00:01:55,774
we'll start this off with the idea that in this fast

26
00:01:55,812 --> 00:01:59,314
paced world, our customers are demanding instant gratification. We have these little black

27
00:01:59,352 --> 00:02:02,946
rectangles, and if we don't get what we need, we'll immediately go

28
00:02:02,968 --> 00:02:06,786
somewhere else. It's very easy for us to change where our providers of

29
00:02:06,808 --> 00:02:10,150
services are, and it's very different from the past where we started.

30
00:02:10,220 --> 00:02:14,166
In a world where technology was very expensive, we had to spend a lot

31
00:02:14,188 --> 00:02:17,318
of money on it, and it was a case of having to make

32
00:02:17,324 --> 00:02:21,382
some very strategic decisions around how that money was spent to

33
00:02:21,436 --> 00:02:24,998
really now we went through a period where it was about investing

34
00:02:25,014 --> 00:02:28,554
in the capabilities, the networking of the capabilities, how we can then put different

35
00:02:28,592 --> 00:02:32,154
parts together to create these more distributed systems into one now where

36
00:02:32,192 --> 00:02:35,466
the customers really drives the story. It's all about how do we generate

37
00:02:35,498 --> 00:02:39,182
customer value? How do we focus on the customer ensure that we're building

38
00:02:39,316 --> 00:02:42,554
organizations and systems that are able to accelerate

39
00:02:42,602 --> 00:02:44,320
this delivery of value.

40
00:02:45,490 --> 00:02:48,910
And there's lots of tools that will help accelerate value delivery there's

41
00:02:48,990 --> 00:02:52,514
all sorts of ones that I'm sure we'll be talking about a lot in this

42
00:02:52,552 --> 00:02:56,194
conference. But one of the problems that we often see is that

43
00:02:56,312 --> 00:02:59,394
efforts to adopt these tools fails from a lack of clarity.

44
00:02:59,442 --> 00:03:02,818
It fails because the organization itself isn't

45
00:03:02,914 --> 00:03:06,706
easily able to adopt these practices that go with those tools

46
00:03:06,738 --> 00:03:09,450
and bring them in and start to change the way that they operate.

47
00:03:10,430 --> 00:03:14,438
There's a lot of complexity in these environments. There's a lot of moving parts.

48
00:03:14,614 --> 00:03:18,874
We've got a system that works. That system generates revenue, it generates value,

49
00:03:19,072 --> 00:03:22,538
and it works as it is. So when we come

50
00:03:22,544 --> 00:03:25,658
in and start to introduce new ways of working, it can be very disruptive

51
00:03:25,674 --> 00:03:29,738
to the organization. And as we start to pull on the different threads,

52
00:03:29,834 --> 00:03:33,486
it can be very hard to see what is happening and what the impact of

53
00:03:33,508 --> 00:03:37,294
this is going to be. So that's all about the introduction,

54
00:03:37,342 --> 00:03:40,914
talking about complexity and risk and value delivery, and how do we help start to

55
00:03:40,952 --> 00:03:44,962
manage this in a fast moving environment. So where to begin?

56
00:03:45,096 --> 00:03:48,526
So a lot of this work came out of consulting work I've done into

57
00:03:48,568 --> 00:03:52,742
some large banks where we've gone in and they've started

58
00:03:52,796 --> 00:03:55,798
on a DevOps journey. They've been wondering, how do we go faster? How do we

59
00:03:55,804 --> 00:03:58,946
go further? How do we start to take the learnings we've

60
00:03:58,978 --> 00:04:02,266
initially got and start to move those out into the

61
00:04:02,288 --> 00:04:05,786
rest of the organizations? Because when we

62
00:04:05,808 --> 00:04:09,686
start to introduce these new ways of working, we realize that it brings

63
00:04:09,718 --> 00:04:13,174
in an awful lot of other types of risk. And risk

64
00:04:13,222 --> 00:04:16,558
is something that as human beings, we tend to be

65
00:04:16,564 --> 00:04:20,042
a little allergic to. So we need ways of being able to introduce

66
00:04:20,106 --> 00:04:23,774
change more rapidly, get used to change. Change is the norm. We want to make

67
00:04:23,812 --> 00:04:27,122
that something that we're able to deal with. And we spend a lot of time

68
00:04:27,176 --> 00:04:29,906
focusing on how to do this in the software delivery space.

69
00:04:30,008 --> 00:04:33,634
But we sometimes forget that we also need to apply this to the other

70
00:04:33,672 --> 00:04:37,458
external dependencies, which may influence that. As we look at

71
00:04:37,624 --> 00:04:40,882
the different things that are coming in, both from a regulatory, a compliance

72
00:04:40,946 --> 00:04:44,454
and architectural design perspective, looking at new ways of doing things,

73
00:04:44,572 --> 00:04:48,534
how do we see these

74
00:04:48,572 --> 00:04:51,370
things changing the way that we do our delivery practices?

75
00:04:53,150 --> 00:04:56,986
So when we look at devsecops, one of the key things that

76
00:04:57,008 --> 00:05:00,618
we see is that there's a lot of focus on the loops that

77
00:05:00,624 --> 00:05:04,254
we can bring to the table. And sometimes we remember

78
00:05:04,292 --> 00:05:08,158
to talk about how these tools will modify the processes and how we do

79
00:05:08,244 --> 00:05:12,142
our delivery practices. And quite often we forget about people,

80
00:05:12,196 --> 00:05:15,982
and people are often the piece that's causing a lot of the complexity

81
00:05:16,126 --> 00:05:19,934
unintentionally, a lot of the time. But as human beings,

82
00:05:20,062 --> 00:05:23,700
as we interact and we look for different ways of finding solve problems,

83
00:05:24,230 --> 00:05:27,826
when we look at something like DevOps, we can sometimes, especially from

84
00:05:27,848 --> 00:05:31,506
a technology perspective, get far too focused on the tools and the processes

85
00:05:31,538 --> 00:05:35,206
and the practices and forget that we need to work with each

86
00:05:35,228 --> 00:05:36,840
other to make all of this work.

87
00:05:38,570 --> 00:05:42,410
And all of this is easy, right? It's easy to adopt change, it's easy to

88
00:05:42,480 --> 00:05:45,754
bring new things to the table. I mean,

89
00:05:45,792 --> 00:05:49,594
that's why we have these conversations. And in my

90
00:05:49,632 --> 00:05:54,022
experience we've managed to deliver some amazing results,

91
00:05:54,166 --> 00:05:57,454
but it's certainly not been easy. There's work to be done

92
00:05:57,492 --> 00:06:00,686
here as we look at how do we need to change the

93
00:06:00,708 --> 00:06:03,826
way we think about the work that we do and how we interact with each

94
00:06:03,848 --> 00:06:05,970
other in order to make this successful,

95
00:06:08,550 --> 00:06:12,306
because we're adopting new paradigms, new ways of working where

96
00:06:12,408 --> 00:06:15,906
we have to bring in new knowledge, new ideas, and all of

97
00:06:15,928 --> 00:06:19,818
this while we're meeting the same obligations and existing commitments

98
00:06:19,854 --> 00:06:23,560
that we've always had to meet. And as humans go through change,

99
00:06:23,930 --> 00:06:26,998
they go through this cycle, they go through this cycle of saying, hey, that's not

100
00:06:27,004 --> 00:06:29,906
going to apply to me. We're not going to be able to put devsecops onto

101
00:06:29,938 --> 00:06:33,030
the mainframe. We've got too many regulations

102
00:06:33,110 --> 00:06:36,074
that we need to make sure that we comply to. We can't possibly do that

103
00:06:36,112 --> 00:06:39,594
here. It's not going to happen. I can ignore that. It's not my

104
00:06:39,632 --> 00:06:43,194
fault to complaining like why are you doing this? This is terrible. You're going to

105
00:06:43,232 --> 00:06:46,878
break everything if you do that. Everything's going to be horrible. You're going

106
00:06:46,884 --> 00:06:50,238
to expose all our data, you're going to crash everything to,

107
00:06:50,324 --> 00:06:54,286
please don't do that. Please don't do that to me. To sulking about,

108
00:06:54,468 --> 00:06:57,874
God, this is terrible, it's awful. I can't believe you did

109
00:06:57,912 --> 00:07:01,460
that anyway. And to finally accepting the change and

110
00:07:01,910 --> 00:07:04,846
as change agents, one of the things that we're looking to do here is we're

111
00:07:04,878 --> 00:07:08,094
looking to bring down this change curve. How can we make this easier

112
00:07:08,142 --> 00:07:11,990
for people to adopt? How can we make it easier for people to

113
00:07:12,140 --> 00:07:15,638
look at the processes that they have today and all of

114
00:07:15,644 --> 00:07:18,966
the things that they know that they're dependent on all of these requirements that they

115
00:07:18,988 --> 00:07:22,554
have to ensure, get embedded in the way that they do delivery and make this

116
00:07:22,592 --> 00:07:26,154
easier for them to deal with. So working

117
00:07:26,352 --> 00:07:29,782
with organizations, we come up with these different models, these different practices,

118
00:07:29,846 --> 00:07:33,534
and we draw all sorts of different ways of doing this, from champions programs to

119
00:07:33,572 --> 00:07:37,182
understanding how do we integrate these different tools together to start to build

120
00:07:37,236 --> 00:07:40,478
out these pipelines that will already have some of the

121
00:07:40,484 --> 00:07:44,234
capabilities and regulation baked into them, to understanding how do we

122
00:07:44,372 --> 00:07:48,174
create, go from this small organization that's

123
00:07:48,222 --> 00:07:52,114
trying to bring in more change and accelerate the change in the organizations to

124
00:07:52,152 --> 00:07:56,094
being able to create the snowball effect of accelerating that beyond

125
00:07:56,142 --> 00:07:58,820
the initial successes that we see.

126
00:08:00,330 --> 00:08:03,986
And one of the things that we found when we were working with these banks

127
00:08:04,018 --> 00:08:07,174
was that we keep hitting this wall, we keep hitting this wall where we

128
00:08:07,212 --> 00:08:10,934
run into regulation and compliance and audit,

129
00:08:10,982 --> 00:08:14,394
and where it's not enough to be able to say,

130
00:08:14,432 --> 00:08:18,714
yes, we know that by adopting these practices, we can deliver faster and better

131
00:08:18,832 --> 00:08:22,394
and safer, and it's better for our customers, and we know we can actually make

132
00:08:22,432 --> 00:08:26,154
things more secure. We also need to ensure that we're bringing those practices

133
00:08:26,282 --> 00:08:29,582
into the entire system, into other parts of the system that

134
00:08:29,636 --> 00:08:32,334
also we need to consider around security,

135
00:08:32,452 --> 00:08:35,866
compliance and regulation.

136
00:08:36,058 --> 00:08:39,426
And one of the things that we found is that when we look across all

137
00:08:39,448 --> 00:08:42,738
these different areas of the organization, we find that

138
00:08:42,904 --> 00:08:46,774
things get lost in translation, as the Rosetta stone here

139
00:08:46,892 --> 00:08:50,742
shows the translation between hieroglyphics through

140
00:08:50,796 --> 00:08:55,170
ancient Latin to help us understand these things. So developers,

141
00:08:55,330 --> 00:08:59,078
for example, are speaking one language. They're talking about how do we

142
00:08:59,244 --> 00:09:02,890
make sure that we don't build the wrong things, that we're able to understand

143
00:09:03,040 --> 00:09:06,522
what's happening there. The testing is

144
00:09:06,576 --> 00:09:10,038
ensuring that we don't find the wrong things wrong, that we don't waste

145
00:09:10,054 --> 00:09:13,498
our time chasing after ghosts, that we've actually got effective

146
00:09:13,594 --> 00:09:17,290
quality built into our systems. We've got operations

147
00:09:17,450 --> 00:09:20,810
trying to manage and ensuring that we're meeting any external

148
00:09:20,890 --> 00:09:24,526
slas that we may have, and ensuring that the systems are

149
00:09:24,548 --> 00:09:28,414
operating the way that we want them to operate. We've got security who's

150
00:09:28,462 --> 00:09:32,766
concerned about making sure that we're properly identifying

151
00:09:32,798 --> 00:09:36,034
problems and they can often get in the way of what we need to do.

152
00:09:36,072 --> 00:09:39,266
We got compliance, who's saying, well, we've got these external

153
00:09:39,298 --> 00:09:42,402
regulators, and we need to make sure this is broken in. How do we ensure

154
00:09:42,466 --> 00:09:46,470
that we're properly identifying and demonstrating that

155
00:09:46,540 --> 00:09:50,166
we are compliant? And we got architecture that's saying,

156
00:09:50,268 --> 00:09:53,622
well, we can't do everything, and if everybody runs off in a million different directions,

157
00:09:53,686 --> 00:09:57,066
then everything will start to fall apart. So you've got all

158
00:09:57,088 --> 00:10:00,410
of these groups who are all trying to ensure that we

159
00:10:00,480 --> 00:10:03,630
create a safe delivery environment and that we

160
00:10:03,700 --> 00:10:07,146
reduce the risk to the organization as we accelerate

161
00:10:07,178 --> 00:10:10,714
our value delivery practices. But they're all talking different languages.

162
00:10:10,762 --> 00:10:14,138
They're all talking using different terms, different terminology,

163
00:10:14,234 --> 00:10:17,506
different concepts, different models and visions of the

164
00:10:17,528 --> 00:10:19,060
way that things should be done.

165
00:10:21,510 --> 00:10:24,946
So in order to create alignment across these groups, we need to

166
00:10:24,968 --> 00:10:28,920
find ways of coming to some common understanding about

167
00:10:29,370 --> 00:10:32,998
what is it that all of us mean when we talk about

168
00:10:33,164 --> 00:10:36,390
delivering safety and creating safety in the way that we deliver.

169
00:10:37,050 --> 00:10:40,442
You can have the best security team and the best delivery team and still

170
00:10:40,496 --> 00:10:44,166
fail at being able to deliver securely.

171
00:10:44,278 --> 00:10:47,754
And this is because if we're not aligned in our vision and aligned in

172
00:10:47,792 --> 00:10:51,370
how we go about creating value for our customers,

173
00:10:51,520 --> 00:10:55,726
then we'll very often end up standing on each other's feet and not actually

174
00:10:55,908 --> 00:10:59,326
accelerating the way that we deliver. So we have to move from this idea of

175
00:10:59,348 --> 00:11:02,766
being the department of no to the department of yes. And this

176
00:11:02,788 --> 00:11:06,722
is how you do it. How do we get from the point of view that

177
00:11:06,856 --> 00:11:10,050
we as security, our job is to make sure you don't do the wrong thing

178
00:11:10,120 --> 00:11:13,970
to we as security are here to make sure you can deliver securely.

179
00:11:17,350 --> 00:11:20,486
So the other side of this as well is we need to

180
00:11:20,508 --> 00:11:24,786
ensure that we're measuring correctly, that we're looking for incremental

181
00:11:24,818 --> 00:11:28,066
improvements, that we're, as we set out on this journey,

182
00:11:28,098 --> 00:11:31,626
as we look for, how are we going to go about making the

183
00:11:31,648 --> 00:11:35,642
right changes to the organizations to ensure that we're embedding safety into

184
00:11:35,696 --> 00:11:38,906
the delivery system, that we're quantifying what

185
00:11:38,928 --> 00:11:42,346
it is that we're doing, that we're not just saying, hey, we want

186
00:11:42,368 --> 00:11:46,046
to be safer, but we're saying this is how we're going to determine that we

187
00:11:46,068 --> 00:11:49,550
are safer. This is how we're going to determine that we are

188
00:11:49,620 --> 00:11:53,134
actually doing a better job of managing risk in our environment, and that

189
00:11:53,172 --> 00:11:56,594
the practices that we're introducing through all of these different areas are actually

190
00:11:56,632 --> 00:12:00,674
helping and not hindering our ability to create value

191
00:12:00,792 --> 00:12:03,010
for our customers in a safe manner.

192
00:12:04,470 --> 00:12:07,698
So we've talked about the introduction, talking about value delivery and how that can be

193
00:12:07,704 --> 00:12:11,154
accelerated, and we've talked about risk and the different things

194
00:12:11,192 --> 00:12:13,798
in the environment that cause risk and how some of the things we need to

195
00:12:13,804 --> 00:12:17,270
start to capture and come of the problems that cause it and the

196
00:12:17,340 --> 00:12:20,906
friction across the organization. So now let's talk a little bit

197
00:12:20,928 --> 00:12:23,050
about how you can go about automating governance.

198
00:12:24,430 --> 00:12:27,594
So one of the big problems we see, especially in these

199
00:12:27,632 --> 00:12:31,322
large organizations which are regulated, is that the

200
00:12:31,456 --> 00:12:35,230
parts of the organization that are responsible for ensuring the

201
00:12:35,300 --> 00:12:39,406
safety of the organizations are very often not aligned to the

202
00:12:39,508 --> 00:12:43,066
delivery teams that are looking to adopt DevOps practices and accelerate

203
00:12:43,098 --> 00:12:46,990
the way that they deliver. Very often they're sitting off in their own silos

204
00:12:47,070 --> 00:12:51,102
trying to interpret what's required from a government regulation

205
00:12:51,166 --> 00:12:54,686
and try and translate that through to ensure that delivery teams

206
00:12:54,718 --> 00:12:58,798
have the right compliance standards. But often those delivery teams have very

207
00:12:58,824 --> 00:13:02,520
little visibility or understanding. And even when they do,

208
00:13:03,050 --> 00:13:06,822
they had call up somebody in this much smaller department who's looking

209
00:13:06,876 --> 00:13:10,134
at all of these standards, and they get told, well, here's a book

210
00:13:10,172 --> 00:13:13,446
of standards. There's 300 pages. You got to go through these

211
00:13:13,468 --> 00:13:16,966
other 200 pipes which are referenced over here. And if you can find the section

212
00:13:16,998 --> 00:13:20,502
that applies to the problem you're looking to solve, then good luck.

213
00:13:20,566 --> 00:13:23,534
And then if you call back, you may not even get the same person because

214
00:13:23,572 --> 00:13:27,598
you may be dealing with somebody else. And it's very, very hard to

215
00:13:27,764 --> 00:13:32,238
find the thing that is applicable to your

216
00:13:32,324 --> 00:13:35,726
particular problem that you're looking to solve. How do I find the

217
00:13:35,748 --> 00:13:38,802
standard, the control objectives that are actually

218
00:13:38,856 --> 00:13:42,546
going to apply, and how do I then interpret those into my

219
00:13:42,568 --> 00:13:45,774
team, into what I need to do in order to ensure that I can deliver

220
00:13:45,822 --> 00:13:50,134
value without having to go through massive committees and

221
00:13:50,172 --> 00:13:54,438
all sorts of other frameworks to do this? Common examples being things like

222
00:13:54,524 --> 00:13:57,958
ARB. And there's another organizations I

223
00:13:57,964 --> 00:14:01,602
was working with, TRDs, and then followed by ARP,

224
00:14:01,666 --> 00:14:04,986
where you've got a technical review board, which will then take you up

225
00:14:05,008 --> 00:14:08,810
to a larger architecture review board, which means that it could take

226
00:14:08,960 --> 00:14:11,594
three months, or it could take six months, or it could take nine months,

227
00:14:11,632 --> 00:14:14,540
or it could take twelve months to even come to a decision about,

228
00:14:14,990 --> 00:14:17,840
are we allowed to try and do this?

229
00:14:18,450 --> 00:14:21,294
Is this the right way to go? Is it okay if we do this?

230
00:14:21,412 --> 00:14:25,426
So we need to come up with better ways of being able to understand

231
00:14:25,528 --> 00:14:28,770
and apply these rules into

232
00:14:28,840 --> 00:14:32,466
our delivery teams in a much faster manner in order to

233
00:14:32,488 --> 00:14:36,100
be able to operations in the modern world.

234
00:14:38,230 --> 00:14:41,606
So let's start with the pipelines, because if we want

235
00:14:41,628 --> 00:14:45,222
to take a look at DevOps, this is a good place to start.

236
00:14:45,276 --> 00:14:49,190
And this is a generalized pipeline that comes from some it revolution

237
00:14:49,770 --> 00:14:53,162
white paper that I highly recommend reading, and there's a link to

238
00:14:53,216 --> 00:14:56,778
later on in the talk. So if we look at these as some of

239
00:14:56,784 --> 00:15:00,186
the primary parts of

240
00:15:00,208 --> 00:15:03,770
the pipeline where we could start to introduce controls,

241
00:15:04,110 --> 00:15:07,898
if we only put our controls in, in the production deployment,

242
00:15:07,994 --> 00:15:11,210
then we're never going to be able to understand how secure

243
00:15:11,290 --> 00:15:15,226
we need to make sure that we're introducing controls all along the pipeline,

244
00:15:15,258 --> 00:15:19,086
that we're properly introducing and managing our delivery practices.

245
00:15:19,198 --> 00:15:22,194
And there are lots of things that we can do at each stage in order

246
00:15:22,232 --> 00:15:25,790
to be able to manage and secure the pipeline.

247
00:15:25,870 --> 00:15:30,002
We can introduce even things like linting and SCA

248
00:15:30,066 --> 00:15:33,954
into our source code repositories. We can look at dependency managing

249
00:15:34,002 --> 00:15:37,890
using artifact repositories, using scanning for open source

250
00:15:37,970 --> 00:15:41,826
vulnerabilities. We can look at tools

251
00:15:41,858 --> 00:15:45,754
inside of our building, look at SAS and dast capabilities as

252
00:15:45,792 --> 00:15:49,754
we move through the pipeline. All of these enable us to gather more and more

253
00:15:49,792 --> 00:15:53,206
information about the state of our code and feed it back into delivery

254
00:15:53,238 --> 00:15:57,354
team to help them understand what changes they need to make to become more secure

255
00:15:57,402 --> 00:16:00,846
in the way that they do delivery. And when

256
00:16:00,868 --> 00:16:04,606
we're looking at running the pipe, we can think about what

257
00:16:04,628 --> 00:16:07,714
are the different stages we can do. We can talk about as

258
00:16:07,752 --> 00:16:09,700
we define what we're going to do.

259
00:16:11,030 --> 00:16:14,530
We can turn that into code and everything needs to be written in this code.

260
00:16:14,600 --> 00:16:17,726
We can then use our CI systems, create build results

261
00:16:17,758 --> 00:16:21,350
which we review. We can look at our quality tests, we can look at artifacts,

262
00:16:22,250 --> 00:16:26,470
and then we can run another CI run, perhaps to run our organizational tests.

263
00:16:28,730 --> 00:16:32,102
We'll start with doing peer reviews, but as we look to move forward,

264
00:16:32,156 --> 00:16:35,526
we'd look to say, hey, how can we remove any other manual steps

265
00:16:35,558 --> 00:16:38,806
that we have, if we have manual steps around the build results,

266
00:16:38,838 --> 00:16:42,234
can we look at pair programming and other capabilities to start to think about

267
00:16:42,272 --> 00:16:46,266
other ways to satisfy these requirements, to reduce the number of

268
00:16:46,288 --> 00:16:49,886
manual touch points there are as we deliver? Because what we really want

269
00:16:49,908 --> 00:16:53,006
to do here is we want to reduce the cycle time. But in

270
00:16:53,028 --> 00:16:56,254
order to do that, we've got a couple of dependencies here

271
00:16:56,292 --> 00:17:00,046
we need to be able to look at how do we reduce

272
00:17:00,078 --> 00:17:03,586
what we're delivering to a small enough component piece that it's easy enough for us

273
00:17:03,608 --> 00:17:07,922
to test? A good example here is that doing

274
00:17:07,976 --> 00:17:09,990
peer reviews or code reviews,

275
00:17:11,530 --> 00:17:15,046
although it's a great idea, it's one of these things that

276
00:17:15,068 --> 00:17:18,086
in order to do it well, you've got to have a small enough amount of

277
00:17:18,108 --> 00:17:21,554
code to review at any one time. If somebody only submits

278
00:17:21,602 --> 00:17:24,774
their code every two weeks, they might have a few

279
00:17:24,812 --> 00:17:27,834
thousand lines to review. And then it becomes very, very easy for things to get

280
00:17:27,872 --> 00:17:31,066
missed. It becomes very easy for things to get rubber stamped as they move through

281
00:17:31,088 --> 00:17:35,078
the pipelines. Far better if you're deploying

282
00:17:35,174 --> 00:17:38,910
on a daily banks or less than a few hours, so that

283
00:17:38,980 --> 00:17:42,014
there's less to review and it's faster to get

284
00:17:42,052 --> 00:17:42,960
through the process.

285
00:17:46,130 --> 00:17:49,534
And as we look to move forward, we can start to say, okay,

286
00:17:49,572 --> 00:17:52,306
well, how will we audit all of this? And one of the values of being

287
00:17:52,328 --> 00:17:55,746
able to automated pipelines is we can pull information out and we

288
00:17:55,768 --> 00:17:59,390
can make it visible. When we did this at one of the banks,

289
00:17:59,470 --> 00:18:03,406
we started with hygiea, but then found that keeping

290
00:18:03,438 --> 00:18:07,506
hygiea up to date with the various other tools

291
00:18:07,538 --> 00:18:10,582
that it needed to feed from was a lot of work in and of itself.

292
00:18:10,636 --> 00:18:14,154
As the tools upgraded, hygiea needed to be upgraded and that took

293
00:18:14,192 --> 00:18:17,686
time. So we switched to pulling logs out of each of the different tools

294
00:18:17,718 --> 00:18:20,966
and using that to build dashboards, which we could then radiate

295
00:18:21,078 --> 00:18:24,154
useful information back to the organization to help say,

296
00:18:24,192 --> 00:18:27,950
hey look, we went from an average deployment time of

297
00:18:28,100 --> 00:18:31,614
once every six months down to one of once every month, and we did that

298
00:18:31,652 --> 00:18:35,234
in a six month period. So this is the kind

299
00:18:35,272 --> 00:18:39,374
of automation you can pull out and radiate to help guide

300
00:18:39,422 --> 00:18:42,610
and improve the automation within the organization.

301
00:18:43,190 --> 00:18:46,770
So it's not just for the auditors, it's also very powerful tool

302
00:18:46,840 --> 00:18:49,830
to help with the adoption of new practices in the organization.

303
00:18:50,730 --> 00:18:54,534
One thing to realize here is that even as you build out these new

304
00:18:54,572 --> 00:18:58,310
capabilities and building a paved road

305
00:18:58,380 --> 00:19:02,246
and an automated pipelines is great, but you also need to consider that

306
00:19:02,268 --> 00:19:05,770
it's not going to be for everyone in the organization. It becomes an easy button

307
00:19:05,840 --> 00:19:08,986
for those parts of the organization that are struggling to see how

308
00:19:09,008 --> 00:19:12,362
to adopt these new practices, and it can make it very,

309
00:19:12,416 --> 00:19:16,670
very easy for them to start to get started. But your faster moving

310
00:19:16,740 --> 00:19:20,206
groups are going to want to accelerate far beyond anything that

311
00:19:20,228 --> 00:19:23,726
you could build out as a pipeline. So what we

312
00:19:23,748 --> 00:19:27,386
do here is we can provide them with a set of guidelines and I'll

313
00:19:27,418 --> 00:19:30,402
talk about these in the next section. But if we give them a set of

314
00:19:30,456 --> 00:19:33,954
this is what you need to be able to do in order to build can

315
00:19:33,992 --> 00:19:37,298
appropriate pipeline. These are the things that need to be embedded so that you can

316
00:19:37,304 --> 00:19:40,994
do continuous delivery. If you don't do these

317
00:19:41,032 --> 00:19:43,894
pieces, if you don't want to come and use ours, which has all of that

318
00:19:43,932 --> 00:19:47,046
embedded, then go ahead and build this out yourself. You want to try other

319
00:19:47,068 --> 00:19:50,946
tools, other capabilities. We're here to help, but it's

320
00:19:50,978 --> 00:19:53,786
an invitation we're not going to inflict on you. We're not going to tell you

321
00:19:53,808 --> 00:19:57,626
to come and do it our way. It's a paved road, but you

322
00:19:57,648 --> 00:20:01,066
do have the option to try and do it. There's some other way if you

323
00:20:01,088 --> 00:20:01,820
want to.

324
00:20:05,070 --> 00:20:08,734
This is important too, because we know that we don't want

325
00:20:08,772 --> 00:20:11,886
to provide just one way to go places. We need to create the ability to

326
00:20:11,908 --> 00:20:15,166
innovate. We need to decide that hey, maybe we want to go in a different

327
00:20:15,188 --> 00:20:18,898
direction, maybe we want to go on a longer route because we know that we

328
00:20:18,904 --> 00:20:22,626
could possibly discover something of value in the process of doing it. We want

329
00:20:22,648 --> 00:20:25,954
it to behave more like ways and help

330
00:20:25,992 --> 00:20:30,040
us direct us in the right directions. But we want it to be something that

331
00:20:31,050 --> 00:20:34,278
is not just singly controlled by come centralized team.

332
00:20:34,364 --> 00:20:37,474
If you try to do it that way, then you will almost certainly fail

333
00:20:37,522 --> 00:20:40,250
as you try to bring in these new practices.

334
00:20:42,270 --> 00:20:45,818
So automating governance. There's a lot

335
00:20:45,824 --> 00:20:49,066
of pieces that I'm touching on there as I'm pulling the threads out

336
00:20:49,088 --> 00:20:52,442
and I'm happy to talk about them in more depth as we move forward.

337
00:20:52,576 --> 00:20:56,000
It's always hard to cram so much into a talk like this.

338
00:20:56,610 --> 00:20:59,902
It does sound like a lot of work and there is a lot of work

339
00:20:59,956 --> 00:21:03,760
to be done, but here are some good pointers to get you started.

340
00:21:04,130 --> 00:21:07,474
Think about it as not getting. It's not about keeping considered off your back.

341
00:21:07,512 --> 00:21:10,740
It's not about satisfying a checklist. Think about it about

342
00:21:11,270 --> 00:21:15,294
collaborating to create safety in your delivery practices.

343
00:21:15,422 --> 00:21:18,658
Think about how do we make the safety parts of

344
00:21:18,664 --> 00:21:21,538
the organization, all of these governance parts of the organizations,

345
00:21:21,714 --> 00:21:25,174
a part of the solution, not a part of the problem. How do we get

346
00:21:25,212 --> 00:21:29,382
them to be the departments of enabling safe delivery and

347
00:21:29,436 --> 00:21:32,940
do that using come of the practices that I'm talking about?

348
00:21:34,910 --> 00:21:38,122
Don't try and boil the ocean. Start small, get one team working

349
00:21:38,176 --> 00:21:41,722
and then grow from there. Don't try and do all of this all at once.

350
00:21:41,856 --> 00:21:45,366
Find one team or one thread, one value stream where

351
00:21:45,408 --> 00:21:48,734
you can start to align your safety teams to that

352
00:21:48,772 --> 00:21:52,254
value stream and start to understand what are their needs, what are their

353
00:21:52,292 --> 00:21:55,794
controls. How can we start to create an understanding of

354
00:21:55,832 --> 00:21:59,534
risk management for that particular value stream and align

355
00:21:59,582 --> 00:22:03,634
on that and then grow from there? And three

356
00:22:03,672 --> 00:22:06,894
is focus on the conversation. Make sure you're engaging

357
00:22:06,942 --> 00:22:10,662
leaders in this conversation. Focus on needs to be,

358
00:22:10,716 --> 00:22:14,866
not on the tooling. It's not about have I got the next greatest product embedded

359
00:22:14,898 --> 00:22:19,074
into how I do this. One of the common mistakes that I see organizations

360
00:22:19,122 --> 00:22:22,854
make is they bring in a new piece of tooling that generates

361
00:22:22,902 --> 00:22:26,426
a whole bunch of reporting, but it also generates an

362
00:22:26,448 --> 00:22:30,058
awful lot of false positives and lots of other information

363
00:22:30,144 --> 00:22:33,514
and lots of other reports. But it's not being fed back into the delivery

364
00:22:33,562 --> 00:22:37,182
teams in a meaningful way. So it doesn't really add any value.

365
00:22:37,236 --> 00:22:40,874
It doesn't actually help with the intended

366
00:22:40,922 --> 00:22:44,106
purpose of helping the organizations properly

367
00:22:44,138 --> 00:22:47,746
secure their pipelines. The tools can be extremely valuable and

368
00:22:47,768 --> 00:22:51,906
they are necessary. It's just bringing them in in such a way that we understand

369
00:22:52,008 --> 00:22:56,002
and see that benefit. And we create the appropriate feedback loops into

370
00:22:56,056 --> 00:23:00,200
delivery teams so they know how to respond to the information that they're being given.

371
00:23:01,530 --> 00:23:05,094
So we've talked about a bit of an introduction about the

372
00:23:05,132 --> 00:23:09,094
context of the world that we're living in today. We've gone through risk and

373
00:23:09,132 --> 00:23:12,698
DevOps and how we look to try and reduce the change cycle to

374
00:23:12,784 --> 00:23:17,254
make it easier for people to adopt these practices into heavily regulated organizations.

375
00:23:17,382 --> 00:23:20,794
We talked a lot about automating governance and the different kind of

376
00:23:20,832 --> 00:23:24,206
things that you can do and things you can embed into a pipeline and some

377
00:23:24,228 --> 00:23:28,014
of the things you should avoid when you're starting along

378
00:23:28,052 --> 00:23:31,646
this journey. And what sort of things are helpful as you go

379
00:23:31,668 --> 00:23:35,806
through automating your governance practices. Now we're going to move into a

380
00:23:35,828 --> 00:23:39,282
little bit about what taco is and how that was one of the

381
00:23:39,336 --> 00:23:41,410
things that we brought in that was quite useful.

382
00:23:42,390 --> 00:23:46,498
So when we look at how do we model

383
00:23:46,664 --> 00:23:49,974
or create a model for us to be able to understand

384
00:23:50,172 --> 00:23:53,286
and give to the delivery team so they know what it is they need to

385
00:23:53,308 --> 00:23:57,414
do, we need to find a way of

386
00:23:57,532 --> 00:24:02,234
communicating this, creating that common language as to what

387
00:24:02,272 --> 00:24:06,074
does a safe set of delivery practices mean so

388
00:24:06,112 --> 00:24:09,338
that I as a delivery team can understand

389
00:24:09,424 --> 00:24:13,306
and apply it to my context without necessarily having to wade through 300

390
00:24:13,328 --> 00:24:16,894
pages of documentation. And there's multiple elements to this. One is

391
00:24:17,012 --> 00:24:20,798
this taco piece, which is on the tactical how do I understand

392
00:24:20,884 --> 00:24:24,862
what I need to do? And then there's the

393
00:24:24,916 --> 00:24:28,702
control piece of how do I make sure that as controls

394
00:24:28,766 --> 00:24:32,434
change, I have a pipeline for those controls and that they

395
00:24:32,472 --> 00:24:35,666
are also being embedded and fed into delivery teams, and that they

396
00:24:35,688 --> 00:24:38,674
are being translated into the context of the team's need.

397
00:24:38,792 --> 00:24:41,814
So this is in that lean control space, and we'll talk a little bit about

398
00:24:41,852 --> 00:24:45,298
that, too. So the elements of taco are traceability,

399
00:24:45,394 --> 00:24:49,382
like identifying what happens in the pipeline. This is critical both

400
00:24:49,436 --> 00:24:52,834
from an operational perspective and from a security perspective and a compliance

401
00:24:52,882 --> 00:24:56,566
perspective. So it's something we want to do. So looking for chain of custody

402
00:24:56,678 --> 00:25:00,026
of code as it moves through the pipeline, which we can do in a number

403
00:25:00,048 --> 00:25:03,638
of different ways. Looking for tagging things back to a Jira

404
00:25:03,654 --> 00:25:07,366
ticket is one way that ive done this in the past. Other ways is

405
00:25:07,408 --> 00:25:10,586
by if you've got consistent tagging and you can pull things with the logging

406
00:25:10,618 --> 00:25:13,214
layer that can also be a great way to be able to start to create

407
00:25:13,252 --> 00:25:17,326
that test results. All is about ensuring that

408
00:25:17,508 --> 00:25:21,294
test results are visible and that we're not hiding them off in a separate repository

409
00:25:21,342 --> 00:25:25,282
that nobody else gets to look at, that we're properly collaborating to bring

410
00:25:25,336 --> 00:25:27,410
quality into the delivery teams.

411
00:25:28,390 --> 00:25:32,006
Deployed version is in fact tracked. So we're looking at what is the version of

412
00:25:32,028 --> 00:25:35,750
thing we deploy and making sure that changes are properly recorded,

413
00:25:35,820 --> 00:25:38,962
which we also need both from a security and operations perspective,

414
00:25:39,106 --> 00:25:42,522
securing the delivery process, looking at the access, who has access to code?

415
00:25:42,576 --> 00:25:47,078
Who is managing that code? Looking at is the source code properly accessed

416
00:25:47,174 --> 00:25:51,466
and managed? Are we tracking the creator? Are we signing code

417
00:25:51,648 --> 00:25:55,406
so that we actually can trace who it was that did what in a

418
00:25:55,428 --> 00:25:59,358
particular pull, request, build once, deploy many,

419
00:25:59,524 --> 00:26:02,814
ensuring that we are creating immutable artifacts and deploying them out,

420
00:26:02,852 --> 00:26:07,810
and only allowing pipelines to then do those deployments and

421
00:26:07,960 --> 00:26:11,454
compliance. Looking at validating the payload in the pipeline,

422
00:26:11,502 --> 00:26:15,726
are we properly doing managing peer review? Is that properly being birded

423
00:26:15,758 --> 00:26:18,846
into the way that we do things? Are we scanning the code? Are we scanning

424
00:26:18,878 --> 00:26:22,774
the artifacts? Are we managing the data and the way that it's delivered and

425
00:26:22,812 --> 00:26:26,866
operations monitoring and securing after the fact, looking at validating the target

426
00:26:26,898 --> 00:26:30,546
of where we're deploying, validating the quality and checking

427
00:26:30,578 --> 00:26:33,814
it works and watching it live. And all of these tie

428
00:26:33,862 --> 00:26:37,446
nicely back into the compliance standards that we're looking to map.

429
00:26:37,478 --> 00:26:41,366
So this works very well with other compliance frameworks

430
00:26:41,398 --> 00:26:45,286
and allows us to create a straw man that we could then marry

431
00:26:45,318 --> 00:26:48,654
into the organization. So what we did from here, and we created a set

432
00:26:48,692 --> 00:26:51,406
of auditing ones to validate that it was working,

433
00:26:51,508 --> 00:26:55,166
is we said, okay, so if we had this set of standards, what else

434
00:26:55,188 --> 00:26:58,754
do we need? What else is missing? What else could we

435
00:26:58,792 --> 00:27:02,238
embed? And then we embedded this into the standards within the organization

436
00:27:02,334 --> 00:27:05,634
to ensure that if somebody meets the set

437
00:27:05,672 --> 00:27:09,046
of standards that we've defined on taco vendor and the

438
00:27:09,068 --> 00:27:14,406
risk profile is correct, then we

439
00:27:14,428 --> 00:27:17,926
can properly believe that the pipelines is doing what it's supposed to

440
00:27:17,948 --> 00:27:21,338
do and that we know how to measure for safety in

441
00:27:21,344 --> 00:27:24,806
that pipeline. And my daughter drew a lovely

442
00:27:24,838 --> 00:27:28,886
picture that I like to include here. So the first version

443
00:27:28,918 --> 00:27:32,558
of this was this spreadsheet where we said, okay, we want to understand, what is

444
00:27:32,564 --> 00:27:36,590
the purpose of this? Why are we actually introducing this

445
00:27:36,660 --> 00:27:39,920
as a control at all? What would the control be?

446
00:27:42,610 --> 00:27:46,206
Where would the artifact be? Where would it be stored? What happens when that

447
00:27:46,228 --> 00:27:49,700
control is passed? What happens when it's failed? And who's going to own this.

448
00:27:50,710 --> 00:27:53,886
We could then map that because out of the spreadsheet and create the picture.

449
00:27:53,918 --> 00:27:57,058
And I will end. If you sign up at the end, I'll send you a

450
00:27:57,064 --> 00:28:00,930
copy of the spreadsheet. We then could also design

451
00:28:01,000 --> 00:28:04,454
and run workshops up this. We like looking at

452
00:28:04,572 --> 00:28:07,686
how do we help people understand where there might be risks in how they're doing

453
00:28:07,708 --> 00:28:11,674
things today, and what might possibly be ways of overcoming that

454
00:28:11,712 --> 00:28:15,546
and introducing controls that might mitigate some of the risks that they

455
00:28:15,568 --> 00:28:17,420
have in their delivery systems today.

456
00:28:18,750 --> 00:28:21,866
The ultimate result was a wonderfully complex diagram that

457
00:28:21,888 --> 00:28:25,294
looks like this, but simplifying this out, it would

458
00:28:25,332 --> 00:28:29,246
look like build, validate, test and deploy. And not as in

459
00:28:29,268 --> 00:28:33,482
the terms of SCLC. There's no gates here. This is more about identifying

460
00:28:33,626 --> 00:28:38,094
where are the areas that we can appropriately apply controls

461
00:28:38,222 --> 00:28:41,426
so that we know what to do and identify them. So this is

462
00:28:41,448 --> 00:28:45,458
more about understanding the phases that a software delivery system

463
00:28:45,624 --> 00:28:49,058
goes through and then being able to identify what controls

464
00:28:49,074 --> 00:28:52,198
we apply into each of those areas. And when

465
00:28:52,284 --> 00:28:55,240
something goes wrong, what do we do when that happens?

466
00:29:00,650 --> 00:29:04,186
One example of this is Capital one has a very similar sort of

467
00:29:04,208 --> 00:29:07,914
sets of controls which they applied say, hey, if you

468
00:29:07,952 --> 00:29:11,062
want to be able to get to controls, delivery and deploy through our pipelines,

469
00:29:11,126 --> 00:29:13,454
these are the sets of things that you need to be able to do.

470
00:29:13,572 --> 00:29:17,230
When we look at things at scale, across large teams with 20,000

471
00:29:17,300 --> 00:29:20,910
developers or large deployments,

472
00:29:21,570 --> 00:29:25,314
you've got every version of every type of software in there. It's impossible to

473
00:29:25,352 --> 00:29:29,058
say, hey, everybody, do things this way. You'll never get to

474
00:29:29,144 --> 00:29:33,074
that utopian version of complete compliance. So you

475
00:29:33,112 --> 00:29:36,900
need to provide instead frameworks which work

476
00:29:37,590 --> 00:29:40,934
for people to be able to adapt to their needs

477
00:29:41,132 --> 00:29:45,314
while being able to provide this understanding

478
00:29:45,362 --> 00:29:48,614
of how do we make sure things are operating the way that we want

479
00:29:48,652 --> 00:29:52,086
them to. Nationwide also has some

480
00:29:52,108 --> 00:29:56,038
great practices around this, applying lean control into the way that they do delivery.

481
00:29:56,134 --> 00:30:00,234
And I'd highly encourage reading through some of their things and looking

482
00:30:00,272 --> 00:30:03,534
up some of the talks that they've done on the topic. They've also created some

483
00:30:03,572 --> 00:30:06,974
great dashboards on the way.

484
00:30:07,012 --> 00:30:10,734
You can pull out information about how they've moved to

485
00:30:10,772 --> 00:30:14,586
a model where you can put these control tickets into the delivery

486
00:30:14,618 --> 00:30:17,698
team's backlog, so they could then solve those, and you can see how many of

487
00:30:17,704 --> 00:30:19,860
them being dealt with so that, you know,

488
00:30:20,470 --> 00:30:24,926
are we appropriately adapting to managing risk

489
00:30:24,958 --> 00:30:28,054
in our delivery teams? So,

490
00:30:28,172 --> 00:30:31,462
to sum this up, it's not about DevOps on its own,

491
00:30:31,516 --> 00:30:34,966
and it's really not about devsecops. Either.

492
00:30:35,068 --> 00:30:38,914
It's really, and John Smart put this very well about risk,

493
00:30:38,962 --> 00:30:42,590
dev risk, ops risk. We're talking about how do you embed risk

494
00:30:42,690 --> 00:30:45,994
into the DevOps practices and just make it a part of what we do.

495
00:30:46,032 --> 00:30:49,994
I mean, we can't really come up with another term for

496
00:30:50,032 --> 00:30:53,614
this. It's about how do we make sure that these

497
00:30:53,652 --> 00:30:56,670
safety elements, these governance elements within the organizations

498
00:30:57,010 --> 00:31:00,510
are properly aligned and enabling our delivery practices.

499
00:31:01,650 --> 00:31:05,162
So we talked about an introduction, we talked about value delivery

500
00:31:05,306 --> 00:31:08,974
and all of the way the world is changing and complexity.

501
00:31:09,022 --> 00:31:12,622
We talked about risk. We talked about how Devsecops

502
00:31:12,766 --> 00:31:15,954
aims to help, but it also introduces change. And change

503
00:31:15,992 --> 00:31:19,874
in itself is risk. And we've talked about the problems with

504
00:31:19,912 --> 00:31:23,954
communication you see across different parts of the organization. We've talked about automating

505
00:31:24,002 --> 00:31:27,286
governance. We've talked about the different things and practices that we can introduce to

506
00:31:27,308 --> 00:31:30,934
help with automating governance. And we've talked about why and

507
00:31:30,972 --> 00:31:34,042
how to make a taco and how a taco is a minnow to help you

508
00:31:34,096 --> 00:31:38,426
understand how you can start

509
00:31:38,448 --> 00:31:42,074
to marry these and scale them out across your organization to

510
00:31:42,112 --> 00:31:45,654
understand what is a good safety pipelines,

511
00:31:45,702 --> 00:31:48,062
what does that look like? What are the things we want to see in there?

512
00:31:48,116 --> 00:31:51,918
What do we as an organization agree is necessary in order for us

513
00:31:52,004 --> 00:31:56,290
to be able to allow a delivery team to deliver software?

514
00:31:58,070 --> 00:32:02,402
So to wrap up, it's really about not

515
00:32:02,456 --> 00:32:05,934
using the same thinking we've always used around securing our delivery

516
00:32:05,982 --> 00:32:10,214
pipelines. It's about how do we create a common understanding of

517
00:32:10,252 --> 00:32:14,040
what good looks like and start to move from a model where

518
00:32:14,810 --> 00:32:18,098
the compliance teams and the security teams

519
00:32:18,114 --> 00:32:22,194
and architecture teams are sitting outside of the delivery teams

520
00:32:22,242 --> 00:32:25,882
and are trying to dictate to them how they should do things, because that just

521
00:32:25,936 --> 00:32:29,578
creates confusion, because they're talking a different language, they've got a different set of

522
00:32:29,584 --> 00:32:32,806
priorities, a different set of goals. So we need to create tighter

523
00:32:32,838 --> 00:32:36,378
alignment into the way that they operate. Safety teams

524
00:32:36,474 --> 00:32:39,294
is a great way to do this, like looking at how do we start to

525
00:32:39,332 --> 00:32:43,246
align small safety teams to value streams which

526
00:32:43,428 --> 00:32:47,250
exist with delivery teams embedded in them, where they can develop

527
00:32:47,320 --> 00:32:50,366
a stronger understanding of the context of that delivery.

528
00:32:50,558 --> 00:32:54,194
How do we create that common understanding of what good looks

529
00:32:54,232 --> 00:32:58,226
like? And this is where things like taco is a good model for

530
00:32:58,248 --> 00:33:02,150
that, in that you can use that as a way of creating that common

531
00:33:02,220 --> 00:33:05,446
language, that common way of talking about what do we mean when

532
00:33:05,468 --> 00:33:08,722
we say that we are creating secure

533
00:33:08,786 --> 00:33:11,450
and compliant pipelines in our organization.

534
00:33:13,070 --> 00:33:16,442
Here's some great references. I'd highly recommend looking

535
00:33:16,496 --> 00:33:19,930
these up if you're interested in this space and how to take and apply

536
00:33:20,000 --> 00:33:22,670
some of these to your organization.

537
00:33:24,050 --> 00:33:27,486
And so let's review. Let's go

538
00:33:27,508 --> 00:33:30,830
from talking about apples, oranges and bananas to talking about tacos.

539
00:33:31,650 --> 00:33:34,986
And this is the idea here is it's

540
00:33:35,018 --> 00:33:38,722
really about, let's go from talking about all of these different terms

541
00:33:38,776 --> 00:33:42,594
and terminologies and start to talking about a

542
00:33:42,632 --> 00:33:46,770
common way of talking about what we mean by safety in our delivery.

543
00:33:49,690 --> 00:33:53,350
So you should hopefully now have a common

544
00:33:53,420 --> 00:33:56,818
understanding of how we get to a good pipeline,

545
00:33:56,914 --> 00:34:00,870
if not what that good pipeline looks like yet. That's a longer conversation.

546
00:34:01,930 --> 00:34:05,946
Safety is about behavior, not just tools. To truly get to

547
00:34:05,968 --> 00:34:09,606
safety in your organization, you also need to be creating a culture

548
00:34:09,638 --> 00:34:12,966
where it's okay to say that, whoops, something went wrong, that it's

549
00:34:12,998 --> 00:34:16,382
okay to admit that there was a fault or there was a mistake, and that

550
00:34:16,436 --> 00:34:20,334
it isn't necessary to get 300 approvals before you can do anything or move

551
00:34:20,372 --> 00:34:24,362
anything forward. Ways to automate

552
00:34:24,426 --> 00:34:28,146
your software delivery compliance so when we look at how we

553
00:34:28,248 --> 00:34:31,426
can pull information out and create reports which are

554
00:34:31,448 --> 00:34:35,330
aligned to compliance, that's one way. But when we also think about,

555
00:34:35,480 --> 00:34:38,626
as we look to take and understand what we

556
00:34:38,648 --> 00:34:41,926
have to do from a compliance perspective and translate it into

557
00:34:41,948 --> 00:34:45,574
the context of the delivery teams, this means we can also now

558
00:34:45,612 --> 00:34:49,222
measure and quantify what that looks like, which will allow us

559
00:34:49,276 --> 00:34:52,806
to not only be more compliant in the way that we do delivery,

560
00:34:52,838 --> 00:34:55,980
but make it easier to be compliant with what we do.

561
00:34:58,030 --> 00:35:01,546
And I'll leave you with the Rosetta stone and a quick

562
00:35:01,728 --> 00:35:05,354
thank you to everybody for attending. I hope you enjoyed it. There's only one

563
00:35:05,392 --> 00:35:09,102
question required on the survey, which is, hey, did you like this?

564
00:35:09,236 --> 00:35:12,670
And if you want to, you can leave your email there and it will

565
00:35:12,740 --> 00:35:16,942
send you a copy of the taco spreadsheet and some

566
00:35:16,996 --> 00:35:20,190
useful links as well. Okay. With that,

567
00:35:20,340 --> 00:35:23,742
I'll sign off and say thank you very much.

568
00:35:23,796 --> 00:35:26,380
It's been a pleasure and hope to see you all soon.

