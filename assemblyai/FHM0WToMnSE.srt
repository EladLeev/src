1
00:00:00,410 --> 00:00:06,174
Jamaica real

2
00:00:06,212 --> 00:00:09,578
time feedback into the behavior of your distributed systems

3
00:00:09,674 --> 00:00:12,538
and observing changes exceptions.

4
00:00:12,634 --> 00:00:16,746
Errors in real time allows you to not only experiment with confidence,

5
00:00:16,858 --> 00:00:20,480
but respond instantly to get things working again.

6
00:00:24,610 --> 00:00:47,046
Close in

7
00:00:47,068 --> 00:00:50,806
the fall of 2016, I had the interesting challenge of teaching

8
00:00:50,838 --> 00:00:54,254
beginner programming to a class of university students who

9
00:00:54,292 --> 00:00:57,200
never actually intended to do any coding in their lives.

10
00:00:57,570 --> 00:01:00,622
Let me give you a little bit of context of how I got there,

11
00:01:00,756 --> 00:01:04,114
lay out my goals, and tell you

12
00:01:04,152 --> 00:01:07,298
about how that all went. So for

13
00:01:07,384 --> 00:01:11,746
context, originally it was actually not me, but a friend

14
00:01:11,768 --> 00:01:15,102
and colleague of mine who was invited to the university

15
00:01:15,246 --> 00:01:18,774
to do this course of beginner programming to art students.

16
00:01:18,972 --> 00:01:22,818
And I accompanied her to help out as a mentor,

17
00:01:22,914 --> 00:01:26,134
that is, mentoring the students, which means when

18
00:01:26,172 --> 00:01:29,638
they are all doing exercises and multiple students have questions

19
00:01:29,724 --> 00:01:32,970
at the same time, it's useful to have multiple people there.

20
00:01:33,040 --> 00:01:36,006
So she was going to be the teacher, I was going to be a mentor

21
00:01:36,038 --> 00:01:39,526
to help out at the end of the semester. She said she wasn't

22
00:01:39,558 --> 00:01:42,694
interested in teaching another course as a teacher,

23
00:01:42,742 --> 00:01:45,562
but she would be happy to come along as a mentor.

24
00:01:45,706 --> 00:01:49,406
I, on the other hand, got very excited about teaching. So I stepped up

25
00:01:49,508 --> 00:01:53,450
and said I would be happy to lead these next semester.

26
00:01:53,610 --> 00:01:57,090
I got very excited because I love thinking about

27
00:01:57,160 --> 00:02:00,354
how to explain difficult concepts in a way that is easy to

28
00:02:00,392 --> 00:02:04,718
understand. And by that time, not only had I participated in this semester,

29
00:02:04,814 --> 00:02:08,738
I also took part in multiple one day workshops

30
00:02:08,834 --> 00:02:12,818
of like crash courses of teaching beginner programming to non programmers.

31
00:02:12,914 --> 00:02:16,466
So I had seen a lot of examples and ideas

32
00:02:16,498 --> 00:02:19,994
and patterns and great teachers. But I also had my own

33
00:02:20,032 --> 00:02:23,594
ideas, and I saw some opportunities for

34
00:02:23,632 --> 00:02:27,126
improvement. Now, at the end, I ended

35
00:02:27,158 --> 00:02:30,314
up teaching three semesters to university students and

36
00:02:30,352 --> 00:02:32,746
also ones for high schoolers.

37
00:02:32,938 --> 00:02:36,766
And during that time, I was able to iterate on

38
00:02:36,788 --> 00:02:40,542
the curriculum every year, keep the things that were working

39
00:02:40,596 --> 00:02:43,582
well, drop the things that were not working that well,

40
00:02:43,716 --> 00:02:47,810
and get feedback from the students at the end of each semester.

41
00:02:48,630 --> 00:02:52,174
And now, that was a time of varying

42
00:02:52,222 --> 00:02:56,014
success, but also a lot of learnings.

43
00:02:56,142 --> 00:03:00,166
And I'm here to tell you about those learnings in

44
00:03:00,188 --> 00:03:03,494
order to understand why we did some of the things that we did. First,

45
00:03:03,532 --> 00:03:07,314
let's look at the goals. What were we trying to achieve?

46
00:03:07,442 --> 00:03:10,666
What would we have considered success at the end of the

47
00:03:10,688 --> 00:03:14,314
semester? Where did we want to get? And the

48
00:03:14,352 --> 00:03:18,326
bottom line is that these were people who are not programmers.

49
00:03:18,438 --> 00:03:22,682
They were not going to be programmers. They never intended to be programmers.

50
00:03:22,826 --> 00:03:26,286
And so my basic goal was just to

51
00:03:26,308 --> 00:03:30,010
give them a sneak peek into the world of coding

52
00:03:30,170 --> 00:03:33,300
and an experience and feeling of success,

53
00:03:33,910 --> 00:03:37,262
because I feel like this world feels

54
00:03:37,326 --> 00:03:41,074
like something unachievable for most people and

55
00:03:41,112 --> 00:03:44,594
I wanted to be inclusive, invite them in

56
00:03:44,712 --> 00:03:48,134
and give them a feeling of being capable of

57
00:03:48,172 --> 00:03:50,040
achieving success in this world.

58
00:03:51,370 --> 00:03:55,030
This kind of influenced the

59
00:03:55,100 --> 00:03:58,666
general format, which was no exam at the end of

60
00:03:58,688 --> 00:04:01,962
the semester. Thankfully, the university gave

61
00:04:02,016 --> 00:04:05,386
me almost complete freedom in how I was going to

62
00:04:05,488 --> 00:04:09,354
shape the requirements. The one thing that they set out was

63
00:04:09,392 --> 00:04:12,906
attendance was mandatory. But other than that, it was all

64
00:04:12,928 --> 00:04:16,414
up to me. And so even though I gave up homeworks from week

65
00:04:16,452 --> 00:04:19,806
to week, and I also gave them a task, at the end

66
00:04:19,828 --> 00:04:23,566
of the semester, there was no specific exam and there was no specific

67
00:04:23,668 --> 00:04:26,834
point where we had to get like, there was no

68
00:04:26,872 --> 00:04:30,402
problem if by the end of the semester we missed learning something

69
00:04:30,456 --> 00:04:34,242
that I was originally planning to do, because the idea was to

70
00:04:34,296 --> 00:04:38,434
introduce these to this world. This also very heavily shaped

71
00:04:38,482 --> 00:04:42,070
the mindset of how we were teaching. We were

72
00:04:42,140 --> 00:04:45,286
repeatedly telling them that there

73
00:04:45,308 --> 00:04:48,754
is no stupid question. These only stupid

74
00:04:48,802 --> 00:04:52,362
question is the one that you don't ask, because if you don't ask it,

75
00:04:52,416 --> 00:04:56,282
you stay stupid. And so we were trying to be very

76
00:04:56,336 --> 00:04:59,974
open and very safe and make

77
00:05:00,032 --> 00:05:03,754
everyone feel comfortable with them not knowing stuff and not understanding

78
00:05:03,802 --> 00:05:07,358
stuff, and make them understand

79
00:05:07,524 --> 00:05:11,086
that trying was more important than getting it right

80
00:05:11,108 --> 00:05:14,346
the first time. It was perfectly okay to

81
00:05:14,468 --> 00:05:17,874
poke around, even if you didn't have a very specific idea

82
00:05:18,072 --> 00:05:21,554
of what you wanted to achieve. And I

83
00:05:21,592 --> 00:05:25,614
made sure to tell them that I myself, as a software engineer

84
00:05:25,662 --> 00:05:28,982
who did coding for a living, I also often

85
00:05:29,036 --> 00:05:32,342
do that by trial and error, and I don't get it right the first

86
00:05:32,396 --> 00:05:36,674
time. And I told them that software

87
00:05:36,722 --> 00:05:40,540
engineering, when you write code, you don't write it from the top

88
00:05:41,070 --> 00:05:44,362
all the way to the bottom. You put

89
00:05:44,416 --> 00:05:48,278
something out there and then you massage

90
00:05:48,374 --> 00:05:51,386
it until it starts doing what you want it to do.

91
00:05:51,408 --> 00:05:54,058
This massaging comes from a deck lead of mine.

92
00:05:54,234 --> 00:05:59,694
And one other very important thing was how I

93
00:05:59,732 --> 00:06:02,880
needed to make some decisions around

94
00:06:03,270 --> 00:06:07,166
which specific examples and techniques

95
00:06:07,278 --> 00:06:11,140
and patterns to teach. And there was a trade off between

96
00:06:11,830 --> 00:06:16,550
patterns that were easy to understand and

97
00:06:16,620 --> 00:06:19,922
patterns that were widely applicable,

98
00:06:20,066 --> 00:06:23,990
as in applicable outside of the context of this course.

99
00:06:24,140 --> 00:06:27,398
To be a bit more specific, if there was a function

100
00:06:27,484 --> 00:06:31,622
that I wanted them to call, but it had a too complicated

101
00:06:31,686 --> 00:06:34,778
of a signature and I could easily wrap it in a

102
00:06:34,784 --> 00:06:38,330
helper function that was just much easier to understand than call,

103
00:06:38,480 --> 00:06:41,610
I had to make a choice of do I give them a helper function,

104
00:06:41,760 --> 00:06:45,406
in which case they will understand these easier, but then if

105
00:06:45,428 --> 00:06:48,766
they ever look up the documentation for the framework of what

106
00:06:48,788 --> 00:06:51,918
we are learning, they are not going to see that helper function. These, if they

107
00:06:51,924 --> 00:06:55,266
ever look up languages outside of my course, these are

108
00:06:55,288 --> 00:06:58,974
not going to see the patterns that I'm teaching. So I'm

109
00:06:59,022 --> 00:07:03,426
kind of closing them in a little bubble of my

110
00:07:03,608 --> 00:07:07,522
patterns and conventions and syntaxes

111
00:07:07,586 --> 00:07:11,510
and helper functions. So there is a bit of trade off there.

112
00:07:11,660 --> 00:07:15,302
And I made these decision that because these course was not

113
00:07:15,356 --> 00:07:18,954
about putting them on a certain level and to

114
00:07:18,992 --> 00:07:22,220
a certain curriculum and to a certain

115
00:07:22,590 --> 00:07:26,570
knowledge and skill level, this was more about making

116
00:07:26,640 --> 00:07:30,038
it click for them and making them

117
00:07:30,224 --> 00:07:33,806
experience, success and

118
00:07:33,908 --> 00:07:37,326
ability. I decided to go

119
00:07:37,348 --> 00:07:40,670
the way of putting them in a bubble.

120
00:07:41,090 --> 00:07:44,660
And I thought it's more important

121
00:07:45,030 --> 00:07:49,042
that they walk away with the feeling of

122
00:07:49,096 --> 00:07:52,578
being able to get into programming if they ever need to,

123
00:07:52,744 --> 00:07:56,386
than if they will see the exact patterns

124
00:07:56,418 --> 00:07:59,000
that also exist outside of this course.

125
00:08:02,010 --> 00:08:05,634
Even if the specific syntax or the specific helper

126
00:08:05,682 --> 00:08:09,318
function is not applicable in a different context,

127
00:08:09,494 --> 00:08:12,950
the skills are certainly applicable, the concepts

128
00:08:13,030 --> 00:08:17,194
are certainly applicable, and more than anything, what is applicable is

129
00:08:17,232 --> 00:08:21,210
that they have the understanding

130
00:08:21,370 --> 00:08:24,574
that they are able to do this and they are able to get

131
00:08:24,612 --> 00:08:27,600
into this. And so with this in mind,

132
00:08:27,970 --> 00:08:31,680
what did we end up actually teaching? Well,

133
00:08:32,370 --> 00:08:36,258
I wasn't coming up with this curriculum from scratch. I had

134
00:08:36,344 --> 00:08:40,030
examples and patterns in front of me from these circle

135
00:08:40,110 --> 00:08:43,714
of friends and colleagues who were already teaching such courses or

136
00:08:43,752 --> 00:08:47,414
workshops. And the

137
00:08:47,532 --> 00:08:51,302
programming language and framework that everyone used was

138
00:08:51,356 --> 00:08:53,190
one called processing.

139
00:08:54,330 --> 00:08:58,202
Now this framework was specifically created to

140
00:08:58,256 --> 00:09:01,674
teach programming to beginner. It is supposed to be

141
00:09:01,712 --> 00:09:05,034
very visual, very easy to understand, and very

142
00:09:05,072 --> 00:09:08,698
easy and quick to get to programs that are actually

143
00:09:08,864 --> 00:09:12,478
nice and enjoyable and do stuff.

144
00:09:12,644 --> 00:09:16,734
And so that was going to be my baseline. However, I did

145
00:09:16,772 --> 00:09:20,382
decide to go on a duvet. There existed a port

146
00:09:20,436 --> 00:09:24,050
of processing which was written in Java,

147
00:09:25,190 --> 00:09:28,546
and the port was written in JavaScript. It ran by the

148
00:09:28,568 --> 00:09:31,970
name of p five js, and I decided to use

149
00:09:32,040 --> 00:09:35,494
that ones instead of the original processing. And there

150
00:09:35,532 --> 00:09:37,880
were a number of reasons for that.

151
00:09:38,730 --> 00:09:42,262
Processing was already very well established, it was

152
00:09:42,316 --> 00:09:46,086
popular, it had a community and good tooling around it,

153
00:09:46,268 --> 00:09:49,894
and p five JS was not as well known as

154
00:09:49,932 --> 00:09:54,134
not as well supported. And still I decided that it was just these better choice

155
00:09:54,182 --> 00:09:57,994
for this particular course. One of the reasons why I went

156
00:09:58,032 --> 00:10:01,962
with that is the fact that processing was using Java

157
00:10:02,106 --> 00:10:05,150
and p five js was using JavaScript.

158
00:10:05,650 --> 00:10:09,550
Now why does this matter in this particular context?

159
00:10:09,970 --> 00:10:13,498
First of all, we all know that Java tends

160
00:10:13,514 --> 00:10:17,026
to be a little bit verbose and it's also pretty strict compared to

161
00:10:17,048 --> 00:10:20,926
JavaScript, which of course is a dynamically typed language, and it's

162
00:10:20,958 --> 00:10:24,062
also one that was born as a scripting language,

163
00:10:24,206 --> 00:10:27,810
and so it can be much more concise

164
00:10:27,970 --> 00:10:32,614
and expressive. And I thought that was very important at

165
00:10:32,652 --> 00:10:36,390
this point. Keep in mind that

166
00:10:36,460 --> 00:10:40,102
these were hungarian students who of course spoke English,

167
00:10:40,166 --> 00:10:44,278
but words such as void or string

168
00:10:44,454 --> 00:10:47,946
or integer, these are not part of your

169
00:10:48,048 --> 00:10:51,722
everyday vocabulary when you're just talking English

170
00:10:51,786 --> 00:10:55,518
as an art student. And so that was going to be a little bit difficult.

171
00:10:55,684 --> 00:10:59,246
And additionally, Javascript was flexible enough

172
00:10:59,428 --> 00:11:03,998
to let me do some custom conventions

173
00:11:04,094 --> 00:11:07,902
and modifications that would have been impossible to do with Java.

174
00:11:08,046 --> 00:11:12,050
Let me show you what I mean. On the left had side

175
00:11:12,200 --> 00:11:15,710
you can see an example with Java,

176
00:11:15,870 --> 00:11:19,800
and of course when you're creating variables, you have to tell the type.

177
00:11:20,330 --> 00:11:23,926
And now you need to remember these words. You need to remember to

178
00:11:23,948 --> 00:11:27,590
spell string with an uppercase, s and int with a lowercase.

179
00:11:28,010 --> 00:11:31,226
You need to remember that if you create a variable you need

180
00:11:31,248 --> 00:11:34,330
to write out the type, but if you modify it later you don't.

181
00:11:34,990 --> 00:11:38,486
You need to let's not even talk about arrays,

182
00:11:38,598 --> 00:11:42,154
that's way too much. And on the right hand side you see the Javascript

183
00:11:42,202 --> 00:11:45,978
equivalent. You'll notice that I just dropped

184
00:11:46,154 --> 00:11:49,360
VAR. Let const didn't do any of that,

185
00:11:49,730 --> 00:11:53,754
which is certainly not a good practice if you're actually writing production

186
00:11:53,802 --> 00:11:57,314
code. But if you just went to introduce the concept of variables to

187
00:11:57,352 --> 00:12:00,706
students, it's very handy because it's just so

188
00:12:00,728 --> 00:12:04,242
much easier. You write a name, an equal sign and a value,

189
00:12:04,376 --> 00:12:08,166
it doesn't even matter if the variable exists already or you're creating it

190
00:12:08,188 --> 00:12:11,666
right now, just works. It also had the added

191
00:12:11,698 --> 00:12:15,974
benefit of putting all of these variables in the global scope, which once

192
00:12:16,012 --> 00:12:19,702
again you wouldn't do that in production code. But when

193
00:12:19,756 --> 00:12:23,846
teaching, I found that understanding variable scope

194
00:12:24,038 --> 00:12:27,690
was just too big of a hurdle. It wasn't worth it to try to explain

195
00:12:27,760 --> 00:12:31,222
that. So it's just easier to say if you create a variable,

196
00:12:31,366 --> 00:12:34,986
it's there for you to use, and you don't need to worry

197
00:12:35,018 --> 00:12:38,446
about it. You will also notice that

198
00:12:38,468 --> 00:12:42,474
I'm not using any semicolons. Javascript lets you do that with automatic

199
00:12:42,522 --> 00:12:45,730
semicolon insertion. And yes, we all know

200
00:12:45,800 --> 00:12:49,442
that there are a handful of corner cases where

201
00:12:49,496 --> 00:12:52,446
you cannot rely on automatic semicolon insertion,

202
00:12:52,558 --> 00:12:55,634
and then your code does something else than what you intended it to do

203
00:12:55,672 --> 00:12:59,046
or just doesn't work. But I knew that we were never

204
00:12:59,068 --> 00:13:02,870
going to write that type of code, so it was just easier to drop it.

205
00:13:03,020 --> 00:13:06,562
And it might be second nature

206
00:13:06,626 --> 00:13:09,558
for you to hit the semicolon key on your keyboard.

207
00:13:09,654 --> 00:13:12,780
But keep in mind that these were hungarian art students,

208
00:13:13,230 --> 00:13:16,394
so they are not writing so many semicolons or

209
00:13:16,432 --> 00:13:20,640
special characters. Curly braces were also a big problem because

210
00:13:21,490 --> 00:13:25,338
it especially counts that on the hungarian keyboard

211
00:13:25,434 --> 00:13:28,954
we need to have more letters because the hungarian Alphabet

212
00:13:29,002 --> 00:13:32,746
has more letters than the Latin. And so many

213
00:13:32,788 --> 00:13:36,466
of the special characters that are just simple keys on an

214
00:13:36,488 --> 00:13:40,574
english keyboard, they need to be accessed via modifier

215
00:13:40,622 --> 00:13:43,922
keys. On a hungarian keyboard, you need to press

216
00:13:44,056 --> 00:13:47,618
altgr to access

217
00:13:47,704 --> 00:13:50,646
certain keys. I don't know when you use that. The last time, of course,

218
00:13:50,668 --> 00:13:54,040
I'm talking about Windows machines. And so

219
00:13:54,490 --> 00:13:57,986
it just proved to be very useful to be able to drop

220
00:13:58,018 --> 00:14:02,410
that. You wouldn't believe how much time people were wasting just

221
00:14:02,480 --> 00:14:05,626
looking for characters. And it's just not the

222
00:14:05,648 --> 00:14:09,114
useful type of time to spend when you're trying to learn

223
00:14:09,152 --> 00:14:12,342
programming. You could also

224
00:14:12,416 --> 00:14:15,840
say that, well, the code on the right hand side,

225
00:14:16,290 --> 00:14:19,774
that just looks like Python. So why didn't I just go with

226
00:14:19,812 --> 00:14:23,746
Python? And you would kind of be right, it does look like Python. I think

227
00:14:23,768 --> 00:14:27,090
Python is an amazing language to teach for beginner,

228
00:14:28,150 --> 00:14:32,254
and I believe there was some kind of port of processing

229
00:14:32,302 --> 00:14:36,302
to Python, but there are other aspects

230
00:14:36,366 --> 00:14:39,830
that I needed to keep in mind. And so let me talk to you

231
00:14:39,900 --> 00:14:43,830
about these as well. One of these considerations was that

232
00:14:43,900 --> 00:14:47,758
for P five js, I also had an extension

233
00:14:47,954 --> 00:14:51,370
developed by someone, which is

234
00:14:51,440 --> 00:14:54,746
that one of these considerations was that for P

235
00:14:54,768 --> 00:14:58,394
five js there was an open source extension called P

236
00:14:58,432 --> 00:15:01,340
five Play, which wasn't available.

237
00:15:01,650 --> 00:15:05,482
One of those considerations was that for P five js there existed

238
00:15:05,546 --> 00:15:09,040
this open source extension called P five Play.

239
00:15:09,650 --> 00:15:13,538
To understand why that matters, let me first show you what

240
00:15:13,704 --> 00:15:15,460
processing looks like.

241
00:15:16,390 --> 00:15:20,098
This is the example program that the website gives you.

242
00:15:20,184 --> 00:15:23,380
It creates a canvas a given size.

243
00:15:23,750 --> 00:15:28,194
Let me not get into the function name choice of size

244
00:15:28,392 --> 00:15:31,590
when what you want to do is create a canvas.

245
00:15:33,130 --> 00:15:36,662
But what you will notice is that this very

246
00:15:36,716 --> 00:15:40,140
minimal, very simple example that they give you on the web page,

247
00:15:40,990 --> 00:15:44,678
it already has more numbers than letters.

248
00:15:44,854 --> 00:15:48,330
And it's really difficult to sell when one of your

249
00:15:48,480 --> 00:15:51,840
bottom line messages is that you don't have to

250
00:15:52,210 --> 00:15:55,946
like mathematics in order to get into programming,

251
00:15:56,058 --> 00:15:59,098
because this is coordinate geometry.

252
00:15:59,274 --> 00:16:02,914
And let me tell you, not a lot of people like

253
00:16:02,952 --> 00:16:06,414
coordinate geometry. It's extremely

254
00:16:06,462 --> 00:16:11,198
useful, and at the same time, it's just not intuitive.

255
00:16:11,294 --> 00:16:14,610
This is not how people think about the world

256
00:16:14,680 --> 00:16:18,642
and about where things are and what they do. And so what

257
00:16:18,696 --> 00:16:21,862
p five play let me do is it gave

258
00:16:21,916 --> 00:16:25,974
me sprites. These sprites are some

259
00:16:26,012 --> 00:16:29,654
kind of actors in the program. You can create a

260
00:16:29,692 --> 00:16:33,386
sprite, you can put it somewhere on the canvas and then you can move it

261
00:16:33,408 --> 00:16:36,790
around, you can rotate it, you can change its appearance,

262
00:16:36,870 --> 00:16:41,114
you can make it move, and you can create multiple sprites,

263
00:16:41,162 --> 00:16:45,290
and you can make them meet and collide and behave differently.

264
00:16:45,450 --> 00:16:48,874
And this is just so much closer

265
00:16:49,002 --> 00:16:53,050
to our intuitive world of having actors

266
00:16:53,210 --> 00:16:56,754
which exist in a space and interact with each other

267
00:16:56,872 --> 00:17:00,322
rather than getting a canvas and then providing a bunch of

268
00:17:00,376 --> 00:17:03,646
numbers to have something show up on the canvas.

269
00:17:03,838 --> 00:17:07,702
And these, okay, what do you do with it now?

270
00:17:07,756 --> 00:17:11,462
I put that little turtle there because I got a lot of

271
00:17:11,516 --> 00:17:13,990
inspiration from a logo language,

272
00:17:14,890 --> 00:17:18,710
namely communist logo. That actually was the first language

273
00:17:18,790 --> 00:17:22,490
that I ever learned. Logo languages feature

274
00:17:23,310 --> 00:17:26,950
turtle graphics. They give you a canvas

275
00:17:27,030 --> 00:17:30,794
and they put a little turtle in the middle, and these

276
00:17:30,832 --> 00:17:34,014
turtle has a pen, and you can tell the turtle to

277
00:17:34,052 --> 00:17:37,518
move forward or backward or rotate, and as the

278
00:17:37,524 --> 00:17:40,926
turtle moves around, it draws a line with the pen

279
00:17:41,028 --> 00:17:44,826
and you can use this to create drawings. These is a very

280
00:17:44,868 --> 00:17:48,514
intuitive concept to grasp even as a kid, because if you

281
00:17:48,552 --> 00:17:51,666
can control a remote controlled car, toy car,

282
00:17:51,848 --> 00:17:54,740
you can control the turtle. It makes a lot of sense.

283
00:17:55,210 --> 00:17:59,062
And so I got a lot of inspiration from logo and

284
00:17:59,116 --> 00:18:02,614
P five play. Let me do something very, very similar with

285
00:18:02,652 --> 00:18:05,960
these sprites. Another thing is that

286
00:18:06,570 --> 00:18:10,074
if you take a look at this so

287
00:18:10,112 --> 00:18:13,722
called processing development environment, it's nice

288
00:18:13,776 --> 00:18:17,206
that it's a standalone executable that you download and run on your machine,

289
00:18:17,238 --> 00:18:20,894
but then you get the impression that code or program is

290
00:18:20,932 --> 00:18:24,382
what you type into this box. It lives in this box,

291
00:18:24,436 --> 00:18:28,298
that's the code that lives in its own bubble.

292
00:18:28,394 --> 00:18:32,670
That's all it can do. But with JavaScript

293
00:18:33,250 --> 00:18:36,558
it was very easy to just open up a browser,

294
00:18:36,734 --> 00:18:40,210
open the JavaScript console, and then change

295
00:18:40,280 --> 00:18:43,522
something on the web page that we were looking at. And that gives you

296
00:18:43,576 --> 00:18:47,418
an instant experience of just how close this programming

297
00:18:47,454 --> 00:18:51,126
language is to your everyday life and that

298
00:18:51,148 --> 00:18:55,026
it's right there under the hood. And of course you could argue

299
00:18:55,058 --> 00:18:58,566
that Java is right there under the hood of processing, but you

300
00:18:58,588 --> 00:19:02,442
cannot open that hood, whereas with the browser that you use every

301
00:19:02,496 --> 00:19:06,246
day, you can just open up the hood and start interacting

302
00:19:06,278 --> 00:19:09,910
with the web page using JavaScript, which is a very

303
00:19:10,000 --> 00:19:13,054
powerful experience and concept. So that's also why

304
00:19:13,092 --> 00:19:16,570
I did that. Not to mention that very helpfully,

305
00:19:16,730 --> 00:19:20,320
browsers have a JavaScript console which is a repl,

306
00:19:20,690 --> 00:19:24,178
read, evaluate, print loop, or if you prefer read,

307
00:19:24,264 --> 00:19:28,414
evaluate, execute loop. The processing development

308
00:19:28,462 --> 00:19:32,274
environment doesn't have that. It had an area where you

309
00:19:32,312 --> 00:19:35,730
write your program and then you can execute the entire

310
00:19:35,800 --> 00:19:39,574
programs from top to bottom, and then you can modify something and re

311
00:19:39,612 --> 00:19:43,142
execute it again, which is a bit of a more

312
00:19:43,196 --> 00:19:46,966
difficult concept to get familiar with than

313
00:19:47,068 --> 00:19:51,146
when your actor is there on the screen and you have command line,

314
00:19:51,328 --> 00:19:55,462
which is, as its name shows, is the place where you give commands

315
00:19:55,526 --> 00:19:59,366
or instructions. And so if you instruct your actor

316
00:19:59,398 --> 00:20:02,922
to do something, it just does it, and there you are,

317
00:20:02,976 --> 00:20:06,922
and then it stays in that place, and then you can continue giving it instructions

318
00:20:06,986 --> 00:20:11,050
and it will interact with you, it will react to your instructions,

319
00:20:11,130 --> 00:20:14,946
which is once again I think a really good introduction to programming to

320
00:20:14,968 --> 00:20:19,438
start with a repl, rather than writing entire programs at the very beginner.

321
00:20:19,614 --> 00:20:23,300
By the way, this is also something that logo languages do.

322
00:20:24,630 --> 00:20:28,230
And if you went another

323
00:20:28,300 --> 00:20:32,018
example, the official Python tutorial

324
00:20:32,114 --> 00:20:35,862
also starts out with opening these Python interpreter and

325
00:20:35,916 --> 00:20:39,382
using it as a calculator, which is not super

326
00:20:39,436 --> 00:20:43,494
useful per se, but once again a very easy to understand concept.

327
00:20:43,542 --> 00:20:46,934
You type something in, you get something back while you're doing Python,

328
00:20:46,982 --> 00:20:50,666
and then you can move into more complicated things then.

329
00:20:50,768 --> 00:20:54,654
Here's another thing where I changed how previous curses were run,

330
00:20:54,772 --> 00:20:58,400
which is that saving and distributing our code.

331
00:20:58,850 --> 00:21:02,286
I had seen cases of saving your code on a

332
00:21:02,308 --> 00:21:05,618
pen drive. I had seen cases of

333
00:21:05,704 --> 00:21:09,870
trying to save your code to GitHub via GitHub desktop.

334
00:21:10,030 --> 00:21:14,370
This was especially important because people

335
00:21:14,440 --> 00:21:18,210
were not always using their own machines. VV provided machines,

336
00:21:18,950 --> 00:21:22,726
and so they needed to be able to access their code even if

337
00:21:22,748 --> 00:21:25,926
they were using a different machine than on the class before.

338
00:21:26,028 --> 00:21:29,386
Not to mention if they wrote some code during the class and then they

339
00:21:29,408 --> 00:21:33,130
went home and wanted to write homework, they would have had to access

340
00:21:33,200 --> 00:21:36,746
their code. So previous teachers used pendrives and

341
00:21:36,768 --> 00:21:40,490
did GitHub desktop. But to be honest,

342
00:21:40,560 --> 00:21:43,966
GitHub, the git usage is just not something that

343
00:21:43,988 --> 00:21:47,582
you want to start your beginner course with. And even

344
00:21:47,636 --> 00:21:51,166
with a GuI like GitHub desktop, it just gave us a lot of

345
00:21:51,188 --> 00:21:55,166
struggle and a lot of problems and a lot of time wasted, and it's

346
00:21:55,198 --> 00:21:58,546
just not worth it. And so instead, what I

347
00:21:58,568 --> 00:22:02,258
did was I fired up JS being, which is

348
00:22:02,344 --> 00:22:06,078
an online coding sandbox, like JS fiddle

349
00:22:06,174 --> 00:22:09,334
and some others. This was the one that fit

350
00:22:09,372 --> 00:22:13,414
the purpose the best. And it's really great because once

351
00:22:13,452 --> 00:22:17,346
you are registered, you just need to log in and all of your programs

352
00:22:17,378 --> 00:22:20,598
are there, and then you go home, you log in, and all of your programs

353
00:22:20,614 --> 00:22:24,362
are there, it version controls them, so you don't need to worry about

354
00:22:24,416 --> 00:22:27,514
that. And it

355
00:22:27,552 --> 00:22:31,318
has a bunch of other nice features, such as if you

356
00:22:31,344 --> 00:22:34,766
get stuck with something, with your homework and you need

357
00:22:34,788 --> 00:22:38,654
to message your teacher, all you need to do is send

358
00:22:38,692 --> 00:22:42,366
over the URL. And sharing your code is as

359
00:22:42,388 --> 00:22:46,494
easy as that. It's just about sending

360
00:22:46,542 --> 00:22:50,210
a URL, or if you want to show it to someone else, you just

361
00:22:50,280 --> 00:22:53,954
send a URL. And if you want to run your

362
00:22:53,992 --> 00:22:57,586
code on a mobile device rather than your desktop, you just open

363
00:22:57,608 --> 00:23:00,886
the URL. Whereas with processing, these are all problems that

364
00:23:00,908 --> 00:23:04,482
you would have had to solve, as in how do you distribute,

365
00:23:04,546 --> 00:23:08,042
how do you share, how do you run it on a phone? And there are

366
00:23:08,096 --> 00:23:12,170
solutions for some of these problems, but all of them require extra

367
00:23:12,240 --> 00:23:15,260
work, extra setup, extra thinking.

368
00:23:16,670 --> 00:23:20,394
And with JS being, I mean, you don't even need to install anything on your

369
00:23:20,432 --> 00:23:24,074
computer, just like you do with processing development environment,

370
00:23:24,122 --> 00:23:26,666
or some kind of code editor or whatsoever,

371
00:23:26,858 --> 00:23:30,766
you just open up your browser and there it is. It's stupid easy and

372
00:23:30,788 --> 00:23:34,622
stupid streamlined. And it worked very well for us. I am

373
00:23:34,756 --> 00:23:38,418
somewhat sorry of using a floppy icon for saving.

374
00:23:38,504 --> 00:23:42,290
I know it's very outdated, but it gives me very nice nostalgia vibes.

375
00:23:44,970 --> 00:23:49,590
And so I had taught for three semesters,

376
00:23:49,930 --> 00:23:53,174
I had been teaching university students, and then one more

377
00:23:53,212 --> 00:23:57,174
semester for high schoolers, and at the end of each

378
00:23:57,212 --> 00:23:59,910
semester I asked for their feedback.

379
00:24:00,070 --> 00:24:03,546
And sometimes it was good, sometimes it was had.

380
00:24:03,728 --> 00:24:07,114
One of the main learnings was that when I was teaching a

381
00:24:07,152 --> 00:24:10,602
class of students who not only did not

382
00:24:10,656 --> 00:24:14,826
intend to do programming for a living, they also did not intend

383
00:24:14,858 --> 00:24:19,066
to do any programming during my course. They were totally uninterested

384
00:24:19,098 --> 00:24:22,510
and not willing to put any work into it. That course just

385
00:24:22,580 --> 00:24:26,594
failed. Like I wasn't going to force them to

386
00:24:26,632 --> 00:24:29,570
do work that they weren't interested in doing.

387
00:24:29,720 --> 00:24:33,186
I might not be a good teacher, but I basically gave up on

388
00:24:33,208 --> 00:24:36,066
them because they also gave up on the entire thing.

389
00:24:36,168 --> 00:24:39,714
And so we basically let that one go. But on other courses

390
00:24:39,762 --> 00:24:43,394
with a class of students who had no previous knowledge whatsoever,

391
00:24:43,442 --> 00:24:47,442
but they were interested and willing to get into the topic,

392
00:24:47,586 --> 00:24:51,430
we had really, really nice successes and experiences

393
00:24:51,590 --> 00:24:55,082
based on the feedback, the students really

394
00:24:55,136 --> 00:24:58,362
liked it. And the nicest feedback that I ever got

395
00:24:58,416 --> 00:25:02,702
was that at the end of one of these university semesters where

396
00:25:02,836 --> 00:25:06,842
students have to fill out a teacher evaluation

397
00:25:06,986 --> 00:25:09,120
form for the university itself,

398
00:25:10,290 --> 00:25:13,790
those forms are these evaluated by the university.

399
00:25:14,210 --> 00:25:17,406
And it turns out that for

400
00:25:17,508 --> 00:25:21,434
courses between ten and 15 students, so like small groups,

401
00:25:21,562 --> 00:25:25,554
I got the highest teacher status faction

402
00:25:25,602 --> 00:25:28,850
score in that semester, for which I got a nice prize.

403
00:25:29,010 --> 00:25:32,486
And that gave me some really strong feedback that

404
00:25:32,508 --> 00:25:36,406
I'm going in the right direction. This was all that

405
00:25:36,428 --> 00:25:39,814
I had for you today. I hope you find this useful. Have a good

406
00:25:39,852 --> 00:25:40,390
one.

