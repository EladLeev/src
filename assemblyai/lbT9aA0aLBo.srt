1
00:00:30,770 --> 00:00:34,326
Welcome to this talk. Today we're talking about

2
00:00:34,508 --> 00:00:37,830
observability, one of the strongest muscle for SRE.

3
00:00:38,170 --> 00:00:41,634
So hello everybody, my name is Jonathan Jill.

4
00:00:41,762 --> 00:00:45,206
Today we're talking about this with what part

5
00:00:45,308 --> 00:00:49,266
we start talking for myself who is Jonathong,

6
00:00:49,378 --> 00:00:51,600
Jonathan deal or Jtan 24?

7
00:00:52,050 --> 00:00:55,770
I'm very enthusiast for Linux,

8
00:00:55,930 --> 00:00:59,838
very enthusiast for the community. Also I like share

9
00:00:59,924 --> 00:01:03,314
a lot of the concepts that I learn every day and

10
00:01:03,352 --> 00:01:06,558
my YouTube channel in my repository, in my twitter.

11
00:01:06,654 --> 00:01:10,260
So please follow me if you want to start

12
00:01:11,910 --> 00:01:15,734
with my current followers to take this

13
00:01:15,772 --> 00:01:19,830
tosh for every read that I take. So welcome

14
00:01:19,900 --> 00:01:23,618
to this awesome chair. Talk about the observability

15
00:01:23,714 --> 00:01:27,190
and how we can use for the speed up in our teams.

16
00:01:27,630 --> 00:01:31,178
So what more about this I share with you

17
00:01:31,264 --> 00:01:34,938
this awesome phrase. Life is really simple

18
00:01:35,024 --> 00:01:39,222
but we insist on making it complicated by Confucius.

19
00:01:39,366 --> 00:01:42,814
This is really true because when we

20
00:01:42,852 --> 00:01:46,906
have one part of every challenge

21
00:01:46,938 --> 00:01:50,302
that we have every day could be some days

22
00:01:50,436 --> 00:01:54,514
harder than others. So that is powerful that I

23
00:01:54,552 --> 00:01:57,502
liked this phrase from Confucius.

24
00:01:57,646 --> 00:02:01,154
So what is the agenda for today?

25
00:02:01,272 --> 00:02:04,770
Today we're talking about Si ray.

26
00:02:05,190 --> 00:02:08,398
Also continue with Dora. What is Dora?

27
00:02:08,494 --> 00:02:12,310
How we can use Dora and continue observability,

28
00:02:12,650 --> 00:02:16,422
the golden triangle. Why observability for

29
00:02:16,476 --> 00:02:20,060
us, the CNCF landscape and a little demo.

30
00:02:21,150 --> 00:02:25,098
So with this agenda we

31
00:02:25,184 --> 00:02:28,682
define exactly what topics we want to

32
00:02:28,736 --> 00:02:32,302
cover for this talk. How to from

33
00:02:32,436 --> 00:02:35,870
my perspective I check

34
00:02:35,940 --> 00:02:39,840
and doing in the current stuff or the current job that I done.

35
00:02:40,370 --> 00:02:43,518
So first

36
00:02:43,604 --> 00:02:47,406
topic talking about Si Ra. So the Si Ra

37
00:02:47,428 --> 00:02:52,402
is exactly the cyberbullying engineering could be you take

38
00:02:52,456 --> 00:02:56,226
this definition for another talks called but.

39
00:02:56,338 --> 00:03:00,978
But the objective for SRE exactly is for error the reliability.

40
00:03:01,154 --> 00:03:04,582
Because with reliability we need to think every

41
00:03:04,636 --> 00:03:08,114
day what happened with my application,

42
00:03:08,252 --> 00:03:11,834
with my infrastructure, with my support. Because every

43
00:03:11,872 --> 00:03:15,818
day we need every challenge for our application. How do

44
00:03:15,824 --> 00:03:19,034
we move more fast for the application? How do we

45
00:03:19,072 --> 00:03:23,050
can support that more fast? How to generate directability

46
00:03:23,130 --> 00:03:26,922
for the application. So I take this definition

47
00:03:26,986 --> 00:03:31,258
from glossary

48
00:03:31,354 --> 00:03:34,754
CNCF IO that is a very

49
00:03:34,792 --> 00:03:38,914
high community for generate these

50
00:03:38,952 --> 00:03:41,220
mentions. So what is this?

51
00:03:41,990 --> 00:03:45,854
Cyrability engineering is a discipline that components

52
00:03:45,982 --> 00:03:49,426
operations that sold for engineering the greatest is applied

53
00:03:49,458 --> 00:03:53,106
to infrastructure and operations problems specifically

54
00:03:53,298 --> 00:03:56,642
meaning instead of building product features,

55
00:03:56,706 --> 00:04:00,122
cycability engineers build system to run

56
00:04:00,176 --> 00:04:03,526
application. There are similarities with DevOps.

57
00:04:03,718 --> 00:04:07,830
But while DevOps focuses on getting code to production,

58
00:04:07,910 --> 00:04:12,110
SRE ensures that code running in production works properly.

59
00:04:13,170 --> 00:04:17,214
So you have here two

60
00:04:17,252 --> 00:04:21,038
mixes for DevOps and Siw. But this is

61
00:04:21,124 --> 00:04:24,338
the biggest focus for us. How do we

62
00:04:24,424 --> 00:04:28,450
support the code that we generate from DevOps.

63
00:04:29,190 --> 00:04:33,026
The result for DevOps how to we take

64
00:04:33,128 --> 00:04:36,530
this code and propose the reliability

65
00:04:36,610 --> 00:04:40,322
for that code in production, in staging

66
00:04:40,386 --> 00:04:44,102
or tools big in dev. Because depend what

67
00:04:44,156 --> 00:04:47,640
kind of test I need to generate for every application,

68
00:04:48,170 --> 00:04:51,874
how I can test that application for every

69
00:04:51,932 --> 00:04:55,914
part of my software, right? So that is the objective for us,

70
00:04:56,032 --> 00:04:59,986
how to make more reliability our components

71
00:05:00,038 --> 00:05:03,454
inside of the company, how to make more

72
00:05:03,492 --> 00:05:06,874
reliability our teams and how to generate t spark

73
00:05:07,002 --> 00:05:08,350
very useful.

74
00:05:09,570 --> 00:05:13,658
So you can read more in deep about this concept

75
00:05:13,754 --> 00:05:17,690
problem that is for ensuring the application rule reliability

76
00:05:17,850 --> 00:05:21,794
records multiplicate capabilities for performance monitoring alerting the book into

77
00:05:21,912 --> 00:05:26,022
troubleshooting. So that is the thing that the

78
00:05:26,076 --> 00:05:29,650
biggest part here, the performance monitoring,

79
00:05:29,730 --> 00:05:32,950
alerting the booging to troubleshooting,

80
00:05:33,610 --> 00:05:37,538
right? Because when we have DevOps

81
00:05:37,714 --> 00:05:41,670
and we start for the DevOps journey, we enable

82
00:05:41,750 --> 00:05:45,498
the capabilities for push the code

83
00:05:45,584 --> 00:05:49,834
more easily for every environment for Dev staging and

84
00:05:49,872 --> 00:05:54,026
product. But what happened when I have deployed

85
00:05:54,058 --> 00:05:57,230
that application inside of the environment that I request.

86
00:05:57,810 --> 00:06:01,514
So then we need to enable another capabilities

87
00:06:01,562 --> 00:06:05,634
for that. These capabilities also was called for.

88
00:06:05,832 --> 00:06:09,554
How do I can see what happened with my

89
00:06:09,592 --> 00:06:13,042
infrastructure, my application and what happened

90
00:06:13,096 --> 00:06:17,414
with the communication for the application and then other components that

91
00:06:17,532 --> 00:06:21,286
the application needs to connect. So that is the objective and

92
00:06:21,308 --> 00:06:23,400
the principal objective for us.

93
00:06:24,730 --> 00:06:28,294
How it helps an SI RA approach minimize

94
00:06:28,342 --> 00:06:31,526
the cost, time and effort of the software development

95
00:06:31,558 --> 00:06:35,258
process by continually improving the underlying system.

96
00:06:35,344 --> 00:06:38,474
The system continues measure and monitors the

97
00:06:38,512 --> 00:06:42,714
infrastructure and application components. When something goes wrong,

98
00:06:42,912 --> 00:06:46,478
the system points cycability engineers. So when,

99
00:06:46,644 --> 00:06:50,670
where and how to fix it. This approach helps create

100
00:06:50,740 --> 00:06:54,018
a highly scalable and realable software system

101
00:06:54,104 --> 00:06:56,130
by automating operation task.

102
00:06:57,590 --> 00:07:01,138
If you check in these three part of

103
00:07:01,144 --> 00:07:05,474
the how to sre how to SRE helps

104
00:07:05,522 --> 00:07:09,800
the company in every part takes

105
00:07:10,810 --> 00:07:14,870
a little part of monitoring or observability

106
00:07:15,210 --> 00:07:18,570
or alerting that is part of observability.

107
00:07:19,230 --> 00:07:23,190
So that is our focus for SRE.

108
00:07:23,350 --> 00:07:26,666
I invite you to read more about

109
00:07:26,768 --> 00:07:30,066
the cyberlite engineering,

110
00:07:30,118 --> 00:07:34,142
especially for theglosary cncf.com. That is very

111
00:07:34,196 --> 00:07:38,606
special because it's a lot of community

112
00:07:38,708 --> 00:07:42,238
behind of that. So these SRE

113
00:07:42,324 --> 00:07:45,934
little quotes about the SRE the importance for

114
00:07:45,972 --> 00:07:49,442
SRE implementation SRE is a critical function

115
00:07:49,496 --> 00:07:53,330
for ensuring the reliability, availability and performance of it system

116
00:07:53,400 --> 00:07:56,962
and application teams and tools. SRE important to

117
00:07:57,016 --> 00:08:00,886
SRE, but equally important is the ability to

118
00:08:00,908 --> 00:08:02,390
look at the big picture,

119
00:08:03,770 --> 00:08:07,554
the ability to look right. So every

120
00:08:07,612 --> 00:08:11,562
part that we're talking about is hey, I need to look what

121
00:08:11,616 --> 00:08:14,950
happened with my software, my infrastructure,

122
00:08:15,030 --> 00:08:18,874
my communication, my networking. So the objective for

123
00:08:18,912 --> 00:08:22,860
that it's very huge because in every part of

124
00:08:23,230 --> 00:08:26,942
SRe you need to take some

125
00:08:26,996 --> 00:08:31,102
concepts about observability. How do you can see that?

126
00:08:31,236 --> 00:08:34,818
How do you can take that information for the application,

127
00:08:34,984 --> 00:08:38,590
for the infrastructure, for the database,

128
00:08:38,750 --> 00:08:42,658
for the message queue or something like that.

129
00:08:42,824 --> 00:08:46,914
You need to identify exactly how your application works

130
00:08:46,952 --> 00:08:50,342
and how to do application also as was

131
00:08:50,396 --> 00:08:54,118
connected for another task or another system.

132
00:08:54,204 --> 00:08:58,042
So that is the objective and this is part

133
00:08:58,176 --> 00:09:02,650
why is so important this part of SIW.

134
00:09:02,990 --> 00:09:06,650
So with this on mind we have

135
00:09:06,720 --> 00:09:09,914
the Dora metrics. The Dora metrics come from

136
00:09:09,952 --> 00:09:13,706
the DevOps research and assessment. This is a very huge patch

137
00:09:13,818 --> 00:09:17,946
for DevOps and also applies to SRE

138
00:09:18,058 --> 00:09:21,402
because with these capabilities

139
00:09:21,466 --> 00:09:24,654
for this research have four metrics.

140
00:09:24,702 --> 00:09:28,046
That is deployment frequency, lead time for chains maintenance

141
00:09:28,078 --> 00:09:32,466
to recover and chain failure rate from

142
00:09:32,568 --> 00:09:37,126
the names could be you generate a

143
00:09:37,148 --> 00:09:40,150
general approach for these items.

144
00:09:40,810 --> 00:09:44,134
But the most important here is hey,

145
00:09:44,332 --> 00:09:48,186
if I generate this research for

146
00:09:48,208 --> 00:09:52,234
my company what is the objective for that?

147
00:09:52,432 --> 00:09:56,570
When you improvements and also take a look for

148
00:09:56,720 --> 00:10:01,050
the dorametrics you take a look for your maturity,

149
00:10:01,490 --> 00:10:05,166
the maturity that you have inside of the company and what is

150
00:10:05,188 --> 00:10:08,858
the capability that you have with generate

151
00:10:08,954 --> 00:10:12,842
one new feature or what is the time that you take for

152
00:10:12,996 --> 00:10:16,958
resolve new bulk in production

153
00:10:17,134 --> 00:10:20,674
or if production is down what is the time that you take for

154
00:10:20,712 --> 00:10:24,562
record for that and how

155
00:10:24,616 --> 00:10:28,854
do you can measure that? That is the objective because you

156
00:10:28,892 --> 00:10:31,906
have here the four components ben.

157
00:10:32,018 --> 00:10:37,122
But when you move for I start this metrics

158
00:10:37,186 --> 00:10:40,746
and start to how do I can measure that inside of

159
00:10:40,768 --> 00:10:45,094
my company is the hard part because you need to identify

160
00:10:45,222 --> 00:10:48,470
my repository, identify the process for requirements,

161
00:10:48,550 --> 00:10:52,286
identify the repository for features. So you

162
00:10:52,308 --> 00:10:56,586
need to take a look for all scopes

163
00:10:56,698 --> 00:11:00,378
behind of the IIT process, how to utilize

164
00:11:00,394 --> 00:11:03,780
a new feature for the clients, the customers

165
00:11:04,710 --> 00:11:08,786
from your internal customer also that

166
00:11:08,808 --> 00:11:12,642
is the biggest part that you need to cover how you can

167
00:11:12,696 --> 00:11:16,118
see now see or take a

168
00:11:16,124 --> 00:11:20,870
look from the repository

169
00:11:21,370 --> 00:11:25,266
from the Jira

170
00:11:25,298 --> 00:11:28,810
or confluence depends for what is your requirement

171
00:11:29,150 --> 00:11:32,682
manager for that tool

172
00:11:32,736 --> 00:11:36,314
that you use internally or something like

173
00:11:36,352 --> 00:11:39,626
that and take a look hey, how do

174
00:11:39,648 --> 00:11:43,770
I can take that metrics and how do I can storage that metrics

175
00:11:43,850 --> 00:11:47,630
and how do I generate something behind of that for

176
00:11:47,700 --> 00:11:51,070
see what happened with one commit or

177
00:11:51,140 --> 00:11:54,690
one branch or something like that. That is the biggest

178
00:11:55,270 --> 00:11:58,306
challenge behind of that because every day you need to

179
00:11:58,328 --> 00:12:02,162
take hey I have a process for generate that I

180
00:12:02,296 --> 00:12:06,422
generate could be a standard for commits. I don't know. You need to

181
00:12:06,476 --> 00:12:09,750
identify what happened inside of your company

182
00:12:09,900 --> 00:12:13,734
and if you need to move more than

183
00:12:13,852 --> 00:12:17,542
DevOps and generate the next step

184
00:12:17,596 --> 00:12:21,670
with SRE because with Sre you need to hey,

185
00:12:21,820 --> 00:12:25,494
I get more information that currently I

186
00:12:25,532 --> 00:12:29,722
have. I need to start cover for the repository,

187
00:12:29,906 --> 00:12:33,694
the management for my task or something

188
00:12:33,732 --> 00:12:37,370
like that. So that is very beauty

189
00:12:37,530 --> 00:12:40,862
because in the way and you addresses your report

190
00:12:40,916 --> 00:12:46,718
for that you found a lot of conceptually

191
00:12:46,894 --> 00:12:50,434
definition that the people has but nor

192
00:12:50,552 --> 00:12:54,306
have they really true. So when you start to

193
00:12:54,408 --> 00:12:58,582
read and you start to identify and you start

194
00:12:58,716 --> 00:13:02,182
to define, that process is a very nice

195
00:13:02,316 --> 00:13:06,022
path. For the

196
00:13:06,076 --> 00:13:09,458
other hand, when you identify

197
00:13:09,554 --> 00:13:13,606
and you start to call it that metrics also you take a

198
00:13:13,628 --> 00:13:16,658
look for the maturity,

199
00:13:16,754 --> 00:13:20,190
right? The maturity mentions to you if you

200
00:13:20,300 --> 00:13:23,578
have a low performance or could be a medium performance

201
00:13:23,674 --> 00:13:27,594
or a high or you are a leader

202
00:13:27,642 --> 00:13:31,534
for SRE and you have a best practice for the

203
00:13:31,572 --> 00:13:35,582
current ecosystem for it and you deploy

204
00:13:35,646 --> 00:13:39,410
every day or could be once, a couple of times

205
00:13:39,560 --> 00:13:42,258
during the day or could be in the hour.

206
00:13:42,424 --> 00:13:46,486
That is the objective for this research. Identify exactly what

207
00:13:46,508 --> 00:13:49,814
is your point, how do you could

208
00:13:49,852 --> 00:13:53,622
be moved for the next step. Because what is my

209
00:13:53,676 --> 00:13:57,474
new challenge for every part of this

210
00:13:57,532 --> 00:13:58,140
research.

211
00:14:01,390 --> 00:14:04,970
Okay, start talking about observability.

212
00:14:05,390 --> 00:14:08,794
So observability is a system property,

213
00:14:08,992 --> 00:14:11,610
right? Notice exactly a definition.

214
00:14:11,770 --> 00:14:15,774
It's a property that I have in my system to degree to

215
00:14:15,812 --> 00:14:19,658
which the system can generate actionable insights. It allows

216
00:14:19,754 --> 00:14:23,166
users to understand a system state for the external

217
00:14:23,198 --> 00:14:25,330
output and take corrective actions.

218
00:14:26,550 --> 00:14:29,666
I think that is the best part for here

219
00:14:29,768 --> 00:14:34,098
because we have currently another

220
00:14:34,184 --> 00:14:37,606
tools for generate and take information for

221
00:14:37,628 --> 00:14:40,470
my application. But that is observability.

222
00:14:41,370 --> 00:14:44,066
Let us check. During the session,

223
00:14:44,258 --> 00:14:47,442
computer systems are measured by observing low level

224
00:14:47,516 --> 00:14:51,466
signals such as cpu time, memory, disk space. A higher level

225
00:14:51,648 --> 00:14:54,602
and business signal included API response times,

226
00:14:54,656 --> 00:14:57,050
errors, transaction per second, et cetera.

227
00:14:58,270 --> 00:15:01,814
This observable system are observed or monitored.

228
00:15:01,942 --> 00:15:06,654
That is the key monitored for

229
00:15:06,692 --> 00:15:10,634
the past sentence because currently we monitor

230
00:15:10,682 --> 00:15:14,374
it because I enable could be enos

231
00:15:14,442 --> 00:15:18,674
the cloud watch or could be I take the logs or could be I saw

232
00:15:18,872 --> 00:15:22,158
the information about the cpu or the throw

233
00:15:22,174 --> 00:15:26,134
output for my network, but that is the key for that.

234
00:15:26,252 --> 00:15:30,422
Or could be just monitor your application. So that is

235
00:15:30,556 --> 00:15:33,874
we're talking in this session. There are specialized

236
00:15:33,922 --> 00:15:37,554
tools locally observability tools. A list of this tool can be

237
00:15:37,612 --> 00:15:40,570
viewing the cloud netting landscape observability section.

238
00:15:42,030 --> 00:15:45,706
We will see that landscape in a couple

239
00:15:45,728 --> 00:15:50,162
of slides. Observable system yield meaningful

240
00:15:50,246 --> 00:15:54,010
actional data to their operators, allowing them to achieve

241
00:15:54,170 --> 00:15:58,430
outcomes faster incident response, increase developer productivity

242
00:15:58,770 --> 00:16:02,754
and less toils and downtime. That is one

243
00:16:02,792 --> 00:16:06,690
of the part for reliability for

244
00:16:06,760 --> 00:16:11,794
SRE. One of the pieces could be the

245
00:16:11,832 --> 00:16:15,218
agility sells to us. What happened

246
00:16:15,304 --> 00:16:18,994
if I generate SRE in my company?

247
00:16:19,192 --> 00:16:22,770
Hey, you redo the toil. That is one of the scope.

248
00:16:22,850 --> 00:16:27,030
But the other scope is, hey, how do we can observe,

249
00:16:27,370 --> 00:16:31,142
how do we can take that metrics? How do we can generate that dashboard?

250
00:16:31,206 --> 00:16:34,650
How do we can generate the Roy for our company?

251
00:16:34,720 --> 00:16:38,502
How do we can sell to the managers

252
00:16:38,646 --> 00:16:42,510
that SRE is the right path for us

253
00:16:42,660 --> 00:16:45,854
if we have DevOps? Could be the next step

254
00:16:45,892 --> 00:16:49,882
is SRE. Could be, but you need to generate and identify

255
00:16:49,946 --> 00:16:52,960
exactly with Dora the maturity that you have currently.

256
00:16:54,210 --> 00:16:59,742
Okay. Consequently, you observe a system will significantly

257
00:16:59,806 --> 00:17:02,370
impact its operating and developers cost,

258
00:17:02,520 --> 00:17:06,354
right. You can deliver for

259
00:17:06,392 --> 00:17:10,486
another teams and also the other teams take the most

260
00:17:10,508 --> 00:17:14,694
valuable section for that because you enable the

261
00:17:14,732 --> 00:17:18,540
system SRE observable currently. And also you

262
00:17:20,190 --> 00:17:23,594
forget the current, I don't know, could be your

263
00:17:23,632 --> 00:17:27,210
charts about the hey, I need to take a look for

264
00:17:27,360 --> 00:17:30,714
the information around for my

265
00:17:30,832 --> 00:17:34,400
accounts on production. How do I can take that information?

266
00:17:34,770 --> 00:17:39,226
If you observe, you can enable a couple of dashboard

267
00:17:39,338 --> 00:17:42,990
and you deliver that dashboard. Then the teams can

268
00:17:43,060 --> 00:17:47,234
see what happened for the application without

269
00:17:47,352 --> 00:17:51,362
access to the current infrastructure. That is a nice

270
00:17:51,416 --> 00:17:54,514
part because you enable the capability and

271
00:17:54,552 --> 00:17:58,630
also if you sell that part for security, they open their eyes

272
00:17:58,700 --> 00:18:02,454
and hey, that is the way because they can

273
00:18:02,572 --> 00:18:06,054
observe the application, but they don't need to

274
00:18:06,092 --> 00:18:09,786
access to the infrastructure behind of that. Or could be access to

275
00:18:09,808 --> 00:18:12,954
the code or something like that. Just observe what

276
00:18:12,992 --> 00:18:17,386
happened inside of that. But it's pretty good. When you

277
00:18:17,568 --> 00:18:21,322
sell for your company and sell to your manager,

278
00:18:21,466 --> 00:18:24,718
what is the best part that you can take

279
00:18:24,884 --> 00:18:28,414
this key, this feature key for your team

280
00:18:28,532 --> 00:18:32,910
and how do you reduce the current operational

281
00:18:32,990 --> 00:18:36,866
task behind every needs that the

282
00:18:36,888 --> 00:18:41,554
team has? That is a

283
00:18:41,592 --> 00:18:44,622
big one. X that is related for the NPM,

284
00:18:44,766 --> 00:18:48,758
the application monitoring. So observability is

285
00:18:48,844 --> 00:18:52,326
different. For application monitoring we have at

286
00:18:52,348 --> 00:18:56,114
this part, we talk about the monitor it, but it's

287
00:18:56,162 --> 00:18:59,738
the same. Not exactly. That is when

288
00:18:59,824 --> 00:19:03,898
we open the path and we generate the bifurcation about

289
00:19:03,984 --> 00:19:07,626
what is observability, what is the APM. The APM is the

290
00:19:07,648 --> 00:19:12,158
capability to observe, to SRE,

291
00:19:12,324 --> 00:19:15,966
to obtain, but not for generate exactly

292
00:19:16,148 --> 00:19:19,934
the impact for the organization. Because you just see

293
00:19:19,972 --> 00:19:23,454
what happened inside of my components, but you don't

294
00:19:23,502 --> 00:19:27,618
put anymore for that. But when you start to

295
00:19:27,784 --> 00:19:30,350
move for the next step with observability,

296
00:19:30,510 --> 00:19:33,954
you start to generate alerts and could be take

297
00:19:33,992 --> 00:19:37,202
that alert and generate, could be an automatic

298
00:19:37,266 --> 00:19:41,250
task for solve every alert

299
00:19:41,330 --> 00:19:45,446
or solve a couple of alerts that you have identified that

300
00:19:45,468 --> 00:19:49,050
is the biggest difference here between

301
00:19:49,120 --> 00:19:53,242
observability and APM also exists another ones,

302
00:19:53,376 --> 00:19:56,620
but is the part

303
00:19:59,150 --> 00:20:01,758
for split that part,

304
00:20:01,844 --> 00:20:08,462
right. We talk about for APM observability talking

305
00:20:08,516 --> 00:20:12,240
about the golden triangle. The golden triangle is about

306
00:20:12,710 --> 00:20:16,386
the information behind of my application or

307
00:20:16,408 --> 00:20:20,274
my infrastructure, right? When we talk

308
00:20:20,312 --> 00:20:25,226
about infrastructure we talk about the components behind of the my application database

309
00:20:25,278 --> 00:20:27,110
is queues,

310
00:20:27,690 --> 00:20:28,870
networking,

311
00:20:30,890 --> 00:20:34,438
I don't know, another firewalls or something.

312
00:20:34,524 --> 00:20:38,006
Another networking tools or elements that you need to know

313
00:20:38,108 --> 00:20:42,022
to deploy for support your application. So in what part

314
00:20:42,076 --> 00:20:46,774
we need to obtain the logs and also store

315
00:20:46,812 --> 00:20:50,510
as that locks the logs is exactly

316
00:20:50,660 --> 00:20:54,494
the unstructured data that provides a record of events and

317
00:20:54,532 --> 00:20:58,522
action within a system, right. These logs

318
00:20:58,586 --> 00:21:02,314
are typically text buzzed and are used to configure

319
00:21:02,362 --> 00:21:05,854
information about system behavior errors and donate relevant

320
00:21:05,902 --> 00:21:09,442
events logs sre very

321
00:21:09,496 --> 00:21:13,758
useful for toolshooting issues and identify patterns on trends

322
00:21:13,854 --> 00:21:18,098
over time. How do we can obtain

323
00:21:18,274 --> 00:21:21,846
these logs and how do we can storage that logs for the

324
00:21:21,868 --> 00:21:25,110
next one? The metrics the metrics is exactly

325
00:21:25,260 --> 00:21:29,958
the structured data that provides a quantitative

326
00:21:30,134 --> 00:21:33,050
measure of system performance or behavior.

327
00:21:33,390 --> 00:21:37,274
Metrics are typically numerical values that can

328
00:21:37,312 --> 00:21:41,066
be aggregated over time and SRE used to monitoring

329
00:21:41,178 --> 00:21:44,842
key indicators of system health and performance.

330
00:21:44,986 --> 00:21:48,154
Metrics are very useful for detecting

331
00:21:48,202 --> 00:21:52,366
anomalies, setting performance their jets and making data and

332
00:21:52,468 --> 00:21:56,414
driving decisions. So that is

333
00:21:56,452 --> 00:22:02,018
for metrics the next races exactly.

334
00:22:02,184 --> 00:22:05,906
This is part of the record for the interaction between components

335
00:22:05,938 --> 00:22:09,702
or service within a distributed system.

336
00:22:09,836 --> 00:22:13,110
Traces capture timing and context information for each

337
00:22:13,180 --> 00:22:16,610
interaction, allowing developers and operation to identify

338
00:22:16,770 --> 00:22:19,420
bottlenecks and performance issues.

339
00:22:19,870 --> 00:22:23,670
Traces are useful for understand how requests

340
00:22:23,750 --> 00:22:26,060
flow throughout or a system.

341
00:22:27,950 --> 00:22:31,546
That is very important because when you have the traces

342
00:22:31,658 --> 00:22:35,082
you identify exactly what is the point the request

343
00:22:35,226 --> 00:22:38,910
go to. For example, you have the

344
00:22:39,060 --> 00:22:43,700
access to one login page when down

345
00:22:45,750 --> 00:22:50,046
to the back end, the back end take that greatest

346
00:22:50,238 --> 00:22:53,982
and also generate some operation. What kind of operation

347
00:22:54,126 --> 00:22:57,318
could be storage? The access to

348
00:22:57,404 --> 00:23:00,646
one user could be read the database for

349
00:23:00,668 --> 00:23:04,722
obtain information from the user stable or identify

350
00:23:04,866 --> 00:23:09,126
if the users could be success to login obtain

351
00:23:09,158 --> 00:23:12,694
information around the users. How do you can identify

352
00:23:12,742 --> 00:23:16,620
that you enable the traces and also

353
00:23:17,390 --> 00:23:21,850
how do you can enable the traces? That is the biggest challenge

354
00:23:21,930 --> 00:23:25,710
here because you need to instrument your application. That is

355
00:23:25,860 --> 00:23:29,678
a key pair for observability. How do you can

356
00:23:29,844 --> 00:23:33,460
enable this capability for your application? How do you can

357
00:23:33,990 --> 00:23:38,194
enable this bigger scope for the application?

358
00:23:38,312 --> 00:23:41,954
So that is very nice path for

359
00:23:41,992 --> 00:23:45,714
discuss with your dev team and also for architecture

360
00:23:45,762 --> 00:23:49,350
because you need to modify Colby your framework

361
00:23:49,850 --> 00:23:53,394
for the companies or Colby generate

362
00:23:53,442 --> 00:23:57,946
a new framework for that. And also you use a

363
00:23:57,968 --> 00:24:01,194
pattern for architectural design for that

364
00:24:01,232 --> 00:24:05,338
part. That is very nice part because you

365
00:24:05,504 --> 00:24:09,322
define with another teams how to the

366
00:24:09,376 --> 00:24:14,870
system will be observed. How do you can expose

367
00:24:14,950 --> 00:24:19,514
that metrics and how you can take that metrics for storage.

368
00:24:19,642 --> 00:24:25,374
That is very awesome and very nice path

369
00:24:25,502 --> 00:24:29,202
for you. So why

370
00:24:29,256 --> 00:24:33,106
observability? That is the

371
00:24:33,128 --> 00:24:37,122
main part of this session because we

372
00:24:37,176 --> 00:24:41,062
talk about observability. Hey, observability seems pretty good

373
00:24:41,196 --> 00:24:45,302
but really I need observability. Really I need

374
00:24:45,356 --> 00:24:49,126
to take advantage for observability. What happened? I don't have

375
00:24:49,148 --> 00:24:53,002
observability in JR, my company. I have

376
00:24:53,056 --> 00:24:56,666
any change for that. Really not. But you have

377
00:24:56,768 --> 00:25:00,654
a lot of new features for enable for your teams and also

378
00:25:00,692 --> 00:25:04,590
for you when you enable observability. Because for example

379
00:25:04,740 --> 00:25:08,574
that is a single application that you could be

380
00:25:08,612 --> 00:25:12,320
have in your company that you have here the customer,

381
00:25:12,630 --> 00:25:16,594
the customer comes to your application using your

382
00:25:16,632 --> 00:25:19,986
cloud provider. The cloud provider you have could be generated here a

383
00:25:20,008 --> 00:25:24,062
firewall for identify if the request

384
00:25:24,126 --> 00:25:27,750
is legal or not and you check

385
00:25:27,820 --> 00:25:31,366
and identify here there's a couple of load balancer for

386
00:25:31,468 --> 00:25:35,062
sends the greatest for the correct

387
00:25:35,196 --> 00:25:38,970
application. And also the application here takes

388
00:25:39,040 --> 00:25:42,874
that request and generates the logic behind of that request and

389
00:25:42,912 --> 00:25:46,714
could be consumed the database or could be consumed some

390
00:25:46,832 --> 00:25:49,610
requests for your storage.

391
00:25:49,970 --> 00:25:53,230
But what happened if this

392
00:25:53,300 --> 00:25:57,086
start to that? You move for the next step.

393
00:25:57,188 --> 00:26:01,214
You start to split your application and you split your

394
00:26:01,252 --> 00:26:04,894
business capability and you expand

395
00:26:04,942 --> 00:26:08,722
your business. What happened here? You have the same application

396
00:26:08,856 --> 00:26:12,930
or could be this part is just

397
00:26:13,000 --> 00:26:16,710
a little part of the application and

398
00:26:16,780 --> 00:26:20,374
you have here one challenge. Could be you

399
00:26:20,572 --> 00:26:25,046
made that but what happened if you

400
00:26:25,068 --> 00:26:28,502
start to doing that? What happened with this speedy

401
00:26:28,566 --> 00:26:32,282
can that sre men start to

402
00:26:32,336 --> 00:26:34,842
identify, hey, the firewall is wrong.

403
00:26:34,896 --> 00:26:38,394
Configurated, I don't know, could be the database is

404
00:26:38,432 --> 00:26:41,550
down or replica is down. What happened

405
00:26:41,620 --> 00:26:45,022
if my application is down? How do I identify that?

406
00:26:45,076 --> 00:26:48,654
Or could be the load balancer or could be my

407
00:26:48,852 --> 00:26:52,798
region was down. How do you can identify that?

408
00:26:52,884 --> 00:26:56,670
Or could be me. My archive has

409
00:26:56,740 --> 00:27:00,418
downed also how do you can move for that? How do

410
00:27:00,424 --> 00:27:04,318
you identify so you need to enable observability

411
00:27:04,414 --> 00:27:07,974
because how do you can see that? How do you can take

412
00:27:08,092 --> 00:27:11,938
action behind of the application or the infrastructure

413
00:27:12,034 --> 00:27:15,414
or the components behind and support the application?

414
00:27:15,532 --> 00:27:19,190
Because normally when the request

415
00:27:19,270 --> 00:27:22,826
fails you take a look. Hey, but the

416
00:27:22,928 --> 00:27:27,002
request was pretty awesome to the app. The problem

417
00:27:27,056 --> 00:27:30,794
is the app. Then you move the request for

418
00:27:30,832 --> 00:27:34,534
the developer team. The developer team. Hey, I put idle

419
00:27:34,582 --> 00:27:38,314
local and locally worked for me that it's normally

420
00:27:38,442 --> 00:27:42,014
or could be you can reply the same request in

421
00:27:42,052 --> 00:27:44,530
development environment or QA environment.

422
00:27:45,270 --> 00:27:48,978
In that environment works well. But how do you can see

423
00:27:49,064 --> 00:27:52,622
could be the archive or database

424
00:27:52,686 --> 00:27:56,040
or load balancer or firewall or cloud provider is wrong.

425
00:27:56,410 --> 00:27:59,974
How do you identify that? That is exactly the

426
00:28:00,012 --> 00:28:03,750
question for that. If the application works

427
00:28:03,820 --> 00:28:07,510
well of my components works well for the application or my

428
00:28:07,580 --> 00:28:11,386
infrastructure works well. Hey how do I can take a look for

429
00:28:11,408 --> 00:28:15,820
that? I need to take this very important

430
00:28:16,430 --> 00:28:19,626
observed system for my company, right?

431
00:28:19,808 --> 00:28:23,222
So behind of that could be access and other components like

432
00:28:23,296 --> 00:28:27,818
DNS or could be generate your security compliance

433
00:28:27,914 --> 00:28:32,126
or you generate a new fixes or I

434
00:28:32,148 --> 00:28:36,420
don't know, every day you need to cover new feature from

435
00:28:36,870 --> 00:28:39,300
the different users not for the customer,

436
00:28:39,990 --> 00:28:44,034
just for different users. Like a security could be

437
00:28:44,072 --> 00:28:48,200
for a compliance for the loyal from your company

438
00:28:49,210 --> 00:28:52,854
something else. Yes. Then how do you

439
00:28:52,892 --> 00:28:56,710
can identify exactly in what point the

440
00:28:56,780 --> 00:29:00,394
application was wrong. Then you

441
00:29:00,432 --> 00:29:04,870
can observe that that system that you identify. Hey yesterday

442
00:29:04,950 --> 00:29:08,618
we made some little changes about

443
00:29:08,704 --> 00:29:12,570
for new loyal support that request

444
00:29:13,010 --> 00:29:16,634
the company. So when we deploy

445
00:29:16,682 --> 00:29:20,320
that the company for firewall could be wrong

446
00:29:20,850 --> 00:29:24,210
will be the security team generate

447
00:29:24,870 --> 00:29:28,500
new feature also because they need to also

448
00:29:29,190 --> 00:29:32,866
update for the firewall or the security group of the

449
00:29:32,888 --> 00:29:35,990
rule behind of my load balancer.

450
00:29:36,730 --> 00:29:40,166
Then the application start fails. So how do

451
00:29:40,188 --> 00:29:43,910
you can see that again white observability

452
00:29:44,810 --> 00:29:49,050
another part for observability is alerting.

453
00:29:50,030 --> 00:29:53,754
It's not when we observe, it's just hey I

454
00:29:53,792 --> 00:29:58,042
can see but when you enable observability you

455
00:29:58,096 --> 00:30:01,902
observe and alerting for that. When you start

456
00:30:01,956 --> 00:30:05,978
alerting you start to move more in the observability

457
00:30:06,074 --> 00:30:09,534
ways, right? That is the objective for

458
00:30:09,572 --> 00:30:12,978
observability. Another is hey, we need to take a

459
00:30:12,984 --> 00:30:17,134
look for dashboard, we need to automate some remediation

460
00:30:17,182 --> 00:30:20,740
for x case or something like that.

461
00:30:22,150 --> 00:30:25,982
Could be you move for observability

462
00:30:26,046 --> 00:30:30,066
as code. There is a new moves for our

463
00:30:30,088 --> 00:30:34,518
companies when you could be but to instrument application

464
00:30:34,684 --> 00:30:38,754
or could be you have and generate cluster for kubernetes

465
00:30:38,802 --> 00:30:43,290
and Kubernetes had an operators inside of that and take information for

466
00:30:43,360 --> 00:30:46,442
the applications and generate that.

467
00:30:46,496 --> 00:30:50,286
But instrumentation for you that is one way for

468
00:30:50,308 --> 00:30:51,120
doing that.

469
00:30:53,010 --> 00:30:56,558
So bye bye little

470
00:30:56,644 --> 00:31:01,146
speedy and Star wrote about the CNCF

471
00:31:01,258 --> 00:31:04,734
landscape that is very huge tools

472
00:31:04,782 --> 00:31:08,354
about the observability and monitoring. Here we have

473
00:31:08,552 --> 00:31:12,946
also every tool that every

474
00:31:13,048 --> 00:31:16,642
cloud provider has enabled for day. So we have

475
00:31:16,696 --> 00:31:20,440
the Amazon Cloudwatch Appdynamics application

476
00:31:20,970 --> 00:31:22,600
availability service,

477
00:31:24,010 --> 00:31:27,702
application manager, Appnata app, optics app,

478
00:31:27,756 --> 00:31:31,046
signal alternative azure monitoring bits.

479
00:31:31,238 --> 00:31:34,538
You have here a lot of tools for the

480
00:31:34,624 --> 00:31:38,090
community and how to the biggest company

481
00:31:38,240 --> 00:31:42,174
use that for their services. In another

482
00:31:42,292 --> 00:31:45,966
how do you can use for logging you can use

483
00:31:46,068 --> 00:31:50,298
gray log, home logi logly fluent Grafana,

484
00:31:50,314 --> 00:31:54,194
lockey or elastic or lockstash. You can

485
00:31:54,232 --> 00:31:57,346
enable depends for your expertise or could be you

486
00:31:57,368 --> 00:32:01,806
need to take a look more in depth about this landscape for define

487
00:32:01,918 --> 00:32:04,740
the current stack for your company. Right.

488
00:32:06,650 --> 00:32:10,598
How to move for tracing. How do

489
00:32:10,604 --> 00:32:14,600
we can enable tracing? Hey there is a very huge

490
00:32:16,170 --> 00:32:20,006
community behind of this components that is open telemetry.

491
00:32:20,198 --> 00:32:24,106
The community behind of that is the

492
00:32:24,128 --> 00:32:27,862
second community bigger behind of Kubernetes

493
00:32:27,926 --> 00:32:32,174
Kubernetes spheres. Second is open telemetry. I recommend to

494
00:32:32,212 --> 00:32:36,286
you take a look for this community and also they

495
00:32:36,468 --> 00:32:40,318
are very active, very active community for

496
00:32:40,404 --> 00:32:43,634
generate every day some new feature for

497
00:32:43,672 --> 00:32:48,190
you and also supported a lot of languages

498
00:32:48,270 --> 00:32:51,140
for you and components behind up.

499
00:32:52,630 --> 00:32:56,246
Okay another part is for observability and

500
00:32:56,348 --> 00:33:00,246
talking about chaos. Yeah chaos is our

501
00:33:00,268 --> 00:33:03,702
part for observability. Then we need to take a look for that.

502
00:33:03,836 --> 00:33:05,640
But it's pretty awesome.

503
00:33:07,390 --> 00:33:11,334
You here take a look for the landscape for CNCF,

504
00:33:11,462 --> 00:33:15,594
that is what happened here. And also information

505
00:33:15,712 --> 00:33:19,754
about the continuous optimization behind can observability take

506
00:33:19,792 --> 00:33:22,926
a look for hey how do I configure that? How do

507
00:33:22,948 --> 00:33:26,218
I can take that log? How do I can take that trace?

508
00:33:26,394 --> 00:33:29,982
You enable another capabilities when you

509
00:33:30,036 --> 00:33:33,940
start to generate a journey for observability. You also

510
00:33:34,390 --> 00:33:37,906
enable the capability for the customization because you

511
00:33:37,928 --> 00:33:41,666
see hey I take could be a one

512
00:33:41,848 --> 00:33:46,726
instance that have overloaded for

513
00:33:46,748 --> 00:33:50,454
the application that is normally or not

514
00:33:50,652 --> 00:33:54,694
or could be identify the pod that you

515
00:33:54,732 --> 00:33:58,954
deploy in kubernetes cluster are

516
00:33:59,152 --> 00:34:03,530
overloaded tools or could be you generate can HPA

517
00:34:04,030 --> 00:34:07,690
definition for that or could be you identify the process

518
00:34:07,760 --> 00:34:12,346
that they execute. Could be moved

519
00:34:12,378 --> 00:34:16,240
for another node. So that is another

520
00:34:16,850 --> 00:34:20,702
capability that you enable when you start the journey for

521
00:34:20,756 --> 00:34:24,626
observability. But then you need

522
00:34:24,648 --> 00:34:27,906
to take a look for your company.

523
00:34:28,008 --> 00:34:31,634
You need to take a look exactly how do you move for

524
00:34:31,672 --> 00:34:35,758
that part. But first you start to define what is observability,

525
00:34:35,854 --> 00:34:40,120
how to decompany your subservality inside of that.

526
00:34:40,730 --> 00:34:45,014
Right. So we

527
00:34:45,052 --> 00:34:48,646
move for the demo session, that is the repository.

528
00:34:48,838 --> 00:34:53,162
If we click here we move so fast for the

529
00:34:53,216 --> 00:34:55,500
repository that is here.

530
00:34:56,350 --> 00:34:59,980
And also you can see here the information about

531
00:35:00,510 --> 00:35:03,200
how you can execute this demo.

532
00:35:03,810 --> 00:35:08,318
For that part we enable the

533
00:35:08,404 --> 00:35:12,062
capabilities for Docker. You need to install

534
00:35:12,116 --> 00:35:15,694
Docker first. That is this disclaimer.

535
00:35:15,742 --> 00:35:19,166
Don't ruin this in production because it's

536
00:35:19,358 --> 00:35:23,054
not for production environment just for locally it's for your POC

537
00:35:23,102 --> 00:35:26,674
and identify how you can enable observability for the Docker

538
00:35:26,722 --> 00:35:30,566
stages. Right. So we deploy first

539
00:35:30,668 --> 00:35:34,950
the C advisor second Prometheus

540
00:35:35,370 --> 00:35:37,720
and theoregraphana. Right?

541
00:35:38,270 --> 00:35:41,562
So with that in mind I but here

542
00:35:41,696 --> 00:35:45,660
some reference that I take for doing that and

543
00:35:46,110 --> 00:35:49,930
reduce this readme file for you and also

544
00:35:50,000 --> 00:35:53,614
the listen here is Apache listens for you and your time

545
00:35:53,732 --> 00:35:57,034
and your team. You can put and drop

546
00:35:57,082 --> 00:36:00,494
this for your code and I don't care.

547
00:36:00,612 --> 00:36:04,382
That is part of exactly what happened

548
00:36:04,436 --> 00:36:07,842
when you work with the community, right?

549
00:36:07,976 --> 00:36:11,666
So I cloned the repository here. You can also

550
00:36:11,848 --> 00:36:15,254
download the repository with let me check

551
00:36:15,292 --> 00:36:19,190
here. When you see git remote,

552
00:36:21,930 --> 00:36:25,986
you see here that is the current information about the repository

553
00:36:26,098 --> 00:36:29,622
that I cloned it and also we have their files

554
00:36:29,686 --> 00:36:33,786
here and I have one extra

555
00:36:33,888 --> 00:36:37,238
folder because in the readme file

556
00:36:37,414 --> 00:36:42,240
we talk about them exactly

557
00:36:42,850 --> 00:36:47,514
for this part when you try to optional

558
00:36:47,562 --> 00:36:50,650
point that is for workloads for your Docker environments.

559
00:36:50,730 --> 00:36:55,202
I don't know before for doing that more

560
00:36:55,256 --> 00:36:56,420
easier for you.

561
00:36:58,790 --> 00:37:02,066
And also I drop some information here

562
00:37:02,088 --> 00:37:05,454
in the git ignore for don't put this folder

563
00:37:05,502 --> 00:37:09,138
because it's just for using when you download the

564
00:37:09,144 --> 00:37:12,230
folder and not for generate garbage for the repository.

565
00:37:13,050 --> 00:37:16,790
So with that in mind we start to execute the

566
00:37:16,940 --> 00:37:21,110
instruction inside of the repository.

567
00:37:21,270 --> 00:37:24,746
The first is install C advisor. So let

568
00:37:24,768 --> 00:37:30,326
me check here Docker ps docker

569
00:37:30,518 --> 00:37:33,966
ps ip we have here C

570
00:37:33,988 --> 00:37:38,000
advisor before Grafana Prometheus let me remove that

571
00:37:38,450 --> 00:37:43,230
Docker advisor

572
00:37:43,730 --> 00:37:48,340
Prometheus and Grafana right?

573
00:37:49,270 --> 00:37:52,978
That is the optional point that

574
00:37:53,144 --> 00:37:57,810
matters about that dokierps do

575
00:37:57,960 --> 00:38:01,846
Krps here we

576
00:38:01,868 --> 00:38:05,734
go, we clean our

577
00:38:05,772 --> 00:38:08,810
environment. So the first part is install Docker,

578
00:38:11,630 --> 00:38:15,066
sorry install C advisor. What is C

579
00:38:15,088 --> 00:38:18,986
advisor? C advisor is called be

580
00:38:19,008 --> 00:38:25,566
a proxy for obtain metrics from the

581
00:38:25,588 --> 00:38:29,438
current Docker installation and sends to you

582
00:38:29,524 --> 00:38:33,066
and export that metrics, right? When we move

583
00:38:33,108 --> 00:38:36,974
for the presentation here we have the local host

584
00:38:37,022 --> 00:38:40,850
access here so we can copy and paste for the new tab.

585
00:38:41,270 --> 00:38:45,558
Here we go. We have currently metrics that the

586
00:38:45,644 --> 00:38:49,698
C advisor taking from the current deployed from Docker

587
00:38:49,794 --> 00:38:53,382
environment, right? So the next

588
00:38:53,436 --> 00:38:59,114
one that is the GUI for

589
00:38:59,312 --> 00:39:02,246
C advisor and this is the current metrics.

590
00:39:02,358 --> 00:39:07,610
That is a lot of metrics that you can see here because take

591
00:39:07,680 --> 00:39:11,006
these metrics for Docker and move and

592
00:39:11,028 --> 00:39:14,846
expose for you for you can use for your

593
00:39:15,028 --> 00:39:19,002
preference, right? For that preference we enable

594
00:39:19,066 --> 00:39:22,566
Prometheus. So we copy the Prometheus

595
00:39:22,618 --> 00:39:26,798
Jaml file. But what contains Prometheus Jamil file?

596
00:39:26,894 --> 00:39:30,766
Let me see here, that is the Prometheus Jaml

597
00:39:30,798 --> 00:39:34,450
file for that part you need to check what is exactly your

598
00:39:34,520 --> 00:39:37,842
IP internal address for that deploy.

599
00:39:37,986 --> 00:39:41,590
For my case I doing that and

600
00:39:41,660 --> 00:39:44,950
also we can start for deploy this part.

601
00:39:45,020 --> 00:39:50,220
So we move the Prometheus part here

602
00:39:50,990 --> 00:39:55,258
CP prometheus conf tmp and

603
00:39:55,344 --> 00:39:58,970
also we can start to run the Docker environment.

604
00:39:59,630 --> 00:40:03,786
So let me pass the command

605
00:40:03,818 --> 00:40:07,760
here. So we enable Prometheus and enable the per

606
00:40:08,210 --> 00:40:12,438
90 and mount

607
00:40:12,554 --> 00:40:16,402
the Prometheus conf for

608
00:40:16,456 --> 00:40:20,206
the container and drop to etc. Prometheus.

609
00:40:20,238 --> 00:40:24,290
Prometheus Java Yep. And also the image that we use

610
00:40:24,360 --> 00:40:28,518
is from Prometheus. Here we go then

611
00:40:28,684 --> 00:40:33,910
Docker. Ps we have currently two services

612
00:40:34,060 --> 00:40:37,534
in Docker. What is c advisor?

613
00:40:37,602 --> 00:40:41,402
That is read the metrics about this

614
00:40:41,456 --> 00:40:44,810
metrics will be docker stats.

615
00:40:47,630 --> 00:40:52,862
Docker stats and

616
00:40:52,916 --> 00:40:56,960
that is the current metrics behind of that. When we up

617
00:40:57,330 --> 00:41:01,120
the optional point we see more metrics here.

618
00:41:02,130 --> 00:41:06,100
Okay. The next point is hey we need to take access to

619
00:41:07,590 --> 00:41:12,146
what kind of metrics we have and cover that for

620
00:41:12,168 --> 00:41:13,780
the part of Prometheus. Right.

621
00:41:15,930 --> 00:41:20,402
We see here exactly the status for the components,

622
00:41:20,546 --> 00:41:24,326
the configuration. I have here the information

623
00:41:24,428 --> 00:41:28,074
about the ScEp configs for

624
00:41:28,112 --> 00:41:31,818
metrics exactly for the current metrics and

625
00:41:31,904 --> 00:41:35,402
also the metrics for C advisor for my

626
00:41:35,456 --> 00:41:39,546
internal ip address. Right. When you see exactly

627
00:41:39,648 --> 00:41:42,110
the current metrics here graph,

628
00:41:42,930 --> 00:41:46,714
no alerts, no status runtimes

629
00:41:46,762 --> 00:41:50,202
to configuration common targets.

630
00:41:50,346 --> 00:41:54,422
We have two endpoints.

631
00:41:54,506 --> 00:41:57,874
That is for c advisor and this is the endpoint and

632
00:41:57,912 --> 00:42:02,222
the endpoint for Prometheus that call it metrics currently is actually for Prometheus.

633
00:42:02,366 --> 00:42:06,530
So here take the name for the current docker

634
00:42:07,050 --> 00:42:11,400
name localhost here

635
00:42:15,930 --> 00:42:19,770
localhost. You see another

636
00:42:19,840 --> 00:42:24,330
metric here. That is if you follow

637
00:42:24,400 --> 00:42:28,022
the instructions here you need just copy and paste.

638
00:42:28,166 --> 00:42:31,260
That is more easily way for that right.

639
00:42:31,630 --> 00:42:36,126
That is for target. When you saw the target you

640
00:42:36,148 --> 00:42:38,400
can check exactly the same way.

641
00:42:38,850 --> 00:42:42,590
So we need now deploy grafana

642
00:42:43,090 --> 00:42:46,562
for see what happened for Prometheus. Because hey that is

643
00:42:46,616 --> 00:42:49,970
very awesome. The metrics it's a text basis but

644
00:42:50,120 --> 00:42:54,238
sincerely I don't have time for read that but it's very normal.

645
00:42:54,414 --> 00:42:58,038
We can copy this move for the demo

646
00:42:58,124 --> 00:43:01,686
session here. Here we

647
00:43:01,708 --> 00:43:05,014
go. Do care. Ps we

648
00:43:05,052 --> 00:43:09,260
have currently Grafana in the port 3000

649
00:43:11,070 --> 00:43:14,794
move for the presentation part and also

650
00:43:14,912 --> 00:43:18,460
copy okay

651
00:43:20,290 --> 00:43:24,334
and open Grafana here you need

652
00:43:24,372 --> 00:43:28,602
to access for your grafan account. That is admin

653
00:43:28,746 --> 00:43:32,074
admin. That is all our default

654
00:43:32,122 --> 00:43:39,314
passwords for us and

655
00:43:39,432 --> 00:43:42,866
admin admin. Here we

656
00:43:42,888 --> 00:43:46,274
go. We have access currently for Grafana.

657
00:43:46,402 --> 00:43:50,280
That is pretty awesome because you have hey that is

658
00:43:50,970 --> 00:43:54,518
very nice ecosystem for us.

659
00:43:54,684 --> 00:43:58,778
And you see here

660
00:43:58,864 --> 00:44:02,874
exactly the grafana. Let me move here at this part

661
00:44:03,072 --> 00:44:06,442
because the presentation doesn't work

662
00:44:06,496 --> 00:44:10,070
well. Okay. That is the first part

663
00:44:10,240 --> 00:44:13,950
when we move for the repository we

664
00:44:14,020 --> 00:44:17,642
see here. Hey, we need to generate

665
00:44:17,706 --> 00:44:21,770
a couple of configurations inside of Grafana.

666
00:44:21,850 --> 00:44:25,362
So could be that part is pretty

667
00:44:25,416 --> 00:44:29,454
wrong here. But you can move for the raw file readme

668
00:44:29,502 --> 00:44:34,210
file and move for the go to in row mode

669
00:44:34,550 --> 00:44:39,960
read most readable for you right

670
00:44:40,410 --> 00:44:44,178
here. So down here and we enable

671
00:44:44,354 --> 00:44:48,326
first go to administration data source, add a new data source,

672
00:44:48,438 --> 00:44:52,342
select Prometheus in URL drop HTTP

673
00:44:52,406 --> 00:44:55,882
uip 90 90 navigate to bottom,

674
00:44:56,016 --> 00:44:59,226
save and text and done. Right,

675
00:44:59,408 --> 00:45:02,714
let me drop here this and move for

676
00:45:02,752 --> 00:45:06,654
that. So how do we come up for that here the

677
00:45:06,772 --> 00:45:08,960
three lines on the top.

678
00:45:09,490 --> 00:45:12,682
Okay, three lines on the top.

679
00:45:12,756 --> 00:45:15,620
That part move for them.

680
00:45:16,950 --> 00:45:20,754
Administration here and

681
00:45:20,792 --> 00:45:24,642
data source. Right. When you start here you can

682
00:45:24,696 --> 00:45:28,550
add here a data source and select Prometheus.

683
00:45:28,890 --> 00:45:32,646
That is all the configurations. Then you need to put

684
00:45:32,748 --> 00:45:36,662
here HTTP. HTTP two

685
00:45:36,716 --> 00:45:37,320
points.

686
00:45:41,070 --> 00:45:42,410
HTTP,

687
00:45:46,750 --> 00:45:50,182
that is my ip that is going to take

688
00:45:50,256 --> 00:45:55,694
the information for Prometheus will

689
00:45:55,732 --> 00:45:59,614
be copy and paste here and

690
00:45:59,652 --> 00:46:05,454
just change the port. Right. The port is that

691
00:46:05,492 --> 00:46:09,054
we saw in the current information

692
00:46:09,172 --> 00:46:11,658
here your port 1990.

693
00:46:11,764 --> 00:46:14,990
Okay, I can navigate to the bottom,

694
00:46:15,080 --> 00:46:19,222
save and test. That is the green. That is

695
00:46:19,356 --> 00:46:23,266
awesome for us because green seem

696
00:46:23,298 --> 00:46:26,758
for us everything going well. Okay.

697
00:46:26,844 --> 00:46:30,470
Return to the home because the next step is enable

698
00:46:30,550 --> 00:46:34,650
exactly the new dashboard

699
00:46:35,630 --> 00:46:39,642
that we need to take a look for for day. So let me move it

700
00:46:39,696 --> 00:46:43,440
here very quick. And also

701
00:46:44,610 --> 00:46:47,726
we execute the

702
00:46:47,748 --> 00:46:51,694
information about here. That is the reference. But we deploy these

703
00:46:51,812 --> 00:46:55,426
monitors for our system. So for that

704
00:46:55,528 --> 00:46:58,930
you can access for this HTTP

705
00:46:59,270 --> 00:47:02,898
page and also

706
00:47:03,064 --> 00:47:07,826
appear here what is a little tom for

707
00:47:07,848 --> 00:47:11,622
the dashboard you copy the it to Kiri bar and also move

708
00:47:11,676 --> 00:47:14,882
here. How do you can import that dashboard?

709
00:47:14,946 --> 00:47:19,626
Move for the three lines, move for the dashboard here

710
00:47:19,808 --> 00:47:23,402
in the new section, let me move

711
00:47:23,456 --> 00:47:25,100
here this pretty quick.

712
00:47:27,790 --> 00:47:31,214
And in the new part you move

713
00:47:31,252 --> 00:47:34,606
for the import paste here

714
00:47:34,708 --> 00:47:38,170
exactly the id that you copy in the previous

715
00:47:38,250 --> 00:47:40,670
page. Then load.

716
00:47:41,010 --> 00:47:44,578
That's the page that load you select exactly

717
00:47:44,664 --> 00:47:48,226
your data source, that is Prometheus. And the name could be you

718
00:47:48,248 --> 00:47:52,260
can change or could be you generate a new folder for that

719
00:47:52,790 --> 00:47:57,026
and import and voila. That is information for

720
00:47:57,128 --> 00:48:00,622
the current metrics inside of Docker. That is

721
00:48:00,696 --> 00:48:04,582
pretty awesome because you can see here exactly what happened

722
00:48:04,636 --> 00:48:08,778
with your docker. But here it is another

723
00:48:08,864 --> 00:48:13,402
information for docker monitoring for using

724
00:48:13,456 --> 00:48:16,780
Grafano two so you can copy that

725
00:48:18,030 --> 00:48:22,538
and the same way three dashboards

726
00:48:22,634 --> 00:48:25,360
save and save changes,

727
00:48:26,370 --> 00:48:30,522
new import paste

728
00:48:30,586 --> 00:48:34,174
the information for the another part I want

729
00:48:34,212 --> 00:48:36,720
to change Prometheus and import.

730
00:48:37,730 --> 00:48:41,874
Voila. This is another dashboard that you can see the

731
00:48:41,912 --> 00:48:45,906
same information with another view. That is

732
00:48:46,008 --> 00:48:51,178
pretty awesome because we enable the capabilities for observe

733
00:48:51,294 --> 00:48:54,982
our system, right? That is the first part. But with

734
00:48:55,036 --> 00:48:58,442
Grafana and also with Prometheus you can move

735
00:48:58,496 --> 00:49:01,370
here very quick and generate the alerting.

736
00:49:02,270 --> 00:49:06,074
You can drop here. Your alerts you can drop here

737
00:49:06,192 --> 00:49:09,754
the rules that you made more sense for you and your

738
00:49:09,792 --> 00:49:13,342
company. How to the behaviors you

739
00:49:13,396 --> 00:49:16,974
identify exactly for the current docker or

740
00:49:17,012 --> 00:49:21,050
your application or your cluster of kubernetes or your infrastructure.

741
00:49:21,210 --> 00:49:24,882
You have the possibility to enable here

742
00:49:25,016 --> 00:49:29,202
all alerting that you have. Also you can drop every rule here

743
00:49:29,256 --> 00:49:33,058
in the contact points. You have a lot of

744
00:49:33,224 --> 00:49:37,110
ways to deliver that information for

745
00:49:37,260 --> 00:49:41,080
using alert manager or communication with another

746
00:49:42,090 --> 00:49:45,446
ticket manager or using discord or email.

747
00:49:45,628 --> 00:49:49,902
Or could we put that for Kafka or pageduty

748
00:49:50,066 --> 00:49:54,374
or send an alert for slack for your team or generate alert

749
00:49:54,422 --> 00:49:58,586
for telegram or something like that. You have

750
00:49:58,608 --> 00:50:02,526
the capability for connect Grafana with all

751
00:50:02,708 --> 00:50:06,266
scope for your current stack

752
00:50:06,298 --> 00:50:09,534
for your IT infrastructure. So that

753
00:50:09,572 --> 00:50:13,710
is pretty awesome the webhook because with that you have the capability

754
00:50:13,790 --> 00:50:17,710
to send to another don't

755
00:50:17,790 --> 00:50:21,794
support exactly a tiered provider out of the

756
00:50:21,832 --> 00:50:25,698
Grafana and you can send the information for

757
00:50:25,784 --> 00:50:29,510
the alert and what happened with that alert and generated there

758
00:50:29,580 --> 00:50:33,334
could be a custom payload for that. And since just

759
00:50:33,372 --> 00:50:36,726
the information related and more valuable for you and

760
00:50:36,748 --> 00:50:40,074
the alert will be more great for you,

761
00:50:40,192 --> 00:50:43,498
right? So we can move here

762
00:50:43,584 --> 00:50:47,098
very quick. That is the demo.

763
00:50:47,264 --> 00:50:51,326
Please tell me the comments or

764
00:50:51,508 --> 00:50:55,486
what appear for you this little demo

765
00:50:55,668 --> 00:50:58,842
appear for the zone for observability. Observability is a hidden

766
00:50:58,906 --> 00:51:03,246
muscle for SiD success. We need to enable observability

767
00:51:03,358 --> 00:51:07,426
for our companies. How to the observability made

768
00:51:07,528 --> 00:51:11,698
more bigger our teams. How do we can enable another

769
00:51:11,864 --> 00:51:15,586
stuff for the company? And also what is the

770
00:51:15,608 --> 00:51:18,938
view of the SRE Andora observability? What wide

771
00:51:18,974 --> 00:51:22,854
triangle alerting and remediation that we're talking about and

772
00:51:22,892 --> 00:51:26,582
a little demo some practice for

773
00:51:26,636 --> 00:51:30,218
observability. That is another

774
00:51:30,304 --> 00:51:34,394
part that is effective. Observability requires focus on business value. That is

775
00:51:34,432 --> 00:51:38,330
the objective for that and alignment with authorization and goals and

776
00:51:38,400 --> 00:51:42,462
acute for continuous improvement. How do you can fix

777
00:51:42,516 --> 00:51:46,062
and how do the objective for observability is the same for the

778
00:51:46,116 --> 00:51:50,158
company? Not just hey, I have one

779
00:51:50,324 --> 00:51:53,934
way to generate observability stack but the

780
00:51:53,972 --> 00:51:56,720
company doesn't need observability. I don't know.

781
00:51:58,450 --> 00:52:01,538
You need to take this morning deal with your company.

782
00:52:01,704 --> 00:52:04,942
Another is the best practice. Include investing in the right

783
00:52:05,016 --> 00:52:09,202
tools, prioritizing data quality and embracing collaborative

784
00:52:09,266 --> 00:52:13,046
and data drive approach. That is another that you

785
00:52:13,068 --> 00:52:17,046
can enable for the observability and thank you.

786
00:52:17,148 --> 00:52:19,890
That is all for this session.

787
00:52:20,050 --> 00:52:24,198
Please feel free for drop in the comments or contact me

788
00:52:24,284 --> 00:52:27,522
here with jtan 24 for GitHub

789
00:52:27,666 --> 00:52:31,930
or YouTube or or Twitter.

790
00:52:32,010 --> 00:52:35,898
Or you can find me like Johnny Pong in LinkedIn.

791
00:52:36,074 --> 00:52:39,920
Please feel free to contact me. I have

792
00:52:40,450 --> 00:52:44,254
sometimes for response to you so thank you for your time.

793
00:52:44,372 --> 00:52:48,126
I hope you have enjoyed this session. Thank you

794
00:52:48,228 --> 00:52:49,360
and see you.

