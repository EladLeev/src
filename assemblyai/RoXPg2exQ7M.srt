1
00:00:23,850 --> 00:00:28,306
Good morning, good evening. Good afternoon, everyone. Who's tuning into this chaos engineering

2
00:00:28,338 --> 00:00:32,470
panel at Con 42, Chaos Engineering. I am Prithviraj,

3
00:00:32,810 --> 00:00:36,262
the host for this panel. I'm a CNCF ambassador and

4
00:00:36,316 --> 00:00:39,794
working as a technical community manager at Harness, and I've been leading

5
00:00:39,842 --> 00:00:43,318
the community for the Litmus Chaos CNCF project for

6
00:00:43,324 --> 00:00:47,526
the last four years. Now, for the esteemed panel, I have with

7
00:00:47,548 --> 00:00:50,560
me four amazing folks from the Chaos engineering community.

8
00:00:51,410 --> 00:00:54,814
Some of them have been part of the community since its inception and

9
00:00:54,852 --> 00:00:58,046
then have been leading the community, the open source side

10
00:00:58,068 --> 00:01:01,758
of things for long now. And I'm pleased to welcome

11
00:01:01,924 --> 00:01:05,042
with us Sylvan from the Chaos toolkit community,

12
00:01:05,176 --> 00:01:08,958
Miko from the powerful seal community, Karthik from the Redmiss

13
00:01:08,974 --> 00:01:12,254
Chaos community, and Anurag from the Chaos mesh

14
00:01:12,302 --> 00:01:15,894
community. And without any further ado, I would

15
00:01:15,932 --> 00:01:19,734
allow each of them to introduce themselves one by one.

16
00:01:19,852 --> 00:01:21,510
Let's start with Anurag.

17
00:01:22,890 --> 00:01:26,754
Sure. Hello, everyone. Good morning, good afternoon.

18
00:01:26,802 --> 00:01:29,834
Good evening, depending upon where you are. First of all,

19
00:01:29,872 --> 00:01:34,134
I want to thank Prithvi for inviting me for this session.

20
00:01:34,262 --> 00:01:37,930
I'm Anrak Pariva from Adobe and from past five years

21
00:01:38,000 --> 00:01:41,774
I'm working in a platform engineering team internally known as

22
00:01:41,812 --> 00:01:45,214
Ethos and where we are basically helping our

23
00:01:45,252 --> 00:01:49,242
service team in Adobe to deploy their services on Kubernetes

24
00:01:49,386 --> 00:01:53,806
and also trying our best to make best use of the CNCF

25
00:01:53,838 --> 00:01:58,794
projects walls.

26
00:01:58,832 --> 00:02:00,570
Right, next up, Sylvan.

27
00:02:02,910 --> 00:02:06,140
Hey, everyone. Thank you indeed for having me as well.

28
00:02:06,450 --> 00:02:10,320
For the past six years now, I've been

29
00:02:11,090 --> 00:02:13,040
leading the Chaos toolkit project.

30
00:02:15,250 --> 00:02:20,138
It's been quite a fun ride because it's

31
00:02:20,154 --> 00:02:23,266
been good to see the market and the project and the community come

32
00:02:23,288 --> 00:02:26,866
together, having seen so many products, great products

33
00:02:26,968 --> 00:02:30,754
like we have today coming up. And yeah, I'm really happy to

34
00:02:30,792 --> 00:02:34,598
have this crowd today because it's quite a lot I want to hear.

35
00:02:34,764 --> 00:02:38,600
So quite happy about it. So thank you very much again for having me.

36
00:02:39,610 --> 00:02:42,550
Thank you so much, Sylvan. Next up, Miko.

37
00:02:43,790 --> 00:02:47,450
Hi, everybody. Very nice to meet you. My name is Miko.

38
00:02:48,510 --> 00:02:52,374
I've been in somewhere in between platform engineering,

39
00:02:52,422 --> 00:02:55,930
SRE, and Chaos engineering for the last decade,

40
00:02:56,290 --> 00:02:58,110
primarily working in finance.

41
00:02:59,170 --> 00:03:02,942
I initially started powerful seal project

42
00:03:03,076 --> 00:03:06,446
back at Bloomberg, I'm forgetting now, but a good few years ago,

43
00:03:06,548 --> 00:03:09,322
and ended up writing a book,

44
00:03:09,476 --> 00:03:13,220
Chaos Engineering from Manning, published 2021.

45
00:03:14,310 --> 00:03:17,650
Very nice to meet you all and looking forward to the panel.

46
00:03:17,990 --> 00:03:20,850
Thank you so much, Miko. Next up, Karthik.

47
00:03:21,670 --> 00:03:25,346
Hey, everyone, I'm Karthik. I'm one of

48
00:03:25,368 --> 00:03:28,674
the co creators and maintainers of Litmus

49
00:03:28,722 --> 00:03:32,134
Chaos, which is a CNCF incubating project.

50
00:03:32,332 --> 00:03:35,910
I've been around around the same time as Sylvain.

51
00:03:36,070 --> 00:03:39,420
I think we sort of started the Chaos community together.

52
00:03:40,190 --> 00:03:44,266
I'm currently a principal engineer at Harness, focused on

53
00:03:44,368 --> 00:03:47,500
the Chaos module within the harness platform.

54
00:03:47,950 --> 00:03:51,440
Prior to this, I was mostly on the storage side of things,

55
00:03:51,810 --> 00:03:55,098
focused on testing the resiliency of storage systems,

56
00:03:55,274 --> 00:03:59,230
and that's how the Chaos journey began. So, yeah, very happy to

57
00:03:59,380 --> 00:04:02,240
be here and talk chaos engineering with you.

58
00:04:03,510 --> 00:04:06,994
All right, thank you so much, Karthik. I think the panel looks

59
00:04:07,032 --> 00:04:10,830
stacked. Mandi, we have a lot of chaos engineering insights for folks

60
00:04:10,910 --> 00:04:14,358
tuning in. But first up, I think Miko shared a

61
00:04:14,364 --> 00:04:17,986
lot about his journey and how he's involved in not just chaos engineering,

62
00:04:18,018 --> 00:04:21,606
but SRE practices platform engineering, and how

63
00:04:21,628 --> 00:04:25,174
he chaos written a book on chaos engineering as well. So, Miko, we'll start

64
00:04:25,212 --> 00:04:28,778
with you. Just tell us about your early days in the

65
00:04:28,784 --> 00:04:31,798
Chaos community. How did you get involved,

66
00:04:31,974 --> 00:04:35,734
and what's your experience been like as part of the Chaos engineering

67
00:04:35,782 --> 00:04:39,454
community? Sure thing. So for me,

68
00:04:39,492 --> 00:04:43,342
it was kind of very natural. So here

69
00:04:43,396 --> 00:04:46,960
is 2015 sometime there,

70
00:04:47,410 --> 00:04:51,058
and I landed on a new project

71
00:04:51,224 --> 00:04:54,882
back at Bloomberg, where we're basically trying to build

72
00:04:54,936 --> 00:04:58,750
a platform for quants on this brand new thing that just landed

73
00:04:58,830 --> 00:05:02,486
called Kubernetes. And at the time, it was just

74
00:05:02,508 --> 00:05:06,454
a bunch of binaries that you hamed to kind of put together yourself

75
00:05:06,652 --> 00:05:10,086
following best practices that were readme on

76
00:05:10,108 --> 00:05:14,258
GitHub. So as we were building that,

77
00:05:14,444 --> 00:05:17,926
I quickly realized that first, we bumped

78
00:05:17,958 --> 00:05:20,570
into a few things that kept breaking.

79
00:05:21,230 --> 00:05:24,694
So we wanted kind of like a new way of testing

80
00:05:24,742 --> 00:05:29,082
against these behaviors. It's not unit test, it's not integration

81
00:05:29,146 --> 00:05:32,794
tests. It's kind of like this dynamic behaviors

82
00:05:32,842 --> 00:05:35,630
that were appearing in the systems.

83
00:05:36,450 --> 00:05:40,386
And second of all, we found

84
00:05:40,488 --> 00:05:44,370
that actually trying to proactively find

85
00:05:44,440 --> 00:05:47,762
issues with this distributed system was

86
00:05:47,816 --> 00:05:51,362
making us sleep better at night and being able

87
00:05:51,416 --> 00:05:55,238
to find things before they break on us

88
00:05:55,404 --> 00:05:59,526
became like the motto of the team that we worked on. And that

89
00:05:59,708 --> 00:06:04,102
slowly, over the next couple of years, evolved into what I

90
00:06:04,236 --> 00:06:07,754
later learned was I was supposed to be calling

91
00:06:07,792 --> 00:06:11,786
cache engineering. The result of that, I actually just had to

92
00:06:11,808 --> 00:06:15,334
look it up. But it looks like powerful seal got open source

93
00:06:15,382 --> 00:06:18,974
about seven years ago. So somewhere around that time,

94
00:06:19,092 --> 00:06:22,378
we published this tool that was basically taking a Yaml file

95
00:06:22,474 --> 00:06:26,014
and saying, okay, do this, Mandi, this and that to my

96
00:06:26,052 --> 00:06:29,970
system, and we're verifying that it was still

97
00:06:30,040 --> 00:06:34,114
working. And then I discovered the rest of the community

98
00:06:34,232 --> 00:06:38,340
kind of building things around that. And different people,

99
00:06:38,870 --> 00:06:40,450
the KS toolkit,

100
00:06:42,250 --> 00:06:45,906
who were basically building similar things in this domain.

101
00:06:46,018 --> 00:06:49,560
And we started talking Mandi,

102
00:06:50,170 --> 00:06:53,446
that eventually actually was the reason for the

103
00:06:53,468 --> 00:06:57,820
Ferris Conf 42, chaos engineering back in 2020.

104
00:06:59,950 --> 00:07:03,740
So kind of like a natural way of,

105
00:07:04,110 --> 00:07:07,482
I keep joking that this is basically a sleep aid,

106
00:07:07,546 --> 00:07:11,246
this entire chaos engineering to try to go a

107
00:07:11,268 --> 00:07:15,822
level above the standard weights of testing and

108
00:07:15,876 --> 00:07:19,314
the community around that has been great. I met a lot

109
00:07:19,352 --> 00:07:22,610
of amazing people and had a lot of so very,

110
00:07:22,680 --> 00:07:24,340
very grateful for all of.

111
00:07:25,670 --> 00:07:29,266
Absolutely. Absolutely. Miko, I think you talk

112
00:07:29,288 --> 00:07:32,742
about seven years ago, and I joined the community like four or five

113
00:07:32,796 --> 00:07:36,514
years ago, and even till now, I've been seeing the exponential growth

114
00:07:36,562 --> 00:07:39,462
and the amazing people who have been coming up,

115
00:07:39,516 --> 00:07:45,798
contributing, making this community vital.

116
00:07:45,894 --> 00:07:50,230
And I think chaos engineering has grown

117
00:07:50,390 --> 00:07:53,900
exponentially, to be honest, in the last two, three, four years,

118
00:07:54,270 --> 00:07:57,150
if I'm not wrong. Certainly has.

119
00:07:57,220 --> 00:08:01,120
And to not a small extent, thank you

120
00:08:01,570 --> 00:08:05,262
to chaos native and Uma and

121
00:08:05,316 --> 00:08:09,054
company. And now part of, you know, you guys

122
00:08:09,092 --> 00:08:12,110
contributed quite a lot to that. So kudos.

123
00:08:13,490 --> 00:08:15,794
Appreciate it, Miko. So next up,

124
00:08:15,832 --> 00:08:19,106
Karthik, what are your thoughts? I mean, you've been

125
00:08:19,128 --> 00:08:22,786
part of this community for five years. You were

126
00:08:22,808 --> 00:08:25,480
one of the founding members of the Litmus Chaos community.

127
00:08:25,850 --> 00:08:28,950
Tell us more about how litmus chaos came into play.

128
00:08:29,020 --> 00:08:31,240
And with all these projects being there,

129
00:08:32,250 --> 00:08:35,894
what was the thought behind it? Yeah,

130
00:08:35,932 --> 00:08:39,514
the motivations to carry out chaos engineering is,

131
00:08:39,712 --> 00:08:43,226
I think it's very similar to what Miko just explained. I think we were at

132
00:08:43,248 --> 00:08:46,502
a similar point in our journey as an organization.

133
00:08:46,566 --> 00:08:50,174
We were trying to stand up a SaaS platform on

134
00:08:50,212 --> 00:08:53,326
kubernetes, and kubernetes was new to us as

135
00:08:53,348 --> 00:08:57,726
well. And we figured the best way to learn would

136
00:08:57,748 --> 00:09:01,426
be to start experimenting and causing failures and see

137
00:09:01,448 --> 00:09:05,166
how systems react, et cetera. So that way it's

138
00:09:05,198 --> 00:09:08,546
very similar. And when we

139
00:09:08,568 --> 00:09:12,514
did find out, try finding out what tools were already available to us at that

140
00:09:12,552 --> 00:09:16,054
point. And like you said, a lot of these tools were, that was the time

141
00:09:16,092 --> 00:09:19,474
around when all these tools were getting built, powerful seal,

142
00:09:19,522 --> 00:09:23,126
chaos toolkit, et cetera. And we found that we

143
00:09:23,148 --> 00:09:27,014
did not have a consistent way to meet all our use

144
00:09:27,052 --> 00:09:30,714
cases. Of course, we learned more about powerful seal and chaos toolkit after

145
00:09:30,752 --> 00:09:34,906
we started with litmus, I should admit that. But one

146
00:09:34,928 --> 00:09:38,222
of the things we found at that point of time, things that

147
00:09:38,276 --> 00:09:43,150
we lagged, was a homogeneous way to do chaos across different

148
00:09:43,220 --> 00:09:46,938
kinds of entities. So we were part non kubernetes,

149
00:09:47,114 --> 00:09:51,182
part kubernetes, moving on to kubernetes. And we saw that

150
00:09:51,316 --> 00:09:54,910
there were a lot of different kinds of tools. There was the Chaos monkey,

151
00:09:54,990 --> 00:09:58,670
which was mostly on cloud instances. We had a very nifty

152
00:09:58,750 --> 00:10:02,254
tool, still look up to that tool today called Pumbaa,

153
00:10:02,382 --> 00:10:05,750
which was doing a lot of container level

154
00:10:05,820 --> 00:10:09,046
faults. And then there were a lot of scripts that

155
00:10:09,068 --> 00:10:12,390
we had written ourselves. There was an assortment, to be honest,

156
00:10:12,540 --> 00:10:16,102
and that was making management of our resiliency

157
00:10:16,166 --> 00:10:19,580
test suites very difficult. So we wanted a standard

158
00:10:20,110 --> 00:10:24,186
contract in the way we define a

159
00:10:24,208 --> 00:10:27,542
particular failure test and how I can actually implement

160
00:10:27,606 --> 00:10:31,134
it, how I can view the results, how I can sort of

161
00:10:31,172 --> 00:10:34,782
make it work in a pipeline. And all this sort of

162
00:10:34,836 --> 00:10:38,302
led us to go build what we called

163
00:10:38,356 --> 00:10:42,138
as litmus chaos. It was actually part of the open source

164
00:10:42,314 --> 00:10:45,614
project called OpenBs. So litmus was just another repository

165
00:10:45,662 --> 00:10:49,314
inside the open EBS organization when it started. But over time,

166
00:10:49,352 --> 00:10:53,086
we learned more about the actual principles of chaos. So, like Miko

167
00:10:53,118 --> 00:10:56,470
said, we don't really know the term called chaos engineering. It walls started

168
00:10:56,540 --> 00:11:00,534
as a way to do fault injection, but we

169
00:11:00,572 --> 00:11:04,050
learned more again, thanks to folks like Sylvain and the chaos,

170
00:11:04,130 --> 00:11:07,346
the initial version of the Chaos work group. We learned

171
00:11:07,378 --> 00:11:10,826
more about what chaos engineering actually entails, how it is

172
00:11:10,848 --> 00:11:14,246
assigned, and then we decided to sort of put a cloud native spin

173
00:11:14,278 --> 00:11:18,054
on it with custom resources and things like that. And that's how the journey

174
00:11:18,102 --> 00:11:21,966
began. And I think some of our choices were vindicated in

175
00:11:21,988 --> 00:11:25,280
the long run with all the feedback we got from the community.

176
00:11:26,130 --> 00:11:29,966
And of course, there were things to course correct along the way. But that

177
00:11:29,988 --> 00:11:33,714
was really how we got started. That was the inception of the project.

178
00:11:33,832 --> 00:11:37,026
So thank you so much, Karthik. I think there was a lot

179
00:11:37,048 --> 00:11:40,418
of agreement I saw from the other panelists, and a

180
00:11:40,424 --> 00:11:43,202
lot of credit to Sylvan for starting this journey,

181
00:11:43,266 --> 00:11:46,962
Miko for also being one of the initial

182
00:11:47,026 --> 00:11:51,398
members of this community. So next up, I just ask Sylvan about,

183
00:11:51,564 --> 00:11:56,262
he's been sharing a lot of experiences on culture practices using

184
00:11:56,316 --> 00:11:59,302
chaos. So, Sylvan, just let us know about your journey,

185
00:11:59,366 --> 00:12:02,634
the inception of Chaos toolkit, and how did it all

186
00:12:02,672 --> 00:12:05,994
start? If you have like, two or 3 hours ahead

187
00:12:06,032 --> 00:12:09,834
of you trying to squeeze that in

188
00:12:09,872 --> 00:12:13,870
a few minutes, it's really a shame. And for

189
00:12:14,020 --> 00:12:17,418
disclosure, that panel should be way longer, because already it's

190
00:12:17,434 --> 00:12:20,910
quite interesting to me to go through back history with

191
00:12:21,060 --> 00:12:21,760
you.

192
00:12:25,590 --> 00:12:28,818
I started with Russ Miles, actually. Russ back,

193
00:12:28,904 --> 00:12:32,538
we were working in a startup company called Atomist

194
00:12:32,574 --> 00:12:36,454
at the time, and we left, and Russ said, look,

195
00:12:36,492 --> 00:12:40,006
that is that principles of Chaos book that

196
00:12:40,028 --> 00:12:43,414
was released a few months or something earlier than that so

197
00:12:43,452 --> 00:12:46,198
from Casey Rosental and people from Netflix.

198
00:12:46,374 --> 00:12:49,500
And it captured what at least

199
00:12:50,590 --> 00:12:54,214
the outcome of years and years of leading chaos

200
00:12:54,262 --> 00:12:57,742
engineering at Netflix. So we were

201
00:12:57,796 --> 00:13:01,066
really hooked by that. There was something that transpired,

202
00:13:01,258 --> 00:13:05,306
but to us, we were less interested in the fault injection

203
00:13:05,338 --> 00:13:08,954
itself than the reading of what it means

204
00:13:09,012 --> 00:13:13,058
to do chaos engineering. The old experiment, learning curve learning

205
00:13:13,144 --> 00:13:16,818
thing. And this is where chaos toolkit was trying to be at,

206
00:13:16,984 --> 00:13:22,370
say, can we glue under a certain language?

207
00:13:22,790 --> 00:13:26,434
And we went declarative. We were quite terraform in spirit,

208
00:13:26,482 --> 00:13:29,686
I guess. So can we go and have a

209
00:13:29,708 --> 00:13:33,554
description file that says, like Miko said, can we do this yaml

210
00:13:33,602 --> 00:13:34,550
or JSon?

211
00:13:36,810 --> 00:13:39,802
Because to us, what was interesting was, can we learn from this?

212
00:13:39,856 --> 00:13:43,690
Right? Not how are we going to do the fault injection. There were

213
00:13:43,760 --> 00:13:48,310
already quite a few tools, like Pumbaa, indeed, and then the native

214
00:13:48,390 --> 00:13:52,030
Linux tools like stress ng or very low level

215
00:13:52,100 --> 00:13:56,894
things. But to us it was we

216
00:13:56,932 --> 00:14:01,074
never wanted, Mandi never wanted anywhere to stop at

217
00:14:01,112 --> 00:14:04,946
low level fault injection. To me, when you

218
00:14:04,968 --> 00:14:08,386
look at incidents, a lot of them come from someone

219
00:14:08,488 --> 00:14:12,230
published a wrong configuration file somewhere.

220
00:14:12,650 --> 00:14:16,514
So it's nothing to do with your cpu or memory.

221
00:14:16,562 --> 00:14:20,354
So we thought, okay, can we create that format

222
00:14:20,402 --> 00:14:23,574
where any sort of experiment is a

223
00:14:23,612 --> 00:14:27,782
chaos engineering experiment and delegate

224
00:14:27,846 --> 00:14:31,014
to better tools for the fault

225
00:14:31,062 --> 00:14:35,078
itself, right. And let people drive those tools with a common interface.

226
00:14:35,174 --> 00:14:36,940
And this is where we came from.

227
00:14:38,990 --> 00:14:42,294
Interestingly, the chaos toolkit format,

228
00:14:42,342 --> 00:14:45,534
and how could I say,

229
00:14:45,652 --> 00:14:49,354
its model changed only once, like three months

230
00:14:49,412 --> 00:14:52,750
after we started, we added something I'd missed,

231
00:14:52,910 --> 00:14:57,214
and since then it's never changed. I've added things, but never changed.

232
00:14:57,342 --> 00:15:00,466
So it's a testimony that at least

233
00:15:00,568 --> 00:15:05,874
what we took from the principles of chaos was

234
00:15:05,912 --> 00:15:09,142
something of meaningful. It was a great

235
00:15:09,196 --> 00:15:13,350
outcome after years of working with Netflix, doing this.

236
00:15:13,500 --> 00:15:15,500
So it was quite interesting for us.

237
00:15:17,390 --> 00:15:21,178
What we didn't do, I think, as good as others

238
00:15:21,264 --> 00:15:24,682
after that was especially as Litmus was to

239
00:15:24,816 --> 00:15:28,126
promote that. Mandi, think we

240
00:15:28,148 --> 00:15:32,222
touched on that later on about how to grow

241
00:15:32,276 --> 00:15:35,646
from there. So the culture, just to finish on your

242
00:15:35,668 --> 00:15:39,518
question around culture, I don't have a particular

243
00:15:39,604 --> 00:15:43,442
culture at AnT. The only thing that I do is I always treat people

244
00:15:43,496 --> 00:15:46,514
nicely. It's my only culture. I try

245
00:15:46,552 --> 00:15:49,986
to be kind. Mandi, when someone comes to

246
00:15:50,008 --> 00:15:53,454
me on slack and say, I don't understand that, to me it's always

247
00:15:53,512 --> 00:15:56,626
about, I've got bad documentation, not people are being stupid

248
00:15:56,658 --> 00:16:00,114
or anything. Mandi, that's the only culture I know of being civil.

249
00:16:00,162 --> 00:16:03,286
Mandi kind. Because we're walls learning, right?

250
00:16:03,468 --> 00:16:07,106
And that's the only thing I can do, honestly. So it's

251
00:16:07,138 --> 00:16:10,506
the way I see communities, but I'm not

252
00:16:10,528 --> 00:16:13,820
very good at driving the community itself,

253
00:16:14,190 --> 00:16:18,186
just me. So this is where I'm at. But what I find fantastic.

254
00:16:18,218 --> 00:16:21,322
Mandi, promise I'll finish on that. What I find fantastic

255
00:16:21,386 --> 00:16:25,102
is I realize today how much we haven't talked together

256
00:16:25,236 --> 00:16:27,600
enough over the last few years,

257
00:16:28,210 --> 00:16:31,970
and perhaps that the biggest foul here is

258
00:16:32,120 --> 00:16:35,886
we all do the same sort of thing and with the same spirit. The proof

259
00:16:35,918 --> 00:16:39,618
is we're here and for the

260
00:16:39,624 --> 00:16:42,978
next phase, we should really spend more time together. Mandi, talk about as a

261
00:16:42,984 --> 00:16:47,382
community, as a global community, we should be more aligned and more talking

262
00:16:47,436 --> 00:16:50,326
to each other. I think it's not even like we avoid. I don't want to

263
00:16:50,348 --> 00:16:53,766
sound like we are at war or anything, not at all. It's just I think

264
00:16:53,788 --> 00:16:57,466
we are on our lane and we have things to do and

265
00:16:57,488 --> 00:17:01,100
we just don't get the time. But it's a shame. We should talk more.

266
00:17:01,950 --> 00:17:04,780
Anyway. It's rambling as usual. You know me.

267
00:17:06,110 --> 00:17:10,942
Absolutely. Sylvan Walls said talking

268
00:17:10,996 --> 00:17:15,706
about it more and just exchange

269
00:17:15,738 --> 00:17:19,200
of ideas, sharing thoughts. I think this is something

270
00:17:19,650 --> 00:17:23,742
that would have helped the community. Mean I'll

271
00:17:23,806 --> 00:17:27,554
talk about the current state and my thoughts on the community as well.

272
00:17:27,592 --> 00:17:31,486
But Sylvan, as you said, I think we

273
00:17:31,528 --> 00:17:35,094
all are learning how to build the community and

274
00:17:35,292 --> 00:17:38,630
take it forward. But yeah, I think this is something,

275
00:17:38,700 --> 00:17:41,986
these panel discussions meeting together, exchange of ideas

276
00:17:42,018 --> 00:17:46,406
are something that become vital. Moving on.

277
00:17:46,588 --> 00:17:49,782
Just talking about advocacy, I would ask Sylvan,

278
00:17:49,926 --> 00:17:52,938
you've been part of this community for seven, eight years,

279
00:17:53,104 --> 00:17:56,846
have driven a lot of advocacy behind it, given a lot of talks here and

280
00:17:56,868 --> 00:18:00,954
there. So what is your thought on how advocacy has helped

281
00:18:01,002 --> 00:18:02,960
chaos engineering reach that level?

282
00:18:06,450 --> 00:18:09,874
What's missing in that culture that people are still

283
00:18:09,912 --> 00:18:12,994
not adopting it? What are your thoughts or take on that?

284
00:18:13,032 --> 00:18:16,802
Sylvan it's a large

285
00:18:16,856 --> 00:18:20,370
subject, and if I had the answers,

286
00:18:21,030 --> 00:18:24,630
the definitive answer, I would be in a better

287
00:18:24,700 --> 00:18:25,880
position. In general,

288
00:18:28,970 --> 00:18:32,550
I think, like we were saying,

289
00:18:32,700 --> 00:18:34,280
probably as a community,

290
00:18:36,590 --> 00:18:40,970
as leaders of tools that we've created, we've not been good

291
00:18:41,040 --> 00:18:44,746
at joining forces into a bigger thing.

292
00:18:44,768 --> 00:18:48,030
So make it look bigger than it might be,

293
00:18:48,180 --> 00:18:51,760
right? I remember I'm going to use

294
00:18:53,010 --> 00:18:56,318
one of the commercial tool that exists there.

295
00:18:56,404 --> 00:19:00,494
When they started, we discussed with them and we were telling them we

296
00:19:00,532 --> 00:19:04,498
need to have more players in the field. It's good to

297
00:19:04,504 --> 00:19:07,938
have competition at a commercial level and probably open source level as well,

298
00:19:08,024 --> 00:19:12,254
because the more you have to a certain degree, the more it proves

299
00:19:12,382 --> 00:19:16,310
in a way that there is a valid need

300
00:19:16,380 --> 00:19:20,614
for this right market, however you want to call this. So you

301
00:19:20,652 --> 00:19:25,062
need that. You need to have the players that sort of work

302
00:19:25,116 --> 00:19:27,830
together in a way to prove the existence,

303
00:19:29,130 --> 00:19:31,602
the validity of the effort,

304
00:19:31,666 --> 00:19:35,286
basically. But then you rexed to fight like

305
00:19:35,308 --> 00:19:39,326
Anurag was saying. Other fights like a

306
00:19:39,348 --> 00:19:42,714
lot of DevOps. I'm going to use that word extremely loosely

307
00:19:42,762 --> 00:19:46,618
because I don't want to have any sort of, I don't

308
00:19:46,634 --> 00:19:50,426
have any definition, but I was actually recently looking

309
00:19:50,468 --> 00:19:54,414
at a Reddit thread where the person asked, is chaos engineering

310
00:19:54,462 --> 00:19:57,986
still a thing? And there is a lot of answers. And what

311
00:19:58,008 --> 00:20:01,582
struck me was how a lot of people

312
00:20:01,656 --> 00:20:04,822
didn't basically throw that away,

313
00:20:04,876 --> 00:20:08,358
dismiss the whole idea like it's buzz. Right? And I

314
00:20:08,364 --> 00:20:12,006
was surprised to see that in 2024

315
00:20:12,108 --> 00:20:16,294
still, right. I would have been quite not

316
00:20:16,332 --> 00:20:19,418
surprised to see people saying, we'd love to do that. We just don't have the

317
00:20:19,424 --> 00:20:22,634
budgets, Mandi, everything. And some people do say that, but there is still a lot

318
00:20:22,672 --> 00:20:26,106
of advocacy with the audience that we have

319
00:20:26,128 --> 00:20:29,370
in mind, whether it's sre, DevOps, whoever,

320
00:20:29,450 --> 00:20:32,574
and the developers themselves. Right. So there's still

321
00:20:32,692 --> 00:20:36,270
a long way to go to not sound like we're trying to sell

322
00:20:36,420 --> 00:20:40,014
something that we find fancy. Right. And it does take a long

323
00:20:40,052 --> 00:20:43,986
time either because a lot of people are more confident in

324
00:20:44,008 --> 00:20:47,950
themselves and what they put out. I remember talking someday to some engineers

325
00:20:48,030 --> 00:20:51,806
or actually higher up saying, we are quite reliable.

326
00:20:51,998 --> 00:20:55,750
Right. What do you do to know that? Well, we don't do anything.

327
00:20:55,820 --> 00:20:58,946
We have all the things that we need to tell us that we are reliable.

328
00:20:59,058 --> 00:21:02,200
Okay, let's see each other. When you hamed an outage. Right.

329
00:21:02,570 --> 00:21:06,086
So you do have that mindset in the audience we're

330
00:21:06,118 --> 00:21:09,846
targeting as a community. If they don't

331
00:21:09,878 --> 00:21:13,206
believe that it's useful, it's going to be difficult because they are your advocate,

332
00:21:13,238 --> 00:21:16,838
they are your champions. And from what we've

333
00:21:16,854 --> 00:21:20,606
seen in care circuit, quite a lot of time we've seen a single person

334
00:21:20,708 --> 00:21:24,842
becoming the champion, either for personal reasons or because we're advocated.

335
00:21:24,986 --> 00:21:28,222
And you need to support that person. You need to give them everything

336
00:21:28,276 --> 00:21:32,114
they can to succeed within their own organization. But it

337
00:21:32,152 --> 00:21:35,714
has to be repeated with every single organization. So it's not really

338
00:21:35,752 --> 00:21:40,430
scalable. It's not easy to scale that because as open source

339
00:21:40,590 --> 00:21:43,634
communities, we don't have the bandwidth to be

340
00:21:43,672 --> 00:21:47,602
there for every single person. So while I was saying that I'm kind and helpful

341
00:21:47,666 --> 00:21:52,102
whenever I can, it doesn't mean I have the bandwidth to be the

342
00:21:52,156 --> 00:21:55,946
champion of the champion. For every single person

343
00:21:56,048 --> 00:21:59,226
out there, it does take time and you end

344
00:21:59,248 --> 00:22:02,860
up not being responsive. So the committee may think that

345
00:22:04,670 --> 00:22:07,226
you're not there for me, which is not the case. I would like to be

346
00:22:07,248 --> 00:22:11,374
there, but it does take time. So you do have that. And finally, we were

347
00:22:11,412 --> 00:22:15,738
saying a little bit before, it's not prioritized.

348
00:22:15,914 --> 00:22:19,434
Until you don't see that prioritized in delivery teams,

349
00:22:19,562 --> 00:22:23,106
it's going to be so easily dismissed. Right? A lot of

350
00:22:23,128 --> 00:22:26,174
delivery product deliveries just don't put resilience.

351
00:22:26,302 --> 00:22:30,082
It's not chaos for chaos, but reliability. However, you name

352
00:22:30,136 --> 00:22:34,194
that as an indicator of success

353
00:22:34,392 --> 00:22:38,118
for this, so you end up with quite a few times I've seen

354
00:22:38,204 --> 00:22:41,654
companies where you have a team trying to champion saying, yes, we believe in that,

355
00:22:41,692 --> 00:22:45,420
we brought it. Sometimes we've even built our own platform, whatever we do.

356
00:22:45,950 --> 00:22:49,226
But we struggle. We struggle to make it a

357
00:22:49,248 --> 00:22:52,474
thing. Everywhere else, even them

358
00:22:52,512 --> 00:22:57,006
internally struggle to advocate for it. So I think we

359
00:22:57,028 --> 00:23:00,320
still have a long way to go, but I think we are stuck in that.

360
00:23:04,450 --> 00:23:08,010
I'm not rephrasing. We're not stuck. We've been cornered

361
00:23:08,090 --> 00:23:11,994
a little bit because of ourselves, but also because of, generally speaking,

362
00:23:12,052 --> 00:23:15,794
how the media, the market. However, you want to see

363
00:23:15,832 --> 00:23:19,298
chaos engineering into something that is, do that when

364
00:23:19,304 --> 00:23:23,166
you're mature enough. So you need to look like Netflix to do chaos engineering,

365
00:23:23,358 --> 00:23:27,240
which I always fight against. I've talked to people who say

366
00:23:27,610 --> 00:23:30,934
we are restarting our project. We can't do for sure

367
00:23:30,972 --> 00:23:34,582
chaos engineering. Yes, you can. You're just going to adjust to

368
00:23:34,636 --> 00:23:38,118
what you have and grow with it, because you're not talking about chaos engineering,

369
00:23:38,134 --> 00:23:41,642
you're talking about your operations. You want to operate right now

370
00:23:41,776 --> 00:23:45,926
the best you can. So it's

371
00:23:45,958 --> 00:23:49,754
something you have to be relentless continuously. I've got the same discussion now

372
00:23:49,792 --> 00:23:53,520
that I had six or seven years ago, and it's okay, I guess

373
00:23:53,970 --> 00:23:57,086
it's where we at, right? It takes years to get there.

374
00:23:57,188 --> 00:24:01,726
But then again, a lot of organizations still haven't

375
00:24:01,758 --> 00:24:04,734
even started on bringing DevOps as a culture.

376
00:24:04,862 --> 00:24:07,298
So it's the same for everything,

377
00:24:07,384 --> 00:24:10,882
right? And finally, for the last two years, anyway, at least

378
00:24:10,936 --> 00:24:15,014
year, project fundings hamed,

379
00:24:15,052 --> 00:24:18,950
decreased dramatically within organization. So even

380
00:24:19,020 --> 00:24:22,038
when using open source tools, like, like the ones we have,

381
00:24:22,124 --> 00:24:25,766
obviously that is commercial proposition for sure. But even open

382
00:24:25,788 --> 00:24:29,794
source tools suffer from that, because suddenly you have people turning

383
00:24:29,842 --> 00:24:33,798
their back and saying, walls, I can't use this anymore because it's not prioritized anymore.

384
00:24:33,974 --> 00:24:36,826
And therefore you're left with, well, where do I go?

385
00:24:36,848 --> 00:24:40,190
From this. Right. So it's a lot of things coming together.

386
00:24:40,260 --> 00:24:44,174
And while as a community, we can push, there is

387
00:24:44,212 --> 00:24:47,934
a lot of the world that we can control. So it's going to take

388
00:24:47,972 --> 00:24:49,680
time. It's going to take time.

389
00:24:51,350 --> 00:24:54,660
Absolutely sylvan, I think the last point that you mentioned

390
00:24:55,270 --> 00:24:58,674
how open source projects are not just open source projects, the idea

391
00:24:58,712 --> 00:25:01,874
of chaos suffers is people start

392
00:25:01,912 --> 00:25:05,426
using it. But then there's some hard call that's

393
00:25:05,458 --> 00:25:08,982
taken that there's no budget for this, or this is not our priority right now.

394
00:25:09,116 --> 00:25:13,174
I think it's a two way suffering, where one way is the

395
00:25:13,212 --> 00:25:16,746
project suffers in terms of adoption or users, but the

396
00:25:16,768 --> 00:25:20,410
other way suffers is also in terms of contribution.

397
00:25:21,550 --> 00:25:25,446
It just becomes stale. Or the company that's sponsoring

398
00:25:25,478 --> 00:25:29,350
the project, it believes that there's no interest in this anymore.

399
00:25:29,510 --> 00:25:33,120
Why do I. To sponsor this anymore? Why to take it forward. So I think

400
00:25:34,690 --> 00:25:37,818
that's why you mentioned that chaos engineering is being cornered.

401
00:25:37,834 --> 00:25:42,002
And that is where I can partially agree with you

402
00:25:42,136 --> 00:25:45,986
that. Yeah. With how things are moving and

403
00:25:46,008 --> 00:25:49,230
with this kind of a market, I think that's something that's

404
00:25:49,310 --> 00:25:52,966
evident for all open source projects out there. I mean, Mandi projects out

405
00:25:52,988 --> 00:25:56,440
there, but, yeah, per se, chaos engineering as well.

406
00:25:57,130 --> 00:25:59,400
There's some impact that's there for sure.

407
00:26:01,050 --> 00:26:04,450
So with this, I would just move on to Karthik.

408
00:26:04,530 --> 00:26:08,986
Karthik has been one of the members of the open source community,

409
00:26:09,088 --> 00:26:12,746
chaos community, for some time now. And Karthik, I would just

410
00:26:12,768 --> 00:26:15,878
want to know from you, what exactly are the challenges

411
00:26:16,054 --> 00:26:19,274
that you have seen? I mean, you've seen the open source side of things.

412
00:26:19,312 --> 00:26:22,606
You hamed seen the enterprise side of things. And what would you like

413
00:26:22,628 --> 00:26:25,854
to list as the challenges that you have seen moving

414
00:26:25,892 --> 00:26:29,346
from open source to enterprise, or just the enterprise adoption side of

415
00:26:29,368 --> 00:26:31,940
things in today's world?

416
00:26:33,190 --> 00:26:37,102
Yeah. Before getting into the enterprise adoption,

417
00:26:37,246 --> 00:26:41,022
et cetera, just dwell on the open source

418
00:26:41,086 --> 00:26:44,934
side of things for a few minutes. I think I

419
00:26:44,972 --> 00:26:48,950
resonate with the point that Sylvain made. You want to be there for everybody

420
00:26:49,100 --> 00:26:53,378
who is trying chaos, make them successful, but it's

421
00:26:53,394 --> 00:26:57,482
not a humanly possible task. Right. You will find someone

422
00:26:57,536 --> 00:27:00,822
on the other side who is interested in doing chaos,

423
00:27:00,886 --> 00:27:04,474
adopting your tool. You help them in all possible ways.

424
00:27:04,592 --> 00:27:08,810
They're able to get out a very technically

425
00:27:08,970 --> 00:27:13,086
appealing POC, which basically

426
00:27:13,268 --> 00:27:16,670
helps them sell the solution into, let's say,

427
00:27:16,740 --> 00:27:21,038
a couple of teams. And then there's no follow up on top of that

428
00:27:21,204 --> 00:27:25,310
purely because of this reason. Right. No prioritization, no budget,

429
00:27:25,390 --> 00:27:29,614
et cetera. So you've spent a lot of energy trying to make someone successful.

430
00:27:29,662 --> 00:27:33,106
And of course, in that process you learn a lot from them about what's lacking

431
00:27:33,138 --> 00:27:36,150
in the tool. Mandi, you go back and build. That's how communities,

432
00:27:37,050 --> 00:27:40,738
those projects grow. But then it stops

433
00:27:40,754 --> 00:27:47,530
at some point. That's probably the biggest barrier

434
00:27:48,110 --> 00:27:51,290
in terms of running with chaos.

435
00:27:51,790 --> 00:27:55,194
You will find some of that spillover onto the enterprise scene as

436
00:27:55,232 --> 00:27:58,938
well. If you can imagine, this is the case with open source where

437
00:27:59,024 --> 00:28:02,986
you're not really putting a cost on it. In case of enterprise,

438
00:28:03,098 --> 00:28:06,222
it's sort of going to be exponential, right.

439
00:28:06,276 --> 00:28:09,886
Because there's a cost associated with it. So you're going to scrutinize it so much.

440
00:28:09,988 --> 00:28:11,840
Is this really needed for me?

441
00:28:12,390 --> 00:28:15,140
So that cycle is very long,

442
00:28:15,750 --> 00:28:17,620
but purely from,

443
00:28:19,910 --> 00:28:22,750
let's say, a technical perspective,

444
00:28:22,910 --> 00:28:26,662
what people ask for when they're trying to,

445
00:28:26,716 --> 00:28:30,002
let's say they're all on board with respect to the chaos engineering.

446
00:28:30,146 --> 00:28:33,426
They've got the buy in from the management, they've managed

447
00:28:33,458 --> 00:28:37,130
to prioritize it, they've identified the target team

448
00:28:37,200 --> 00:28:41,254
or the domain or the services. They've gone ahead and allocated

449
00:28:41,302 --> 00:28:45,018
the infrastructure and budget for it all. That's good.

450
00:28:45,184 --> 00:28:49,310
Now, from that point onwards, how does chaos scale?

451
00:28:49,650 --> 00:28:53,534
Right. How successful is a chaos product there?

452
00:28:53,572 --> 00:28:57,578
There are a lot of operational constraints. I would say it's

453
00:28:57,594 --> 00:29:00,350
all good to start some low intensity,

454
00:29:00,510 --> 00:29:04,670
low blast radius, simple kind of chaos scenarios.

455
00:29:04,830 --> 00:29:08,546
You might be, let's say, doing the hello world of the

456
00:29:08,568 --> 00:29:12,286
chaos engineering kubernetes. Chaos engineering space. Right. That's the pod delete.

457
00:29:12,398 --> 00:29:15,830
You do that, you're very good. You actually

458
00:29:15,900 --> 00:29:19,206
can convince people to drive a lot of value out of

459
00:29:19,228 --> 00:29:22,674
a pod. Elite experiment. It sounds very innocuous, but it's actually very useful.

460
00:29:22,722 --> 00:29:26,294
That's what we found in our journey. So you

461
00:29:26,332 --> 00:29:29,770
get a lot of value. But from then on, for the person who is very

462
00:29:29,840 --> 00:29:32,966
enthusiastic about wanting to do more and more chaos,

463
00:29:33,158 --> 00:29:36,506
he hits a roadblock with some of the other faults that they

464
00:29:36,528 --> 00:29:39,806
would want to do something that's, let's say, more involved. They want to

465
00:29:39,828 --> 00:29:43,294
do a network packet drop or they want to do something

466
00:29:43,412 --> 00:29:47,114
that's more, let's say a storage level I o latency

467
00:29:47,162 --> 00:29:50,350
or something like that. You're entering into territory

468
00:29:51,250 --> 00:29:55,346
which wants you to run privileged containers. You should be basically

469
00:29:55,448 --> 00:29:59,234
adding a lot of container capabilities to be running it. You are now

470
00:29:59,272 --> 00:30:02,398
facing friction with the security teams who come and tell you that we are not

471
00:30:02,424 --> 00:30:06,038
going to allow this unless this is really important. And then you sort of

472
00:30:06,044 --> 00:30:09,730
hamed to convince, except for a lot of verbiage

473
00:30:09,890 --> 00:30:13,330
and a lot of documentation and explaining.

474
00:30:13,410 --> 00:30:16,906
You don't really have any other sort of armor in terms of how

475
00:30:16,928 --> 00:30:19,750
you push those kind of faults into their environment.

476
00:30:19,830 --> 00:30:23,978
Right? So that is some of the things that we see.

477
00:30:24,144 --> 00:30:27,974
And then, of course, large organizations, when they try to operationalize

478
00:30:28,022 --> 00:30:31,742
chaos at, let's say, a larger scale, now we are talking about

479
00:30:31,796 --> 00:30:34,974
more mature organizations who really recognize the need

480
00:30:35,012 --> 00:30:38,606
for chaos and they're okay to run with it. They're ready to give all

481
00:30:38,628 --> 00:30:40,720
these kind of permissions and everything.

482
00:30:41,430 --> 00:30:45,474
They hamed requirements that will be something like,

483
00:30:45,592 --> 00:30:49,278
you will have a certain group of people who should be allowed to do chaos

484
00:30:49,374 --> 00:30:52,920
on, let's say, only certain services, only a certain point of time,

485
00:30:53,450 --> 00:30:56,994
using only a certain set of roles associated

486
00:30:57,042 --> 00:31:00,642
with them. You might want to introduce some kind of freeze windows.

487
00:31:00,706 --> 00:31:04,530
You might want to go ahead and simplify the visualization

488
00:31:04,610 --> 00:31:08,374
around how much of chaos is happening. Of course, all the dashboarding

489
00:31:08,422 --> 00:31:11,594
integration with different APM tools, these are par for the course.

490
00:31:11,712 --> 00:31:14,938
You sort of hear them in most conversations. But there are a

491
00:31:14,944 --> 00:31:19,010
lot of other ways in which they want to aid you with respect

492
00:31:19,030 --> 00:31:22,766
to how they carry out chaos operations. Right. They are very concerned about the

493
00:31:22,788 --> 00:31:25,950
security and impact of the chaos. They want to

494
00:31:26,020 --> 00:31:29,946
gain the benefit of the chaos engineering Mandi chaos experiments,

495
00:31:29,978 --> 00:31:32,866
but they want to be very careful in how they implement it. So there are

496
00:31:32,888 --> 00:31:36,334
a lot of constraints that come that way, and they look for tools to alleviate

497
00:31:36,382 --> 00:31:41,266
those kind of problems. The other thing is a

498
00:31:41,288 --> 00:31:44,966
lot about, I would say when

499
00:31:44,988 --> 00:31:48,690
you have more folks coming in to do chaos engineering,

500
00:31:48,770 --> 00:31:52,214
there's a lot of perspective differences in terms of what they want to get from

501
00:31:52,252 --> 00:31:55,606
it. Reliability is understood differently

502
00:31:55,638 --> 00:31:58,954
by different people. Right? So how do you

503
00:31:58,992 --> 00:32:02,186
quantify the impact of chaos? So when

504
00:32:02,208 --> 00:32:05,910
you say calculating KPIs for chaos, that's a very broad topic

505
00:32:05,990 --> 00:32:09,066
you might have seen in the chaos carnival. Different people came

506
00:32:09,088 --> 00:32:12,382
with their own notion of how to measure the impact of chaos. So that changes

507
00:32:12,436 --> 00:32:16,222
from organization to organization. And how are you catering to

508
00:32:16,356 --> 00:32:21,102
that group? Who's looking for that insight from

509
00:32:21,156 --> 00:32:23,966
their application or from their teams?

510
00:32:24,078 --> 00:32:27,506
How do you go and put a number that says, this is how

511
00:32:27,608 --> 00:32:30,814
impactful chaos has been for you, this is how effective chaos

512
00:32:30,862 --> 00:32:33,618
chaos been for you, and this is how you go from here.

513
00:32:33,704 --> 00:32:37,654
Right. And many organizations who are beginning out with

514
00:32:37,692 --> 00:32:41,254
chaos expect some kind of solutioning as well. So you should not just

515
00:32:41,292 --> 00:32:44,566
be ready to say, this is how my tool works, but you should also try

516
00:32:44,588 --> 00:32:48,154
and understand how the tool can work for them. Right. And what are their

517
00:32:48,192 --> 00:32:51,820
use cases and they also look for guidance on

518
00:32:52,510 --> 00:32:56,218
at what point where you can actually help

519
00:32:56,304 --> 00:32:59,610
with chaos engineering. With all the services

520
00:32:59,680 --> 00:33:03,598
that they have right now, how can you sort of ease it into the system

521
00:33:03,684 --> 00:33:07,162
and how best to sort of sell it to their own management

522
00:33:07,226 --> 00:33:11,220
if they want to scale it, they look for certain solutioning guidelines as well.

523
00:33:11,590 --> 00:33:15,058
So this is what we sort of deal with on a

524
00:33:15,064 --> 00:33:19,294
regular basis when you are trying to take the enterprise

525
00:33:19,342 --> 00:33:23,074
route. But I think a lot of this

526
00:33:23,192 --> 00:33:27,190
is worth it. A lot of these conversations gives us a lot of insights,

527
00:33:27,690 --> 00:33:31,794
and of course, a lot of those insights translate into features or capabilities

528
00:33:31,842 --> 00:33:36,006
and move into the open source project again, because that's

529
00:33:36,038 --> 00:33:39,946
the karma giving back thing. So I

530
00:33:39,968 --> 00:33:43,498
think that's where we are now in our journey and

531
00:33:43,584 --> 00:33:47,706
we are learning, I would say absolutely

532
00:33:47,808 --> 00:33:52,126
Karthik, I think one point you mentioned about reliability and how chaos is

533
00:33:52,228 --> 00:33:55,566
seen as part of reliability. I think there

534
00:33:55,588 --> 00:33:59,454
has been a vast definition to reliability, and a lot of people are trying to

535
00:33:59,492 --> 00:34:02,340
mix chaos with a lot of things. You see, I mean,

536
00:34:02,950 --> 00:34:06,510
the slos, and then there's incident management

537
00:34:06,590 --> 00:34:10,434
and then there's so much more that's coming under the paradigm of

538
00:34:10,472 --> 00:34:13,694
reliability. And then that is how modern chaos

539
00:34:13,742 --> 00:34:17,378
engineering has changed. And that's where I go to my next question to Miko.

540
00:34:17,394 --> 00:34:21,046
I mean, Miko, you've been seeing chaos engineering for so

541
00:34:21,068 --> 00:34:24,374
much. I mean, so long now, and you've been part of other

542
00:34:24,412 --> 00:34:28,154
practices as well, sre platform engineering. How do

543
00:34:28,192 --> 00:34:31,814
you see modern chaos engineering today? I mean, there's generative

544
00:34:31,862 --> 00:34:34,970
AI as well, which is being induced right now to

545
00:34:35,120 --> 00:34:38,986
move chaos forward. So what's your thought process on modern

546
00:34:39,018 --> 00:34:42,446
chaos engineering and how chaos has changed from back then to

547
00:34:42,468 --> 00:34:46,078
today? I love your question.

548
00:34:46,164 --> 00:34:49,582
And predictions have that

549
00:34:49,716 --> 00:34:53,458
nasty thing about them that they almost always false. But I'm going

550
00:34:53,464 --> 00:34:56,580
to venture something because it's such an interesting question.

551
00:34:58,150 --> 00:35:01,806
A caveat to that is that I never actually had a commercial

552
00:35:01,918 --> 00:35:05,814
chaos engineering thing, so I can't really speak to what Sylvan was talking

553
00:35:05,852 --> 00:35:09,110
about when you're trying to convince people to use that product.

554
00:35:09,180 --> 00:35:12,934
I was just sharing the things that I walls doing so

555
00:35:12,972 --> 00:35:17,018
it was somehow easier. But the response was

556
00:35:17,104 --> 00:35:20,394
very often exactly what he described, which was, oh yeah,

557
00:35:20,432 --> 00:35:23,180
this is such a cool idea. We're not going to do that.

558
00:35:24,590 --> 00:35:28,270
We're not mature enough. But I think there are basically

559
00:35:28,340 --> 00:35:31,854
two elements that are kind of now on

560
00:35:31,892 --> 00:35:35,194
a collision course together. I think one of the elephants

561
00:35:35,242 --> 00:35:38,906
in the room that I noticed a few years ago was

562
00:35:38,948 --> 00:35:42,370
that managing tooling to

563
00:35:42,440 --> 00:35:46,210
implement these things was the easy part of the equation.

564
00:35:46,870 --> 00:35:50,450
The harder part of the equation was actually making sense

565
00:35:50,600 --> 00:35:54,294
of the data that you found and doing all

566
00:35:54,332 --> 00:35:57,574
the things that you need to do to implement this

567
00:35:57,612 --> 00:36:02,850
lessons in practice, because a lot of that wasn't even technical.

568
00:36:03,010 --> 00:36:06,902
Like you said, sort of an initially messed up config.

569
00:36:07,046 --> 00:36:10,726
There's no tool that's going to prevent

570
00:36:10,758 --> 00:36:14,074
you from doing that. So you had that one elephant in the room, and then

571
00:36:14,112 --> 00:36:17,374
on the other kind of side of the

572
00:36:17,412 --> 00:36:21,326
collision course is what you mentioned. With AI, we're at

573
00:36:21,348 --> 00:36:24,974
a very interesting time in

574
00:36:25,012 --> 00:36:28,158
the evolution, I think, of humans in general.

575
00:36:28,244 --> 00:36:31,746
Like last year, effectively, our species figured out that if

576
00:36:31,768 --> 00:36:35,294
you take a big enough corpus of text, like 1 trillion

577
00:36:35,342 --> 00:36:38,866
tokens or something, and then you mush it up for long enough with

578
00:36:38,888 --> 00:36:42,134
a stash of gpus whose prices just

579
00:36:42,172 --> 00:36:45,560
skyrocket because mining wasn't enough,

580
00:36:46,170 --> 00:36:50,438
all of a sudden you can have this new type of software that

581
00:36:50,524 --> 00:36:54,710
can summarize text, that can kind of understand intent,

582
00:36:54,790 --> 00:36:59,020
that can do a lot of things that are creepily human like.

583
00:36:59,390 --> 00:37:02,906
And I think for us, like in the SRE space

584
00:37:03,088 --> 00:37:06,186
and incident management and

585
00:37:06,208 --> 00:37:09,438
chaos engineering, that creates a massive opportunity

586
00:37:09,604 --> 00:37:13,134
to solve at least a part of

587
00:37:13,172 --> 00:37:16,782
that problem where it's easy to get the data, it's much

588
00:37:16,836 --> 00:37:20,114
less easy to actually make sense of it and

589
00:37:20,232 --> 00:37:23,586
summarize it, because typically it's a lot

590
00:37:23,608 --> 00:37:27,682
of data and actually leverage this large

591
00:37:27,736 --> 00:37:31,282
language models to do

592
00:37:31,336 --> 00:37:34,806
some of that harder work for you. Mandi, think what

593
00:37:34,828 --> 00:37:38,482
I was picturing the other day is like, why am I still writing

594
00:37:38,546 --> 00:37:41,874
bash all those years later? I'm still terrible

595
00:37:41,922 --> 00:37:44,986
at writing bash, and every now and then I have to look up how to

596
00:37:45,008 --> 00:37:47,980
do a loop, because that's bash for you.

597
00:37:48,990 --> 00:37:52,374
Why am I not talking to a small optimized

598
00:37:52,422 --> 00:37:56,266
LLM that can run locally and doesn't cost the

599
00:37:56,288 --> 00:38:00,286
price of a house in electricity to run? And if we apply a

600
00:38:00,308 --> 00:38:04,250
similar logic to understanding all the signals

601
00:38:04,330 --> 00:38:07,694
that we already have from all the tooling that we have for

602
00:38:07,732 --> 00:38:12,290
chaos and for SRE and in general for observability,

603
00:38:12,630 --> 00:38:16,626
I think we could really take it

604
00:38:16,648 --> 00:38:20,446
to the next level. Mandi, make a lot of these arguments

605
00:38:20,478 --> 00:38:23,974
about, oh, but this is work, and we don't have budget for that,

606
00:38:24,012 --> 00:38:27,954
somewhat mute because you can do it automatically. So I'm

607
00:38:28,002 --> 00:38:31,734
super hopeful about that. I've not

608
00:38:31,772 --> 00:38:35,494
been in the AI space for very long, but last year

609
00:38:35,532 --> 00:38:39,182
I kind of realized that this is not like crypto

610
00:38:39,346 --> 00:38:42,634
that's going to hype, that's going to die out. This is

611
00:38:42,672 --> 00:38:46,074
legitimate new discovery that actually turns out to not be

612
00:38:46,112 --> 00:38:49,754
as difficult as the Sci-Fi writers

613
00:38:49,802 --> 00:38:53,278
had us believe to achieve that kind of like human

614
00:38:53,364 --> 00:38:57,502
like interaction. So I'm both creeped out about this

615
00:38:57,556 --> 00:39:00,738
and super excited, and I think that,

616
00:39:00,824 --> 00:39:03,874
well, I would love stuff like

617
00:39:03,912 --> 00:39:08,146
that to come out of our community and I

618
00:39:08,168 --> 00:39:11,386
think it will. So, yeah, here's a prediction

619
00:39:11,438 --> 00:39:13,350
for you. Let's see how this ages.

620
00:39:17,050 --> 00:39:21,234
Absolutely, Miko. I think with things changing,

621
00:39:21,282 --> 00:39:24,806
and as you mentioned over the last couple of years,

622
00:39:24,908 --> 00:39:28,394
how we have seen AI come in, I think

623
00:39:28,592 --> 00:39:32,106
we'll see a lot of change. And as you mentioned, it's not like

624
00:39:32,128 --> 00:39:34,460
crypto. The hype will come up, tie down.

625
00:39:36,270 --> 00:39:39,822
If you talk about chaos today as well, we've been still

626
00:39:39,876 --> 00:39:42,954
referring to what was done initially, chaos monkey,

627
00:39:43,002 --> 00:39:46,506
the principles of chaos. I think that still stays

628
00:39:46,538 --> 00:39:49,914
the same. So hopefully that stays alive tomorrow

629
00:39:49,962 --> 00:39:52,640
as well. So with this, I think,

630
00:39:53,490 --> 00:39:57,294
yes. Miko? Yeah. Don't get me wrong. Right now everybody's slapping AI

631
00:39:57,342 --> 00:40:00,546
on everything. Seems like this is

632
00:40:00,568 --> 00:40:04,102
the way to raise funds at the moment and all of that. So that bit

633
00:40:04,156 --> 00:40:07,558
will go away eventually, but I think there is a

634
00:40:07,564 --> 00:40:11,926
legitimate part of it that's definitely shifted the

635
00:40:11,948 --> 00:40:15,322
landscape. Yeah,

636
00:40:15,456 --> 00:40:19,066
absolutely, absolutely. So with this, we'll just cover

637
00:40:19,168 --> 00:40:22,570
1 minute each of sharing what the future

638
00:40:22,640 --> 00:40:26,654
looks like. I think Mika has given a lot of insight. So before we

639
00:40:26,692 --> 00:40:30,474
move on to him giving the final future prediction direction,

640
00:40:30,522 --> 00:40:34,586
let's, let's get an insight from Sylvan.

641
00:40:34,698 --> 00:40:37,150
What do you think about the future direction?

642
00:40:38,690 --> 00:40:39,680
Well, yeah,

643
00:40:43,990 --> 00:40:47,426
like you said, michael, predictions. All right,

644
00:40:47,528 --> 00:40:51,346
future direction for Chaos Toolkit. I think I

645
00:40:51,368 --> 00:40:55,782
want to spend a lot of time trying to care

646
00:40:55,836 --> 00:40:59,926
for it where I couldn't for the last few years because I was a

647
00:40:59,948 --> 00:41:03,906
little too busy with reliably and all other things. So I

648
00:41:03,948 --> 00:41:08,140
think I owe to the community a little bit more

649
00:41:09,470 --> 00:41:13,302
care for the product. So it's going to be essentially documentation.

650
00:41:13,446 --> 00:41:16,922
It's going to be a lot of tidying up. If I could

651
00:41:16,976 --> 00:41:20,254
rewrite that in rust, not because I think Rust is better than

652
00:41:20,292 --> 00:41:23,838
Python, not at all, but purely because I wish I could just

653
00:41:23,924 --> 00:41:27,870
drop a binary and people could just run it, whereas with Python

654
00:41:28,870 --> 00:41:32,318
it's a mess, but bits

655
00:41:32,334 --> 00:41:35,730
and pieces like that. So basically making the project, I think,

656
00:41:35,800 --> 00:41:39,426
more, I would like to

657
00:41:39,448 --> 00:41:43,394
be a bit more developer centric. So go back to

658
00:41:43,432 --> 00:41:47,254
the developers just because, and that goes

659
00:41:47,292 --> 00:41:51,350
back to our discussion earlier. There is one thing we didn't mention,

660
00:41:51,420 --> 00:41:54,630
but I have a sense that there is a fatigue of

661
00:41:54,700 --> 00:41:57,926
new things coming all the time, and there is a fatigue

662
00:41:57,958 --> 00:42:01,338
generally across the board. And I would like to come back

663
00:42:01,424 --> 00:42:05,514
and I sense a little bit of what do we do with

664
00:42:05,552 --> 00:42:08,766
all of this? So that's why I'm interested in going back to

665
00:42:08,948 --> 00:42:12,254
perhaps talking to developers or engineers to

666
00:42:12,292 --> 00:42:15,646
be more global and try to be out of their

667
00:42:15,668 --> 00:42:19,294
way and not promise too much and just deliver that

668
00:42:19,332 --> 00:42:22,706
one tool they need and that does the thing that they want at the time

669
00:42:22,728 --> 00:42:26,050
they need. And that's it, right. Not more so

670
00:42:26,120 --> 00:42:29,666
being more focused, lean and out of their way and

671
00:42:29,688 --> 00:42:33,426
not necessarily a full on platform. I guess that would be

672
00:42:33,448 --> 00:42:36,020
where Kaosurki tries to be back, or.

673
00:42:36,550 --> 00:42:40,306
Yeah, good insight,

674
00:42:40,418 --> 00:42:43,654
Sylvan. But just one more question. How do you see

675
00:42:43,692 --> 00:42:47,434
the future of chaos engineering overall? There was one thing about

676
00:42:47,472 --> 00:42:50,842
Chaos toolkit, but what's your comment on. Yeah,

677
00:42:50,896 --> 00:42:54,602
okay, so I completely obviously missed the question. So I'm sorry

678
00:42:54,656 --> 00:42:55,420
for this.

679
00:43:02,130 --> 00:43:03,950
To me, chaos engineering,

680
00:43:06,530 --> 00:43:09,954
I agree with what has been said

681
00:43:09,992 --> 00:43:13,362
that it's still central. It's still

682
00:43:13,416 --> 00:43:17,394
central because we are glorified when

683
00:43:17,432 --> 00:43:21,298
we. I say we as engineers, globally, what we do is

684
00:43:21,464 --> 00:43:24,742
we integrate with a gazillion of third

685
00:43:24,796 --> 00:43:29,078
parties. Right? You want to build a platform, you're going to use

686
00:43:29,164 --> 00:43:33,366
stripe or something like this for your payment. You want to use other services

687
00:43:33,468 --> 00:43:37,066
like this. So you end up being. Connecting things together

688
00:43:37,168 --> 00:43:41,178
all the time. So if you don't consider this

689
00:43:41,264 --> 00:43:45,226
as a problem at

690
00:43:45,248 --> 00:43:48,446
every milestone, at every step, you're missing something as

691
00:43:48,468 --> 00:43:52,110
an engineer. So I think, hope that

692
00:43:52,180 --> 00:43:56,570
chaos engineering will be realized. It's not a buzzword,

693
00:43:56,730 --> 00:44:01,118
it's not a vendor trying to push things, but it's a legitimate

694
00:44:01,294 --> 00:44:05,214
action that you do on a daily basis. That's why I'm

695
00:44:05,342 --> 00:44:08,450
focused. But generally speaking, I hope chaos engineering,

696
00:44:09,190 --> 00:44:12,950
I'm going to use the abused verb of shifting left,

697
00:44:13,020 --> 00:44:17,314
which I don't like, but the idea of bringing chaos

698
00:44:17,362 --> 00:44:20,742
engineering closer to what engineers need to

699
00:44:20,796 --> 00:44:24,794
do to deliver their value, right. Not a thing that

700
00:44:24,832 --> 00:44:28,646
comes on top of, but that supports

701
00:44:28,678 --> 00:44:33,206
what they need to do. So I think as long as chaos engineering streamlines

702
00:44:33,238 --> 00:44:36,326
itself into the delivery pipeline, I think it's

703
00:44:36,358 --> 00:44:39,870
going to win. But if it sticks to be that thing that

704
00:44:39,940 --> 00:44:43,150
lives in its ivory tower somewhere,

705
00:44:43,970 --> 00:44:47,694
it will struggle. It will struggle. So hopefully, to me,

706
00:44:47,732 --> 00:44:50,926
chaos injuring is going to be something that the mask, in a

707
00:44:50,948 --> 00:44:54,500
way, can just take and do, and that will make it

708
00:44:56,070 --> 00:44:59,534
absolutely. Anurag,

709
00:44:59,582 --> 00:45:03,186
some thoughts from you. What's next in your chaos engineering

710
00:45:03,218 --> 00:45:05,910
journey? How do you see chaos engineering?

711
00:46:55,940 --> 00:46:59,410
Thank you so much, Anurag, for those insights. I think

712
00:46:59,780 --> 00:47:03,508
a lot of enterprises or folks who are getting started.

713
00:47:03,594 --> 00:47:07,700
Trying to see your direction will get some insight from your thoughts.

714
00:47:08,840 --> 00:47:12,484
Karthik, would you like to share some insights on the future direction?

715
00:47:12,532 --> 00:47:13,690
According to you,

716
00:47:16,060 --> 00:47:19,784
I like the point about documentation. That's a sure

717
00:47:19,822 --> 00:47:24,356
short candidate for us to improve on in litmus

718
00:47:24,388 --> 00:47:28,590
as well. I don't know if documentation is ever going to be

719
00:47:29,360 --> 00:47:32,876
not a problem. So it's always going

720
00:47:32,898 --> 00:47:36,364
to be something that we need to continuously keep working on.

721
00:47:36,402 --> 00:47:40,384
And that's really the top of mind thing

722
00:47:40,582 --> 00:47:45,180
for us as well. On predictions,

723
00:47:45,260 --> 00:47:48,864
I don't know if this is a prediction. This is probably something

724
00:47:48,902 --> 00:47:54,704
that's already out there. It's known domain chaos

725
00:47:54,752 --> 00:47:58,516
engineering is going to treat faults as just

726
00:47:58,538 --> 00:48:02,264
going to commoditize faults. It's more than fault injection and stuff.

727
00:48:02,302 --> 00:48:06,008
It's going to be about what insights it is giving about

728
00:48:06,174 --> 00:48:09,896
the system. So how do you measure and what all

729
00:48:09,918 --> 00:48:14,084
can you measure and let your developers

730
00:48:14,132 --> 00:48:17,912
or sres get value out of that particular chaos

731
00:48:17,976 --> 00:48:21,032
experiment run? You don't want to be running an experiment,

732
00:48:21,096 --> 00:48:25,212
investing time and tooling to not learn more about the system.

733
00:48:25,346 --> 00:48:28,832
So how much can you learn about your system by running

734
00:48:28,886 --> 00:48:32,236
that experiment? And what all can you measure

735
00:48:32,428 --> 00:48:35,904
not just over the course of one experiment, but across your

736
00:48:36,022 --> 00:48:39,404
entire chaos journey? How are you going to quantify?

737
00:48:39,532 --> 00:48:43,220
That's probably the questions that we're already being faced with,

738
00:48:43,290 --> 00:48:46,416
and there are a lot of different folks attacking

739
00:48:46,448 --> 00:48:49,888
it in different ways, but I think that's

740
00:48:49,904 --> 00:48:53,316
really critical and probably that is also going to,

741
00:48:53,338 --> 00:48:56,676
in a way, I think, motivate people to do more of Chaos engineering

742
00:48:56,788 --> 00:49:00,650
if they can sort of taste how much they will learn about the system,

743
00:49:01,180 --> 00:49:04,612
how much they can learn about it by, let's say, doing a chaos experiment.

744
00:49:04,756 --> 00:49:08,812
These are all the metrics that I've got. These are the places where

745
00:49:08,866 --> 00:49:11,404
probably I wouldn't have looked otherwise at all.

746
00:49:11,522 --> 00:49:14,584
Right. That's basically the original intent of chaos

747
00:49:14,632 --> 00:49:18,208
anyways. Probably also why CNCF put all

748
00:49:18,214 --> 00:49:22,336
the chaos tools in the observability category when they started out in

749
00:49:22,358 --> 00:49:23,200
the original.

750
00:49:26,260 --> 00:49:29,940
So that's probably the most important area

751
00:49:30,010 --> 00:49:34,016
in which the chaos tooling or the general discourse

752
00:49:34,048 --> 00:49:36,630
about chaos is going to evolve. Probably.

753
00:49:38,760 --> 00:49:42,096
All right, thank you so much, Karthik, for some insight.

754
00:49:42,208 --> 00:49:45,492
Before we close the panel, some conclusive statements

755
00:49:45,556 --> 00:49:49,044
from Miko on his thoughts. He's given a prediction,

756
00:49:49,092 --> 00:49:52,616
but his thoughts on the future. What are the changes he

757
00:49:52,638 --> 00:49:55,820
would like to see coming in? Thoughts?

758
00:49:57,120 --> 00:50:01,768
Yeah, so I ventured one already about the artificial

759
00:50:01,864 --> 00:50:06,140
intelligence. I would also like to venture one about the

760
00:50:06,210 --> 00:50:09,504
very human intelligence. I think it goes back

761
00:50:09,542 --> 00:50:13,472
to what Sylvan was saying, that we kind of all run in different

762
00:50:13,526 --> 00:50:17,376
directions and try to do things. And I

763
00:50:17,398 --> 00:50:22,180
would love to see us come together a bit more often and

764
00:50:22,330 --> 00:50:25,556
maybe that walls be enough to generate a little

765
00:50:25,578 --> 00:50:29,060
bit of hype and generate a little bit of an agreement to

766
00:50:29,130 --> 00:50:33,172
kind of accept this as a boring practice that's

767
00:50:33,236 --> 00:50:36,936
no longer crazy to do.

768
00:50:37,118 --> 00:50:40,184
And we're doing some of that with comfort. Two,

769
00:50:40,302 --> 00:50:42,884
shout out to mark, my brother.

770
00:50:43,012 --> 00:50:45,230
We're doing some of that with Sre day,

771
00:50:46,560 --> 00:50:50,236
but I'm not sure what form this should have.

772
00:50:50,418 --> 00:50:54,056
But I definitely would love to see more of that cooperation.

773
00:50:54,168 --> 00:50:57,356
And I think basically what

774
00:50:57,378 --> 00:51:00,400
I'm saying is that the tools are there and

775
00:51:00,470 --> 00:51:04,592
we figure out most of the technical aspect and if we manage

776
00:51:04,646 --> 00:51:08,816
to figure out the human aspect a bit better, we'll be on

777
00:51:08,838 --> 00:51:10,130
the right track.

778
00:51:11,940 --> 00:51:16,396
Absolutely. Absolutely. Miko, very well said. I think there's

779
00:51:16,428 --> 00:51:20,092
so many projects that are coming up, I mean, supported by the CNCF,

780
00:51:20,156 --> 00:51:24,056
open source, on the end price side of things, so many

781
00:51:24,238 --> 00:51:27,656
events, talks. I mean, if we are seeing Con 42,

782
00:51:27,678 --> 00:51:32,090
chaos engineering for the fourth year, fifth year running, and then

783
00:51:32,620 --> 00:51:35,944
there's chaos cons carnival, so many meetups,

784
00:51:35,992 --> 00:51:39,564
webinars happening. So I think these

785
00:51:39,602 --> 00:51:42,684
things obviously lead chaos engineering until

786
00:51:42,722 --> 00:51:46,172
now. And we hope to see that over the next at least four or five

787
00:51:46,226 --> 00:51:49,728
years, maybe chaos engineering with

788
00:51:49,814 --> 00:51:53,264
all the modern practices, with all the evolution will still

789
00:51:53,302 --> 00:51:56,768
exist. But again, thank you so much, everyone,

790
00:51:56,854 --> 00:52:01,248
for joining in the panel. And I hope all of them watching just

791
00:52:01,414 --> 00:52:05,168
got some insight, getting started with the practice or

792
00:52:05,334 --> 00:52:08,704
have more inputs for the community. And again, I hope

793
00:52:08,742 --> 00:52:12,264
to see more conversations happening around chaos and similar pan is going

794
00:52:12,302 --> 00:52:12,950
through. Thanks everyone.

