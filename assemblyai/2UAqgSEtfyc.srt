1
00:00:00,410 --> 00:00:06,174
Jamaica real

2
00:00:06,212 --> 00:00:10,618
time feedback into the behavior of your distributed systems and observing

3
00:00:10,714 --> 00:00:14,538
changes exceptions errors in real time allows

4
00:00:14,554 --> 00:00:17,914
you to not only experiment with confidence, but respond

5
00:00:18,042 --> 00:00:20,480
instantly to get things working again.

6
00:00:24,610 --> 00:00:47,802
Those everyone,

7
00:00:47,936 --> 00:00:51,206
let's start today's talk on internationalisation and localization.

8
00:00:51,318 --> 00:00:55,114
So this will be the agenda for today's talk. We will be covering multilingual software

9
00:00:55,162 --> 00:00:58,734
and apps, internationalization and localization. Why do we need

10
00:00:58,772 --> 00:01:02,286
these and what is the process to set it up? What are the challenges and

11
00:01:02,308 --> 00:01:05,810
complexity we may see when we implement these into our application?

12
00:01:05,960 --> 00:01:09,954
We'll also try to touch base upon RDL and the browser support available

13
00:01:10,072 --> 00:01:13,986
while building multilingual apps. Let's take an example. There is a

14
00:01:14,008 --> 00:01:17,542
user who is trying to browse some content on web using site one.

15
00:01:17,596 --> 00:01:21,506
Unfortunately, site one supports only English and this user

16
00:01:21,538 --> 00:01:24,962
is not a native english user. So what alternative

17
00:01:25,026 --> 00:01:29,062
he has? Probably he'll drop site one and he moved to some other site,

18
00:01:29,116 --> 00:01:32,842
for example site two, which is a multilingual app. There he can choose

19
00:01:32,896 --> 00:01:35,958
the language of his choice and can browse the content happily.

20
00:01:36,134 --> 00:01:39,354
So he was not satisfied using site one. Thus he moved to

21
00:01:39,392 --> 00:01:42,958
site two, means site one has just now lost a valuable customer

22
00:01:43,044 --> 00:01:47,274
to site two because they couldn't implement multilingual apps.

23
00:01:47,402 --> 00:01:51,662
So the question to be asked here is, is my app ready? Is my app

24
00:01:51,716 --> 00:01:54,926
capable enough to cater the

25
00:01:54,948 --> 00:01:58,914
need of the app? Can all the users across the globe use my

26
00:01:59,032 --> 00:02:02,738
app? If the answer is yes, then I think we are on the right track.

27
00:02:02,824 --> 00:02:06,542
But yeah, if there are some gaps, probably in next few slides we'll identify

28
00:02:06,606 --> 00:02:10,262
those gaps and we'll try to make our application to be used

29
00:02:10,316 --> 00:02:13,670
by every users across the globe. So let's see what is

30
00:02:13,740 --> 00:02:16,962
there in the next few slides. Multilingual software

31
00:02:17,106 --> 00:02:20,714
what do we mean by multilingual software? As those name states,

32
00:02:20,912 --> 00:02:23,910
something that can be rendered into multiple languages.

33
00:02:24,070 --> 00:02:27,786
So these are the softwares or applications that has the capability to

34
00:02:27,808 --> 00:02:31,594
render in multiple languages with just no to minimal

35
00:02:31,642 --> 00:02:35,166
change. It's the future of app development because whatever you are

36
00:02:35,188 --> 00:02:38,574
building today, you want all the users to use

37
00:02:38,612 --> 00:02:42,030
your application. You don't want to build different

38
00:02:42,100 --> 00:02:45,234
variants of your application just to cater a

39
00:02:45,272 --> 00:02:48,626
particular market segment. This process require two

40
00:02:48,648 --> 00:02:52,242
phases, internationalization and localization. So we will be covering up those

41
00:02:52,296 --> 00:02:55,570
two topics in the next few slides.

42
00:02:56,150 --> 00:02:59,810
What is the end goal here? I think every business wants expansion,

43
00:02:59,890 --> 00:03:03,254
so they want to globalize their business. They want to globalize your application

44
00:03:03,372 --> 00:03:06,742
off platform. So globalization is the goal of building

45
00:03:06,796 --> 00:03:10,982
multilingual software. So you want to build any application which

46
00:03:11,116 --> 00:03:14,598
every user across the globe, no matter which language he belongs

47
00:03:14,614 --> 00:03:17,818
to, which region he belongs to, he should be able to use your application.

48
00:03:17,984 --> 00:03:21,520
So that's the end goal of building internationalized application.

49
00:03:22,130 --> 00:03:25,758
What is internationalization then? As the name

50
00:03:25,924 --> 00:03:29,034
suggests, it is something to internationalize

51
00:03:29,082 --> 00:03:32,286
your application across the nations, across the

52
00:03:32,308 --> 00:03:35,634
locales. So it is shortened as I 18 n

53
00:03:35,672 --> 00:03:39,042
because there are 18 letters in between. In those is the

54
00:03:39,096 --> 00:03:42,850
process of making localization possible. So basically

55
00:03:42,920 --> 00:03:47,058
what we are doing here is we are actually architecturing our system or platform

56
00:03:47,144 --> 00:03:50,374
in a way that tomorrow if we have to introduce a new

57
00:03:50,492 --> 00:03:53,814
language or locale, we should be able to do that without any

58
00:03:53,852 --> 00:03:56,754
additional change. So this is a capability to adapt.

59
00:03:56,802 --> 00:04:00,758
Different locales is the backbone of app translation.

60
00:04:00,854 --> 00:04:04,422
So if you want to translate your application from English

61
00:04:04,486 --> 00:04:07,962
to, for example, German, right? So you have to have

62
00:04:08,016 --> 00:04:11,386
internationalization in place. It's not like you can directly translate your

63
00:04:11,408 --> 00:04:14,766
application because that is also possible, but that requires a lot of

64
00:04:14,788 --> 00:04:17,520
effort and lot of cost involved into that.

65
00:04:18,050 --> 00:04:21,562
There are approaches through which this internationalization and localization

66
00:04:21,626 --> 00:04:25,442
can be implemented, so that you need not worry about those

67
00:04:25,496 --> 00:04:28,894
changes at runtime or deployment time. Things can be hosted

68
00:04:28,942 --> 00:04:32,834
separately outside of your source code. Then the next question is,

69
00:04:32,872 --> 00:04:36,486
is text the only thing that should be internationalized? I think

70
00:04:36,508 --> 00:04:40,230
the answer is no, because there are some other assets available

71
00:04:40,300 --> 00:04:43,010
on your application, like images, currency,

72
00:04:43,090 --> 00:04:46,374
numeric representations, punctuations. All these things

73
00:04:46,412 --> 00:04:49,846
should be internationalisation because different locales have different representation

74
00:04:49,878 --> 00:04:53,578
of these assets. So if you don't internationalisation it now,

75
00:04:53,664 --> 00:04:57,594
then you won't be able to localize it later on. Next topic is

76
00:04:57,632 --> 00:05:01,046
localization. As we can see, there are ten letters

77
00:05:01,078 --> 00:05:04,446
in between l and n. That's why it's shortened as l ten n.

78
00:05:04,548 --> 00:05:07,882
Those is a process of translation to different locales.

79
00:05:08,026 --> 00:05:11,790
So in those first phase we actually made our platform

80
00:05:11,860 --> 00:05:15,954
or application as internationalisation one, where now

81
00:05:15,992 --> 00:05:19,762
the setup is ready. Those next step is to put different

82
00:05:19,816 --> 00:05:23,442
locales into your application. So translating to different locales is

83
00:05:23,496 --> 00:05:27,438
localization. Target based localization means it's

84
00:05:27,454 --> 00:05:30,934
not like we just have to translate our content. We have to see what all

85
00:05:30,972 --> 00:05:34,658
segments we are going to cover. What are the different languages,

86
00:05:34,754 --> 00:05:38,234
different country, different locales we are going to cover based on that

87
00:05:38,272 --> 00:05:42,090
localisation should happen. Then once the localizations are in place,

88
00:05:42,160 --> 00:05:46,074
the application should be thoroughly tested. Because when

89
00:05:46,112 --> 00:05:49,834
you change the translations or locales of any

90
00:05:49,872 --> 00:05:53,006
language into your application, the problem you can

91
00:05:53,028 --> 00:05:57,114
see is some of the distorted UI, some of the improper translations,

92
00:05:57,242 --> 00:06:00,670
all those things have to be tested thoroughly. Not everything

93
00:06:00,740 --> 00:06:04,306
can be localized. In the last slide we have seen what all can

94
00:06:04,328 --> 00:06:07,842
be internationalized. That was a limited set though. This says

95
00:06:07,896 --> 00:06:11,170
not everything can be localized means okay,

96
00:06:11,240 --> 00:06:14,302
you translated your text, you translated your images,

97
00:06:14,366 --> 00:06:16,886
currency, everything is localized now.

98
00:06:17,068 --> 00:06:20,086
But still there are some technical terms,

99
00:06:20,188 --> 00:06:24,054
some names which should not be localized. So based

100
00:06:24,092 --> 00:06:27,334
on your application requirement, we have to figure out what all things should not be

101
00:06:27,372 --> 00:06:31,782
localized. So those things we have to keep outside of our internationalization

102
00:06:31,846 --> 00:06:35,770
scope. Why do we need internationalization and localisation

103
00:06:36,350 --> 00:06:40,594
like we have seen in the first slide? Every business needs an expansion.

104
00:06:40,742 --> 00:06:44,542
They want a global market footprint. They want to build an application

105
00:06:44,676 --> 00:06:48,446
that will be used by each and every users across the

106
00:06:48,468 --> 00:06:52,446
globe. In the second slide or

107
00:06:52,468 --> 00:06:55,954
in the first slide we have seen that there was a user who was

108
00:06:55,992 --> 00:06:59,442
not very satisfied. That's why he moved from site one to site two.

109
00:06:59,576 --> 00:07:03,666
So customer satisfaction is one of the aspect or

110
00:07:03,688 --> 00:07:06,578
one of the motivation behind internationalization.

111
00:07:06,754 --> 00:07:10,342
And we all know a happy customer is

112
00:07:10,396 --> 00:07:13,858
like contributing to your sales or growth of the organization,

113
00:07:13,954 --> 00:07:17,282
right? If the customer is not happy, he will drop,

114
00:07:17,426 --> 00:07:21,690
but if he is happy, probably you will get some conversion from his access

115
00:07:21,760 --> 00:07:25,130
to your application. Avoiding cultural conflicts.

116
00:07:25,630 --> 00:07:29,926
There are some text or some visuals which are

117
00:07:30,048 --> 00:07:33,402
okay in some language, but has some inappropriate

118
00:07:33,466 --> 00:07:37,166
or some conflicting or offensive meaning in different

119
00:07:37,268 --> 00:07:40,974
locales. So to avoid all those things, translation is

120
00:07:41,012 --> 00:07:44,542
good because you are actually going to mold or modify those

121
00:07:44,596 --> 00:07:48,898
content based on the target locales. So there won't be any situation

122
00:07:48,984 --> 00:07:52,418
where you can see these cultural conflicts. I think one

123
00:07:52,424 --> 00:07:55,998
of the important aspect is if I have to launch my application to

124
00:07:56,024 --> 00:07:58,866
a new segment. New market segment,

125
00:07:58,978 --> 00:08:02,422
right. For example, I have built some application in

126
00:08:02,476 --> 00:08:06,742
English, German and Dutch and I want to launch the application in

127
00:08:06,796 --> 00:08:10,102
some of the region, like maybe

128
00:08:10,156 --> 00:08:13,466
Chinese. Right? So what I have to do is I have to just

129
00:08:13,568 --> 00:08:17,386
put those locales or the translation in and I can launch my application

130
00:08:17,488 --> 00:08:21,846
into that local market. So the time to market while launching

131
00:08:21,878 --> 00:08:25,786
your application into a new market will be relatively very less compared

132
00:08:25,818 --> 00:08:29,406
to building an application from those scratch. Okay, so this

133
00:08:29,428 --> 00:08:32,994
is the process of translation. What we have to do to make

134
00:08:33,032 --> 00:08:36,306
our application internationalisation. First of

135
00:08:36,328 --> 00:08:40,210
all, you have to take out all the textual content to some config.

136
00:08:41,910 --> 00:08:45,282
Mostly this common approach of putting a key value

137
00:08:45,336 --> 00:08:49,342
pair separated from your code base is followed.

138
00:08:49,486 --> 00:08:52,662
So if you can see in the first one there is a div with hello

139
00:08:52,716 --> 00:08:56,006
word, which is hard coded text into your application. So what

140
00:08:56,028 --> 00:08:59,670
we have to do is we have to extract those hello word text to a

141
00:08:59,820 --> 00:09:03,690
config file where there will be a key called as hello underscore content

142
00:09:03,760 --> 00:09:07,434
and then the text hello word. So this is

143
00:09:07,472 --> 00:09:11,850
the english content. So means this config is going to contain all the english text.

144
00:09:12,000 --> 00:09:15,486
Now we have to actually translate it to some other language. If you see

145
00:09:15,508 --> 00:09:19,390
the third image on the right side which is having a different language. So whatever

146
00:09:19,460 --> 00:09:22,762
was in English, we have translated it to for example German,

147
00:09:22,906 --> 00:09:26,814
right? And then in your code you will just get that config

148
00:09:26,862 --> 00:09:30,002
loaded and just say config hello content. And based

149
00:09:30,056 --> 00:09:33,630
on your selected config, it will either render this in English

150
00:09:33,710 --> 00:09:37,766
or German. So once you have extracted all your

151
00:09:37,948 --> 00:09:41,238
static text, but of your source code, what you are

152
00:09:41,244 --> 00:09:45,186
going to do, you are going to do some translation

153
00:09:45,218 --> 00:09:48,518
of these config like I have done in image three,

154
00:09:48,604 --> 00:09:52,134
the same config has to be translated into the destination

155
00:09:52,182 --> 00:09:55,546
language. Then you have to take user's language and pick the

156
00:09:55,568 --> 00:09:59,366
right config. So in this example I have two configs ready, English and German.

157
00:09:59,478 --> 00:10:02,926
And based on the user preferred language, I will pick one

158
00:10:02,948 --> 00:10:06,394
of the config and my application will be rendered using that config

159
00:10:06,442 --> 00:10:09,690
only. Like we discussed,

160
00:10:09,770 --> 00:10:13,774
numbers, currency, formatting, everything should be localized. So if you can see this

161
00:10:13,812 --> 00:10:17,154
example, there was a number, 123456, dot, seven,

162
00:10:17,192 --> 00:10:20,994
eight, nine. And if you can see I am translating it

163
00:10:21,032 --> 00:10:24,434
to German, which is be and then

164
00:10:24,472 --> 00:10:28,022
japanese and then enin. So you can see

165
00:10:28,156 --> 00:10:32,258
every localization is having its own representation.

166
00:10:32,354 --> 00:10:36,006
Somewhere the currency is at the end, somewhere the currency symbol is at the

167
00:10:36,108 --> 00:10:39,430
first place, someone is using dot

168
00:10:40,170 --> 00:10:44,186
and someone is using comma instead. So you can see there

169
00:10:44,208 --> 00:10:47,414
is a difference. Those is a subtle difference when you actually localize

170
00:10:47,462 --> 00:10:51,134
this number. And so you have to do all these changes into

171
00:10:51,172 --> 00:10:54,270
your application to make it internationalized.

172
00:10:55,010 --> 00:10:58,574
Then the next one is conditional rendering. So there are still chances where

173
00:10:58,612 --> 00:11:01,802
your application is initially rendered into some language,

174
00:11:01,866 --> 00:11:05,586
for example maybe in German, and then somebody said translate to

175
00:11:05,608 --> 00:11:09,122
English and you should be able to translate it. Or instead

176
00:11:09,176 --> 00:11:13,250
of user preference settings maybe you have exposed some option

177
00:11:13,320 --> 00:11:16,674
where you have provided a drop down where somebody can pick

178
00:11:16,712 --> 00:11:19,894
any language so they will be able to pick the language from there.

179
00:11:19,932 --> 00:11:23,030
And conditionally you should be able to pick or update your config.

180
00:11:23,610 --> 00:11:27,890
What are the challenges and complexity? So implementing

181
00:11:27,970 --> 00:11:31,562
I think internationalization in can existing app is more tricky because

182
00:11:31,616 --> 00:11:35,130
you don't know where all you have ecstatic text. So you have to first

183
00:11:35,200 --> 00:11:38,426
find out or extract all the text. Writing a new application

184
00:11:38,528 --> 00:11:42,398
into an internationalisation way is still better because you are still

185
00:11:42,484 --> 00:11:46,522
building your application and instead of just moving things from source

186
00:11:46,586 --> 00:11:50,478
to some locales config, probably you can directly add your text to the

187
00:11:50,564 --> 00:11:54,402
localization config. So I think implementing it in an existing app

188
00:11:54,456 --> 00:11:58,094
is a bit challenging. One contextual translation,

189
00:11:58,222 --> 00:12:01,906
let me take an example. Import and export. So when we are

190
00:12:01,928 --> 00:12:05,778
talking about an application, import and export means

191
00:12:05,864 --> 00:12:09,122
importing of data into some format like Excel,

192
00:12:09,186 --> 00:12:12,518
CSV and all. And exporting is to take the data out from the

193
00:12:12,524 --> 00:12:15,862
app. But if you use the same term into some

194
00:12:15,916 --> 00:12:19,954
shipping business which says okay, import means

195
00:12:20,012 --> 00:12:23,574
importing of goods from one place to another place, or exporting the goods

196
00:12:23,622 --> 00:12:27,306
from. So you see the context is changing a bit.

197
00:12:27,408 --> 00:12:31,462
So that's why context translation is very important. So when you are translating

198
00:12:31,526 --> 00:12:35,194
these strings or text, make sure you know in which context

199
00:12:35,242 --> 00:12:39,230
those are being used into your application. This is handy when you are

200
00:12:39,380 --> 00:12:43,198
giving your translation to someone else who is not aware of the application

201
00:12:43,284 --> 00:12:46,514
or the business. Third one is the translation cost.

202
00:12:46,632 --> 00:12:50,446
So most of the time you are either not familiar

203
00:12:50,478 --> 00:12:54,338
with all the languages or you want to offload this

204
00:12:54,424 --> 00:12:57,758
to someone else. So people used to give this

205
00:12:57,784 --> 00:13:01,394
responsibility to some third party organizations who will do the translation

206
00:13:01,442 --> 00:13:05,106
on your behalf. So that means there is a translation cost involved.

207
00:13:05,218 --> 00:13:08,710
And this translation cost, unfortunately is not a one time cost because

208
00:13:08,780 --> 00:13:12,746
every release you are going to add new features to your applications means you

209
00:13:12,768 --> 00:13:16,538
are going to add new more text, more content, more messages on your application,

210
00:13:16,624 --> 00:13:20,178
and those needs to be translated on every. So it's like a recurring

211
00:13:20,214 --> 00:13:24,094
cost that your application will have to pay.

212
00:13:24,212 --> 00:13:28,330
But still, I think this cost is still bearable considering

213
00:13:28,410 --> 00:13:32,030
a cost to spin up a new application into that language.

214
00:13:32,450 --> 00:13:36,286
Localization testing as we have already discussed in the previous slides,

215
00:13:36,478 --> 00:13:40,370
once you translate your application, you have to test

216
00:13:40,520 --> 00:13:44,206
both from the quality of the content as well as the UI.

217
00:13:44,398 --> 00:13:48,166
For example, I have built some UI assuming some

218
00:13:48,188 --> 00:13:51,526
character length, but when I translate that text to

219
00:13:51,548 --> 00:13:55,526
some other language, those character length got breached. So that

220
00:13:55,548 --> 00:13:59,658
means my UI will break somehow. So that's why

221
00:13:59,744 --> 00:14:03,638
testing can application after putting in the latest

222
00:14:03,734 --> 00:14:07,894
localisation is really important overhead

223
00:14:07,942 --> 00:14:11,418
in case of partial translation. So I have one interesting

224
00:14:11,504 --> 00:14:15,054
use case. Let's say I am having a platform or

225
00:14:15,092 --> 00:14:18,154
application where I have two user personas.

226
00:14:18,202 --> 00:14:21,866
One are the system admins and the other one are the system users.

227
00:14:21,978 --> 00:14:25,214
So there are some pages into your application which are only being used

228
00:14:25,252 --> 00:14:29,122
by the system admins. So system users, they are not going to see those

229
00:14:29,176 --> 00:14:32,818
pages. Now, let's say all my admins, they are

230
00:14:32,904 --> 00:14:36,614
good in English, so they can use my application without fail. But some of the

231
00:14:36,652 --> 00:14:40,082
users, they don't understand English.

232
00:14:40,226 --> 00:14:43,814
They understand their native language only. So that means I have to translate my

233
00:14:43,852 --> 00:14:47,366
application to their native language. My application is

234
00:14:47,388 --> 00:14:51,126
internationalized, so it's not a big deal for me to translate

235
00:14:51,158 --> 00:14:54,666
my application. But what is matter here is

236
00:14:54,688 --> 00:14:58,010
the translation cost. If I have to translate the entire application,

237
00:14:58,160 --> 00:15:01,674
it will have some cost associated with it. But I

238
00:15:01,712 --> 00:15:05,658
want the translation only for the end user pages. I don't want to translate

239
00:15:05,754 --> 00:15:09,390
the admin pages because those end users are never going to see

240
00:15:09,540 --> 00:15:13,050
the admin pages. So how can I do this partial translation?

241
00:15:13,210 --> 00:15:16,414
So I think I paste this somewhere

242
00:15:16,462 --> 00:15:19,954
in the past into one of my projects. And what we thought

243
00:15:19,992 --> 00:15:23,566
of doing was that either you segregate your resources

244
00:15:23,598 --> 00:15:27,634
into multiple files and there will be one which

245
00:15:27,672 --> 00:15:30,866
is used for admin and the other one which is used for end user images.

246
00:15:30,978 --> 00:15:34,354
And based on whether your user is admin or end user,

247
00:15:34,402 --> 00:15:38,066
you will render either the end user file only or admin

248
00:15:38,098 --> 00:15:42,026
plus end user file. Or what you can do is you can namespace your

249
00:15:42,208 --> 00:15:45,994
resources in the config. So in the config where you have all these key

250
00:15:46,032 --> 00:15:49,654
value pair, you can namespace those, maybe suffix or prefix

251
00:15:49,702 --> 00:15:53,662
them with something so that you can identify, and you can translate only those

252
00:15:53,716 --> 00:15:56,302
resources which are required as end user level.

253
00:15:56,436 --> 00:16:00,442
So these are some of the interesting challenges

254
00:16:00,506 --> 00:16:04,062
which you will face when you try to start

255
00:16:04,116 --> 00:16:06,100
within internationalizing your application.

256
00:16:07,190 --> 00:16:10,738
I think this is one of the interesting, and one of

257
00:16:10,744 --> 00:16:14,660
my favorite images I have seen in those past when I started

258
00:16:15,190 --> 00:16:18,662
looking into this internationalization stuff. So you can see

259
00:16:18,716 --> 00:16:22,006
there are three images. In the left one there is

260
00:16:22,028 --> 00:16:25,298
a user who is very lazy, kind of sleepy.

261
00:16:25,474 --> 00:16:28,614
And then the next image says there is an energy drink. And the third one

262
00:16:28,652 --> 00:16:32,454
you can see is full on energy. So I think what I'll

263
00:16:32,502 --> 00:16:35,418
drive out of this image is that I think this guy,

264
00:16:35,504 --> 00:16:38,518
after drinking this drink, this energy drink,

265
00:16:38,614 --> 00:16:42,346
he got some energy, right? Just flip the

266
00:16:42,448 --> 00:16:45,854
sequence and you can see there is a guy who was full on energy

267
00:16:45,972 --> 00:16:50,000
after drinking this energy drink. He is stuck, he's down.

268
00:16:50,370 --> 00:16:54,122
So you see, just by changing the sequence of events,

269
00:16:54,266 --> 00:16:58,526
the ordering of these images, the meaning got completely changed.

270
00:16:58,558 --> 00:17:02,158
In the first slide, it was like an advertisement of this energy drink.

271
00:17:02,254 --> 00:17:06,610
And in those slide, I'm not sure how this will impact

272
00:17:07,030 --> 00:17:10,710
this organization, who is dealing with this energy

273
00:17:10,780 --> 00:17:14,774
tank. This raises an interesting concept called as right to

274
00:17:14,812 --> 00:17:18,486
left. So we have some languages, we call them RTL

275
00:17:18,518 --> 00:17:21,654
languages, such as Arabic, Hebrew, urdu, Farsi.

276
00:17:21,702 --> 00:17:25,306
So these languages are written and read from right to left.

277
00:17:25,488 --> 00:17:29,370
So that means if you have to build any application using

278
00:17:29,440 --> 00:17:32,826
these languages, should those application be also rendering from

279
00:17:32,848 --> 00:17:36,126
right to left? I think the answer is yes. So you have to toggle the

280
00:17:36,148 --> 00:17:40,014
layout. Most of the application they have sidebar on the left

281
00:17:40,132 --> 00:17:43,678
and on the top navigation bar. Their menus start from left to right

282
00:17:43,764 --> 00:17:47,474
and they have a layout which will usually drive from top to bottom and left

283
00:17:47,512 --> 00:17:51,246
to right. So all these things should be flipped, should be mirrored.

284
00:17:51,438 --> 00:17:55,106
So your sidebar should be coming from the right and your menu should be

285
00:17:55,128 --> 00:17:58,840
starting from the right. Your layout will flow from right to left.

286
00:17:59,210 --> 00:18:02,754
So this thing should happen. And then you should also change your input

287
00:18:02,882 --> 00:18:06,454
language. So when you're typing something, should you be able

288
00:18:06,492 --> 00:18:09,986
to type only in English or since your application is Arabic,

289
00:18:10,018 --> 00:18:14,006
you should be able to type in Arabic once you're typing how the rendering

290
00:18:14,038 --> 00:18:17,478
should be. Because when you're typing in a field, it should be right aligned

291
00:18:17,494 --> 00:18:19,450
right it should not be left aligned.

292
00:18:21,150 --> 00:18:24,554
Then the text representation. You definitely have to

293
00:18:24,592 --> 00:18:28,106
change the flow of the text as well. Image transition and slideshow

294
00:18:28,138 --> 00:18:30,942
I think this is what we have seen in the previous slide that you also

295
00:18:30,996 --> 00:18:35,534
have to take a look at the slideshow whether your back and forth navigation,

296
00:18:35,582 --> 00:18:39,060
they are working as per the RTL notation or not.

297
00:18:39,430 --> 00:18:43,026
What are the browser support available to implement this?

298
00:18:43,128 --> 00:18:46,340
There are different ways to achieve this.

299
00:18:46,790 --> 00:18:50,418
If you are working with HTML, I think you can use this attribute

300
00:18:50,514 --> 00:18:53,814
dir equal to RTL. So if you use

301
00:18:53,852 --> 00:18:57,318
this then your direction will be RTL. The default is obviously

302
00:18:57,404 --> 00:19:00,806
LTR. Then there are some tags like BDI,

303
00:19:00,998 --> 00:19:04,294
bi directional isolation elements. So if you have a mix

304
00:19:04,342 --> 00:19:07,914
of RTL and LTR content. So browser will use

305
00:19:07,952 --> 00:19:11,674
its bi directional algorithm to decide whether

306
00:19:11,792 --> 00:19:15,422
has to render that into left to right mode or right to left

307
00:19:15,476 --> 00:19:19,326
mode. Then on the CSS also you can do this thing

308
00:19:19,428 --> 00:19:23,310
by putting this props in direction equal to RTL.

309
00:19:23,970 --> 00:19:27,538
Then you also have your custom css written into your application.

310
00:19:27,704 --> 00:19:30,386
So what you have to do is you have to figure out if there are

311
00:19:30,408 --> 00:19:33,602
direction specific rules. For example float left

312
00:19:33,656 --> 00:19:37,078
right or margin left margin right padding left padding right. If you

313
00:19:37,084 --> 00:19:40,630
have those kind of rules defined into your custom

314
00:19:40,700 --> 00:19:44,742
CSS, probably you also want to segregate those. So most

315
00:19:44,796 --> 00:19:48,454
of the time what we usually do is we create one

316
00:19:48,492 --> 00:19:52,234
common config, one common cSs where there is

317
00:19:52,272 --> 00:19:55,526
nothing specific to direction and then we create one lTR

318
00:19:55,558 --> 00:19:59,094
CSS and one RTL CSS based on the user language,

319
00:19:59,142 --> 00:20:02,954
whether it's RTL or lTR. So let's say if the user's language is ltr,

320
00:20:03,002 --> 00:20:06,094
we'll pick common plus ltr. If the user's language is

321
00:20:06,132 --> 00:20:09,694
rtl, we'll pick common plus rtlcss. This way

322
00:20:09,732 --> 00:20:13,634
we can actually try to control the layout of our page.

323
00:20:13,832 --> 00:20:17,826
Then, like we have seen in the currency conversion in

324
00:20:18,008 --> 00:20:21,186
two slides back where we were actually translating some

325
00:20:21,208 --> 00:20:24,446
number into german, japanese and english iron.

326
00:20:24,558 --> 00:20:28,118
So there are some Javascript built in function, two locales, two local

327
00:20:28,204 --> 00:20:32,534
strings. So you can find a numerous number of Javascript functions available to

328
00:20:32,572 --> 00:20:36,614
do this job for you. There are some other things to be

329
00:20:36,652 --> 00:20:39,878
taken care while you are working with those internationalized

330
00:20:40,054 --> 00:20:43,898
application. So let's say you have a text,

331
00:20:44,064 --> 00:20:47,706
you have a message, right? So translate the text as a whole. Do not try

332
00:20:47,728 --> 00:20:50,998
to translate it partially because sometimes you

333
00:20:51,024 --> 00:20:54,814
feel, okay, I have this common text into

334
00:20:54,852 --> 00:20:58,814
two messages. Probably I'll just translate it separately, and the rest

335
00:20:58,852 --> 00:21:02,142
of the things I'll translate and then probably I'll try to

336
00:21:02,276 --> 00:21:05,438
concatenate these two strings. That's not the right approach,

337
00:21:05,534 --> 00:21:09,950
because in this way you will lose the meaning of that message altogether.

338
00:21:10,030 --> 00:21:13,346
So that's why it's preferred to translate those whole

339
00:21:13,448 --> 00:21:17,190
text. Do not translate partially, don't just rely on

340
00:21:17,260 --> 00:21:21,062
language code. You should also look at country

341
00:21:21,116 --> 00:21:24,854
code, for example, en us engbc. You see, we are talking

342
00:21:24,892 --> 00:21:28,182
about English only, but they have their own country

343
00:21:28,236 --> 00:21:32,362
codes associated with it. Because the language is different,

344
00:21:32,416 --> 00:21:36,182
the locales are different. That's why instead of focusing on language,

345
00:21:36,246 --> 00:21:39,254
I try to focus on a word called as locales.

346
00:21:39,302 --> 00:21:43,386
Right? So you have to focus on the locales, not just the language.

347
00:21:43,578 --> 00:21:47,722
Do not design your application based on any assumption,

348
00:21:47,786 --> 00:21:51,646
like, okay, my content will be rending in this space because the moment you

349
00:21:51,668 --> 00:21:54,894
translate it, you don't know how much space will it take. So try

350
00:21:54,932 --> 00:21:59,150
to build generic or dynamic content applications.

351
00:21:59,490 --> 00:22:03,546
I think this is what I have. Thank you everyone for listening.

352
00:22:03,658 --> 00:22:07,526
Let's go global. If you have any question, any doubt, or any

353
00:22:07,548 --> 00:22:09,942
suggestion, feel free to reach me. Thank you so much.

