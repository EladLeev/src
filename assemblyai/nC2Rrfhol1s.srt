1
00:01:28,450 --> 00:01:32,182
Hi everyone, my name is Alvarivas and today

2
00:01:32,316 --> 00:01:35,938
I'm going to talk to you about elastic compute

3
00:01:36,034 --> 00:01:38,230
with Salesforce functions.

4
00:01:38,970 --> 00:01:42,474
I am a develop developer advocate at Salesforce

5
00:01:42,602 --> 00:01:46,014
and here you have my contact details in case

6
00:01:46,052 --> 00:01:49,278
that you want to ask me anything later or to contact

7
00:01:49,364 --> 00:01:50,240
me later.

8
00:01:52,390 --> 00:01:56,174
This is a slide that I need to include because I am a Salesforce

9
00:01:56,222 --> 00:02:00,302
employee, which just means that as Salesforce

10
00:02:00,366 --> 00:02:04,338
is a publicly traded company, you should make

11
00:02:04,424 --> 00:02:08,438
purchasing decisions based on the functionality that is currently

12
00:02:08,524 --> 00:02:11,574
available. And with that,

13
00:02:11,772 --> 00:02:15,410
let's start talking about functions.

14
00:02:15,570 --> 00:02:17,720
But what is a function?

15
00:02:19,470 --> 00:02:23,334
A function is a short lived

16
00:02:23,462 --> 00:02:27,210
executable that is invoked on

17
00:02:27,280 --> 00:02:31,210
demand. Functions are serverless,

18
00:02:31,370 --> 00:02:35,242
which means that developers can build applications

19
00:02:35,306 --> 00:02:38,702
without having to manage infrastructure or

20
00:02:38,756 --> 00:02:43,142
servers, and this reduces a lot the operational

21
00:02:43,306 --> 00:02:47,314
costs. Functions are also

22
00:02:47,432 --> 00:02:51,006
elastic, which means that they will scale,

23
00:02:51,198 --> 00:02:54,922
taking more resources or less resources

24
00:02:55,006 --> 00:02:57,910
as needed based on demand.

25
00:02:59,610 --> 00:03:02,306
And what are Salesforce functions?

26
00:03:02,498 --> 00:03:06,402
Salesforce functions is a feature that we have created

27
00:03:06,466 --> 00:03:10,442
in Salesforce to provide functions as a

28
00:03:10,496 --> 00:03:14,154
service. In case

29
00:03:14,192 --> 00:03:17,754
that you don't know what Salesforce is, I'm going to

30
00:03:17,792 --> 00:03:21,818
give you a quick introduction. So Salesforce

31
00:03:21,914 --> 00:03:26,174
obviously is the name of a company, but also is a name for

32
00:03:26,212 --> 00:03:30,206
a CRM, a CRM that offers products

33
00:03:30,308 --> 00:03:34,020
for managing your relationships with

34
00:03:34,390 --> 00:03:38,322
your customers and clients, such as an application for

35
00:03:38,376 --> 00:03:42,178
sales, another one for service, for customer service,

36
00:03:42,344 --> 00:03:45,714
another one for marketing, for commerce

37
00:03:45,842 --> 00:03:49,794
and for much more. But Salesforce,

38
00:03:49,922 --> 00:03:54,406
on top of being a CRM, is also an application

39
00:03:54,588 --> 00:03:58,554
development platform. If you want to

40
00:03:58,592 --> 00:04:01,814
build applications on top of Salesforce,

41
00:04:01,942 --> 00:04:05,242
you can do that two ways. You can use low

42
00:04:05,296 --> 00:04:08,714
code tools or you can use code.

43
00:04:08,912 --> 00:04:13,520
I am a Salesforce developer, so I normally use code.

44
00:04:14,770 --> 00:04:18,490
The technologies that you can use to build applications

45
00:04:18,570 --> 00:04:23,182
with code in the platform are JavaScript.

46
00:04:23,246 --> 00:04:27,042
For the front end we use JavaScript and web

47
00:04:27,096 --> 00:04:30,846
components based framework called Lightning

48
00:04:30,958 --> 00:04:34,722
web components. And for the backend we

49
00:04:34,776 --> 00:04:38,150
have historically used Apex.

50
00:04:38,890 --> 00:04:42,630
Apex is an object oriented language very

51
00:04:42,700 --> 00:04:47,030
similar to Java and it's been there from the beginning.

52
00:04:47,470 --> 00:04:50,902
But for the backend since November

53
00:04:50,966 --> 00:04:55,846
last year, we are also able to develop Salesforce

54
00:04:55,958 --> 00:04:59,786
functions, right? So as I mentioned

55
00:04:59,888 --> 00:05:03,710
before, a Salesforce function is a short

56
00:05:03,780 --> 00:05:07,166
lived on purpose executable that is

57
00:05:07,188 --> 00:05:10,650
going to be invoked. Star and Phoenix,

58
00:05:10,730 --> 00:05:14,642
right? They are going to be invoked and run

59
00:05:14,696 --> 00:05:18,050
in a serverless way in which we are not going to

60
00:05:18,200 --> 00:05:21,810
need to manage the infrastructure that's behind

61
00:05:21,880 --> 00:05:25,002
the scenes. And they are going to be elastic,

62
00:05:25,086 --> 00:05:29,350
which means that they are going to scale, taking more or

63
00:05:29,420 --> 00:05:32,710
less resources depending on the demand.

64
00:05:33,530 --> 00:05:37,154
What else is special about Salesforce

65
00:05:37,202 --> 00:05:39,978
functions? Well, first of all,

66
00:05:40,064 --> 00:05:43,290
Salesforce functions run within the

67
00:05:43,360 --> 00:05:47,322
Salesforce trusted boundary. This means

68
00:05:47,376 --> 00:05:51,754
that from a function you are going to be able to work with Salesforce

69
00:05:51,802 --> 00:05:55,754
data, Salesforce records as your accounts

70
00:05:55,802 --> 00:05:59,386
or your leads, or whatever data you are storing

71
00:05:59,418 --> 00:06:02,910
in Salesforce, you are going to be able to

72
00:06:02,980 --> 00:06:06,546
work with those records in your function and then you

73
00:06:06,568 --> 00:06:09,794
are going to be able to send that data back to

74
00:06:09,832 --> 00:06:13,198
Salesforce. If you wanted to do some updates

75
00:06:13,294 --> 00:06:17,030
or insert some new data, whatever, right?

76
00:06:17,180 --> 00:06:20,854
This is possible thanks to an SDK that we

77
00:06:20,892 --> 00:06:24,600
use within the function and everything.

78
00:06:24,970 --> 00:06:28,234
This is very important. Everything runs within the

79
00:06:28,272 --> 00:06:32,666
Salesforce trusted infrastructure. Your data never goes

80
00:06:32,768 --> 00:06:36,266
out from Salesforce, which means that it's going to be

81
00:06:36,368 --> 00:06:39,594
safe. And third,

82
00:06:39,712 --> 00:06:43,214
I wanted to mention the different languages in

83
00:06:43,252 --> 00:06:47,406
which you can write Salesforce functions, because on

84
00:06:47,428 --> 00:06:50,526
the platform we only had apex in the past,

85
00:06:50,628 --> 00:06:54,066
but now with Salesforce functions you can write

86
00:06:54,168 --> 00:06:57,570
that code, the code that a function will run

87
00:06:57,720 --> 00:07:01,346
in JavaScript and Java for now, but we

88
00:07:01,368 --> 00:07:05,398
are also working in supporting more

89
00:07:05,484 --> 00:07:07,560
languages in the future.

90
00:07:10,490 --> 00:07:14,310
Now I want to talk a little bit about the open

91
00:07:14,380 --> 00:07:17,882
source technologies that we have used to

92
00:07:17,936 --> 00:07:21,530
build the feature to build Salesforce functions.

93
00:07:22,190 --> 00:07:25,450
First of all, we are using kubernetes.

94
00:07:26,030 --> 00:07:29,286
Kubernetes is an open source

95
00:07:29,398 --> 00:07:33,022
container orchestration engine that

96
00:07:33,076 --> 00:07:35,770
you can use to deploy,

97
00:07:35,930 --> 00:07:39,242
scale and manage your applications

98
00:07:39,306 --> 00:07:43,742
automatically, right? When they are containerized

99
00:07:43,806 --> 00:07:47,858
applications. We are also using cloud

100
00:07:47,944 --> 00:07:51,714
native buildpacks. Cloud native buildpacks is

101
00:07:51,752 --> 00:07:55,402
a technology that allows you to transform

102
00:07:55,566 --> 00:07:59,826
your application source code into a containerized

103
00:07:59,938 --> 00:08:03,046
application that then can run in any cloud,

104
00:08:03,148 --> 00:08:07,030
in our case a Kubernetes infrastructure.

105
00:08:07,390 --> 00:08:11,014
And finally, I wanted to mention cloud events.

106
00:08:11,142 --> 00:08:15,414
Cloud events is not really a technology, it's more a specification,

107
00:08:15,542 --> 00:08:19,562
right? But this specification will help

108
00:08:19,616 --> 00:08:22,814
you standardize the way in which we

109
00:08:22,852 --> 00:08:26,798
describe event data, and that way

110
00:08:26,964 --> 00:08:31,246
we will improve and standardize how

111
00:08:31,348 --> 00:08:35,010
systems and servers communicate this event

112
00:08:35,080 --> 00:08:38,978
data. So this specification, we are following it

113
00:08:39,064 --> 00:08:42,814
also in Salesforce function. Now let's

114
00:08:42,862 --> 00:08:47,618
take a look at a demo in which I'm going to show you the anatomy

115
00:08:47,714 --> 00:08:51,014
of a salesforce function. So here I

116
00:08:51,052 --> 00:08:54,722
have a set of functions that I have created

117
00:08:54,786 --> 00:08:58,538
both in Java and JavaScript. Let's take a look at a

118
00:08:58,544 --> 00:09:02,314
function in JavaScript. This function here as it is

119
00:09:02,352 --> 00:09:05,514
a node function, the entry point will

120
00:09:05,552 --> 00:09:08,810
be the index js file.

121
00:09:09,390 --> 00:09:13,226
In this file, first we are reading

122
00:09:13,338 --> 00:09:17,434
a JSON. This JSON contains thousands

123
00:09:17,482 --> 00:09:21,034
of records that correspond to schools,

124
00:09:21,162 --> 00:09:25,490
and for each school we have the latitude and longitude.

125
00:09:26,470 --> 00:09:29,954
Then we have the definition of the function.

126
00:09:30,152 --> 00:09:33,634
A function is an async function that

127
00:09:33,672 --> 00:09:38,150
you define in JavaScript that receives three parameters.

128
00:09:38,490 --> 00:09:42,082
It receives the event parameter, context parameter

129
00:09:42,146 --> 00:09:45,666
and logger parameter. The event parameter

130
00:09:45,778 --> 00:09:49,722
contains the payload with which the function has

131
00:09:49,776 --> 00:09:54,138
been invoked. The context parameter is

132
00:09:54,224 --> 00:09:58,454
the way in which we can link back to salesforce.

133
00:09:58,502 --> 00:10:02,394
If we want to do a query, for instance to retrieve salesforce

134
00:10:02,442 --> 00:10:06,362
records, we are going to do that through the context parameter.

135
00:10:06,506 --> 00:10:10,190
And finally the logger parameter helps us

136
00:10:10,340 --> 00:10:14,642
logging. For instance, if we want to drop our

137
00:10:14,696 --> 00:10:18,430
logs into a log drain, we can do that by configuring

138
00:10:18,510 --> 00:10:20,050
the lower parameter.

139
00:10:21,430 --> 00:10:25,638
So what does this function do? This function

140
00:10:25,804 --> 00:10:29,426
receives in its payload, in the payload

141
00:10:29,538 --> 00:10:32,994
with which it is invoked, a latitude

142
00:10:33,042 --> 00:10:37,000
and a longitude. Then the function is going to

143
00:10:37,390 --> 00:10:41,126
compute, it's going to take a look at the JSON file and it's

144
00:10:41,158 --> 00:10:44,940
going to compute which are the five

145
00:10:45,390 --> 00:10:49,622
closest schools to the latitude and longitude

146
00:10:49,686 --> 00:10:54,190
provided. This is a compute intensive

147
00:10:54,610 --> 00:10:58,334
operation. That is the reason we

148
00:10:58,372 --> 00:11:01,886
decided to create a salesforce function instead of

149
00:11:01,908 --> 00:11:04,830
doing this calculation in apex.

150
00:11:04,990 --> 00:11:09,438
Finally, the function returns the calculated

151
00:11:09,534 --> 00:11:13,250
schools, those schools that are more closer.

152
00:11:13,750 --> 00:11:17,240
Let's take a look at the same function but

153
00:11:17,690 --> 00:11:21,382
written in Java. This is a

154
00:11:21,436 --> 00:11:25,960
function we can open the entry point here

155
00:11:27,790 --> 00:11:31,642
and as you can see the

156
00:11:31,696 --> 00:11:34,922
function is really similar. We need

157
00:11:34,976 --> 00:11:39,018
to override an apply method that

158
00:11:39,104 --> 00:11:43,258
receives as a parameter the event and the context,

159
00:11:43,354 --> 00:11:47,280
same as it happened with the Javascript function.

160
00:11:47,650 --> 00:11:51,194
In this case the logger is not received as a parameter

161
00:11:51,242 --> 00:11:54,210
because it's a log for j instance.

162
00:11:54,710 --> 00:11:57,938
Then in the function we can

163
00:11:58,024 --> 00:12:02,398
perform exactly the same calculations but written

164
00:12:02,494 --> 00:12:06,022
in Java. Great. So now that

165
00:12:06,076 --> 00:12:09,894
you know how a function looks like, let's take

166
00:12:09,932 --> 00:12:13,190
a look at the different ways in which you can

167
00:12:13,260 --> 00:12:15,560
invoked a salesforce function.

168
00:12:16,330 --> 00:12:19,690
Functions need to be invoked from

169
00:12:19,760 --> 00:12:23,094
apex. You can invoke them synchronously

170
00:12:23,222 --> 00:12:26,714
or asynchronously. At the moment this

171
00:12:26,752 --> 00:12:29,594
is the only way in which you can invoke them,

172
00:12:29,712 --> 00:12:33,294
but we are planning to have other entry points

173
00:12:33,412 --> 00:12:37,022
in the future. Then on the platform you can

174
00:12:37,076 --> 00:12:40,894
create a lining web component or a piece

175
00:12:40,932 --> 00:12:44,882
of UI with a low code tool that invokes that

176
00:12:44,936 --> 00:12:49,330
apex code. This is what this screenshot represents.

177
00:12:49,830 --> 00:12:53,154
So now let's take a look at a demo in

178
00:12:53,192 --> 00:12:56,662
which we will see how to invoke a salesforce function.

179
00:12:56,796 --> 00:13:00,934
So, same as we had our functions folder here,

180
00:13:01,132 --> 00:13:04,690
which is what you deploy to your compute environment,

181
00:13:04,850 --> 00:13:08,954
we have another folder that contains all the code that

182
00:13:08,992 --> 00:13:12,474
is deployed to Salesforce. In that

183
00:13:12,512 --> 00:13:16,326
folder you are going to find all your apex classes.

184
00:13:16,438 --> 00:13:20,510
So let's open up this apex class in which

185
00:13:20,580 --> 00:13:24,126
we are invoking the process large data

186
00:13:24,228 --> 00:13:27,930
function. First of all notice

187
00:13:28,010 --> 00:13:31,646
that apex classes are very similar

188
00:13:31,748 --> 00:13:36,014
to Java classes. You have classes, you have methods

189
00:13:36,062 --> 00:13:39,426
that can be static, that have a return value and

190
00:13:39,448 --> 00:13:43,090
receive a parameter. I mentioned in this

191
00:13:43,160 --> 00:13:47,286
so that you have an idea of the syntax of

192
00:13:47,308 --> 00:13:51,046
the language, and then in the body of the method you

193
00:13:51,068 --> 00:13:54,786
can invoke the function. If you invoke

194
00:13:54,818 --> 00:13:58,410
the function synchronously, what you do is that you first

195
00:13:58,480 --> 00:14:01,946
instantiate the function using the name of

196
00:14:01,968 --> 00:14:05,626
the project and the name of the function. Then you

197
00:14:05,648 --> 00:14:09,130
can invoked the function this way, calling the

198
00:14:09,200 --> 00:14:12,138
invoke method and passing in a payload.

199
00:14:12,234 --> 00:14:15,614
In our case, the payload will contain the latitude and

200
00:14:15,652 --> 00:14:19,342
longitude with which we want to compare those

201
00:14:19,396 --> 00:14:22,898
schools, and then we

202
00:14:22,984 --> 00:14:26,210
will receive a result when the

203
00:14:26,280 --> 00:14:29,554
invocation finishes. In the case of

204
00:14:29,592 --> 00:14:33,778
invoking your function asynchronously, you just move

205
00:14:33,864 --> 00:14:38,162
this last part to a callback method that will execute

206
00:14:38,226 --> 00:14:40,150
once the function finishes.

207
00:14:41,450 --> 00:14:45,142
Fantastic. So now let me give you some

208
00:14:45,196 --> 00:14:48,646
information so that you can get started with Salesforce

209
00:14:48,678 --> 00:14:52,010
functions. First of all, I wanted to share

210
00:14:52,160 --> 00:14:55,802
the link to the developer guide. You will find

211
00:14:55,856 --> 00:15:01,618
the documentation at SFDC co functions

212
00:15:01,814 --> 00:15:06,890
guide and there you will find all the prerequisites

213
00:15:06,970 --> 00:15:10,334
and the guides that

214
00:15:10,372 --> 00:15:15,022
will show you how to get started. One of the prerequisites

215
00:15:15,086 --> 00:15:18,574
is to install the Salesforce CLI.

216
00:15:18,702 --> 00:15:22,734
This is a command line tool that we use in Salesforce

217
00:15:22,862 --> 00:15:26,530
to manage how we deploy and retrieve

218
00:15:26,610 --> 00:15:30,242
metadata from our Salesforce instances

219
00:15:30,306 --> 00:15:34,150
that we call organizations. And we also use

220
00:15:34,220 --> 00:15:38,230
the Salesforce CLI to work with Salesforce functions.

221
00:15:39,070 --> 00:15:42,298
I also recommend you to use vs code

222
00:15:42,384 --> 00:15:45,994
as an ide because we have a set

223
00:15:46,032 --> 00:15:49,530
of extensions that we help you with

224
00:15:49,600 --> 00:15:53,326
Salesforce development in general. We have a portion of

225
00:15:53,348 --> 00:15:57,358
these extensions that is meant to help you

226
00:15:57,444 --> 00:16:00,954
write salesforce functions and that's

227
00:16:01,002 --> 00:16:05,198
why we normally use vs code with this extension

228
00:16:05,294 --> 00:16:08,914
installed. And also I wanted to

229
00:16:08,952 --> 00:16:12,770
tell you that trying out Salesforce is free and

230
00:16:12,840 --> 00:16:15,958
trying out Salesforce functions is also

231
00:16:16,044 --> 00:16:19,778
free. To ask for a developer

232
00:16:19,874 --> 00:16:23,590
in which functions is enabled. You can go to

233
00:16:23,660 --> 00:16:26,130
this URL here, functions,

234
00:16:26,210 --> 00:16:29,318
salesforce.com signapps

235
00:16:29,414 --> 00:16:33,034
and there you are going to be able to request an

236
00:16:33,072 --> 00:16:36,380
environment and to play with functions for free.

237
00:16:37,390 --> 00:16:40,814
So now let's take a look at how to use the

238
00:16:40,852 --> 00:16:44,766
Salesforce CLI to deploy a salesforce function.

239
00:16:44,948 --> 00:16:48,606
So the first thing that we need to do to deploy a

240
00:16:48,628 --> 00:16:51,962
salesforce function is to create a scratch

241
00:16:52,026 --> 00:16:55,966
or a scratch or is an ephemeral

242
00:16:56,078 --> 00:17:00,222
development environment that gets associated

243
00:17:00,286 --> 00:17:03,982
with your trial or we are creating a scratch

244
00:17:04,046 --> 00:17:06,980
or called functions or.

245
00:17:08,170 --> 00:17:11,894
Fantastic. The next thing that we need to do is to

246
00:17:11,932 --> 00:17:15,734
create a compute environment a

247
00:17:15,772 --> 00:17:20,630
compute environment is a secure salesforce managed infrastructure

248
00:17:20,790 --> 00:17:24,022
which is different from your salesforce.org.

249
00:17:24,166 --> 00:17:27,946
This is where functions are deployed to and run

250
00:17:28,048 --> 00:17:32,186
in. This is the infrastructure that is built with cloud native

251
00:17:32,298 --> 00:17:35,642
build packs and kubernetes. The deploy

252
00:17:35,706 --> 00:17:39,534
process uses changes tracked in git to

253
00:17:39,572 --> 00:17:43,454
know what to deploy. This is similar to how Heroku

254
00:17:43,502 --> 00:17:48,130
works. So let's commit our changes to a git repo.

255
00:17:55,850 --> 00:17:59,430
Great, so now we

256
00:17:59,500 --> 00:18:03,382
can write the Salesforce CLI command to

257
00:18:03,436 --> 00:18:07,774
deploy functions to our compute environment.

258
00:18:07,922 --> 00:18:12,810
For that we will write sf deploy functions

259
00:18:13,550 --> 00:18:17,142
minus o and the name of the scratcher

260
00:18:17,206 --> 00:18:20,570
to which you have linked your compute environment.

261
00:18:21,730 --> 00:18:25,006
As this is going to take a while, let's take a look

262
00:18:25,108 --> 00:18:28,666
at an organization which is linked to a compute

263
00:18:28,698 --> 00:18:32,400
environment in which I already deployed the function

264
00:18:33,330 --> 00:18:37,150
I created. Here some implementation examples

265
00:18:37,490 --> 00:18:41,422
this is aligning web component. Remember this is our framework

266
00:18:41,486 --> 00:18:45,686
for front end development. And from the lining web component you

267
00:18:45,708 --> 00:18:49,222
can invoke the function passing in a

268
00:18:49,276 --> 00:18:53,814
number of results that the function should return.

269
00:18:54,012 --> 00:18:58,202
So let's invoke the function and see

270
00:18:58,256 --> 00:19:01,642
the results. The function is

271
00:19:01,696 --> 00:19:05,882
taking my current latitude and longitude and

272
00:19:05,936 --> 00:19:10,562
it's returning the ten closest schools

273
00:19:10,726 --> 00:19:13,070
in the JSON file.

274
00:19:14,610 --> 00:19:18,542
Great, so if I go back to vs code we can see

275
00:19:18,596 --> 00:19:21,550
that the function has been correctly deployed.

276
00:19:22,950 --> 00:19:26,978
In this demo, I decided to deploy the function because

277
00:19:27,064 --> 00:19:30,946
I wanted to show you the final result when we

278
00:19:30,968 --> 00:19:34,050
invoke the function from the salesforce organization.

279
00:19:34,890 --> 00:19:39,158
However, bear in mind that you can also run

280
00:19:39,244 --> 00:19:42,690
functions locally. This is very useful

281
00:19:42,770 --> 00:19:45,830
at the time of testing and development.

282
00:19:48,270 --> 00:19:52,380
All the code that we have seen today is public.

283
00:19:52,750 --> 00:19:59,100
You can find the functions recipes sample app@GitHub.com

284
00:19:59,470 --> 00:20:03,502
trailheadapps functions recipes and there

285
00:20:03,556 --> 00:20:07,614
you will find many more sample apps that will help

286
00:20:07,652 --> 00:20:10,510
you get started with Salesforce development.

287
00:20:11,490 --> 00:20:15,154
To finalize, I want to share some resources to

288
00:20:15,192 --> 00:20:18,910
summarize really the resources that I have shared

289
00:20:18,990 --> 00:20:23,070
along the talk. First of all, you have the documentation,

290
00:20:23,150 --> 00:20:27,174
the developer guide. Take a look at it to get started.

291
00:20:27,372 --> 00:20:30,886
You also have the sign up page in

292
00:20:30,908 --> 00:20:34,054
which you will be able to request a trial or

293
00:20:34,172 --> 00:20:37,838
for free to try out Salesforce functions.

294
00:20:38,034 --> 00:20:41,866
Also, I leave you here again the link to the

295
00:20:42,048 --> 00:20:45,834
sample app that we created to help you get started with

296
00:20:45,872 --> 00:20:49,514
functions functions recipes and the

297
00:20:49,552 --> 00:20:53,182
last link is a trailhead module called

298
00:20:53,316 --> 00:20:56,970
Discover Salesforce functions Trailhead

299
00:20:57,050 --> 00:21:01,134
is our tutorized learning platform

300
00:21:01,252 --> 00:21:05,026
in which you are going to find more than 1000

301
00:21:05,128 --> 00:21:09,854
modules to learn Salesforce in general and also Salesforce

302
00:21:09,902 --> 00:21:13,298
development. Finally, I want

303
00:21:13,464 --> 00:21:16,950
to share the different ways in which you can connect with

304
00:21:17,020 --> 00:21:20,498
us. You can find us at developer

305
00:21:20,594 --> 00:21:23,298
salesforce.com. We have there a blog,

306
00:21:23,394 --> 00:21:27,826
a podcast and all the documentation for developers.

307
00:21:28,018 --> 00:21:31,302
You can also follow us on Twitter at

308
00:21:31,356 --> 00:21:35,014
salesforce and you can also follow us on

309
00:21:35,052 --> 00:21:38,530
Facebook, YouTube and LinkedIn. We publish

310
00:21:38,610 --> 00:21:42,490
videos on YouTube regularly. We do live streaming

311
00:21:42,570 --> 00:21:45,966
and if you subscribe to the channel and click on the

312
00:21:45,988 --> 00:21:50,080
bell, you will receive notifications about those videos.

313
00:21:52,130 --> 00:21:55,534
Thank you so much and I

314
00:21:55,572 --> 00:21:59,070
hope that you enjoyed my talk at least a little bit.

315
00:21:59,140 --> 00:22:00,030
Have a good day.

