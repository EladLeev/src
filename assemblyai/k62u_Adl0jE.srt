1
00:00:25,570 --> 00:00:28,966
You. Thank you so much for attending this talk.

2
00:00:29,068 --> 00:00:32,466
My name is Services Mocheski. I'm developer relations at Vision,

3
00:00:32,498 --> 00:00:35,830
the DevOps company. And thank you so much to the organizers of the

4
00:00:35,900 --> 00:00:39,046
Conf 42 DevOps 2023 event

5
00:00:39,148 --> 00:00:42,962
for organizing this talk and for giving me the opportunity to talk about vision

6
00:00:43,026 --> 00:00:46,902
and appuio cloud. Through this talk, we would like to give you an idea of

7
00:00:46,956 --> 00:00:50,938
how we build this new product using DevOps as a guiding philosophy.

8
00:00:51,114 --> 00:00:54,986
Today I'm going to talk about how we build Appuio cloud at vision.

9
00:00:55,098 --> 00:00:58,414
For that, I will first start by explaining a little bit of our

10
00:00:58,452 --> 00:01:02,362
culture. What is Appuio Cloud and how we use DevOps

11
00:01:02,426 --> 00:01:06,578
to create it. And then I will give you some technical details about how

12
00:01:06,664 --> 00:01:09,842
we created this new product. But first of all,

13
00:01:09,896 --> 00:01:13,314
I would like to introduce Vision to those who have never heard about it

14
00:01:13,352 --> 00:01:17,538
before. That's how you pronounce the name Vision.

15
00:01:17,634 --> 00:01:21,206
Just like Vision. That's why there's an I in

16
00:01:21,228 --> 00:01:24,930
the logo. We're a company of 50 people located in Zurich,

17
00:01:25,010 --> 00:01:28,486
and we are the DevOps company. The slogan of Vision is

18
00:01:28,508 --> 00:01:32,186
actually the DevOps company. We embrace the DevOps philosophy completely,

19
00:01:32,288 --> 00:01:35,706
and as you'll see today, we use its principles and ideas in

20
00:01:35,728 --> 00:01:38,970
everything we do. What does Vision do? We provide

21
00:01:39,040 --> 00:01:42,126
various services and products. We offer DevOps as a

22
00:01:42,148 --> 00:01:46,126
service or has with a full team of Kubernetes and

23
00:01:46,148 --> 00:01:49,194
Openshift experts ready to monitor your clusters

24
00:01:49,242 --> 00:01:52,240
and your applications. Twenty four seven on the cloud.

25
00:01:52,690 --> 00:01:55,854
We help companies become selfsufficient and

26
00:01:55,892 --> 00:02:00,062
cloud enabled. We help software engineers to build bridges between dev and Ops

27
00:02:00,126 --> 00:02:03,438
with CI CD pipelines in various platforms like GitLab,

28
00:02:03,534 --> 00:02:07,314
Openshift or Argo CD. And then we are Kubernetes

29
00:02:07,362 --> 00:02:11,830
and Openshift specialists to the point that our strategy is 100%

30
00:02:11,900 --> 00:02:15,062
oriented towards Kubernetes. Everything we do

31
00:02:15,196 --> 00:02:18,674
runs on Kubernetes. Aside from our technological

32
00:02:18,722 --> 00:02:22,086
choices, the important thing to know about vision is that we have chosen

33
00:02:22,118 --> 00:02:25,606
to drive the growth of our company in various ways that are completely non

34
00:02:25,638 --> 00:02:28,730
standard. First of all, we are the DevOps company,

35
00:02:28,800 --> 00:02:31,918
and as such, we embrace the DevOps mantra completely.

36
00:02:32,084 --> 00:02:35,486
Everything we do is automated as possible, and that frees our

37
00:02:35,508 --> 00:02:38,846
brains to think. We have decided as

38
00:02:38,868 --> 00:02:41,802
a company not to grow through venture capital.

39
00:02:41,946 --> 00:02:45,646
Instead, we rely on the good old method of organic growth.

40
00:02:45,758 --> 00:02:49,694
We have been self funded since day one in 2014, and we've

41
00:02:49,742 --> 00:02:54,290
been consistently profitable and growing since 2017.

42
00:02:54,870 --> 00:02:58,338
We use sociocracy as a management growth framework.

43
00:02:58,434 --> 00:03:01,926
This means that all decisions, and I mean all of them,

44
00:03:02,028 --> 00:03:05,254
happen through consensus among all visioneers. And yes,

45
00:03:05,292 --> 00:03:08,566
that's how we call ourselves, by the way. And we have created

46
00:03:08,598 --> 00:03:12,986
a handbook, freely available online, which in printed form takes

47
00:03:13,168 --> 00:03:16,742
573 pages, which explains

48
00:03:16,806 --> 00:03:20,774
everything we are and what we do at vision with quite an incredible

49
00:03:20,822 --> 00:03:24,206
level of detail, I must say. I invite you to check it out at

50
00:03:24,228 --> 00:03:27,694
Handbook Vision CH and you will learn everything there is to learn

51
00:03:27,732 --> 00:03:31,082
about us. So shoocracy is our evolution

52
00:03:31,146 --> 00:03:34,542
framework, and we have a small team of people at vision whose only job

53
00:03:34,596 --> 00:03:38,434
is to help us evolve into this framework continuously. In particular,

54
00:03:38,552 --> 00:03:42,034
any visioneer is able to raise issues, problems and to ask

55
00:03:42,072 --> 00:03:46,382
for help to change procedures or situations that are hurting their happiness.

56
00:03:46,446 --> 00:03:50,594
At vision, visioneers are able to create vision improvement proposals,

57
00:03:50,642 --> 00:03:54,294
or vips as we call them. They are simply tickets in our jira that

58
00:03:54,332 --> 00:03:58,082
explain a current situation or decisions, the drawbacks and negative impact,

59
00:03:58,146 --> 00:04:01,830
and propose a solution to be discussed by everyone involved or

60
00:04:01,900 --> 00:04:05,030
interests in the issue. This simple mechanism

61
00:04:05,110 --> 00:04:08,298
has completely transformed the way we work in the past three years,

62
00:04:08,384 --> 00:04:11,370
and as a result, we all feel part of the structure we built,

63
00:04:11,440 --> 00:04:15,118
and we feel responsible for it at all times. All of

64
00:04:15,124 --> 00:04:18,990
these choices have shaped our culture in ways that are really not common at all

65
00:04:19,060 --> 00:04:22,542
and have interesting consequences in our day to day operations. For example,

66
00:04:22,676 --> 00:04:26,462
our hiring policies are different to those of most IT companies.

67
00:04:26,596 --> 00:04:29,778
Not only we do pay attention to the IT skills of those who want to

68
00:04:29,784 --> 00:04:33,390
join our team, but we place a very high degree of attention

69
00:04:33,470 --> 00:04:37,022
to the human factor. We want people to feel great at vision,

70
00:04:37,086 --> 00:04:41,154
and one of the primary factors we evaluate during the hiring process is the likeness

71
00:04:41,202 --> 00:04:44,694
of the person. That is, how much would we like to work with them

72
00:04:44,732 --> 00:04:48,562
every day? As Steve Jobs once said, we don't hire

73
00:04:48,626 --> 00:04:51,754
smart people to tell them what to do. We hire smart people so

74
00:04:51,792 --> 00:04:54,060
that they can tell us what to do.

75
00:04:55,390 --> 00:04:59,414
Another interesting consequence of how vision works is that we had embraced

76
00:04:59,462 --> 00:05:02,642
remote and asynchronous working well before the pandemic.

77
00:05:02,806 --> 00:05:06,430
When the swiss government mandated everyone to work from home

78
00:05:06,500 --> 00:05:10,382
in March 2020, we simply stayed at home and continued working

79
00:05:10,436 --> 00:05:14,306
as if nothing had happened. The important bit of information here is the

80
00:05:14,328 --> 00:05:17,934
asynchronous word. Not so much that we work remote,

81
00:05:18,062 --> 00:05:21,902
but that we work in a nonsynchronous way. And this particular mindset

82
00:05:21,966 --> 00:05:25,214
has shaped our company greatly. But let's

83
00:05:25,342 --> 00:05:28,726
get back in time a little bit and see how Appuio cloud came

84
00:05:28,748 --> 00:05:32,774
to be. In 2016, Vision and Apostle ITC, a well

85
00:05:32,812 --> 00:05:36,822
known Swiss IT and software consulting, launched a joint venture called

86
00:05:36,876 --> 00:05:40,886
Appuio. This is a word in Esperanto it means support.

87
00:05:41,068 --> 00:05:44,394
Apuyo consists of a series of products built around

88
00:05:44,512 --> 00:05:48,186
red Hat Openshift. For those who haven't heard of

89
00:05:48,208 --> 00:05:51,906
it yet, Red Hat Openshift is the most widely used Kubernetes

90
00:05:51,958 --> 00:05:55,374
based platform in the enterprise world. It is quite popular with big

91
00:05:55,412 --> 00:05:59,482
companies, and it incorporates a hardened and highly available Kubernetes

92
00:05:59,546 --> 00:06:03,150
cluster surrounded by lots of relevant software, for example,

93
00:06:03,220 --> 00:06:06,686
a container repository, a management console, CI CD

94
00:06:06,718 --> 00:06:10,558
pipelines, and with a very nice and professional GUI

95
00:06:10,654 --> 00:06:13,778
on top. We decided we wanted to be a part of the

96
00:06:13,784 --> 00:06:17,294
Openshift market, but we also realized that installing and

97
00:06:17,352 --> 00:06:21,730
operating Openshift is a huge endeavor, and many companies could not use OpenShift

98
00:06:21,810 --> 00:06:25,858
because of the lack of staff or budget. So we decided to join forces

99
00:06:25,954 --> 00:06:29,526
with puzzle ITC. So Appuio is a response to

100
00:06:29,548 --> 00:06:33,094
the complexity of Red Hat OpenShift. With Appuio, customers can create a ready

101
00:06:33,132 --> 00:06:36,506
to use cluster together with the know how of these two companies.

102
00:06:36,688 --> 00:06:39,994
We at visual we specialize in the setup and maintenance of

103
00:06:40,032 --> 00:06:43,434
Openshift clusters, and we've been operating Openshift clusters,

104
00:06:43,482 --> 00:06:47,262
by the way, since version three. Puzzle on the other hand,

105
00:06:47,316 --> 00:06:51,114
they are specialists in the creation of software solution and cloud native

106
00:06:51,162 --> 00:06:53,950
applications for Openshift, which is something we don't do.

107
00:06:54,020 --> 00:06:57,106
Together, the Appuio team can help companies make the most out

108
00:06:57,128 --> 00:06:58,930
of their Openshift investment.

109
00:06:59,830 --> 00:07:03,182
Appuio has been historically been available in various forms.

110
00:07:03,246 --> 00:07:06,946
First of all, there was Appuio Public based in OpenShift three. It was

111
00:07:06,968 --> 00:07:10,230
the first swiss based shared Openshift cluster available

112
00:07:10,300 --> 00:07:13,734
to customers. And it has a shared platform where customers

113
00:07:13,852 --> 00:07:17,510
could run their projects without having to care about management or anything else.

114
00:07:17,660 --> 00:07:20,746
There were Appuio public clusters running in

115
00:07:20,768 --> 00:07:24,966
various cloud providers, like cloudscale in Switzerland and Aws in Germany.

116
00:07:25,158 --> 00:07:29,014
Then there was Apuyomanage, which is the next step. With Apuyomanage,

117
00:07:29,062 --> 00:07:32,670
organizations get their own non shared, their own

118
00:07:32,740 --> 00:07:36,718
Openshift clusters for their exclusive use and puzzle ITC and

119
00:07:36,724 --> 00:07:40,174
vision take care of the opinions of the cluster transparently for their

120
00:07:40,212 --> 00:07:43,838
users. Finally, ApU yourself manages the final

121
00:07:43,924 --> 00:07:47,506
step in the evolution of organizations. With it, organizations not

122
00:07:47,528 --> 00:07:50,882
only get an Openshift cluster, keys in hand and

123
00:07:50,936 --> 00:07:54,034
ready to run, but we teach their id teams how

124
00:07:54,072 --> 00:07:57,602
to manage and maintain the cluster by themselves. We gradually

125
00:07:57,666 --> 00:08:01,350
fade in the background and provide help until at some point we become

126
00:08:01,420 --> 00:08:04,642
completely invisible and they become completely independent.

127
00:08:04,786 --> 00:08:08,406
Apuyo Cloud is the latest offering in the Appuio family,

128
00:08:08,508 --> 00:08:12,746
and it started as a product in September 2021. What is Appuio Cloud?

129
00:08:12,848 --> 00:08:16,326
Simply put, Appuio Cloud is to Openshift four what Appuio

130
00:08:16,358 --> 00:08:20,134
Public was to Openshift three. Because, you see, given the major architectural

131
00:08:20,182 --> 00:08:24,154
changes between Openshift three and four, instead of migrating

132
00:08:24,202 --> 00:08:27,806
our Appuio public infrastructure to Openshift four, we decided to

133
00:08:27,828 --> 00:08:31,246
create a new project from scratch, and we gave it a different name and

134
00:08:31,268 --> 00:08:34,566
even a different visual identity. We notified our APU

135
00:08:34,618 --> 00:08:38,434
public customers of the upcoming phasing out of the service Appuio public

136
00:08:38,552 --> 00:08:42,306
with an offer to help them migrate their payloads to Appuio Cloud.

137
00:08:42,488 --> 00:08:46,462
And in just one year, Appuio Cloud was fully decommissioned.

138
00:08:46,526 --> 00:08:50,338
That happened in September 2022, only one year after Appuio

139
00:08:50,354 --> 00:08:53,442
Cloud started operations. As said previously,

140
00:08:53,506 --> 00:08:56,902
Appuio Cloud is based exclusively on ape ship four, and at the moment,

141
00:08:56,956 --> 00:09:00,934
we have two Appuio cloud zones available to our customers. One in Canton,

142
00:09:00,982 --> 00:09:04,602
Argao in Lupfig, it's in central Switzerland, and another

143
00:09:04,656 --> 00:09:09,094
one in Geneva running in the exoscale premises.

144
00:09:09,222 --> 00:09:12,346
We plan to open more regions in the future as required and

145
00:09:12,368 --> 00:09:16,058
following the demand of our customers, we started working on Appuio

146
00:09:16,074 --> 00:09:19,786
Cloud in spring 2021, and we released it to the public in autumn

147
00:09:19,818 --> 00:09:23,706
that year, we reused a lot of code and infrastructure we has created

148
00:09:23,738 --> 00:09:27,238
for our work previously. First of all, we reused KDAP.

149
00:09:27,354 --> 00:09:30,626
KDAP is a Kubernetes backup operator that has been picked up

150
00:09:30,648 --> 00:09:34,306
by the cloud Native Computing foundation as a sandbox project. You can

151
00:09:34,328 --> 00:09:38,682
find it in ktab IO and also products,

152
00:09:38,766 --> 00:09:42,518
which is a suite of tools that allow developers to manage

153
00:09:42,604 --> 00:09:45,922
remotely. Lots of kubernetes clusters

154
00:09:45,986 --> 00:09:49,414
from a central location using Gitops. Check it out.

155
00:09:49,452 --> 00:09:53,270
It's on syn tools. Who is Abuyo Cloud

156
00:09:53,340 --> 00:09:57,238
for? So, Appuio Cloud, just like its predecessor, Appuio Public, is meant

157
00:09:57,254 --> 00:10:00,694
to be an entry level product catering to the long tail of Openshift

158
00:10:00,742 --> 00:10:04,270
customers who might be interested in getting access to a working

159
00:10:04,340 --> 00:10:07,758
Openshift cluster without the hassle of installing and operating it.

160
00:10:07,844 --> 00:10:11,486
So as such, we identified a few target groups. First of

161
00:10:11,508 --> 00:10:15,346
all, startups. They might be interested to have a namespace on

162
00:10:15,368 --> 00:10:19,086
Appuio Cloud so that they can launch their mvp and get more venture

163
00:10:19,118 --> 00:10:22,786
capital DevOps and CI CD pipelines to deploy your

164
00:10:22,808 --> 00:10:26,900
projects. Mobile lab backends for iOS and Android education.

165
00:10:27,510 --> 00:10:30,886
So, for example, if you want to learn about OpenShift, Appuio Cloud would

166
00:10:30,908 --> 00:10:34,694
be a great place to start technology trials for companies who

167
00:10:34,732 --> 00:10:38,486
want to hedge the risk of getting into the Openshift world,

168
00:10:38,588 --> 00:10:42,434
and of course, resellers who would like to offer Openshift

169
00:10:42,482 --> 00:10:45,050
services to third parties.

170
00:10:45,710 --> 00:10:49,210
What is included in Appuio Cloud. First of all, you get instant on.

171
00:10:49,280 --> 00:10:52,822
You sign up for Appuio Cloud, you get an Openshift namespace,

172
00:10:52,886 --> 00:10:56,286
you are ready to go to deploy your applications. You only pay for

173
00:10:56,308 --> 00:11:00,014
the resources you actually use, and you can define users and

174
00:11:00,052 --> 00:11:03,230
groups in your organization so that everyone can

175
00:11:03,300 --> 00:11:07,114
work on that project. You get pre installed KDAP

176
00:11:07,162 --> 00:11:09,954
so you can backup all of your work at any time.

177
00:11:10,072 --> 00:11:13,586
And there's a few more preinstalled operators. Among them we

178
00:11:13,608 --> 00:11:17,646
have, as I mentioned, KDAP, and we have also cert manager for you

179
00:11:17,688 --> 00:11:21,522
to create and manage your X 509 certificates.

180
00:11:21,666 --> 00:11:25,286
And finally, we've got community support. If you need help, you can

181
00:11:25,308 --> 00:11:28,098
check out the Appuio cloud forums and the chat.

182
00:11:28,194 --> 00:11:31,914
And for those needing more help, there are support packages available at

183
00:11:31,952 --> 00:11:36,330
extra cost. Now, Appuio Cloud is a public platform,

184
00:11:36,480 --> 00:11:40,310
so it comes with some gotcha. First of all, the maintenance policies

185
00:11:40,390 --> 00:11:43,950
are mandatory and predefined, so you know

186
00:11:44,020 --> 00:11:47,486
when these are going to happen and there might be some interruption for your

187
00:11:47,508 --> 00:11:51,470
work. We communicate status information live on status

188
00:11:51,810 --> 00:11:55,394
cloud. The resource availability is not

189
00:11:55,432 --> 00:11:59,314
guaranteed. You get what you get. We cannot guarantee much

190
00:11:59,352 --> 00:12:02,766
more than that. That means that the SLA is best effort

191
00:12:02,878 --> 00:12:06,338
and there's a fair use policy. All Appuio cloud users

192
00:12:06,434 --> 00:12:10,242
should behave in the sense that otherwise they could impact

193
00:12:10,306 --> 00:12:13,554
or degrade the service level availability for other users.

194
00:12:13,682 --> 00:12:16,978
There are no privileged containers running on Appuio

195
00:12:16,994 --> 00:12:20,210
Cloud. It's a very secure platform and the log retention

196
00:12:20,290 --> 00:12:24,026
is only three days. After that we clear the logs. You can

197
00:12:24,048 --> 00:12:27,754
download them, but we will clear them. It is not possible for the moment

198
00:12:27,792 --> 00:12:31,390
to have other operators than the ones that are defined and pre

199
00:12:31,460 --> 00:12:35,226
installed in Apoyo Cloud, but we evaluate new ones regularly

200
00:12:35,338 --> 00:12:37,280
depending on the demands of our customers.

201
00:12:38,050 --> 00:12:41,966
Now this is about DevOps, and what do we

202
00:12:41,988 --> 00:12:45,258
mean about the DevOps way of working? So let's see what we

203
00:12:45,284 --> 00:12:49,010
mean by DevOps first, because it's one of those words that can mean anything

204
00:12:49,080 --> 00:12:52,066
and everything, depending on who you ask. So for example,

205
00:12:52,168 --> 00:12:55,326
this is a famous cartoon about DevOps,

206
00:12:55,358 --> 00:12:58,678
and this is clearly not what we mean by DevOps, although to be honest,

207
00:12:58,764 --> 00:13:02,406
there's a lot of yaml involved in what we do. Usually when

208
00:13:02,428 --> 00:13:05,622
people talk about DevOps, they think about this physical division between

209
00:13:05,676 --> 00:13:09,562
developers and operation teams and how they don't communicate anymore and how

210
00:13:09,616 --> 00:13:13,686
much better it would be if they did. Then DevOps comes along with continuous

211
00:13:13,718 --> 00:13:16,502
integration, automation, cloud containers,

212
00:13:16,566 --> 00:13:20,326
collaboration and infrastructure as code, and then somehow

213
00:13:20,358 --> 00:13:23,866
all barriers are destroyed and we can once again collaborate and

214
00:13:23,888 --> 00:13:27,406
work better together. For us at vision, this is

215
00:13:27,428 --> 00:13:30,958
a limited view of what DevOps is and can bring. It is an important

216
00:13:31,044 --> 00:13:34,798
part, but not all. Instead, we prefer to think about DevOps as a

217
00:13:34,804 --> 00:13:38,738
set of three principles, following what some authors have written about it.

218
00:13:38,824 --> 00:13:42,238
In particular, we think the best people to talk about DevOps is the author

219
00:13:42,254 --> 00:13:46,350
of the DevOps Handbook and the Phoenix Project, Jean Kim himself.

220
00:13:46,510 --> 00:13:50,130
The latter is actually a modern rewriting and reinterpretation

221
00:13:50,210 --> 00:13:54,066
of a classic management books from the 80s called the Goal by Ellie

222
00:13:54,098 --> 00:13:58,220
Yahoo. Goldrat. But it's quite faithful in spirit as well.

223
00:13:58,830 --> 00:14:02,780
In those books, DevOps is usually defined by the three ways,

224
00:14:03,230 --> 00:14:06,950
the principles of flow, the principles of feedback,

225
00:14:07,030 --> 00:14:10,550
and the principles of continual learning and experimentation.

226
00:14:10,630 --> 00:14:14,858
So let's see how these three principles have shaped

227
00:14:15,034 --> 00:14:18,606
appuio cloud. Let's start with the principles of flow and

228
00:14:18,628 --> 00:14:22,314
see what it means for product development. The first thing we have to decide

229
00:14:22,362 --> 00:14:25,726
was where to start. That is, what was the value stream

230
00:14:25,758 --> 00:14:29,666
we wanted to provide first. We wanted to have actual results as

231
00:14:29,688 --> 00:14:33,474
early as possible, because seeing things happen and appearing is

232
00:14:33,512 --> 00:14:37,174
one of the best ways to keep a team in activity motivated and

233
00:14:37,212 --> 00:14:40,774
delivering that work brought together the

234
00:14:40,812 --> 00:14:44,722
product documentation. That's right. The first thing we created through discussion

235
00:14:44,786 --> 00:14:48,818
was a written documentation of what we wanted to offer. Why written?

236
00:14:48,914 --> 00:14:52,314
Because we work asynchronously. That means that some of us

237
00:14:52,352 --> 00:14:56,250
work better at night, while some work better in the morning. Having everything

238
00:14:56,320 --> 00:15:00,042
written down helped everyone creating down drafts of the documents until

239
00:15:00,096 --> 00:15:03,454
there was agreement. Agreement from whom? From everyone.

240
00:15:03,572 --> 00:15:07,086
From the product owners to the DevOps engineers, who, at the

241
00:15:07,108 --> 00:15:10,574
end, have to maintain the solution. This way,

242
00:15:10,692 --> 00:15:14,346
operation teams knows exactly what's going to happen. There are no

243
00:15:14,388 --> 00:15:18,066
surprises down the hall, and they feel empowered and listened to.

244
00:15:18,168 --> 00:15:22,082
All the features of Appuio cloud are, simply put, possible to be

245
00:15:22,136 --> 00:15:25,154
released either now or later. But they are

246
00:15:25,192 --> 00:15:29,174
possible. The important thing here is that we started

247
00:15:29,212 --> 00:15:33,074
by applying Conway's law. That is, we first structured

248
00:15:33,122 --> 00:15:36,486
the team that would work for Appuio Cloud, and then we

249
00:15:36,508 --> 00:15:40,166
got to create the system. The end result of this process is

250
00:15:40,188 --> 00:15:43,242
that the architecture of Appuio Cloud, following Conway's law,

251
00:15:43,376 --> 00:15:46,826
strictly mirrors the structure of our team. We do not fight

252
00:15:46,928 --> 00:15:49,180
Conway's law. We embrace it.

253
00:15:49,710 --> 00:15:53,454
The result of this work of architecture and documentation can be summarized in

254
00:15:53,492 --> 00:15:57,166
three different documentation websites for apiocloud. You've heard right.

255
00:15:57,268 --> 00:16:00,106
We have created three different sets of documentation,

256
00:16:00,218 --> 00:16:04,126
and we keep them updated every day. There's product owner documentation.

257
00:16:04,238 --> 00:16:07,774
There is system engineer documentation, and end user

258
00:16:07,822 --> 00:16:11,246
documentation. We've made all of the documentation publicly

259
00:16:11,278 --> 00:16:14,478
available and viewable, actually even editable.

260
00:16:14,574 --> 00:16:18,626
Because transparency is one of our values at vision, we want all

261
00:16:18,648 --> 00:16:21,878
of our customers to know exactly we are doing things the way we do.

262
00:16:21,964 --> 00:16:25,766
In turn, this generates trust in our existing customers and it

263
00:16:25,788 --> 00:16:29,718
shows our know how to prospective ones. These three documentation sites

264
00:16:29,734 --> 00:16:32,810
are, simply put, great marketing tools.

265
00:16:33,870 --> 00:16:37,290
The principle of flow requires teams to make work

266
00:16:37,360 --> 00:16:40,982
visible, reducing batch sizes and intervals of work,

267
00:16:41,056 --> 00:16:44,526
and to build quality in. We limited work in progress to

268
00:16:44,548 --> 00:16:48,046
the strict minimum and we automated has much has possible in the

269
00:16:48,068 --> 00:16:51,610
process. Talking about automation, this automation

270
00:16:51,690 --> 00:16:55,450
involves removing the human factor from the maintenance of those clusters

271
00:16:55,530 --> 00:16:58,674
as much as possible. One of the key factors for doing this

272
00:16:58,712 --> 00:17:02,882
was project scene, a suite of tools we started building in 2019 that

273
00:17:02,936 --> 00:17:07,102
allows our small team to manage hundreds of clusters from a central location.

274
00:17:07,246 --> 00:17:11,002
We created project scene as a way to be able to operate our customers assets

275
00:17:11,086 --> 00:17:14,806
with reduced human footprint, but it turned out to be a great way to

276
00:17:14,828 --> 00:17:19,058
handle appuio cloud as well. Thanks to products in DevOps,

277
00:17:19,074 --> 00:17:22,986
engineers can specify and deploy changes to lots of clusters from

278
00:17:23,008 --> 00:17:26,438
a central location using Gitops. Just commit

279
00:17:26,454 --> 00:17:30,026
your changes as infrastructure as code to a git repo. Wait a few

280
00:17:30,048 --> 00:17:32,780
seconds, all of the clusters have those changes.

281
00:17:33,630 --> 00:17:37,166
We use Project Syn to deploy Kyverno security policies, for example,

282
00:17:37,268 --> 00:17:40,846
to our Appuio cloud clusters so that all regions conform to the

283
00:17:40,868 --> 00:17:44,674
same rulebook. We also configured each of the Appuio cloud

284
00:17:44,712 --> 00:17:47,838
zones with the mandatory differences between the cloud providers

285
00:17:47,854 --> 00:17:51,282
we use, because exoscale and cloudscale do not offer exactly

286
00:17:51,336 --> 00:17:54,734
the same features, and being able to see those differences

287
00:17:54,862 --> 00:17:58,406
written down allows us to manage those systems in

288
00:17:58,428 --> 00:18:01,906
the best possible way and to take the best possible decisions.

289
00:18:02,098 --> 00:18:05,910
So we know that Apu Glad is a complex system. It's built

290
00:18:05,980 --> 00:18:09,846
out of complex systems itself, and they are all prone to failure

291
00:18:09,878 --> 00:18:13,562
at any given time. So this is not a matter of

292
00:18:13,616 --> 00:18:17,370
if, but rather a matter of when things

293
00:18:17,440 --> 00:18:21,386
are going to go wrong. So we need observability and

294
00:18:21,408 --> 00:18:24,974
we have built observability and management tools immediately from the

295
00:18:25,012 --> 00:18:28,570
start. In our work of Appuio Cloud, we have reused

296
00:18:28,650 --> 00:18:32,046
the management infrastructure provided by Openshift, the same one we

297
00:18:32,068 --> 00:18:35,566
were using for our private customers. But we have built on top of that Appuio

298
00:18:35,598 --> 00:18:39,298
cloud specific tools so that we have

299
00:18:39,384 --> 00:18:42,500
a complete observability on the cluster at all times.

300
00:18:43,910 --> 00:18:47,634
Using everything as code as a basis for our work means that every

301
00:18:47,672 --> 00:18:51,506
time we fix an issue on the platform, we have to change a configuration file

302
00:18:51,538 --> 00:18:54,754
somewhere. This information is later stored in a git

303
00:18:54,802 --> 00:18:58,090
repo as part of the project history. Not only that,

304
00:18:58,160 --> 00:19:02,390
but we also update the required documentation files, both internal and external,

305
00:19:02,470 --> 00:19:05,834
so that everyone knows asynchronously and at their

306
00:19:05,872 --> 00:19:09,222
own rhythm what happened when and most importantly,

307
00:19:09,286 --> 00:19:12,782
why and when we say everything has code,

308
00:19:12,836 --> 00:19:16,490
we mean it. Security policies, build configurations,

309
00:19:16,650 --> 00:19:20,266
general configuration, infrastructure, and documentation.

310
00:19:20,378 --> 00:19:24,094
All of this is described in their corresponding files and decisions.

311
00:19:24,142 --> 00:19:28,334
In git repos, we use GitLab and its integrated CI CD pipelines

312
00:19:28,382 --> 00:19:32,110
are configured to automatically build, test, and eventually

313
00:19:32,190 --> 00:19:36,046
deploy changes as they happen, thanks to products.

314
00:19:36,078 --> 00:19:40,034
In all of the feedback we bring back to the system is automatically deployed whenever

315
00:19:40,082 --> 00:19:44,246
possible, which reduces the amount of brain work required to

316
00:19:44,268 --> 00:19:48,166
keep things running. Even our documentation is

317
00:19:48,188 --> 00:19:51,878
automated. We use the Antora documentation generator

318
00:19:51,974 --> 00:19:55,574
tool, which can automatically extract and integrate documentation from various

319
00:19:55,622 --> 00:19:59,094
sources into a single website, and we use GitLab pipelines

320
00:19:59,142 --> 00:20:02,762
for that as well. With this process, engineers only have to update these documentation

321
00:20:02,826 --> 00:20:06,378
sources using ASCII Doc, which is very similar to markdown

322
00:20:06,474 --> 00:20:10,362
and git push. These changes are immediately

323
00:20:10,426 --> 00:20:14,462
picked up, verified. We actually have styling

324
00:20:14,526 --> 00:20:18,046
and syntax check built in into our pipelines,

325
00:20:18,158 --> 00:20:20,690
and all of this is deployed automatically.

326
00:20:22,710 --> 00:20:26,942
Now, regarding the principles of continual learning and experimentation,

327
00:20:27,086 --> 00:20:30,902
I'm going to share with you an anecdote. Abu cloud is not and will never

328
00:20:30,956 --> 00:20:34,486
be finished right? It is a product that changes continuously, sometimes in

329
00:20:34,508 --> 00:20:38,594
small ways and sometimes in bigger ones. And this screenshot

330
00:20:38,722 --> 00:20:42,730
it's a screenshot of the appuio cloud console a few months ago,

331
00:20:42,800 --> 00:20:46,634
around the month of May. And can you see the red banner on

332
00:20:46,672 --> 00:20:50,266
top? That red banner on top indicates the result

333
00:20:50,368 --> 00:20:53,710
of us learning something interesting about Appuio cloud,

334
00:20:53,780 --> 00:20:57,006
something we did not know, a change we have to bring to the

335
00:20:57,028 --> 00:21:00,234
platform. Here is the text of the Red banner in the previous

336
00:21:00,282 --> 00:21:03,610
screenshot issue with cpu requests resolved,

337
00:21:03,690 --> 00:21:06,786
the resolution in cloud includes a slight change to

338
00:21:06,808 --> 00:21:10,402
the pricing model. This, as you can imagine, is the result

339
00:21:10,456 --> 00:21:14,466
of a learning process. We realized that in our preparation we have

340
00:21:14,488 --> 00:21:18,110
not designed our cpu request pricing properly. As a result,

341
00:21:18,200 --> 00:21:21,750
as soon as the first users started using the platform last year,

342
00:21:21,900 --> 00:21:26,066
we realized that some of them were consuming disproportionate amounts of cpu

343
00:21:26,178 --> 00:21:29,626
and this was a huge problem because they were not aware of that.

344
00:21:29,728 --> 00:21:33,466
And we as a company, we would have to cover for

345
00:21:33,568 --> 00:21:36,746
a lot of extra costs at first.

346
00:21:36,928 --> 00:21:40,646
So that of course, from a business point of view was a disaster.

347
00:21:40,758 --> 00:21:44,826
But we basically modified the policies in our clusters

348
00:21:44,938 --> 00:21:48,494
and we made this clearly visible and communicated this

349
00:21:48,532 --> 00:21:52,202
to all of our customers and we updated our documentation has shown

350
00:21:52,266 --> 00:21:55,346
on the slide the solution is exactly what you see

351
00:21:55,368 --> 00:21:59,330
right there. It's an extract of the documentation.

352
00:21:59,990 --> 00:22:04,126
This was an unexpected and unplanned learning, right? A local discovery

353
00:22:04,158 --> 00:22:07,406
that brought a global improvement in Appuio cloud for all users, and also

354
00:22:07,448 --> 00:22:11,250
for us in terms of business. We did cover some of the costs,

355
00:22:11,330 --> 00:22:14,786
but we rectified our policies openly and communicated clearly

356
00:22:14,818 --> 00:22:17,942
with our customers. The result is not only all of them

357
00:22:17,996 --> 00:22:21,498
acknowledged and understood the changes. We didn't lose a single customer

358
00:22:21,584 --> 00:22:25,146
because of it, and this level of cooperation with our customers is one of the

359
00:22:25,168 --> 00:22:27,420
things we're most proud of.

360
00:22:28,430 --> 00:22:32,442
So let me give you now some details about the work we did, including team

361
00:22:32,496 --> 00:22:35,998
sizes, tech stack used, and many other details. Transparency is one

362
00:22:36,004 --> 00:22:39,102
of our values, so we're very happy to tell you everything about it.

363
00:22:39,236 --> 00:22:42,714
The team that built Appuio Cloud is called Aldebaran.

364
00:22:42,842 --> 00:22:46,110
Envision was the team that was mostly in charge of the design,

365
00:22:46,180 --> 00:22:49,454
deployment and operation of Appuio Cloud. They also received

366
00:22:49,502 --> 00:22:52,994
help from people from other teams, in particular those with very good

367
00:22:53,032 --> 00:22:56,174
experience in the deployment and operations of openshifts, clusters,

368
00:22:56,222 --> 00:22:59,686
of course, and also from marketing and sales to

369
00:22:59,708 --> 00:23:02,946
coordinate the communication and the marketing campaigns to get new users

370
00:23:02,978 --> 00:23:06,418
onto the platform. The project manager and main product manager

371
00:23:06,434 --> 00:23:09,878
of Appuio Cloud is Tobias Bruner, one of the founders of Vision and the

372
00:23:09,884 --> 00:23:12,982
current CTO, who provided very strong vision,

373
00:23:13,126 --> 00:23:16,666
no pun intended, about how Apu Cloud should behave and

374
00:23:16,688 --> 00:23:20,426
look like let's go into some details about how APU cloud is

375
00:23:20,448 --> 00:23:24,302
built. This slide contains all the major components we've chosen for it.

376
00:23:24,356 --> 00:23:27,134
We've got red has OpenShift, four point eleven, of course,

377
00:23:27,252 --> 00:23:30,922
we use for security policies, Kiverno for identity

378
00:23:30,986 --> 00:23:34,366
management, we use keycloak. We store secrets in vault,

379
00:23:34,478 --> 00:23:38,814
we use rook as the storage plugin, and we use isovalent

380
00:23:38,862 --> 00:23:42,158
silium enterprise as the networking plugin.

381
00:23:42,334 --> 00:23:46,606
For backup. As I mentioned, we use kdap, and for all the GitHub's

382
00:23:46,638 --> 00:23:50,402
operations we need, we use project syn. For the documentation

383
00:23:50,466 --> 00:23:54,374
websites, we use Antora, which I strongly recommend that you check it out.

384
00:23:54,412 --> 00:23:57,960
It's a wonderful tool. During our day to day

385
00:23:58,270 --> 00:24:01,094
asynchronous communication and collaboration,

386
00:24:01,142 --> 00:24:04,554
we use the usual took that you need to

387
00:24:04,592 --> 00:24:07,814
keep in touch with your peers, for example, Zoom, rocket chat,

388
00:24:07,862 --> 00:24:11,286
Jira, confluence, and so on. A short timeline

389
00:24:11,318 --> 00:24:15,314
of events that led to the release of Appuio Cloud. We started talking about Apu

390
00:24:15,382 --> 00:24:19,406
Public 20 around two years ago. By July 2021,

391
00:24:19,428 --> 00:24:22,682
we had chosen the product name and we registered the domain.

392
00:24:22,826 --> 00:24:26,046
Things accelerated during the summer of 2021, and we made

393
00:24:26,068 --> 00:24:29,794
the public announcement of Appuio Cloud in September, and by

394
00:24:29,832 --> 00:24:33,198
October, users started migrating their apps from Apuya

395
00:24:33,214 --> 00:24:36,526
Public to Appuio Cloud. In December, we announced a partnership

396
00:24:36,558 --> 00:24:39,850
with isovalent to use their CNI plugin on Appuio

397
00:24:39,870 --> 00:24:43,366
Cloud. Last year, we opened up a new region in

398
00:24:43,388 --> 00:24:47,014
Geneva and we released the ApU Cloud portal so that our

399
00:24:47,052 --> 00:24:50,890
users can manage their projects, users and groups autonomously.

400
00:24:51,790 --> 00:24:54,950
And finally, we released our new product, Appcat,

401
00:24:55,030 --> 00:24:58,330
which allows a Puyo cloud users to specify dependencies such as

402
00:24:58,400 --> 00:25:01,514
s three buckets, databases, message queues,

403
00:25:01,642 --> 00:25:05,658
other systems directly in YamL from their Openshift projects.

404
00:25:05,754 --> 00:25:09,626
We also enable vertical polyto sailing and workload monitoring

405
00:25:09,658 --> 00:25:13,754
for all of our users. So can other organizations

406
00:25:13,802 --> 00:25:17,970
use a similar process to create a product? We believe yes, it is possible.

407
00:25:18,120 --> 00:25:21,554
However, there are a few caveats that we know

408
00:25:21,592 --> 00:25:24,994
some companies should have to work on those items first to be honest,

409
00:25:25,112 --> 00:25:28,966
in order to have a successful DevOps journey. First of

410
00:25:28,988 --> 00:25:32,214
all, writing skills are fundamental. We need

411
00:25:32,252 --> 00:25:35,302
DevOps engineers to be writers and to put everything down,

412
00:25:35,356 --> 00:25:37,766
not only as everything as code, security,

413
00:25:37,868 --> 00:25:41,670
infrastructure, business rules, et cetera, but also as documentation writers.

414
00:25:41,750 --> 00:25:45,306
Making sure that both the engineers and users are able to refer to

415
00:25:45,328 --> 00:25:49,146
a written document that explains the reasons why things happen

416
00:25:49,328 --> 00:25:52,506
and keeping that written documentation updated. This part

417
00:25:52,528 --> 00:25:56,394
of the work is not a chore, it's a bonus. It's part of the deliverables.

418
00:25:56,442 --> 00:25:59,934
It must be updated, reviewed and proofread. Second,

419
00:26:00,052 --> 00:26:03,586
cloud native technology has been designed to work faster than ever.

420
00:26:03,688 --> 00:26:07,186
Containers Kubernetes CI CD pipelines open source all

421
00:26:07,208 --> 00:26:11,534
of the ecosystem of cloud native technology is the greater enabler

422
00:26:11,582 --> 00:26:14,974
of our modern world. The technological context constitutes

423
00:26:15,022 --> 00:26:18,310
a fantastic giant shoulder where we can stand on

424
00:26:18,380 --> 00:26:22,086
to go faster, to go better. We definitely could

425
00:26:22,108 --> 00:26:25,702
have never done this work without the ecosystem of open source cloud

426
00:26:25,756 --> 00:26:29,594
native technologies available today. But third of all,

427
00:26:29,792 --> 00:26:33,718
trust is paramount. You have to trust your teams.

428
00:26:33,814 --> 00:26:37,110
We actually think that trust is more important than flat hierarchies,

429
00:26:37,190 --> 00:26:40,906
even though these have helped us. Without trust, there's no way we could have

430
00:26:40,928 --> 00:26:43,902
created a poyo cloud in such a short amount of time.

431
00:26:44,036 --> 00:26:47,854
Trust allows teams to work independently, moving fast and

432
00:26:47,892 --> 00:26:51,834
without the inherent fear typical of a blame culture.

433
00:26:51,962 --> 00:26:55,770
And trust is the key ingredient for an asynchronous work culture.

434
00:26:55,850 --> 00:26:59,454
You cannot really go full async if you do not trust your teams.

435
00:26:59,502 --> 00:27:02,994
We stress this point because this factor is a deal breaker for many

436
00:27:03,032 --> 00:27:06,574
teams in many places in the world. These are,

437
00:27:06,632 --> 00:27:09,618
we think, the three important pillars of our DevOps culture,

438
00:27:09,714 --> 00:27:13,046
writing, technology, and trust those who

439
00:27:13,068 --> 00:27:16,454
have helped us shape appuio cloud into the product that is right

440
00:27:16,492 --> 00:27:19,378
now steadily growing and changing continuously.

441
00:27:19,554 --> 00:27:22,966
Is it easy to work like this in a DevOps mode? Of course not.

442
00:27:23,068 --> 00:27:26,090
There's a lot of things that can go wrong. But is it worth it?

443
00:27:26,160 --> 00:27:29,386
Let's put it this way. After all this time, we have internalized this way

444
00:27:29,408 --> 00:27:32,826
of working so much we couldn't do things any other way. We think

445
00:27:32,848 --> 00:27:36,046
it's totally worth it and as a result, we just do things like this all

446
00:27:36,068 --> 00:27:39,642
the time. With Appuio Cloud Vision demonstrates that we can deliver

447
00:27:39,706 --> 00:27:43,242
world class product in a short amount of time with a small team of experts

448
00:27:43,306 --> 00:27:46,706
and with fast cycles of feedback and experimentation baked in

449
00:27:46,728 --> 00:27:50,338
the process. We regularly publish blog posts telling the

450
00:27:50,344 --> 00:27:53,486
story of the product and sharing news about future features of development.

451
00:27:53,518 --> 00:27:56,802
So please check it out. At Vision CH blog, for example,

452
00:27:56,856 --> 00:28:00,050
we have blogs about behind the scenes about our API,

453
00:28:00,130 --> 00:28:03,974
how billing works, and all of that. So please check it out and

454
00:28:04,012 --> 00:28:07,366
if you would like to try Apu cloud for 30 days, please go to

455
00:28:07,388 --> 00:28:10,982
Apuyo Cloud register, use the voucher code conf

456
00:28:11,036 --> 00:28:15,218
fourty two and get a thirty day openshift

457
00:28:15,394 --> 00:28:18,280
project for your team to use and to test.

458
00:28:18,890 --> 00:28:22,186
Thank you so much for your attention. It's been great explaining

459
00:28:22,218 --> 00:28:25,422
to you all of this story. I hope it's been useful to you and

460
00:28:25,476 --> 00:28:28,750
I hope you have questions. I will be around in the chat to answer

461
00:28:28,820 --> 00:28:29,900
some of them. Thank you so much.

