1
00:01:52,910 --> 00:01:56,546
You. Hello. Hello everybody, and thank

2
00:01:56,568 --> 00:02:00,482
you for my session. My name is Radhu, Radhu von Foleya and

3
00:02:00,536 --> 00:02:03,922
for the next 40 minutes we'll talk about security.

4
00:02:04,056 --> 00:02:07,586
We'll talk about security best practices inside

5
00:02:07,768 --> 00:02:11,042
Microsoft Azure. There are a lot of things around us,

6
00:02:11,096 --> 00:02:15,058
and sometimes it's very easy

7
00:02:15,224 --> 00:02:18,426
to lose between different information or finding the

8
00:02:18,448 --> 00:02:22,266
right one. What I want to aim in this

9
00:02:22,288 --> 00:02:26,170
session is to share with you some things,

10
00:02:26,240 --> 00:02:29,798
some lesson learns and best practices that I identified

11
00:02:29,894 --> 00:02:33,450
that are relevant and can have a high impact

12
00:02:33,610 --> 00:02:37,790
on your own projects that are running on top of Azure.

13
00:02:38,130 --> 00:02:41,374
Some of them you might know, some of them you might know, but because

14
00:02:41,412 --> 00:02:45,554
of lack of time or team

15
00:02:45,672 --> 00:02:48,882
capabilities, you might not

16
00:02:48,936 --> 00:02:52,798
put so much effort on them. And I would like to highlight

17
00:02:52,894 --> 00:02:56,470
what are the top 13 security

18
00:02:56,620 --> 00:03:00,306
best practices that I consider relevant

19
00:03:00,498 --> 00:03:04,006
and fit very well in an application

20
00:03:04,188 --> 00:03:07,614
that we are building. We are running on top of Microsoft.

21
00:03:07,682 --> 00:03:10,922
On top of Microsoft Azure. Before going

22
00:03:10,976 --> 00:03:15,034
forward, I would like to share with you a code

23
00:03:15,152 --> 00:03:19,126
of Gibran that I think that is very relevant.

24
00:03:19,318 --> 00:03:23,246
If you reveal your secrets to

25
00:03:23,268 --> 00:03:27,166
the wind, you should not

26
00:03:27,348 --> 00:03:30,894
blame the wine for

27
00:03:30,932 --> 00:03:33,330
revealing them to the trees.

28
00:03:34,550 --> 00:03:38,978
In this context, we must be aware of that.

29
00:03:39,064 --> 00:03:42,740
The most important thing, the most relevant thing

30
00:03:43,190 --> 00:03:46,774
is that the wind, it is us and

31
00:03:46,812 --> 00:03:50,070
it is up to us what we are sharing,

32
00:03:51,930 --> 00:03:55,302
the level of security that we want in

33
00:03:55,356 --> 00:03:59,302
place in our Azure, inside our Microsoft

34
00:03:59,366 --> 00:04:03,754
Azure application. So it is up to us the

35
00:04:03,792 --> 00:04:07,674
level and the features of Azure and

36
00:04:07,792 --> 00:04:11,374
other technologies that we want to use to improve the

37
00:04:11,412 --> 00:04:13,630
security layer of our systems.

38
00:04:16,290 --> 00:04:19,982
Next, let's talk about some statistic information that make

39
00:04:20,036 --> 00:04:23,666
us aware of where we are now and what are

40
00:04:23,688 --> 00:04:27,586
the most important things that we need to take into account at

41
00:04:27,608 --> 00:04:31,970
this moment in time. Around 80% of security breaches

42
00:04:32,390 --> 00:04:36,230
involved privileged credentials,

43
00:04:37,050 --> 00:04:40,838
meaning that we have a lot of people

44
00:04:40,924 --> 00:04:44,790
inside our teams, inside our organizations

45
00:04:45,210 --> 00:04:48,810
that have more rights,

46
00:04:49,150 --> 00:04:52,906
more freedom that they should have

47
00:04:53,008 --> 00:04:56,746
inside the systems, inside the application that

48
00:04:56,768 --> 00:05:00,006
they are involved directly or interlocking. And the

49
00:05:00,048 --> 00:05:05,054
best example here is if a product manager needs

50
00:05:05,092 --> 00:05:07,630
to have access to an environment,

51
00:05:09,250 --> 00:05:12,926
to Azure services, to the code repo or

52
00:05:12,948 --> 00:05:16,882
to the pipelines, if he's not doing tasks or

53
00:05:16,936 --> 00:05:20,594
things that are related to that part of the system, does he need

54
00:05:20,632 --> 00:05:24,862
access to it, except maybe Azure DevOps dashboard or

55
00:05:25,016 --> 00:05:28,646
jira? I don't know. It is up to you. But we

56
00:05:28,668 --> 00:05:31,814
need to consider that going forward.

57
00:05:31,932 --> 00:05:35,894
We need to not forget that around

58
00:05:36,092 --> 00:05:39,510
49% of the databases are not

59
00:05:39,580 --> 00:05:42,950
encrypted, even if we have a strong password.

60
00:05:43,030 --> 00:05:47,190
Who needs to be aware that a backup of a SQL database

61
00:05:47,350 --> 00:05:51,710
can be cracked. In 2016 I was joining Microsoft

62
00:05:52,130 --> 00:05:55,946
Techhead in Chicago, and in a 90 minutes

63
00:05:55,978 --> 00:05:59,822
session one of the security specialists from the market showed to us

64
00:05:59,876 --> 00:06:02,480
with tools that you can find on Google,

65
00:06:03,830 --> 00:06:07,810
how you can break the backup, how you can change

66
00:06:07,880 --> 00:06:11,122
the hash of the password and after that

67
00:06:11,176 --> 00:06:14,354
to access it. So it is important not only how

68
00:06:14,392 --> 00:06:17,526
we are setting different credentials, but also how we

69
00:06:17,548 --> 00:06:21,426
encrypt the data, the backups and where we are storing

70
00:06:21,458 --> 00:06:22,040
it.

71
00:06:25,370 --> 00:06:29,478
25% of organization have

72
00:06:29,564 --> 00:06:32,790
cryptojacking activity with their environment.

73
00:06:33,450 --> 00:06:37,270
One four people, one four organization

74
00:06:37,430 --> 00:06:41,054
were involved directly or indirectly. We might not know it that

75
00:06:41,092 --> 00:06:45,070
one of our colleague machines were hacked,

76
00:06:45,570 --> 00:06:49,150
were cryptojacking,

77
00:06:49,730 --> 00:06:53,070
but we need to be aware of this because this is highly risky.

78
00:06:53,730 --> 00:06:57,282
And one of the stories that I really like to

79
00:06:57,336 --> 00:07:00,914
talk is about VIM, that a few years

80
00:07:00,952 --> 00:07:05,206
ago had the data breach not of their data, but of

81
00:07:05,228 --> 00:07:08,354
a backup with some customer data. So a backup

82
00:07:08,402 --> 00:07:11,906
of around 200gb data was stored

83
00:07:11,938 --> 00:07:15,800
in an AWS S free storage and

84
00:07:16,410 --> 00:07:19,946
was made public, available on the market in an

85
00:07:19,968 --> 00:07:23,322
unscrew way. It was available for a few hours, but was more than

86
00:07:23,376 --> 00:07:27,466
enough for a few of few of the guys from

87
00:07:27,488 --> 00:07:31,370
the Internet to download that backup. What happened with that backup?

88
00:07:31,450 --> 00:07:35,054
We don't know, but the backup was

89
00:07:35,092 --> 00:07:39,454
not encrypted and was available on the market so somebody could

90
00:07:39,492 --> 00:07:43,550
put their hands on the information. Officially it was just

91
00:07:43,700 --> 00:07:47,410
customer data that were not very important,

92
00:07:47,560 --> 00:07:51,698
but still that backup is very important. The same story could happen on an

93
00:07:51,784 --> 00:07:55,234
Azure storage, so it's not important. The cloud vendor or the

94
00:07:55,272 --> 00:07:58,646
company could have a pump, but it's more important to be

95
00:07:58,668 --> 00:08:02,294
aware that we need to take into considerations all

96
00:08:02,332 --> 00:08:06,486
the aspects, because in cloud everything can

97
00:08:06,508 --> 00:08:09,818
be paid publicly if you don't have the right

98
00:08:09,904 --> 00:08:13,834
policies and the right governance layer on

99
00:08:13,872 --> 00:08:15,260
top of your services.

100
00:08:16,750 --> 00:08:20,566
Now it's a good moment in time to present myself. My name is Radu

101
00:08:20,598 --> 00:08:24,826
Radhuvale. I'm group head of cloud delivery for Endava.

102
00:08:24,938 --> 00:08:28,990
My journey on cloud, more specifically my

103
00:08:29,060 --> 00:08:32,946
Azure started in 2010 with the first commercial project that

104
00:08:32,968 --> 00:08:36,882
went live I think in 2011, and from that

105
00:08:36,936 --> 00:08:40,820
on I was working, playing and

106
00:08:41,910 --> 00:08:45,734
enjoying the journey of cloud. I have a pretty good

107
00:08:45,772 --> 00:08:49,586
experience on Microsoft Azure and also AWS. I'm Microsoft Azure

108
00:08:49,618 --> 00:08:53,126
mvp and regional dive rector. There are

109
00:08:53,148 --> 00:08:57,302
two more things that I really enjoy. Coffee. I have around ten

110
00:08:57,436 --> 00:08:59,430
machines, ten coffee machine,

111
00:09:01,630 --> 00:09:05,142
I have around ten coffee machines and I really enjoy playing with the coffee,

112
00:09:05,206 --> 00:09:08,810
doing different types of coffee each day or during specific

113
00:09:08,880 --> 00:09:13,262
time of the day. I'm a big fan of home

114
00:09:13,316 --> 00:09:17,680
automation doing the harder part, but doing also the different

115
00:09:21,650 --> 00:09:25,810
automations to reduce the consumption of electricity

116
00:09:26,150 --> 00:09:29,362
or improve a little bit the way

117
00:09:29,496 --> 00:09:33,314
how you enjoy the working from home. What is

118
00:09:33,352 --> 00:09:38,790
agenda talking? A lot of things about different cloud,

119
00:09:38,940 --> 00:09:41,974
different azure services and ways of working.

120
00:09:42,172 --> 00:09:46,166
And let's start with the first thing

121
00:09:46,348 --> 00:09:49,510
on the agenda that we need to not forget.

122
00:09:49,670 --> 00:09:53,718
Most of the technical people are aware about shared responsibility

123
00:09:53,814 --> 00:09:55,770
model. Nevertheless,

124
00:09:56,750 --> 00:10:00,300
at management level, at project management level,

125
00:10:01,330 --> 00:10:05,470
sometimes the leadership has

126
00:10:05,540 --> 00:10:08,874
the expectation that once you go to a cloud vendor,

127
00:10:08,922 --> 00:10:12,430
once you start to use the services of a cloud vendor,

128
00:10:13,010 --> 00:10:16,866
most of the things will be the responsibility of the cloud vendor, not of

129
00:10:16,888 --> 00:10:21,182
the technical teams. So they forget to invest into programs,

130
00:10:21,246 --> 00:10:24,562
into efforts to secure and to

131
00:10:24,616 --> 00:10:27,698
harness that system. So talking about shared

132
00:10:27,714 --> 00:10:30,966
responsibility model from the cloud security point of

133
00:10:30,988 --> 00:10:34,470
view, we need to consider that is a general responsibility.

134
00:10:34,970 --> 00:10:38,970
The CSP will offer you the security foundation

135
00:10:39,630 --> 00:10:43,290
of the physical assets of the data center

136
00:10:43,360 --> 00:10:46,714
operation and of the fabric that is

137
00:10:46,752 --> 00:10:50,286
behind the infrastructure. Now it is up to

138
00:10:50,308 --> 00:10:54,558
us, it is up to the customer, to the technical team to

139
00:10:54,644 --> 00:10:58,190
ensure that we have the right network

140
00:10:59,170 --> 00:11:03,150
and VM security layer to be

141
00:11:03,220 --> 00:11:06,706
sure that we have the services and the functionality in

142
00:11:06,728 --> 00:11:10,594
place and configured aligned with our own needs to

143
00:11:10,632 --> 00:11:14,146
ensure that our apps and workloads are running in

144
00:11:14,168 --> 00:11:17,854
a secure way and the data is stored at a

145
00:11:17,912 --> 00:11:21,334
security layer that we expect. Security level that

146
00:11:21,372 --> 00:11:25,094
we expect. Now, what is the first

147
00:11:25,132 --> 00:11:28,300
thing that we need to take into account? Talking about security,

148
00:11:28,670 --> 00:11:31,702
there are four pillars, networking,

149
00:11:31,766 --> 00:11:35,146
operation, monitoring and cloud platform. On top of

150
00:11:35,168 --> 00:11:38,982
that we have storage, we have data, compute and identity

151
00:11:39,046 --> 00:11:42,366
and access management. And of course of that we

152
00:11:42,388 --> 00:11:46,126
have the application. Depending on the way and how we

153
00:11:46,148 --> 00:11:49,200
are consuming services, how we are building the application,

154
00:11:49,890 --> 00:11:53,514
this part b, these things might be in the scope

155
00:11:53,562 --> 00:11:57,950
of us. If you have an internal application that you are building from scratch,

156
00:11:58,110 --> 00:12:02,386
if you're using a software service or you

157
00:12:02,408 --> 00:12:05,750
are paying a subscription for different services, some of these

158
00:12:05,820 --> 00:12:09,094
items might not be in your own

159
00:12:09,132 --> 00:12:12,360
responsibility or might be less.

160
00:12:13,690 --> 00:12:17,138
And things like the API and the CI CD,

161
00:12:17,234 --> 00:12:20,554
the same story. Having all this

162
00:12:20,592 --> 00:12:24,554
landscape in mind, we need to consider how

163
00:12:24,592 --> 00:12:28,310
we are securing the storage, the data, the workloads

164
00:12:28,390 --> 00:12:32,300
and what kind of identity and access management we are using.

165
00:12:33,870 --> 00:12:38,240
Talking about the secret and access management, it's very important to

166
00:12:38,850 --> 00:12:42,702
have a policy and a way how

167
00:12:42,756 --> 00:12:45,670
we store the secrets where we are storing.

168
00:12:45,690 --> 00:12:49,154
It's not enough to say I'm storing them in the repo where

169
00:12:49,192 --> 00:12:52,626
you will store them in the database, what kind

170
00:12:52,648 --> 00:12:56,386
of encryption you will use on top of that, because in the end

171
00:12:56,488 --> 00:12:59,302
you can have the most secure application in the world.

172
00:12:59,436 --> 00:13:02,994
But if you don't manage the secrets

173
00:13:03,122 --> 00:13:06,326
in the right way, and if somebody puts their hands on the

174
00:13:06,348 --> 00:13:09,974
secrets on your access token, to your

175
00:13:10,012 --> 00:13:14,426
database, to your storage or to something else,

176
00:13:14,608 --> 00:13:17,466
they will be able to get the data, they will be able to stall the

177
00:13:17,488 --> 00:13:21,006
data and to sell it on the black market. So it's very important to

178
00:13:21,028 --> 00:13:24,960
know exactly how you lock the system,

179
00:13:25,490 --> 00:13:29,114
what are the services and what is the layer

180
00:13:29,162 --> 00:13:32,790
on top of it. We have access keys, we have connections,

181
00:13:32,890 --> 00:13:36,926
there are so many things that we need to be aware. And sometimes there's

182
00:13:36,958 --> 00:13:41,618
a break between

183
00:13:41,704 --> 00:13:45,906
infrastructure people and development people, because one

184
00:13:45,928 --> 00:13:49,862
of them are doing the full configuration of the infrastructure, the other ones

185
00:13:49,916 --> 00:13:53,702
are building the application. And if you are not having the right

186
00:13:53,836 --> 00:13:57,802
policy for secrets and configuration management, you can miss

187
00:13:57,856 --> 00:14:01,174
some things or to be stored somewhere

188
00:14:01,222 --> 00:14:05,510
else where they are more visible,

189
00:14:05,590 --> 00:14:07,580
more sensible to an attack.

190
00:14:10,270 --> 00:14:14,830
Everything is a configuration, but it's important to know exactly where this configuration

191
00:14:15,410 --> 00:14:18,846
is stored. So what is cloud vendor is

192
00:14:18,868 --> 00:14:22,266
offering for us? Azure key vault. The keyboard

193
00:14:22,298 --> 00:14:25,538
on AWS is AWS KMS. What is a

194
00:14:25,544 --> 00:14:29,746
key vault? In the end it is a storage, a secure storage where

195
00:14:29,928 --> 00:14:33,998
our connection strings our certificates,

196
00:14:34,174 --> 00:14:37,138
our keys and our secrets are stored,

197
00:14:37,314 --> 00:14:41,382
are stored in such a way that nobody can access,

198
00:14:41,516 --> 00:14:46,102
see them in clear text without having the right access

199
00:14:46,236 --> 00:14:49,738
to them. Once they get the access, well, it is what it is,

200
00:14:49,824 --> 00:14:53,190
but if you manage them correctly, you can ensure

201
00:14:53,270 --> 00:14:56,858
that that storage, that key vault as a storage for your

202
00:14:56,944 --> 00:15:01,066
secret, will not be accessible

203
00:15:01,178 --> 00:15:04,846
to anybody, depending on

204
00:15:04,868 --> 00:15:08,490
what kind of compliance you need to have. Azure dedicated

205
00:15:08,570 --> 00:15:12,554
HSM might be an option. It's like a key vault, an Azure key

206
00:15:12,612 --> 00:15:18,514
vault, but a hardware dedicated only for you and

207
00:15:18,552 --> 00:15:21,730
works pretty nice. Now one of the problem

208
00:15:21,800 --> 00:15:25,634
with Azure key vaults and with the key vaults in general is how you

209
00:15:25,672 --> 00:15:28,918
manage the access to them. And it's important

210
00:15:29,004 --> 00:15:32,726
to remember that at the moment in time when

211
00:15:32,748 --> 00:15:36,434
you are accessing the key vault, also the credentials

212
00:15:36,482 --> 00:15:40,054
or the way how you're accessing the key vault are very important.

213
00:15:40,252 --> 00:15:43,530
Usually when you access the key vault. Let's go back.

214
00:15:43,680 --> 00:15:47,286
You need a client id, a client secret

215
00:15:47,398 --> 00:15:50,714
to be able to access it. Be very careful how you

216
00:15:50,752 --> 00:15:53,946
are stored them, especially on dev environments,

217
00:15:54,058 --> 00:15:57,754
dev test environments, and to have a clear separation

218
00:15:57,802 --> 00:16:01,678
between the instances of the key vaults that are used for production or

219
00:16:01,764 --> 00:16:05,342
I wouldn't say not only for production, but for environments where you have

220
00:16:05,396 --> 00:16:09,118
real customer data and the one that are used for testing,

221
00:16:09,214 --> 00:16:12,658
for development and so on. Now,

222
00:16:12,744 --> 00:16:16,150
keyword give us the ability to store the client id,

223
00:16:16,300 --> 00:16:20,982
client secret and the tenant id inside

224
00:16:21,036 --> 00:16:24,694
the environment variables of a machine. It's a very smart way to

225
00:16:24,732 --> 00:16:28,058
build a development machine because even if

226
00:16:28,144 --> 00:16:30,890
your computer, your laptop installed,

227
00:16:31,790 --> 00:16:35,242
if that person doesn't have access to your

228
00:16:35,376 --> 00:16:38,714
windows user, he will not still

229
00:16:38,752 --> 00:16:42,386
be able to get access to the client id, client secret

230
00:16:42,518 --> 00:16:46,942
and will be very specific to each user that

231
00:16:46,996 --> 00:16:50,746
has that access. Of course, from the code you can retrieve

232
00:16:50,778 --> 00:16:55,422
them and you can use them without any kind of problem. Everything is

233
00:16:55,476 --> 00:16:59,440
built on top of role based access control.

234
00:17:01,010 --> 00:17:05,082
Azure role based access control give us the ability to access not only keywords

235
00:17:05,166 --> 00:17:09,302
but all Azure services and much

236
00:17:09,356 --> 00:17:12,786
more. Not using a username and password,

237
00:17:12,898 --> 00:17:15,110
but basically on service principle.

238
00:17:15,690 --> 00:17:18,930
Meaning that if a virtual machine,

239
00:17:19,010 --> 00:17:23,066
if an Azure functions, wants to access an Azure storage or

240
00:17:23,088 --> 00:17:26,858
a SQL database, Azure SQL database, you will

241
00:17:26,864 --> 00:17:30,026
not need to use the username and

242
00:17:30,048 --> 00:17:33,246
password for no, no,

243
00:17:33,428 --> 00:17:37,374
based on a role based access control, that Azure function

244
00:17:37,572 --> 00:17:40,650
will be able to do an automated

245
00:17:40,730 --> 00:17:44,318
authentication and authorization based on his service identity.

246
00:17:44,494 --> 00:17:48,366
No credential needs to be stored. Everything will happen behind the scene.

247
00:17:48,478 --> 00:17:52,226
Yes, the initial learning curve and

248
00:17:52,248 --> 00:17:55,878
the initial configuration from the effort point of view might take a

249
00:17:55,884 --> 00:18:00,114
little bit of longer, but once you have the system configured,

250
00:18:00,242 --> 00:18:04,306
you are much much safer than using a token,

251
00:18:04,418 --> 00:18:07,958
than using a username and password and similar things.

252
00:18:08,124 --> 00:18:12,022
There are four items that we need to know

253
00:18:12,076 --> 00:18:15,338
about role based assessment control. It's starting to be used more and more, but I

254
00:18:15,344 --> 00:18:19,018
would say that we are still not

255
00:18:19,104 --> 00:18:21,750
there yet to say that fully.

256
00:18:21,910 --> 00:18:25,606
Most of Azure customers or most of the systems are built on top of Azure

257
00:18:25,638 --> 00:18:29,166
are using role based control. So there's a lot of work behind it. There are

258
00:18:29,188 --> 00:18:32,346
four items that we need to consider. The service principle can be a user,

259
00:18:32,378 --> 00:18:36,654
can be a group, can be a service principle like a VM

260
00:18:36,782 --> 00:18:39,140
or an Azure function.

261
00:18:40,710 --> 00:18:44,386
We have the role basically what kind of operation you can do

262
00:18:44,408 --> 00:18:48,034
to a specific service and the scope like Azure skits,

263
00:18:48,082 --> 00:18:51,586
Azure SQL, like Azure storage, and so on. And you do a role

264
00:18:51,618 --> 00:18:55,382
assignment where you specify that that

265
00:18:55,436 --> 00:18:59,450
Azure functions will have only read operations

266
00:19:00,910 --> 00:19:04,826
on that Azure SQL. And more

267
00:19:04,848 --> 00:19:08,266
than that, you can specify exactly what are the tables that it can

268
00:19:08,368 --> 00:19:12,630
access. So even if somebody would hack your Azure functions,

269
00:19:12,790 --> 00:19:17,358
he will still be limited to do only some specific operations on

270
00:19:17,444 --> 00:19:20,798
specific tables. So there are a lot of things like this that you can

271
00:19:20,884 --> 00:19:25,002
use and one of them that is very very important is role

272
00:19:25,146 --> 00:19:28,766
based access control. It's doing duty

273
00:19:28,798 --> 00:19:32,546
segregation for the team and also for the services that you are

274
00:19:32,568 --> 00:19:35,906
using. You can limit it and to specify exactly what

275
00:19:35,928 --> 00:19:39,906
are the permissions and also you can avoid to specific

276
00:19:40,008 --> 00:19:43,702
exactly based on tokens and things like that,

277
00:19:43,756 --> 00:19:47,590
what are the operations and so on. Now the second

278
00:19:47,740 --> 00:19:51,162
thing that I would like to talk about today is repo and cloud

279
00:19:51,216 --> 00:19:54,794
secrets. Now repo and cloud secrets are something that

280
00:19:54,832 --> 00:19:58,826
we already used with it and are very important because nowadays when

281
00:19:58,848 --> 00:20:03,086
we are working from home, it's very easily for our

282
00:20:03,188 --> 00:20:06,830
dev or DevOps hero or our test

283
00:20:06,900 --> 00:20:10,446
hero to click on

284
00:20:10,468 --> 00:20:14,740
a link to have his machine compromised and

285
00:20:15,270 --> 00:20:19,186
a bad person from the Internet to get access

286
00:20:19,368 --> 00:20:22,542
to the application repo to the infrared repo

287
00:20:22,686 --> 00:20:26,440
and worst to have access to

288
00:20:27,450 --> 00:20:31,046
the Azure subscription. We need to ensure that we have the

289
00:20:31,068 --> 00:20:35,106
right tools not only to secure their machines, to limit

290
00:20:35,138 --> 00:20:38,646
their access, but also to ensure that we don't have

291
00:20:38,748 --> 00:20:42,374
any kind of secrets inside

292
00:20:42,572 --> 00:20:46,154
the repo, inside application, infrared repo and so

293
00:20:46,192 --> 00:20:49,450
on. One of the best way how we can do this

294
00:20:49,520 --> 00:20:52,778
is to use tools like git secrets. What does git

295
00:20:52,794 --> 00:20:56,026
secrets do? Basically it's allowing us to scan

296
00:20:56,138 --> 00:21:00,350
for everything that is pushed to the repo or

297
00:21:00,500 --> 00:21:03,898
through a pipeline to ensure that there are no secrets and

298
00:21:04,004 --> 00:21:07,326
to refuse secrets like for example an Azure storage

299
00:21:07,358 --> 00:21:11,298
account key or username or password of the database to be pushed inside

300
00:21:11,384 --> 00:21:14,660
the code. And the code can be the

301
00:21:18,010 --> 00:21:21,400
terraform script or an arm or

302
00:21:21,770 --> 00:21:25,350
for example a C sharp or Java code and so on.

303
00:21:25,500 --> 00:21:28,854
Now secret scanning can be done very easily. Git secret is one of the best

304
00:21:28,892 --> 00:21:32,282
example how you can configure very easily. You just

305
00:21:32,336 --> 00:21:36,326
install it, specify exactly what kind of plugin

306
00:21:36,438 --> 00:21:39,946
for different cloud vendors, and after that you just scan it without any kind

307
00:21:39,968 --> 00:21:43,694
of hassle on top of it without too

308
00:21:43,732 --> 00:21:47,774
much effort. One way how you can do this is each time when

309
00:21:47,812 --> 00:21:51,498
somebody do a commit you can scan it. If you identify

310
00:21:51,594 --> 00:21:55,354
a secret automatic, you can reject that commit

311
00:21:55,402 --> 00:21:58,738
and nothing more than that. There are a lot of tools on the market

312
00:21:58,824 --> 00:22:02,034
and I would say that there's not the best one that

313
00:22:02,072 --> 00:22:06,002
can fit everything as you can see here on the screen. I share

314
00:22:06,056 --> 00:22:09,686
with you some of them with what are the pros and what are

315
00:22:09,708 --> 00:22:13,426
the cons or the things that I consider them very relevant.

316
00:22:13,538 --> 00:22:17,080
And I would like to highlight two of them.

317
00:22:17,690 --> 00:22:20,870
The first one is git, all secret,

318
00:22:21,370 --> 00:22:25,018
GitHub secret. It's great. I really enjoy the tool,

319
00:22:25,184 --> 00:22:29,366
especially for learning internship

320
00:22:29,558 --> 00:22:33,374
and why

321
00:22:33,492 --> 00:22:36,894
it's so easy to configure. It's so easy to show and

322
00:22:36,932 --> 00:22:40,494
to learn how you can integrate a CK scanning tool

323
00:22:40,532 --> 00:22:43,994
inside the system or the value of it. The downside

324
00:22:44,122 --> 00:22:46,350
is that it's more like an MVP.

325
00:22:47,110 --> 00:22:50,786
The configuration is very basic and once you go deep and you

326
00:22:50,808 --> 00:22:54,674
want to have different rules, different fluffs like that,

327
00:22:54,872 --> 00:22:58,914
you'll not be able to do it. On the opposite

328
00:22:58,962 --> 00:23:02,582
part, we have spectral Ops that has a great

329
00:23:02,636 --> 00:23:05,926
UI. So the user interface I really enjoy not only for

330
00:23:05,948 --> 00:23:09,530
the technical people, but also from the reporting point of view for a project

331
00:23:09,600 --> 00:23:12,970
manager or a senior account manager has

332
00:23:13,040 --> 00:23:16,394
a very strong ML mechanism and the number

333
00:23:16,432 --> 00:23:21,358
of false positive number

334
00:23:21,444 --> 00:23:25,102
is reduced a lot. That's great.

335
00:23:25,236 --> 00:23:29,118
It's pretty complex for small projects, doesn't fit

336
00:23:29,204 --> 00:23:32,538
very well. But if you're working for a large project where let's

337
00:23:32,554 --> 00:23:36,274
say we have two or three or teams that are working day

338
00:23:36,312 --> 00:23:38,210
by day on the same repo,

339
00:23:40,630 --> 00:23:44,206
on the same project, or from the same program, spectral Ops

340
00:23:44,238 --> 00:23:47,346
is something that you need to consider and to take a

341
00:23:47,368 --> 00:23:51,414
look. Spectral Ops, it's not free, but it's a very good

342
00:23:51,532 --> 00:23:55,942
value for the money that you are

343
00:23:55,996 --> 00:23:57,480
paying for it.

344
00:23:59,230 --> 00:24:03,094
Okay, let's talk about configuration, application configuration,

345
00:24:03,142 --> 00:24:06,826
because this is important. Where we store this configuration, we talk

346
00:24:06,848 --> 00:24:11,226
about key vault. So we already have a

347
00:24:11,248 --> 00:24:14,718
repo for your secrets. We talk about Azure role basics control.

348
00:24:14,804 --> 00:24:18,746
So we already know how we can access the key vault or other Azure

349
00:24:18,778 --> 00:24:21,950
services from our workloads,

350
00:24:22,470 --> 00:24:25,662
but where we can store the rest of the configuration.

351
00:24:25,726 --> 00:24:29,326
The application configuration application configuration

352
00:24:29,358 --> 00:24:33,410
is very sensitive. Even if you don't store

353
00:24:33,480 --> 00:24:37,206
secrets, it can reveal a lot about how you are building the

354
00:24:37,228 --> 00:24:40,786
application, how you are communicating with different components,

355
00:24:40,898 --> 00:24:44,806
different configurations that once they are changed might affect how

356
00:24:44,828 --> 00:24:48,966
the system would work. A very good example here is the logging

357
00:24:48,998 --> 00:24:53,274
and audit level because somebody

358
00:24:53,392 --> 00:24:56,698
once is hacking your production environment, he might say okay, if I

359
00:24:56,704 --> 00:25:00,770
have access to the configuration, let's put it to the verbose mode.

360
00:25:00,870 --> 00:25:04,266
Even if I don't see any relevant or private

361
00:25:04,298 --> 00:25:07,854
data, I will still get the flocks from which I will

362
00:25:07,892 --> 00:25:11,262
understand exactly how the landscape looks like.

363
00:25:11,396 --> 00:25:15,060
To understand better, how can I attack more that system?

364
00:25:16,070 --> 00:25:19,534
So key and secrets different from application settings

365
00:25:19,582 --> 00:25:23,522
is very very important. And also the role management who

366
00:25:23,576 --> 00:25:27,670
get access to what? One of the things that we have

367
00:25:27,740 --> 00:25:31,634
available on the market is systems

368
00:25:31,682 --> 00:25:35,670
like application configuration and are very very useful because

369
00:25:35,740 --> 00:25:39,910
for example for an application we have the

370
00:25:40,060 --> 00:25:44,090
backend, we have the ETL, we have that main layer,

371
00:25:44,590 --> 00:25:48,634
some recurrent jobs and we have the API app. Everything goes well

372
00:25:48,672 --> 00:25:52,510
for each of them. We have different configuration, keeping them in different locations.

373
00:25:53,410 --> 00:25:56,880
Well yeah, you will say it's a lot of duplicated content

374
00:25:57,410 --> 00:26:00,666
and sharing across different teams and different roles.

375
00:26:00,778 --> 00:26:03,586
It's not easy and it's hard to maintain. Yeah.

376
00:26:03,768 --> 00:26:07,758
Nowadays in most of the cases we have a central

377
00:26:07,854 --> 00:26:12,542
repo like for example Azure

378
00:26:12,606 --> 00:26:16,246
app configuration or AWS app config that works

379
00:26:16,348 --> 00:26:19,874
very nice. And the main purpose

380
00:26:19,922 --> 00:26:23,090
of them is to push all the configuration

381
00:26:23,170 --> 00:26:27,110
from your application, from your configuration in

382
00:26:27,180 --> 00:26:30,220
only one place. And that's awesome.

383
00:26:30,910 --> 00:26:35,062
On top of it we have a very strong integration

384
00:26:35,206 --> 00:26:39,034
with Azure keyword. And what does this mean is that for

385
00:26:39,072 --> 00:26:42,554
example for Azure app configuration, and let me show

386
00:26:42,592 --> 00:26:46,270
here, because it will be more simple, we have the app,

387
00:26:46,420 --> 00:26:49,662
our own application, we have app

388
00:26:49,716 --> 00:26:53,106
configuration and we have

389
00:26:53,208 --> 00:26:56,994
key vault. If our application needs

390
00:26:57,032 --> 00:27:00,206
to access a configuration based on role

391
00:27:00,238 --> 00:27:04,302
based access control, he will be able to access app configuration.

392
00:27:04,446 --> 00:27:09,030
Now what we can have in the configuration, we can have a reference

393
00:27:09,530 --> 00:27:13,814
to a secret, meaning that if

394
00:27:13,852 --> 00:27:18,250
our application needs to access a keyboard value,

395
00:27:18,320 --> 00:27:22,986
for example a secret, he will go to application

396
00:27:23,088 --> 00:27:27,066
configuration. It will require it. But because we

397
00:27:27,088 --> 00:27:30,970
have here a reference for our system to be able to fetch this data

398
00:27:31,040 --> 00:27:35,642
from the keyboard, a role based access control needs to be configured

399
00:27:35,786 --> 00:27:39,694
and it needs to have access to that value.

400
00:27:39,892 --> 00:27:43,342
So if our system is hacked and somebody is getting

401
00:27:43,396 --> 00:27:47,502
access to application configuration, it will not be enough to get the secret

402
00:27:47,566 --> 00:27:50,786
because also the system needs to have access to the

403
00:27:50,808 --> 00:27:54,402
secrets themselves. And depending on the component that we have

404
00:27:54,456 --> 00:27:58,662
here, each component might have access only

405
00:27:58,716 --> 00:28:02,738
to specific secrets and keys

406
00:28:02,834 --> 00:28:06,866
and certifications from keyboard. So it's another layer

407
00:28:06,898 --> 00:28:09,800
of security that we add on top of that.

408
00:28:10,650 --> 00:28:14,106
Storage desk management I think is one of the primary, one of

409
00:28:14,128 --> 00:28:17,674
the most basic things that is part of all

410
00:28:17,792 --> 00:28:21,294
cloud services of all Microsoft Azure. And we are

411
00:28:21,332 --> 00:28:25,120
forgetting, and a lot of them are still seeing

412
00:28:26,610 --> 00:28:30,400
projects that are using account name and account key

413
00:28:31,010 --> 00:28:33,490
to get access to storage.

414
00:28:35,510 --> 00:28:38,914
That's bad, that's very bad. We have so many

415
00:28:38,952 --> 00:28:41,060
other options that we can use.

416
00:28:41,910 --> 00:28:46,066
Azure SAS based on signature

417
00:28:46,178 --> 00:28:50,082
goes very very well. If you need to provide temporary

418
00:28:50,146 --> 00:28:53,974
access to a third party to your system

419
00:28:54,092 --> 00:28:57,622
or to temporary access to another external system,

420
00:28:57,756 --> 00:29:01,066
and you can generate a shared access signature for

421
00:29:01,088 --> 00:29:04,906
a short period of time with only specific rights. For example,

422
00:29:05,088 --> 00:29:08,982
I get you access to that file

423
00:29:09,046 --> 00:29:12,830
for read operation for the next 2 hours based

424
00:29:12,900 --> 00:29:16,302
on the ip that you are using and nothing more than that.

425
00:29:16,436 --> 00:29:19,482
You can generate that access key on the fly.

426
00:29:19,626 --> 00:29:23,410
It's limited availability. What I highly recommend you to do

427
00:29:23,560 --> 00:29:27,506
to have these keys, sas keys with a very

428
00:29:27,528 --> 00:29:30,846
limited lifespan if it's

429
00:29:30,878 --> 00:29:34,674
possible. Five minutes, ten minutes, 15 minutes, don't forget. It's very

430
00:29:34,712 --> 00:29:38,418
cheap to get to provide another

431
00:29:38,504 --> 00:29:42,578
key. If you need to provide long access,

432
00:29:42,744 --> 00:29:45,746
for example to services, to system and so on.

433
00:29:45,848 --> 00:29:49,734
Don't use accounting key. You have Azure role

434
00:29:49,782 --> 00:29:53,290
based control that can be used all the time.

435
00:29:53,360 --> 00:29:56,774
And don't forget about the firewall

436
00:29:56,822 --> 00:30:00,526
rules that are part of Azure storage. I usually call

437
00:30:00,548 --> 00:30:04,570
them like Windows XP firewall

438
00:30:04,650 --> 00:30:10,926
like because basically you

439
00:30:10,948 --> 00:30:15,262
are just whitelisting the IPS. But it's very useful because you can limit

440
00:30:15,326 --> 00:30:19,060
very easily at least

441
00:30:20,150 --> 00:30:23,854
the public ips that can access your storage.

442
00:30:23,902 --> 00:30:27,346
It's one step forward. It's another layer

443
00:30:27,378 --> 00:30:30,040
that you are adding on top of your system.

444
00:30:30,730 --> 00:30:33,510
Sql let's talk about Azure Sql.

445
00:30:33,930 --> 00:30:38,358
Yes, except accessing them through

446
00:30:38,524 --> 00:30:41,882
username and password we already talked about. And we know that we also have

447
00:30:41,936 --> 00:30:45,846
other options we need to take into account that we need to encrypt

448
00:30:46,038 --> 00:30:49,862
the data, the backup we have the firewalls

449
00:30:50,006 --> 00:30:53,582
and the ip for the rules. And please try

450
00:30:53,636 --> 00:30:57,198
to have a clear policies how you're updating the

451
00:30:57,364 --> 00:31:00,842
IPs that can access the database. If you are just adding

452
00:31:00,906 --> 00:31:04,798
ips, adding ranges, it will doesn't work because

453
00:31:04,884 --> 00:31:08,706
in the end, especially if you are working remotely and you

454
00:31:08,888 --> 00:31:12,850
add the ips of each person that is working and not

455
00:31:12,920 --> 00:31:16,760
the range of IP that is used by the company or

456
00:31:19,450 --> 00:31:23,506
by the team from that city, you might be hacked

457
00:31:23,538 --> 00:31:28,914
very easily and also use as much as possible authentication

458
00:31:29,042 --> 00:31:32,280
using identity tax and management. We have the ad,

459
00:31:33,130 --> 00:31:37,786
we have the role based access control. Now on

460
00:31:37,808 --> 00:31:41,190
top of all object level permission, there are two main features that

461
00:31:41,200 --> 00:31:44,526
I would like to talk, but before going to that I would

462
00:31:44,548 --> 00:31:48,010
just want to highlight the treat detection

463
00:31:48,090 --> 00:31:52,906
system that is available on Azure SQL and can detect behaviors

464
00:31:52,938 --> 00:31:57,022
that are not normal or are not happening normally to your database

465
00:31:57,086 --> 00:32:00,658
and can give you a notification, can alert you or you

466
00:32:00,664 --> 00:32:04,226
can define a clear policy. What should happen in

467
00:32:04,248 --> 00:32:05,640
this ended case.

468
00:32:06,650 --> 00:32:10,514
Now column level encryption. It is another core

469
00:32:10,562 --> 00:32:13,538
service of Azure SQL.

470
00:32:13,634 --> 00:32:17,046
And what does this mean? We can specify that for a specific

471
00:32:17,148 --> 00:32:21,594
role we

472
00:32:21,632 --> 00:32:25,722
will have column with hidden value or for example

473
00:32:25,856 --> 00:32:29,658
with a default value or random value and very very useful. For example,

474
00:32:29,824 --> 00:32:33,562
if the support team needs to access environments,

475
00:32:33,626 --> 00:32:37,166
I don't say production environment but environments where you have customer data.

476
00:32:37,268 --> 00:32:41,294
So you can ensure that somebody, for example from support, even if

477
00:32:41,412 --> 00:32:45,060
needs to get access to

478
00:32:45,430 --> 00:32:48,946
the database, he will still not be able to

479
00:32:48,968 --> 00:32:52,306
see a specific column where you have sensitive data. You can have

480
00:32:52,328 --> 00:32:56,038
all the column except the id or even the id

481
00:32:56,124 --> 00:32:58,280
randomly depending on your own needs.

482
00:32:58,890 --> 00:33:02,390
At the same concept you have cell level encryption that

483
00:33:02,460 --> 00:33:05,880
is on the other dimension. You can decide exactly

484
00:33:07,050 --> 00:33:10,638
what are the cells

485
00:33:10,754 --> 00:33:13,942
that will be encrypted and will have some default values.

486
00:33:14,086 --> 00:33:17,402
It goes very well when for example, you have teams that needs to provide

487
00:33:17,456 --> 00:33:20,766
support and you can have some rows in

488
00:33:20,788 --> 00:33:24,522
your database, in your tables with maybe negative

489
00:33:24,586 --> 00:33:28,334
ids that are used only for, not even by

490
00:33:28,372 --> 00:33:32,154
real users, only for some smoke best

491
00:33:32,202 --> 00:33:36,418
or some tests that ensure you that the production system

492
00:33:36,504 --> 00:33:38,050
works as expected.

493
00:33:40,790 --> 00:33:44,382
Endpoints, web endpoints, best API and APIs

494
00:33:44,446 --> 00:33:47,720
are part of our life. I think that

495
00:33:48,410 --> 00:33:51,734
let's say 99.99 of

496
00:33:51,772 --> 00:33:54,870
the systems are providing APIs that are public available

497
00:33:55,020 --> 00:33:58,146
on the Internet or for private consumption

498
00:33:58,258 --> 00:34:01,206
on which they're exposing data, functionality,

499
00:34:01,398 --> 00:34:04,666
business and so on. Now we need to

500
00:34:04,688 --> 00:34:07,850
validate, we have a lot of parameterization and we

501
00:34:07,920 --> 00:34:11,342
encode it and we already know about oaps and

502
00:34:11,476 --> 00:34:15,054
all the best practices, but we

503
00:34:15,092 --> 00:34:19,422
need to build

504
00:34:19,476 --> 00:34:22,650
application with all the functionality that is provided

505
00:34:22,810 --> 00:34:26,862
also by each cloud vendor. And just give you an example, the OAS

506
00:34:26,926 --> 00:34:30,254
protection or to avoid SQL

507
00:34:30,302 --> 00:34:33,858
injection or for example lidos attacks and

508
00:34:33,864 --> 00:34:37,046
so on. We don't need to rely on the application that

509
00:34:37,068 --> 00:34:40,454
we are building. For example, Azure application

510
00:34:40,572 --> 00:34:43,670
gateway is offering us WAF.

511
00:34:44,410 --> 00:34:47,834
It's a level seven load balancer with

512
00:34:47,872 --> 00:34:51,898
a firewall built inside that that will protect us

513
00:34:52,064 --> 00:34:55,546
from oops, attacks and many more. So we

514
00:34:55,568 --> 00:34:59,498
are moving, we are externalized that security

515
00:34:59,584 --> 00:35:03,278
layer of building internally to

516
00:35:03,444 --> 00:35:07,178
Azure application gateway to an external service. What is the benefit?

517
00:35:07,274 --> 00:35:09,840
We can focus more on the business.

518
00:35:11,090 --> 00:35:14,514
We can reduce the workload on the processor and

519
00:35:14,552 --> 00:35:18,580
just focus on the things that we care, the things that are generating business

520
00:35:19,030 --> 00:35:21,700
and value to our customer.

521
00:35:24,070 --> 00:35:27,720
We have also Microsoft Defender for cloud and we need to,

522
00:35:28,090 --> 00:35:34,646
I have a typo here for cloud that

523
00:35:34,668 --> 00:35:38,330
is giving us the ability to do active scanning

524
00:35:39,870 --> 00:35:43,722
of our cloud infrastructure, on our Azure infrastructure and

525
00:35:43,776 --> 00:35:48,118
automatically can detect when we have misconfiguration,

526
00:35:48,294 --> 00:35:54,026
when for example, we are not complying with a specific compliance

527
00:35:54,058 --> 00:35:57,406
that is required. For example, Microsoft Defender can do active scanning of

528
00:35:57,428 --> 00:36:01,834
PCI, DSS 3.2, level one, basically adding infrastructure

529
00:36:01,882 --> 00:36:05,678
layer. And when we have a misconfiguration of something is not configured as

530
00:36:05,764 --> 00:36:10,110
it should be, it can alert us. It can even provide us recommendations

531
00:36:10,270 --> 00:36:13,074
or sometimes, and I will say most of the cases above them,

532
00:36:13,112 --> 00:36:17,574
that when we click it, it will automatically fix the

533
00:36:17,612 --> 00:36:21,042
problem for us. We have a security scoring,

534
00:36:21,106 --> 00:36:24,546
we can do inventory and many more. And additionally

535
00:36:24,578 --> 00:36:28,298
to this we have Azure advisor. This is not only on security, it's also on

536
00:36:28,384 --> 00:36:31,574
liability, performance, cost and operational excellence.

537
00:36:31,622 --> 00:36:35,900
So why I'm saying this? I wanted to highlight the cost because

538
00:36:36,510 --> 00:36:40,870
Azure advisor can provide us recommendations related

539
00:36:40,950 --> 00:36:44,282
to how we can optimize costs based on different patterns,

540
00:36:44,346 --> 00:36:48,186
based on specific tiers

541
00:36:48,218 --> 00:36:51,482
or number of instances that we have allocated,

542
00:36:51,626 --> 00:36:54,980
but we are not fully using them

543
00:36:56,870 --> 00:37:00,290
now. What are the conclusion?

544
00:37:03,750 --> 00:37:07,654
We should remember that we

545
00:37:07,692 --> 00:37:11,426
are the one that are responsible

546
00:37:11,618 --> 00:37:15,720
to build secure application inside

547
00:37:16,090 --> 00:37:20,090
Microsoft Azure. We have all the right tools

548
00:37:20,830 --> 00:37:24,266
to make and to grow secure application.

549
00:37:24,448 --> 00:37:28,826
We have a lot of security features, services we

550
00:37:28,848 --> 00:37:32,394
don't need to install on on prem, a lot of system it is

551
00:37:32,512 --> 00:37:35,818
at the distance of a button, but we need to be aware

552
00:37:35,834 --> 00:37:39,454
of them and we need to configure them and we need to

553
00:37:39,492 --> 00:37:44,090
consider all the features that each cloud vendor like Microsoft Azure is providing

554
00:37:44,250 --> 00:37:48,670
to us. I would highly

555
00:37:48,830 --> 00:37:52,594
recommend to take a look on sky high

556
00:37:52,632 --> 00:37:56,342
network. They have a great cloud security blog where

557
00:37:56,396 --> 00:37:59,606
they have a high level guide for Azure security.

558
00:37:59,788 --> 00:38:04,226
What are the most important thing? And they're covering seven categories

559
00:38:04,338 --> 00:38:08,166
like security policies, identity and asset management, storage account,

560
00:38:08,268 --> 00:38:11,398
SQL networking, vms and

561
00:38:11,564 --> 00:38:14,538
Michelle like for example subscription, something like that.

562
00:38:14,624 --> 00:38:19,094
Just take a look. It's a very good starting point. And don't forget

563
00:38:19,222 --> 00:38:22,682
about best practices

564
00:38:22,746 --> 00:38:25,998
and recommendations that Microsoft is providing to us through security,

565
00:38:26,084 --> 00:38:30,282
best practices for Azure through cloud adoption framework

566
00:38:30,346 --> 00:38:34,062
and WAF that also you'll find similar ones for

567
00:38:34,116 --> 00:38:38,174
other cloud vendors. Thank you. Thank you for listening me

568
00:38:38,292 --> 00:38:41,662
and if you have questions, feel free to reach

569
00:38:41,716 --> 00:38:45,170
me over LinkedIn and Twitter or Twitter.

570
00:38:45,290 --> 00:38:48,930
And why not? Let's have a virtual or physical

571
00:38:49,090 --> 00:38:52,294
coffee next time. Thank you and have

572
00:38:52,332 --> 00:38:52,740
a great day.

