1
00:00:00,410 --> 00:00:06,174
Jamaica real

2
00:00:06,212 --> 00:00:09,578
time feedback into the behavior of your distributed systems

3
00:00:09,674 --> 00:00:13,374
and observing changes exceptions errors in

4
00:00:13,412 --> 00:00:16,746
real time allows you to not only experiment with confidence,

5
00:00:16,858 --> 00:00:20,480
but respond instantly to get things working again.

6
00:00:24,610 --> 00:00:47,162
Code welcome

7
00:00:47,216 --> 00:00:50,926
to my talk. The five developer principles that help me as a

8
00:00:50,948 --> 00:00:53,840
new father. You won't believe number seven.

9
00:00:55,010 --> 00:00:57,680
Let's start with the elephant in the room.

10
00:00:58,690 --> 00:01:02,894
The title the joke here is that I'm a tired father

11
00:01:02,942 --> 00:01:06,078
and forgot how to count. Not that funny, but I'm

12
00:01:06,094 --> 00:01:08,450
a developer, not a comedian.

13
00:01:10,550 --> 00:01:14,030
Let's meet our criminal. This is Gil,

14
00:01:14,190 --> 00:01:17,750
but don't let his cuteness fool you. As we will soon see,

15
00:01:17,820 --> 00:01:21,526
he can make your beautiful designs from elegant to a

16
00:01:21,548 --> 00:01:23,720
mess in a matter of minutes.

17
00:01:24,970 --> 00:01:28,890
But before we dive in further, a little bit about myself

18
00:01:29,040 --> 00:01:32,570
so I'm a developer for years now,

19
00:01:32,640 --> 00:01:35,962
but the most important one is that I'm a new father for

20
00:01:36,016 --> 00:01:39,970
two. And the first year as a father,

21
00:01:40,150 --> 00:01:44,030
you are very, very tired because you need to do

22
00:01:44,100 --> 00:01:47,694
a lot of things. You need to keep working and also be with your

23
00:01:47,732 --> 00:01:51,786
son or daughter. And it's

24
00:01:51,818 --> 00:01:55,294
hard. So I got to a

25
00:01:55,332 --> 00:01:59,386
point where it was so overwhelming and

26
00:01:59,428 --> 00:02:02,834
I had to do something. And I'm a developer, so I

27
00:02:02,872 --> 00:02:06,514
used principles that I used in the everyday

28
00:02:06,562 --> 00:02:10,182
work as a developer to make my life much

29
00:02:10,236 --> 00:02:12,550
easier as a new father.

30
00:02:13,450 --> 00:02:15,240
Right? So let's get started.

31
00:02:16,970 --> 00:02:20,266
So monolith design so this

32
00:02:20,288 --> 00:02:23,450
is not me here, obviously you can see from the picture,

33
00:02:23,790 --> 00:02:27,338
but also because my house looked way worse in

34
00:02:27,344 --> 00:02:30,782
the first month when we came back with Gil about

35
00:02:30,836 --> 00:02:34,094
two years ago. But this is what

36
00:02:34,132 --> 00:02:37,600
our application usually looked like most of the time.

37
00:02:37,970 --> 00:02:41,246
If it didn't happen, it will happen. That's okay

38
00:02:41,428 --> 00:02:44,946
because we want to move fast, but once we reach a

39
00:02:44,968 --> 00:02:48,046
certain level, this mess start to affect

40
00:02:48,158 --> 00:02:51,746
our productivity. The main point as a new

41
00:02:51,768 --> 00:02:55,246
father is that you are tired. You can fix everything

42
00:02:55,368 --> 00:02:58,310
around the house. You need to prioritize.

43
00:02:59,610 --> 00:03:03,654
So these picture is where we will start off our journey with

44
00:03:03,692 --> 00:03:07,030
a set of the five developer principles.

45
00:03:08,990 --> 00:03:12,474
So, spoiler alert, I'm going to tell

46
00:03:12,512 --> 00:03:15,734
you right now. What's the key takeaway

47
00:03:15,862 --> 00:03:18,460
that I want you to take from this talk?

48
00:03:19,470 --> 00:03:23,262
The first one is to fight coupling as hard as you

49
00:03:23,316 --> 00:03:26,494
can. Of course, when it's applicable, that will

50
00:03:26,532 --> 00:03:30,702
greatly help you down the road. The second

51
00:03:30,756 --> 00:03:34,594
one is to keep your code as simple as you can and

52
00:03:34,632 --> 00:03:38,386
also be kind. I don't mean here that you

53
00:03:38,408 --> 00:03:41,906
need to be kind in code reviews, even though you should,

54
00:03:42,088 --> 00:03:45,318
or to say good morning in the

55
00:03:45,324 --> 00:03:48,818
morning when you first ask for something on slack.

56
00:03:48,914 --> 00:03:52,150
Also remember the no hello hashtag

57
00:03:52,570 --> 00:03:56,600
what I mean here is to be kind when you are writing code.

58
00:03:57,210 --> 00:03:59,820
I will explain it further in these talk.

59
00:04:02,590 --> 00:04:06,090
So this is where we are going with this. We will talk

60
00:04:06,160 --> 00:04:09,562
about each of these principles. We will start

61
00:04:09,616 --> 00:04:13,600
with definition, code examples, and then my home example.

62
00:04:14,210 --> 00:04:15,440
Let's get started.

63
00:04:18,290 --> 00:04:22,470
All right, so the first one is these single responsibility principles.

64
00:04:22,650 --> 00:04:26,562
The idea behind the SRP is that every class,

65
00:04:26,696 --> 00:04:30,686
module or function in a program should have one responsibility

66
00:04:30,798 --> 00:04:32,900
or purpose in a program.

67
00:04:35,130 --> 00:04:38,258
Let's start with some code examples to illustrate

68
00:04:38,274 --> 00:04:42,422
it better. This code might look okay,

69
00:04:42,556 --> 00:04:44,920
but let's highlight some potential issues.

70
00:04:46,410 --> 00:04:49,910
First one is these function name. It does

71
00:04:49,980 --> 00:04:53,494
two things. It also gets the user and the location.

72
00:04:53,622 --> 00:04:57,978
You can see from the style that this function does two things. Always remember

73
00:04:58,064 --> 00:05:01,760
if there is an and or an or in the function name.

74
00:05:02,530 --> 00:05:04,400
Something is fishy here.

75
00:05:06,290 --> 00:05:10,238
We can also see that in order to get the location, we must

76
00:05:10,324 --> 00:05:13,790
use the user object with its ip.

77
00:05:13,950 --> 00:05:15,140
But why?

78
00:05:17,030 --> 00:05:21,006
At the end we return two objects that are not necessarily

79
00:05:21,118 --> 00:05:24,500
related. So let's try to fix that function.

80
00:05:26,330 --> 00:05:30,034
First we extract the logic of the query validation

81
00:05:30,082 --> 00:05:34,098
and normalization of the user into its own function, which will be easier

82
00:05:34,194 --> 00:05:36,950
to also use in other places.

83
00:05:38,270 --> 00:05:41,558
Next, let's do the same with the location.

84
00:05:41,734 --> 00:05:44,986
You can see that now we don't need the user in order to

85
00:05:45,008 --> 00:05:48,982
get this normalized or enriched location,

86
00:05:49,126 --> 00:05:52,926
just an ip that will give other developers or yourself

87
00:05:53,028 --> 00:05:56,286
the option to use that function when

88
00:05:56,308 --> 00:05:59,886
you need it outside of this scope and

89
00:05:59,908 --> 00:06:03,620
not needing the user id in order to get it

90
00:06:04,550 --> 00:06:08,210
right. And here we have it, the modified version.

91
00:06:08,790 --> 00:06:12,820
Now we have two function that does one thing

92
00:06:16,800 --> 00:06:20,732
right. So here we can see my living room. It's a typical

93
00:06:20,796 --> 00:06:24,080
end of the day state. There are a lot of things

94
00:06:24,150 --> 00:06:27,440
going on here. The toys are the most

95
00:06:27,510 --> 00:06:30,220
obvious. But why is the trolley here?

96
00:06:30,390 --> 00:06:33,872
Why is the laptop on the sofa? Why are there dishes

97
00:06:33,936 --> 00:06:37,092
here? What's going on? Let's move those

98
00:06:37,146 --> 00:06:40,340
to another place and keep the living room for adults.

99
00:06:40,760 --> 00:06:44,984
Kind of all right.

100
00:06:45,102 --> 00:06:47,930
So we moved like it's neater, right?

101
00:06:48,700 --> 00:06:51,864
It's neater. And the secret here is

102
00:06:51,902 --> 00:06:55,016
to move most of the stuff out of the way at these

103
00:06:55,038 --> 00:06:59,244
first stage. You can still see some toys around

104
00:06:59,362 --> 00:07:02,764
because this is also Guild's house. But they are on the

105
00:07:02,802 --> 00:07:06,316
side. And not all the toys are here. I moved them to

106
00:07:06,338 --> 00:07:09,708
their own place. It's Guild's room. I also moved

107
00:07:09,724 --> 00:07:13,344
these trolley to the storage, the dishes to the

108
00:07:13,382 --> 00:07:16,800
sink. And I just left the computer there because

109
00:07:16,870 --> 00:07:18,770
I work these as well.

110
00:07:21,480 --> 00:07:24,608
Next one is the boy scout rule.

111
00:07:24,784 --> 00:07:27,670
Leave your code better than you found it.

112
00:07:29,720 --> 00:07:33,236
So you are tasked with adding a new function that

113
00:07:33,258 --> 00:07:36,730
should calculate some profit. Well, what do you do?

114
00:07:37,820 --> 00:07:41,432
Well, adding the function obviously with

115
00:07:41,486 --> 00:07:44,996
test is what you are paid to do. But what about the rest of these

116
00:07:45,038 --> 00:07:48,780
code? We can see here that down below

117
00:07:48,850 --> 00:07:52,524
that there's these place to add the function and above it's the

118
00:07:52,562 --> 00:07:56,124
already written code that you need to add to.

119
00:07:56,322 --> 00:07:59,170
So what can we do here?

120
00:08:01,220 --> 00:08:04,716
So there is a grammar issue here. That default

121
00:08:04,748 --> 00:08:07,970
date. Got a typo. How about we fix that?

122
00:08:09,060 --> 00:08:11,952
Cool. Also,

123
00:08:12,086 --> 00:08:15,684
what is ACC? And row? What is

124
00:08:15,722 --> 00:08:19,316
r? If someone just went into this function,

125
00:08:19,418 --> 00:08:21,430
will he know what that means?

126
00:08:23,740 --> 00:08:27,400
So we are changing the ACC into total

127
00:08:27,470 --> 00:08:31,876
income, rho into expensive, and r to expense.

128
00:08:32,068 --> 00:08:36,110
But this is highly improved the readability of this function.

129
00:08:39,180 --> 00:08:42,904
So this is the usual case when I

130
00:08:42,942 --> 00:08:46,056
go camping with my family. So we are set in

131
00:08:46,078 --> 00:08:49,480
our camp and obviously we clean after ourselves.

132
00:08:49,900 --> 00:08:53,036
But if these are some trash around us, even though

133
00:08:53,058 --> 00:08:56,316
it's not ours, we will still clean it because it

134
00:08:56,338 --> 00:08:59,964
doesn't matter that other people left it. We want to keep the

135
00:09:00,002 --> 00:09:03,452
world with less trash

136
00:09:03,596 --> 00:09:06,704
as much as possible. This is the original voice cut

137
00:09:06,742 --> 00:09:10,210
rule, right? So let's continue.

138
00:09:12,420 --> 00:09:16,740
The next principle is keep it simple stupid,

139
00:09:17,160 --> 00:09:20,560
not saying stupid. The more complex

140
00:09:20,640 --> 00:09:24,756
something is, the more ways it fails and the more difficult it

141
00:09:24,778 --> 00:09:28,730
is to explain to someone else who actually needs to understand it.

142
00:09:29,420 --> 00:09:31,690
Let's look at some code example.

143
00:09:33,420 --> 00:09:36,856
So this might look like a good idea.

144
00:09:36,958 --> 00:09:40,680
You have one function that holds all the logic to calculate

145
00:09:40,760 --> 00:09:43,260
a specific section did the invoice,

146
00:09:45,040 --> 00:09:48,828
but in reality it will get very large

147
00:09:48,914 --> 00:09:52,044
and very hard to understand when

148
00:09:52,082 --> 00:09:56,240
we'll add more logic into each section or add new section.

149
00:09:56,900 --> 00:10:00,224
In reality, these function is hard to test as well

150
00:10:00,422 --> 00:10:04,048
because you need to know every piece of logic in this long

151
00:10:04,134 --> 00:10:07,332
function, because you need to run the whole function

152
00:10:07,386 --> 00:10:10,710
every time. So let's try it in another way.

153
00:10:12,440 --> 00:10:16,116
Here we split our calculate per section function to

154
00:10:16,138 --> 00:10:19,716
have a function for each section. The above logic

155
00:10:19,748 --> 00:10:22,968
is responsible to take each section and use it how

156
00:10:22,974 --> 00:10:26,564
it likes. And also we can add test for each section.

157
00:10:26,692 --> 00:10:29,964
And by the way, the added benefit here is we

158
00:10:30,002 --> 00:10:33,612
can actually change the order of each section if you want.

159
00:10:33,746 --> 00:10:35,020
For invoice,

160
00:10:36,880 --> 00:10:39,390
let's talk about our home example.

161
00:10:41,060 --> 00:10:44,272
In my house when the baby can't find its

162
00:10:44,326 --> 00:10:48,364
pacifier, you can buy, and I bought a lot of pacifier,

163
00:10:48,492 --> 00:10:51,536
stash them everywhere, closet, everywhere, in the

164
00:10:51,558 --> 00:10:55,380
bed. Or you can just

165
00:10:55,450 --> 00:10:58,820
put a strap on it. Problem solved,

166
00:11:01,080 --> 00:11:03,510
right? Let's move on to the next one.

167
00:11:05,080 --> 00:11:06,970
You ain't going to need it.

168
00:11:07,980 --> 00:11:11,464
Always implement things when you actually need them,

169
00:11:11,582 --> 00:11:15,210
never when you just foresee that you may need them.

170
00:11:16,060 --> 00:11:19,404
Let's say that we need to add a new feature, a function that

171
00:11:19,442 --> 00:11:23,096
accepts a user id and return the user from the Db.

172
00:11:23,288 --> 00:11:26,860
How should we implement it? Let's give it a shot.

173
00:11:29,440 --> 00:11:33,090
I'll give you a few seconds just to briefly look over it.

174
00:11:36,720 --> 00:11:40,284
All right, so this is even not the

175
00:11:40,322 --> 00:11:44,108
worst case. I call reviews and even admittedly myself,

176
00:11:44,274 --> 00:11:48,000
but I want to have something that will actually fit on these slide.

177
00:11:48,900 --> 00:11:53,120
So unless you already have the infrastructure above because you needed

178
00:11:53,190 --> 00:11:57,264
it, there is no need for it. But what

179
00:11:57,302 --> 00:12:00,390
is actually wrong here? Let's find out.

180
00:12:01,720 --> 00:12:05,940
Why do we need an interface, this base repository,

181
00:12:06,280 --> 00:12:09,652
just for a get method? What do we get here?

182
00:12:09,706 --> 00:12:13,304
Other than the thought that maybe down the road it will

183
00:12:13,342 --> 00:12:14,170
help us?

184
00:12:16,380 --> 00:12:19,524
Right? So now it's simpler and we remove

185
00:12:19,572 --> 00:12:24,110
the code we don't actually need. What else is there?

186
00:12:26,800 --> 00:12:30,572
Why do we need this prisma orm here?

187
00:12:30,706 --> 00:12:33,980
So I actually removed these additional code that we actually

188
00:12:34,050 --> 00:12:37,276
need to implement in order to use the Prisma

189
00:12:37,308 --> 00:12:40,656
right here. Like there's a whole infrastructure code in

190
00:12:40,678 --> 00:12:44,530
order to get prisma to work. Why do we need that?

191
00:12:46,260 --> 00:12:50,740
We can just remove the OrM code and use SQl,

192
00:12:51,160 --> 00:12:52,550
what's wrong with that?

193
00:12:55,160 --> 00:12:58,390
But also, why do we need a class?

194
00:12:59,800 --> 00:13:01,850
Can't we just use a function?

195
00:13:04,540 --> 00:13:08,520
Right? I think it's far enough that we went with this,

196
00:13:08,590 --> 00:13:11,688
but just the before and after we

197
00:13:11,774 --> 00:13:14,984
started with this whole base repository

198
00:13:15,112 --> 00:13:19,004
that the user repository extends from with an

199
00:13:19,042 --> 00:13:22,350
Orm and we got to this.

200
00:13:23,760 --> 00:13:27,280
But how does that relate to me being a new father?

201
00:13:29,220 --> 00:13:32,992
So this is a very short list of stuff these baby should

202
00:13:33,046 --> 00:13:37,152
taste and eat from birth to approximately one

203
00:13:37,206 --> 00:13:40,704
year. So I bought special cups

204
00:13:40,752 --> 00:13:44,644
and created spreadsheets for all these stuff that he ate. So I will

205
00:13:44,682 --> 00:13:48,624
know if he's the only child in the world that is allergic

206
00:13:48,672 --> 00:13:52,632
to salt. He's not and most children

207
00:13:52,766 --> 00:13:56,296
are not, but at the end

208
00:13:56,398 --> 00:13:59,000
they just eat from the floor,

209
00:13:59,340 --> 00:14:04,350
so you ain't going to need it.

210
00:14:04,720 --> 00:14:08,556
All right, our last principle is the tell

211
00:14:08,658 --> 00:14:09,950
dont ask.

212
00:14:12,000 --> 00:14:15,276
So the tell dont ask principles suggests that it

213
00:14:15,298 --> 00:14:18,752
is better to issue a command to perform some

214
00:14:18,806 --> 00:14:21,952
operation or logic rather than query its

215
00:14:22,006 --> 00:14:25,570
state and then take some action as a result.

216
00:14:27,540 --> 00:14:30,452
So let's start with these initial example.

217
00:14:30,586 --> 00:14:33,952
I will also give you a few seconds just to briefly

218
00:14:34,016 --> 00:14:34,950
look at it,

219
00:14:39,580 --> 00:14:42,884
right, so we can see that somewhere

220
00:14:42,932 --> 00:14:46,140
in our code base we are checking if a task

221
00:14:46,800 --> 00:14:50,188
is not started created before January 2022

222
00:14:50,194 --> 00:14:53,816
and there is no subscribers

223
00:14:53,848 --> 00:14:57,616
to this task. If that happens, we should just close the

224
00:14:57,638 --> 00:15:00,850
task. But what is wrong here?

225
00:15:02,580 --> 00:15:05,970
We are asking the task for some information

226
00:15:06,500 --> 00:15:10,244
and then we are closing that same task. Why do we care

227
00:15:10,282 --> 00:15:14,224
about that? That seems to be the task responsibility to handle

228
00:15:14,272 --> 00:15:18,148
that internal logic, not the color itself. Let's see how

229
00:15:18,154 --> 00:15:19,430
we can improve that.

230
00:15:25,160 --> 00:15:29,510
We move the internal logic of the task inside task class.

231
00:15:30,280 --> 00:15:33,460
That way the client who wants to use that task object

232
00:15:33,530 --> 00:15:37,464
will tell him to close the task rather than ask for

233
00:15:37,502 --> 00:15:40,010
more information before doing that.

234
00:15:48,510 --> 00:15:51,998
I will finish with the best tell don't ask person.

235
00:15:52,084 --> 00:15:55,550
I know Gil. He isn't asking

236
00:15:55,620 --> 00:15:58,862
for nothing. He demands my attention. He will not

237
00:15:58,916 --> 00:16:01,360
stop until he gets his way.

238
00:16:02,630 --> 00:16:06,350
But one final advice on that don't

239
00:16:06,430 --> 00:16:09,666
ask on the tell don't ask. If you

240
00:16:09,688 --> 00:16:13,474
should do the dishes, do them. Dont ask

241
00:16:13,512 --> 00:16:17,416
for it. Thank you

242
00:16:17,438 --> 00:16:21,412
for watching and for all you new parents.

243
00:16:21,556 --> 00:16:24,664
We are in this together. You can

244
00:16:24,702 --> 00:16:28,108
find me at Twitter, at hashtag

245
00:16:28,164 --> 00:16:32,130
benitool or just send me a message via email.

246
00:16:32,500 --> 00:16:34,190
Goodbye and thank you.

