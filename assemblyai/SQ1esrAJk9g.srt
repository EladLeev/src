1
00:02:15,320 --> 00:02:18,388
Hi, my name is Rohit and today we are

2
00:02:18,394 --> 00:02:21,764
going to talk about transformation and cultural shift using

3
00:02:21,802 --> 00:02:24,100
site reliability engineering and data science.

4
00:02:24,520 --> 00:02:27,952
We'll cover the aspects of mostly around site reliability

5
00:02:28,016 --> 00:02:31,088
engineering. How is it as a transformation driver?

6
00:02:31,264 --> 00:02:35,204
How does it tackle culture technology and how

7
00:02:35,242 --> 00:02:39,180
we can cause data science and leverage a lot of data ops and aiops

8
00:02:39,600 --> 00:02:43,324
in these entire journey of doing the transformation using site

9
00:02:43,362 --> 00:02:47,144
reliability engineering, we are also going to talk about defining

10
00:02:47,192 --> 00:02:50,864
processes, the risk taking abilities, the unique process which we tried

11
00:02:50,902 --> 00:02:54,256
to bring in place. And at the end we are going to surely talk about

12
00:02:54,278 --> 00:02:58,112
the challenges which we faced based on our

13
00:02:58,166 --> 00:03:01,410
experience. To start off with,

14
00:03:01,720 --> 00:03:05,940
a lot of people have a question around what is can sre?

15
00:03:06,920 --> 00:03:10,976
It was obviously coined by Google, Ben Logs coined thats term.

16
00:03:11,168 --> 00:03:14,508
Site reliability engineers often have background in software engineering

17
00:03:14,544 --> 00:03:18,440
and system engineering and then it was about

18
00:03:18,590 --> 00:03:21,912
making sure thats you put in a person

19
00:03:21,966 --> 00:03:25,624
from a software development background into an ops and see how it works

20
00:03:25,662 --> 00:03:29,592
out. Site reliability engineering is not only about doing automation,

21
00:03:29,656 --> 00:03:32,524
it cis about also looking at resilient system,

22
00:03:32,722 --> 00:03:36,524
system design and things of that sort. Is it same

23
00:03:36,562 --> 00:03:40,156
as DevOps? Yes, more or less. But there is

24
00:03:40,178 --> 00:03:44,444
a major difference being that site reliability engineering is applying

25
00:03:44,492 --> 00:03:48,784
on something which CIS post production is

26
00:03:48,822 --> 00:03:52,624
SRE about. Automation. Automation is one of the key drivers and we'll talk about it

27
00:03:52,662 --> 00:03:56,116
when we get to the principles which we

28
00:03:56,138 --> 00:03:59,876
talk about and how it is a cultural shift more than

29
00:03:59,898 --> 00:04:03,236
anything else. That is what we have experienced when we try to roll it

30
00:04:03,258 --> 00:04:06,664
out for a services based organization. And how do I

31
00:04:06,702 --> 00:04:10,570
measure the success? The measurement is no longer around

32
00:04:12,060 --> 00:04:15,800
slas, it's no longer around contracts, it's around

33
00:04:15,870 --> 00:04:19,336
improvement. You measure improvement and that is

34
00:04:19,358 --> 00:04:22,716
what cis SRE all about, right? So if we go to

35
00:04:22,738 --> 00:04:25,836
the transformation drivers, as I talked about, and I'm going to

36
00:04:25,858 --> 00:04:29,424
spend some time here in the four drivers which we perceive as

37
00:04:29,462 --> 00:04:33,264
the most important one for cytreliability engineering, the first

38
00:04:33,302 --> 00:04:37,596
and foremost, and I cannot stress enough on it, is cultural shift.

39
00:04:37,708 --> 00:04:41,536
It is the most difficult thing to achieve when we go on

40
00:04:41,558 --> 00:04:45,296
this transformation drive, right? It revolves

41
00:04:45,328 --> 00:04:49,044
around building better teams, it revolves around saying a lot

42
00:04:49,082 --> 00:04:52,852
of not my problem out of the window. It is about pushing people

43
00:04:52,906 --> 00:04:56,356
to a different level. It is about reenhancing and reskilling

44
00:04:56,388 --> 00:04:59,912
them up to a point. It is about making SRe

45
00:04:59,966 --> 00:05:02,650
you change the was of working right.

46
00:05:03,420 --> 00:05:07,256
Cultural shift is about a lot to do around training, a lot to

47
00:05:07,278 --> 00:05:10,920
do around making SRE that the normal ways

48
00:05:10,990 --> 00:05:14,076
of doing work is going to change because we are going to use a lot

49
00:05:14,098 --> 00:05:17,404
of technology. We are going to use a lot of data into it. And there

50
00:05:17,442 --> 00:05:20,976
will be example later in the presentation where we'll talk about

51
00:05:21,078 --> 00:05:24,880
how we tried to challenge the current setup of

52
00:05:24,950 --> 00:05:28,108
the processes which were there in place, including the ITL setup

53
00:05:28,124 --> 00:05:31,884
which we had. The other part is obviously technology refresh.

54
00:05:31,932 --> 00:05:36,144
Now, if we want cytreliability engineering to be successful

55
00:05:36,192 --> 00:05:40,208
and we want the sres to be really working in real areas,

56
00:05:40,384 --> 00:05:43,940
we need to have a certain degree of acceptance,

57
00:05:46,060 --> 00:05:50,136
certain degree of freedom from

58
00:05:50,158 --> 00:05:53,288
an SRE standpoint. We also will talk about the concept of

59
00:05:53,294 --> 00:05:56,596
visibility engineering, also where it is about technology refresh.

60
00:05:56,788 --> 00:06:01,236
We'll talk about SRE's focus on doing tooling,

61
00:06:01,348 --> 00:06:05,196
making in house tools or using different tools across a

62
00:06:05,218 --> 00:06:09,020
little bit of shift towards open source tooling also is what we perceive

63
00:06:09,440 --> 00:06:12,876
then a lot to do about data visibility engineering.

64
00:06:12,908 --> 00:06:15,712
Now, data analytics is not new.

65
00:06:15,766 --> 00:06:19,676
It's not something which is new. The entire world is obsessed,

66
00:06:19,708 --> 00:06:23,328
especially in the operations world. They're obsessed about ITIL data

67
00:06:23,414 --> 00:06:26,724
analytics, which is important. I don't deny that.

68
00:06:26,842 --> 00:06:29,924
But there is so much more we can do when we do analytics on top

69
00:06:29,962 --> 00:06:34,320
of components, we do analytics on top of toil

70
00:06:34,400 --> 00:06:37,768
dashboards, real tribe ones, usage of

71
00:06:37,934 --> 00:06:41,544
machine learning and usage of data ops to get to

72
00:06:41,582 --> 00:06:44,856
things which is not visible to naked eye. And we'll talk about it where

73
00:06:44,878 --> 00:06:48,324
we look at doing predictions based on the components

74
00:06:48,372 --> 00:06:51,852
and then deriving outputs out of it and then

75
00:06:51,906 --> 00:06:55,596
enacting on top of it. Then the last part is the process and

76
00:06:55,618 --> 00:07:00,124
the automation. We'll again touch on that when we go to the reliability principles.

77
00:07:00,252 --> 00:07:03,388
But processes have to be measured.

78
00:07:03,484 --> 00:07:07,072
Processes sometimes have to be changed or at least

79
00:07:07,126 --> 00:07:10,720
foregone at ties to bring simplicity into the

80
00:07:10,790 --> 00:07:14,864
setup. Sometimes structures become shackles when we put too many processes

81
00:07:14,912 --> 00:07:18,100
in place. And we'll try to look at how sres can help

82
00:07:18,170 --> 00:07:22,832
in that quickly to the SRE reliability principles,

83
00:07:22,896 --> 00:07:26,984
and I will go through each one of them very quickly. There are

84
00:07:27,022 --> 00:07:31,124
aspects which we have to keep in mind from an SRE standpoint, embracing risk,

85
00:07:31,172 --> 00:07:35,130
the first one, and error budgeting. Now, embracing risk is a cultural thing.

86
00:07:37,520 --> 00:07:41,550
We do serve customers,

87
00:07:42,000 --> 00:07:45,480
we do have our contractual agreements,

88
00:07:45,640 --> 00:07:48,956
and we have to ensure that we are within that.

89
00:07:49,058 --> 00:07:52,616
But having said that, how do you manage risk? How do you

90
00:07:52,738 --> 00:07:56,448
bring in a culture of risk taking ability? Right? You bring in a

91
00:07:56,454 --> 00:07:59,936
risk tolerance and tolerance level through close. So that's what

92
00:07:59,958 --> 00:08:04,032
we try to achieved. It's a cultural thing. You have to trust the team

93
00:08:04,086 --> 00:08:07,700
to take a certain degree of risk, obviously not falling through the crack, but within

94
00:08:07,770 --> 00:08:11,280
the calculated risk framework which we have defined,

95
00:08:11,360 --> 00:08:14,664
then you have the concept of error budgeting. Now, error budgeting is

96
00:08:14,702 --> 00:08:18,360
sometimes very much confused with people

97
00:08:18,430 --> 00:08:22,168
tend to confuse it with all the SLas and

98
00:08:22,174 --> 00:08:24,810
the KPIs. No, it's not. It's a KPI for themselves.

99
00:08:25,260 --> 00:08:29,236
It's a API to reach higher, to reach better. It's about

100
00:08:29,278 --> 00:08:32,732
disruption. It's about making sure that error budget violation is

101
00:08:32,786 --> 00:08:36,156
considered an equivalent automation of what we do

102
00:08:36,178 --> 00:08:39,196
for an SLA, even though the slos or the error budget will be much,

103
00:08:39,218 --> 00:08:42,780
much higher than what the slas are. Right. Managing toil

104
00:08:42,860 --> 00:08:46,768
this is an area which is primarily untapped and

105
00:08:46,774 --> 00:08:49,970
that's why you need sres to be inculcated into the team members.

106
00:08:50,740 --> 00:08:54,604
That concept, because toil necessarily cannot always be calculated

107
00:08:54,652 --> 00:08:58,868
in numbers. There are so many things thats teams do outside

108
00:08:59,034 --> 00:09:02,308
what is captured and what can be analyzed. And we have

109
00:09:02,314 --> 00:09:06,184
to look at it and revisit it at different times to see how we

110
00:09:06,222 --> 00:09:10,840
can ensure thats the SREs make sure that the operations teams

111
00:09:14,140 --> 00:09:17,976
the workload is much much lesser. Okay. Sres are

112
00:09:17,998 --> 00:09:21,720
no separate team. That is also a misconception. They are the operations

113
00:09:21,800 --> 00:09:25,436
team who ensure that most 50% of their time they care only working on

114
00:09:25,458 --> 00:09:28,750
making sure that they automate any mundane tasks or

115
00:09:29,120 --> 00:09:32,704
ensure that the automation is going to the level where they are no longer

116
00:09:32,742 --> 00:09:35,648
required to sit on call and do stuff. Right.

117
00:09:35,814 --> 00:09:39,456
Monitoring for me is the based of it. Now there

118
00:09:39,478 --> 00:09:42,816
are traditional long term monitoring tools which care there.

119
00:09:42,918 --> 00:09:46,224
But what we try to bring in over here and that's where the data science

120
00:09:46,272 --> 00:09:50,036
comes into picture, is trying to make sure that we try to align this

121
00:09:50,058 --> 00:09:53,680
with more predictive stuff. Okay. A lot of logs

122
00:09:53,770 --> 00:09:57,992
analysis will happen because the alerting system

123
00:09:58,046 --> 00:10:01,352
through the monitoring setup which we already have across our

124
00:10:01,406 --> 00:10:05,188
application is sometimes very reactive.

125
00:10:05,284 --> 00:10:08,716
By the time it gets to us, things have already happened and we wanted to

126
00:10:08,738 --> 00:10:12,808
change that. So monitoring is what we call as advanced monitoring

127
00:10:12,824 --> 00:10:16,236
and the concept of visibility engineering automation, well,

128
00:10:16,258 --> 00:10:19,596
is an output always probably the most overused word in the

129
00:10:19,618 --> 00:10:22,548
industry, automation, cis, always an output.

130
00:10:22,664 --> 00:10:26,384
Automation is after you know what you need to do and then automation does

131
00:10:26,422 --> 00:10:29,276
what it does. So while automation is an output,

132
00:10:29,308 --> 00:10:32,680
analysis is much more important to understand what we need to automate.

133
00:10:32,780 --> 00:10:35,904
So we do give weightage to the automation,

134
00:10:35,952 --> 00:10:39,204
but what to automate is very

135
00:10:39,242 --> 00:10:43,590
important and how the use cases are nurtured. Release engineering this is more from

136
00:10:45,480 --> 00:10:48,836
more advanced or more modern setups

137
00:10:48,868 --> 00:10:51,828
where we have the release engine train which can be run through from a DevOps

138
00:10:51,844 --> 00:10:55,368
practice. Traditional infrastructure teams are still a

139
00:10:55,374 --> 00:10:58,724
little bit behind in that. But when it comes to container based teams

140
00:10:58,772 --> 00:11:02,376
mostly, or public cloud based teams, release engineering concept principles

141
00:11:02,408 --> 00:11:05,708
work pretty well. A lot of automation goes in there. A lot of

142
00:11:05,714 --> 00:11:09,276
predictions also go in there. The simplicity is the core

143
00:11:09,308 --> 00:11:12,864
of it. It cis, again, a cultural thing. You don't want to

144
00:11:12,982 --> 00:11:19,632
overcomplicate things. You don't want to get five

145
00:11:19,686 --> 00:11:22,864
different process stage gates to ensure that the things are all

146
00:11:22,902 --> 00:11:26,724
going through. You got to make simple solutions. We are not here to solve world

147
00:11:26,762 --> 00:11:31,700
Harunga's problem in one day. Okay, so we go step by step again

148
00:11:31,770 --> 00:11:35,284
on the same side, what all things we have done, how the SRE

149
00:11:35,332 --> 00:11:38,776
setup was done. And this brings me to the

150
00:11:38,798 --> 00:11:42,536
point where we want to talk about how the SRE penetration is so

151
00:11:42,558 --> 00:11:45,050
important in the organization. Now,

152
00:11:46,780 --> 00:11:50,152
in a product based organizations with a central

153
00:11:50,216 --> 00:11:53,596
team monitoring the entire architecture and these technology part of

154
00:11:53,618 --> 00:11:57,208
it, it's a little bit straightforward

155
00:11:57,304 --> 00:12:00,480
that we have a concept of having can SRE team

156
00:12:00,550 --> 00:12:03,904
and inculcating it in each and every team members. Now, in case

157
00:12:03,942 --> 00:12:07,776
of services based organizations, it gets slightly tricky because

158
00:12:07,878 --> 00:12:11,764
we have each and every service for

159
00:12:11,802 --> 00:12:15,572
each different customers. Now, each of these different customer

160
00:12:15,706 --> 00:12:19,504
units act and have their own revenue,

161
00:12:19,552 --> 00:12:22,676
own PNL, and they act in a different way.

162
00:12:22,778 --> 00:12:26,096
Right now, these same services being done for two different

163
00:12:26,138 --> 00:12:29,432
units will have slight difference. Some might

164
00:12:29,486 --> 00:12:32,804
be relatively new to this, some might be quite advanced

165
00:12:32,852 --> 00:12:36,728
when it comes to tooling or SRE adoption or any of that. In order to

166
00:12:36,734 --> 00:12:40,888
do that, we defined a concept called as bootstrap site reliability engineer.

167
00:12:40,984 --> 00:12:45,340
A group of ten to twelve sres, whom mostly we hired

168
00:12:45,760 --> 00:12:49,496
from the market, who have done this in past, and they

169
00:12:49,538 --> 00:12:53,004
were dedicatedly assigned, who were like ideological

170
00:12:53,052 --> 00:12:55,920
mentor to the entire SRE community across the organization.

171
00:12:56,420 --> 00:13:00,560
We call them the horizontal SRE and the vertical SRE was that

172
00:13:00,630 --> 00:13:04,320
we asked each and every items, each and every

173
00:13:04,390 --> 00:13:07,444
squad for each and every customer unit whom we care working

174
00:13:07,482 --> 00:13:11,380
for. And we are a $5 billion company. So there are plenty.

175
00:13:11,880 --> 00:13:15,716
We wanted to ensure that there are sres identified in each and every squad.

176
00:13:15,828 --> 00:13:19,284
Okay. People who are working in SRE. Ideally we want everybody to be can SRE,

177
00:13:19,332 --> 00:13:22,968
but it's more of a

178
00:13:22,974 --> 00:13:26,856
maturity target than actual reality. Right? So what we

179
00:13:26,878 --> 00:13:30,604
wanted to do was we wanted to keep sres there in

180
00:13:30,642 --> 00:13:34,204
each and every squad. Obviously, we have to train them.

181
00:13:34,242 --> 00:13:38,056
And that's what was the part of the horizontal. The bootstrap sres and bootstrap

182
00:13:38,088 --> 00:13:41,504
SRe also would slowly induce the new

183
00:13:41,542 --> 00:13:45,024
tooling culture, the visibility engineering, where we

184
00:13:45,062 --> 00:13:48,384
have the usage of AI driven intelligence and making

185
00:13:48,422 --> 00:13:52,864
sure that we work on predictions. We call it ITSM

186
00:13:52,912 --> 00:13:56,496
data plus component data plus system data plus error

187
00:13:56,528 --> 00:14:00,304
budgeting, and coming back with a framework thats we define

188
00:14:00,352 --> 00:14:03,300
error budget for each and every squad.

189
00:14:03,720 --> 00:14:07,076
And obviously error budget cannot only be defined to cater to

190
00:14:07,098 --> 00:14:10,824
a certain number. It was defined keeping in mind what the customer wants,

191
00:14:10,862 --> 00:14:14,040
what the end user wants. That's when the sres are the most effective ones.

192
00:14:14,110 --> 00:14:18,012
Right. This was the visibility engineering architecture at a very quick

193
00:14:18,066 --> 00:14:21,372
level. If I can get through this, which was

194
00:14:21,426 --> 00:14:24,956
around trying to make sure we have a stream of data,

195
00:14:25,058 --> 00:14:29,288
we tried to get it all into data ops

196
00:14:29,384 --> 00:14:32,624
set up. Okay, this is itil a work in progress. We are still

197
00:14:32,662 --> 00:14:34,610
not 100% there.

198
00:14:35,620 --> 00:14:39,916
We have been able to do it for some of them. We are still implementing

199
00:14:39,948 --> 00:14:43,724
for some of the logs part because there are so many customers, so many toolings,

200
00:14:43,772 --> 00:14:46,932
so many different ways of doing GDPR laws apply and

201
00:14:46,986 --> 00:14:50,836
you can't move everything to a centralized setup. But the point was, it was

202
00:14:50,858 --> 00:14:53,856
never to do a centralized ever. We are not here to make a data lake.

203
00:14:53,968 --> 00:14:57,784
What we are trying to do is we have, can integration cater across so

204
00:14:57,822 --> 00:15:00,936
that we have all the data ingesting in

205
00:15:01,118 --> 00:15:04,648
which can be used. And then we have separate pipelines. For example,

206
00:15:04,734 --> 00:15:08,220
we have an ITIl based machine turning

207
00:15:08,290 --> 00:15:11,752
model, which gives runtime technology error categories,

208
00:15:11,816 --> 00:15:15,164
right? So for every customer it's different because their

209
00:15:15,362 --> 00:15:19,532
incident based thresholds are different, their incident ways

210
00:15:19,586 --> 00:15:23,084
of working of the teams care different. So we have separate

211
00:15:23,132 --> 00:15:26,544
pipelines, ML pipelines which run through and churn out

212
00:15:26,742 --> 00:15:30,684
their dashboards. But at the same time there are prediction based setup

213
00:15:30,732 --> 00:15:34,676
also which are there. And I'll show a little bit of that in

214
00:15:34,698 --> 00:15:37,924
the subsequent slide. And then based on

215
00:15:37,962 --> 00:15:41,700
that AI hub, we tried to bring in new models and try to

216
00:15:41,850 --> 00:15:45,600
utilize the data hubs concept. That's basically what we have from a visibility

217
00:15:45,680 --> 00:15:49,508
engineering set standpoint. Now this is a very cliche slide

218
00:15:49,524 --> 00:15:52,648
to be very honest, because data is the new ML. Everybody knows that. So the

219
00:15:52,654 --> 00:15:56,136
first stage was obviously itsm analysis. Everybody does that. We wanted to bring

220
00:15:56,158 --> 00:15:59,052
in a flavor of ML of what the problem is rather than where the problem

221
00:15:59,106 --> 00:16:02,856
is. In a traditional setup, we usually have a flood

222
00:16:02,888 --> 00:16:06,364
of incidents coming in and people trying to do a lot of analysis around

223
00:16:06,402 --> 00:16:10,624
it by giving it in excel to

224
00:16:10,662 --> 00:16:14,624
our SMEs. We wanted to make

225
00:16:14,662 --> 00:16:18,112
sure that thats happens automatically. So we wrote a machine learning model

226
00:16:18,166 --> 00:16:21,648
which has different pipelines, obviously for different customers,

227
00:16:21,814 --> 00:16:25,492
where the problem itself is

228
00:16:25,546 --> 00:16:29,236
shown based on the historic record, which is excellent. And the

229
00:16:29,258 --> 00:16:32,656
second thing was the ITsm. This was our starting point, the ITSM analysis.

230
00:16:32,688 --> 00:16:36,200
The next was we get into log analysis where we care

231
00:16:36,270 --> 00:16:39,476
more talking about dynamic thresholds because static thresholds

232
00:16:39,508 --> 00:16:43,460
care. The ones which develop alerting. You put a configuration,

233
00:16:43,620 --> 00:16:46,980
the alerting happens, you get an alert or an incidents or

234
00:16:46,990 --> 00:16:50,684
whatever. But the log analysis is more like a

235
00:16:50,882 --> 00:16:54,232
moving averages concept, more like a dynamic threshold. And that's

236
00:16:54,296 --> 00:16:58,030
based on predictions. So we are not anymore waiting for

237
00:16:58,560 --> 00:17:01,868
when it will happen or when it happens. Then I'll take

238
00:17:01,874 --> 00:17:05,296
an action. We are looking at predictions and this was one

239
00:17:05,318 --> 00:17:08,672
of the most paradigm shifts which we wanted to do.

240
00:17:08,806 --> 00:17:12,192
Again, it's a work in progress. We have still not reached there. But the point

241
00:17:12,246 --> 00:17:15,676
was we wanted to get to a point where we can start predictions, not only

242
00:17:15,718 --> 00:17:19,504
failures. Failures is probably the first step, but looking at how it's going to affect

243
00:17:19,552 --> 00:17:23,476
business. So we do a lot of predictions on monitoring, then we

244
00:17:23,498 --> 00:17:26,916
do a lot of correlation, which is based on dependent variables,

245
00:17:26,948 --> 00:17:30,696
non dependent variables. I don't want to get more into details about mathematical part

246
00:17:30,718 --> 00:17:34,008
of it, but more to do with how we

247
00:17:34,094 --> 00:17:37,336
use these predictions to come out with an

248
00:17:37,358 --> 00:17:41,004
output that was number one. But the number two point which

249
00:17:41,042 --> 00:17:44,524
was very important was how does it change? And it

250
00:17:44,562 --> 00:17:48,380
all brings down the data science part where we have predictions,

251
00:17:50,000 --> 00:17:53,136
the technology which we are using, the processes have to

252
00:17:53,158 --> 00:17:56,764
be implemented. And I'll give you two instances where the processes were differently implemented.

253
00:17:56,812 --> 00:18:00,156
Number one was if we have a prediction

254
00:18:00,268 --> 00:18:04,100
set up, that means the static threshold based

255
00:18:04,250 --> 00:18:07,524
alerting, if we are very

256
00:18:07,562 --> 00:18:10,900
accurate with the prediction, will no more longer be applicable.

257
00:18:11,320 --> 00:18:14,872
The point was how does it change the ways of working of the team,

258
00:18:14,926 --> 00:18:19,044
which brings down to the point of how the process change and how the mindset

259
00:18:19,092 --> 00:18:22,968
and the cultural shift happens. The point was

260
00:18:23,134 --> 00:18:27,348
that if the engineers or the operators

261
00:18:27,444 --> 00:18:31,192
or the operations engineers are going to look at predictions,

262
00:18:31,336 --> 00:18:34,572
what are they supposed to do if they see something is going to happen,

263
00:18:34,626 --> 00:18:38,348
say 8 hours from now, what is the standard procedure to

264
00:18:38,354 --> 00:18:41,984
be followed? What is the SOP to be followed? Because right now more or

265
00:18:42,022 --> 00:18:45,724
less the entire ITL is based on mostly around change and incident management,

266
00:18:45,852 --> 00:18:51,068
which is right. But the problem management is very reactive

267
00:18:51,244 --> 00:18:55,212
and we wanted to bring that to proactiveness. So if my prediction

268
00:18:55,276 --> 00:18:58,404
says that something is going to go wrong in eight to 10 hours

269
00:18:58,442 --> 00:19:01,728
from now, what will be the next step? And that is where the SRe kicks

270
00:19:01,744 --> 00:19:05,416
in. This is how we in our organizations tries to use

271
00:19:05,438 --> 00:19:08,744
the site. Reliability engineering is we want

272
00:19:08,782 --> 00:19:12,440
to run a project which is at 75%

273
00:19:12,510 --> 00:19:15,976
of the time where the prediction shows that it

274
00:19:15,998 --> 00:19:19,516
will go wrong. Okay. And that project is led and

275
00:19:19,538 --> 00:19:23,016
executed by the site reliability engineer and ensure

276
00:19:23,128 --> 00:19:26,716
that the trend starts going down. And that can only be done when

277
00:19:26,738 --> 00:19:30,500
we have log based predictions. We take it seriously

278
00:19:30,520 --> 00:19:34,524
and we have great accuracy in that for which the organizations

279
00:19:34,572 --> 00:19:38,096
need to invest on data science to

280
00:19:38,118 --> 00:19:42,156
ensure that we get to that level. The other part was about change management

281
00:19:42,188 --> 00:19:45,396
on an application side, which we had where we put in a concept called

282
00:19:45,418 --> 00:19:49,632
as failure budget, where we gives individual budget

283
00:19:49,776 --> 00:19:53,316
based on the historic data for each and every team and how they have been

284
00:19:53,338 --> 00:19:56,456
performing with the changes. And based on

285
00:19:56,478 --> 00:19:59,892
that, we gave them some credits. And those credits would exhaust

286
00:19:59,956 --> 00:20:03,736
if they breach the error budgets or

287
00:20:03,758 --> 00:20:06,936
the close which we have defined till they are not,

288
00:20:07,118 --> 00:20:10,632
they are free to get through all the cause and all the quality

289
00:20:10,686 --> 00:20:14,156
gates. The moment they breach it once or twice, they're back to

290
00:20:14,178 --> 00:20:17,820
the quality cater. So that's how we tries to inculcate the risk taking

291
00:20:17,890 --> 00:20:21,804
ability in the organization on all the items.

292
00:20:21,932 --> 00:20:26,032
As I said, SRE is a more cultural and

293
00:20:26,086 --> 00:20:29,730
data shift, rather than actually a technology shift, which is a big,

294
00:20:31,460 --> 00:20:34,944
I should say, misconception. And also when you

295
00:20:34,982 --> 00:20:38,500
dig deep, you'll see that automation is just the final thing.

296
00:20:38,650 --> 00:20:41,684
It is not the driver, it is what you do at the end.

297
00:20:41,722 --> 00:20:45,224
These drivers are all of this which we talked about very

298
00:20:45,262 --> 00:20:48,164
quickly to go with challenges. There were plenty.

299
00:20:48,212 --> 00:20:51,656
Transformations are always challenging, we know that. So one

300
00:20:51,678 --> 00:20:55,912
of the most important thing was people tend to use this

301
00:20:56,046 --> 00:20:59,276
transformation to attain numbers. Yes, it will give it,

302
00:20:59,298 --> 00:21:02,044
but in the long run, the ROI is in the long run, we don't get

303
00:21:02,082 --> 00:21:05,404
instant gratification, right. Cannot have

304
00:21:05,442 --> 00:21:08,872
too much of heavy duty governance which

305
00:21:08,946 --> 00:21:13,520
will become can issue inculcating the cultural.

306
00:21:14,100 --> 00:21:17,344
The wheel will only turn when you start looking

307
00:21:17,382 --> 00:21:21,344
at the culture of failure rather than consequence management, where something goes wrong,

308
00:21:21,382 --> 00:21:24,540
then you look at who is the culprit and try to have consequences for

309
00:21:24,550 --> 00:21:27,728
that. The consequence management is not going to work. You have to inculcate the culture

310
00:21:27,744 --> 00:21:31,568
of failure. Non technology centric approach. People tend

311
00:21:31,584 --> 00:21:35,188
to start working. Everything on can excel that doesn't work

312
00:21:35,354 --> 00:21:38,580
and we should be able to take build decisions.

313
00:21:38,740 --> 00:21:42,504
It's a changing time. The industry is changing and it's time

314
00:21:42,542 --> 00:21:46,084
that at some point of time we have to take some bold decisions.

315
00:21:46,132 --> 00:21:50,120
And the final thing, CIS, we have to take error budget concept seriously. It's like

316
00:21:50,270 --> 00:21:53,672
the smartwatch which you wear. You wear the smartwatch

317
00:21:53,736 --> 00:21:57,164
you run every day. You look at the numbers and why

318
00:21:57,202 --> 00:22:00,556
do you look at the numbers? To see how you have improved. Error budget is

319
00:22:00,578 --> 00:22:04,508
exactly the same. You see how you want to improve and it has to

320
00:22:04,514 --> 00:22:08,536
be taken very seriously. It is one of the key ingredients of site reliability engineering.

321
00:22:08,648 --> 00:22:11,876
Having said that, here are my blogs and my link in.

322
00:22:11,978 --> 00:22:15,296
Feel free to connect. And the blog is all about site reliability engineering.

323
00:22:15,328 --> 00:22:18,736
That's where the framework I have put in. How did we come to an error

324
00:22:18,768 --> 00:22:22,596
budget concept which can be a separate topic? So that's all I had.

325
00:22:22,698 --> 00:22:26,000
Thanks a lot for your time and patience

326
00:22:26,080 --> 00:22:27,010
in hearing me out.

