1
00:00:00,410 --> 00:00:06,094
Jamaica makes up real

2
00:00:06,132 --> 00:00:09,530
time feedback into the behavior of your distributed systems

3
00:00:09,610 --> 00:00:13,374
and observing changes, exceptions. Errors in

4
00:00:13,412 --> 00:00:16,666
real time allows you to not only experiment with confidence,

5
00:00:16,778 --> 00:00:20,480
but respond instantly to get things working again.

6
00:00:24,610 --> 00:01:06,310
You san

7
00:01:06,410 --> 00:01:09,570
good afternoon, good evening, good night, wherever you are

8
00:01:09,640 --> 00:01:13,042
joining us today, thank you for joining us at Comp 42,

9
00:01:13,096 --> 00:01:16,180
Chaos Engineering 2022.

10
00:01:17,530 --> 00:01:21,014
My name is Rain Leander. I am a developer advocate with

11
00:01:21,052 --> 00:01:24,150
cockroach Labs, and full disclosure,

12
00:01:24,810 --> 00:01:29,270
this is a talk about failure,

13
00:01:29,430 --> 00:01:32,810
mistakes, lessons learned.

14
00:01:33,470 --> 00:01:37,834
And I want to start by recognizing the

15
00:01:37,952 --> 00:01:41,294
two major reasons why people come to

16
00:01:41,332 --> 00:01:44,686
chaos engineering. One is that,

17
00:01:44,868 --> 00:01:48,142
like me, you're curious about

18
00:01:48,196 --> 00:01:51,502
this chaos engineering thing, and you'd like to apply it

19
00:01:51,556 --> 00:01:55,386
to projects that you already have or projects

20
00:01:55,418 --> 00:01:59,138
that you're planning to have. And you think, you know what, I'm going

21
00:01:59,144 --> 00:02:02,066
to get my hands dirty. I'm going to start playing with the tools that are

22
00:02:02,088 --> 00:02:06,150
out there. And in this experiment, I played with Gremlin.

23
00:02:08,250 --> 00:02:12,230
Yes, there might be a part two to this experiment,

24
00:02:13,050 --> 00:02:16,694
and you'll understand why soon enough. The other

25
00:02:16,732 --> 00:02:19,942
reason why people might come to chaos engineering

26
00:02:20,006 --> 00:02:24,026
is because some catastrophic event

27
00:02:24,128 --> 00:02:28,186
has happened in production, and they realize that

28
00:02:28,208 --> 00:02:32,218
they want to set up sufficient checks and balances

29
00:02:32,314 --> 00:02:36,222
to prevent that from ever happening again. I will

30
00:02:36,276 --> 00:02:40,062
say, thank goodness I have not had that experience

31
00:02:40,196 --> 00:02:44,066
directly. I have worked for companies that

32
00:02:44,088 --> 00:02:47,874
have had that experience, and I

33
00:02:47,992 --> 00:02:51,166
have not enjoyed being the one on pager

34
00:02:51,198 --> 00:02:55,300
duty. But in this case, for this experiment here

35
00:02:56,810 --> 00:03:00,902
I was the curious student making

36
00:03:00,956 --> 00:03:04,630
a mess, learning from things and whatnot.

37
00:03:06,410 --> 00:03:10,650
That's where I'm coming from. And I think that's important to acknowledge first,

38
00:03:10,800 --> 00:03:14,460
because if you're watching this and you've experienced a

39
00:03:15,230 --> 00:03:18,346
catastrophic event, maybe you want to watch this on one and

40
00:03:18,368 --> 00:03:21,694
a half speed or more, and really just

41
00:03:21,732 --> 00:03:25,422
start playing with your environment and the different

42
00:03:25,476 --> 00:03:29,600
tools available. So let's start out with

43
00:03:31,490 --> 00:03:35,730
what happened is that initially

44
00:03:36,950 --> 00:03:40,514
I had heard of Chaos engineering. I work at

45
00:03:40,552 --> 00:03:43,010
Chaos Cockroach Labs,

46
00:03:44,070 --> 00:03:47,880
and I found this

47
00:03:48,330 --> 00:03:51,814
medium post, which I should

48
00:03:51,852 --> 00:03:54,840
probably share the link, which I will do later,

49
00:03:55,770 --> 00:03:59,658
basically about hardening CockroachDb. And I read through it, and it

50
00:03:59,664 --> 00:04:03,610
was about taking Gremlin and installing using

51
00:04:03,680 --> 00:04:07,354
AWS platform, installing three

52
00:04:07,392 --> 00:04:11,258
instances of Ubuntu within a VPC so you can enable

53
00:04:11,354 --> 00:04:14,110
private and public networking.

54
00:04:16,210 --> 00:04:19,614
It was using CockroachDB, dedicated the

55
00:04:19,652 --> 00:04:23,220
open source version, which is important later,

56
00:04:24,230 --> 00:04:27,634
and Gremlin. And so I signed up for

57
00:04:27,672 --> 00:04:31,582
Gremlin free account. I played with it a little bit. I noticed

58
00:04:31,646 --> 00:04:35,140
that a few things, which I'll go into later,

59
00:04:36,410 --> 00:04:40,326
but then I decided, okay, so my plan is instead of

60
00:04:40,348 --> 00:04:42,440
using AWS net platform,

61
00:04:44,170 --> 00:04:49,850
I kind of would like to avoid that platform because

62
00:04:49,920 --> 00:04:53,546
my experience with AWS is not that high. And so I wanted to

63
00:04:53,568 --> 00:04:57,142
keep it simple, maybe install it on virtual systems

64
00:04:57,206 --> 00:05:00,446
on my laptop, maybe use a

65
00:05:00,468 --> 00:05:03,822
platform that I'm used to working with like Netlify or

66
00:05:03,876 --> 00:05:07,806
Vercell or Hadoku, but basically

67
00:05:07,988 --> 00:05:09,760
not AWS platform.

68
00:05:13,170 --> 00:05:16,526
Instead of installing the instances of

69
00:05:16,548 --> 00:05:20,560
cockroach labs three Ubuntu systems, I wanted to

70
00:05:21,410 --> 00:05:25,640
use cockroach labs services, which is

71
00:05:27,850 --> 00:05:31,314
a service where you don't have to worry

72
00:05:31,362 --> 00:05:35,234
about the actual installation,

73
00:05:35,362 --> 00:05:39,500
anything like this. It's a free service you can sign up to. Super easy.

74
00:05:40,670 --> 00:05:44,186
I already was skeptical based on playing with

75
00:05:44,208 --> 00:05:47,466
Gremlin, but I'll tell you why in a minute. And then

76
00:05:47,488 --> 00:05:51,470
I thought, you know what? Yeah, I'm going to use Gremlin

77
00:05:52,450 --> 00:05:56,174
because I did go in, I played around, I was like yeah, this could work,

78
00:05:56,212 --> 00:05:59,646
this could work. So what

79
00:05:59,748 --> 00:06:04,580
actually happened is

80
00:06:06,070 --> 00:06:08,850
first of all, cockroachDb serverless,

81
00:06:10,870 --> 00:06:14,862
there are lots of benefits to it. It's made so that a

82
00:06:15,016 --> 00:06:18,966
developer like myself can spin up

83
00:06:18,988 --> 00:06:22,534
an application, point it to the database and not

84
00:06:22,572 --> 00:06:28,710
worry about it, not worry about sharding or scalability or replication,

85
00:06:29,130 --> 00:06:32,726
nothing. And because of that, it's kind

86
00:06:32,748 --> 00:06:36,786
of like how when a Linux developer

87
00:06:36,898 --> 00:06:40,720
on Ubuntu, who's used to being able to go into terminal and

88
00:06:41,410 --> 00:06:44,570
hack on nodes and whatnot,

89
00:06:44,650 --> 00:06:48,734
then gets a Mac or a Windows system

90
00:06:48,932 --> 00:06:53,250
from the 90s where that kind of access wasn't really as

91
00:06:53,400 --> 00:06:57,598
available. And unfortunately within serverless

92
00:06:57,694 --> 00:07:01,630
there's not a way for an administrator

93
00:07:01,790 --> 00:07:05,880
to then go into the database and

94
00:07:09,130 --> 00:07:11,670
allow access to Gremlin.

95
00:07:12,410 --> 00:07:15,746
For example, because Gremlin requires a specific secret

96
00:07:15,778 --> 00:07:19,382
key, a team key, certain identifications

97
00:07:19,446 --> 00:07:22,938
just like any API, so that it can tell what

98
00:07:23,104 --> 00:07:25,450
you are observing.

99
00:07:27,790 --> 00:07:31,600
So there was that. So then I switched to

100
00:07:33,090 --> 00:07:36,586
cockroachdB, dedicated the open source version

101
00:07:36,618 --> 00:07:40,590
that I could download and I downloaded it onto a docker

102
00:07:40,930 --> 00:07:45,570
image, onto my makes,

103
00:07:46,870 --> 00:07:50,562
which is by the way, what I was using this whole time

104
00:07:50,616 --> 00:07:53,954
was my laptop because I wanted to

105
00:07:53,992 --> 00:07:57,842
replicate this as cheaply and as simply

106
00:07:57,906 --> 00:07:58,760
as possible.

107
00:08:01,450 --> 00:08:05,240
So number two was that

108
00:08:06,330 --> 00:08:09,740
I was like okay, so I've got

109
00:08:10,270 --> 00:08:13,786
the cockroach labs installed in Docker on

110
00:08:13,808 --> 00:08:16,780
my system. Can't use serverless, oh well,

111
00:08:17,470 --> 00:08:20,734
I've got cockroachdb installed. So then I go

112
00:08:20,772 --> 00:08:24,910
to the Gremlin aspect and I'm like okay, so how do I get Gremlin

113
00:08:26,290 --> 00:08:29,310
into my system? And it turns out that gremlin

114
00:08:29,650 --> 00:08:32,926
doesn't like makes and I

115
00:08:32,948 --> 00:08:36,398
didn't notice that when I was setting up the project. So all of a sudden

116
00:08:36,494 --> 00:08:40,180
I now had to use Docker again to install

117
00:08:40,710 --> 00:08:44,850
Gremlin, which is fine. It worked like a dream,

118
00:08:45,210 --> 00:08:48,006
even had a demo. These docs, by the way,

119
00:08:48,108 --> 00:08:52,998
are available on cockroachlabs.com and gremlin.com

120
00:08:53,084 --> 00:08:56,822
respectively. It was pretty smooth, except that

121
00:08:56,956 --> 00:09:00,218
again, the reason why I wasn't using AWS was because I

122
00:09:00,224 --> 00:09:03,814
wasn't that comfortable. And now suddenly I was using Docker, which I'm

123
00:09:03,862 --> 00:09:08,220
also not very comfortable with. All of this

124
00:09:09,470 --> 00:09:13,594
may have been avoided if I had more Docker

125
00:09:13,642 --> 00:09:17,486
experience. And if you're watching this right now and

126
00:09:17,508 --> 00:09:20,782
you have that Docker experience, maybe it was

127
00:09:20,836 --> 00:09:24,846
as simple as combining a yaml file.

128
00:09:25,038 --> 00:09:29,058
But for me, I did not know how to take my

129
00:09:29,224 --> 00:09:32,242
docker images with cockroach labs,

130
00:09:32,296 --> 00:09:35,814
my docker images with gremlins and

131
00:09:35,852 --> 00:09:40,098
get them to observe each other communicate

132
00:09:40,194 --> 00:09:43,670
in any way. The other

133
00:09:43,740 --> 00:09:48,222
aspect of that was that I found that on cockroach

134
00:09:48,306 --> 00:09:52,118
labs Docker, one of the nodes was constantly

135
00:09:52,214 --> 00:09:55,434
failing. And this may have been my

136
00:09:55,472 --> 00:10:00,010
version, because the open source version is a little bit older than the latest version.

137
00:10:00,590 --> 00:10:04,366
It could have been any number of reasons. Maybe my laptop just

138
00:10:04,388 --> 00:10:08,206
can't hang, it doesn't have enough resources on it, but for whatever reason,

139
00:10:08,388 --> 00:10:12,286
one node was constantly failing and

140
00:10:12,308 --> 00:10:15,954
it didn't matter if I reinstalled. If I dedicated more

141
00:10:15,992 --> 00:10:19,060
resources, it was not there.

142
00:10:20,390 --> 00:10:24,660
So I decided to take out the docker aspect completely

143
00:10:25,130 --> 00:10:28,630
and I switched to kubernetes, specifically minikube.

144
00:10:29,130 --> 00:10:33,590
And that resolved the node issue with cockroach

145
00:10:35,130 --> 00:10:38,746
labs. I know, I have no idea, to be clear

146
00:10:38,928 --> 00:10:42,650
why it was failing on Docker but not minikube.

147
00:10:43,230 --> 00:10:47,158
But again, the docs for mini

148
00:10:47,174 --> 00:10:51,420
cube installation of cockroach tv are cockroach labs.com.

149
00:10:52,130 --> 00:10:56,094
And then finally, because the talk

150
00:10:56,132 --> 00:10:59,582
was coming up, I decided to embrace AWS and

151
00:10:59,636 --> 00:11:03,394
see if I could get it to work exactly the way the original writer on

152
00:11:03,432 --> 00:11:07,586
medium had gotten it to work. And I went and

153
00:11:07,608 --> 00:11:11,570
created three instances

154
00:11:11,910 --> 00:11:15,858
on AWS and

155
00:11:16,024 --> 00:11:18,922
started to install cockroach.

156
00:11:19,086 --> 00:11:23,218
It was an incredibly painful

157
00:11:23,314 --> 00:11:27,282
6 hours of my life, and I decided

158
00:11:27,346 --> 00:11:31,066
that instead of bashing my head against the

159
00:11:31,088 --> 00:11:35,110
things that I don't know, that I would instead package

160
00:11:35,190 --> 00:11:39,402
everything up and bring it here to

161
00:11:39,456 --> 00:11:42,270
conf 42 chaos engineering.

162
00:11:43,170 --> 00:11:46,990
Now here's what I learned.

163
00:11:50,050 --> 00:11:53,650
If the plan doesn't work, change the plan, not the goal.

164
00:11:55,670 --> 00:11:59,282
And two losers don't quit. Winners fail until

165
00:11:59,336 --> 00:12:03,570
they succeed. And those two things are fall down

166
00:12:03,720 --> 00:12:07,430
seven times. Get back up eight. Don't give up

167
00:12:07,580 --> 00:12:11,414
so while I haven't given up on this project,

168
00:12:11,612 --> 00:12:15,398
I indeed have a deadline. This conference is

169
00:12:15,484 --> 00:12:19,386
the 10 march, and as of when

170
00:12:19,408 --> 00:12:22,620
I recorded this, this is where I am.

171
00:12:25,070 --> 00:12:29,162
I also need to find out why that

172
00:12:29,216 --> 00:12:33,280
one node kept failing on Docker and

173
00:12:33,730 --> 00:12:37,226
if that is a systemic thing that is maybe resolved

174
00:12:37,258 --> 00:12:40,506
in a more recent version of CockroachDB, or if it's

175
00:12:40,538 --> 00:12:44,820
something to do with my docker setup. And then

176
00:12:45,270 --> 00:12:48,420
I realized I don't know Docker as well as I did.

177
00:12:49,350 --> 00:12:53,378
I have spun up docker images before, I have

178
00:12:53,464 --> 00:12:57,206
put applications on Docker before, but apparently this was

179
00:12:57,308 --> 00:13:00,854
just beyond my knowledge and

180
00:13:00,892 --> 00:13:02,870
so it was humbling.

181
00:13:05,450 --> 00:13:08,070
So let's talk about the next steps.

182
00:13:09,870 --> 00:13:12,886
One, I'd like to try those original

183
00:13:13,078 --> 00:13:16,374
platforms that I had in mind, Netlify, Bracel,

184
00:13:16,422 --> 00:13:19,980
heroku. I would like to spin up an application,

185
00:13:20,850 --> 00:13:24,414
a simple it can be just a leaderboard or a

186
00:13:24,452 --> 00:13:27,854
website on one of these

187
00:13:27,892 --> 00:13:31,374
platforms that I'm more comfortable with and see

188
00:13:31,412 --> 00:13:38,062
if I can get gremlins to recognize

189
00:13:38,126 --> 00:13:41,822
it and test it. This would require

190
00:13:41,886 --> 00:13:45,890
that Netlify Versaille Hodoku allowed

191
00:13:45,970 --> 00:13:49,910
that kind of observation and testing.

192
00:13:50,890 --> 00:13:54,710
Netlify and Gremlin do have a brand new

193
00:13:54,860 --> 00:13:58,790
relationship, but not enough to have documentation

194
00:13:58,950 --> 00:14:02,460
yet. So I have hope there

195
00:14:04,670 --> 00:14:08,454
are other chaos engineering tools besides Gremlin.

196
00:14:08,582 --> 00:14:14,074
There's chaos kit, there's yespen,

197
00:14:14,122 --> 00:14:18,282
there's litmus. They're probably at this conference.

198
00:14:18,346 --> 00:14:21,070
I'm going to hear about tons of other tools.

199
00:14:22,690 --> 00:14:25,540
It may be that those other tools are the answer.

200
00:14:26,390 --> 00:14:29,486
If you have experience with other chaos engineering tools

201
00:14:29,518 --> 00:14:33,220
that you think you could help me with, I would love to hear from you.

202
00:14:36,570 --> 00:14:40,182
Maybe there's something else about Docker. Maybe there's someone

203
00:14:40,236 --> 00:14:43,622
watching this who's like, I am a docker expert and this sounds

204
00:14:43,676 --> 00:14:47,186
intriguing, and maybe I do just need to merge

205
00:14:47,218 --> 00:14:51,146
a YAMl file. That's a possible

206
00:14:51,248 --> 00:14:53,180
next step. And then finally,

207
00:14:54,110 --> 00:14:57,370
ultimately, the next step is to present at Comp

208
00:14:57,440 --> 00:15:00,542
42 chaos Engineering and ask for help.

209
00:15:00,676 --> 00:15:04,318
I'm rain Leander on most of

210
00:15:04,324 --> 00:15:07,562
the socials. My email address is rain

211
00:15:07,626 --> 00:15:11,054
cockroach labs.com and I

212
00:15:11,092 --> 00:15:14,994
would love to collaborate with you. Let's try these next

213
00:15:15,032 --> 00:15:18,306
steps. Or if you know of something, if you work for

214
00:15:18,328 --> 00:15:21,700
Gremlin, I would love to hear from you.

215
00:15:24,390 --> 00:15:28,166
I hope you have come along with me

216
00:15:28,188 --> 00:15:31,606
on this journey. I hope that when you run into issues that

217
00:15:31,628 --> 00:15:35,110
you don't give up, especially if you're coming from a place

218
00:15:35,180 --> 00:15:39,046
of curiosity, of adventurous learning, rather than

219
00:15:39,228 --> 00:15:42,566
from running from a catastrophic event. I hope you

220
00:15:42,588 --> 00:15:45,842
don't give up even though your motivation

221
00:15:45,906 --> 00:15:49,446
may not be exactly the same as

222
00:15:49,468 --> 00:15:53,120
if you were trying to fix something majorly wrong.

223
00:15:53,890 --> 00:15:58,730
If you have any questions, I'm rain on Discord,

224
00:15:58,890 --> 00:16:02,254
and thank you to comp 42

225
00:16:02,452 --> 00:16:06,430
so much, the organizers and sponsors of this conference.

226
00:16:06,850 --> 00:16:08,526
And I will see you online.

