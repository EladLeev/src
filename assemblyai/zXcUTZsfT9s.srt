1
00:00:17,370 --> 00:00:20,686
Hey everyone, I'm Colby Fayock. We're going to talk about maps. We're going to talk

2
00:00:20,708 --> 00:00:23,466
about the impact they can have on the world. And we're also going to dive

3
00:00:23,498 --> 00:00:26,726
into how you can build them with little bit of javascript. So who am I?

4
00:00:26,748 --> 00:00:29,622
I'm Colby fak. I'm the one hugging bb eight and Kylo Ren over there.

5
00:00:29,676 --> 00:00:32,358
I work on the UX and front end side of things at element 84.

6
00:00:32,444 --> 00:00:35,138
Find me pretty much anywhere on the web by just googling my name, as I'm

7
00:00:35,154 --> 00:00:38,258
the only one in the world. So looking at these first slide, it's a screenshot

8
00:00:38,274 --> 00:00:41,846
of Google Maps in downtown Alexandria, Virginia. Here in the United States,

9
00:00:41,948 --> 00:00:45,514
this is element 80 four's hq. We're all probably pretty familiar with Google

10
00:00:45,552 --> 00:00:48,426
Maps or Apple Maps. They provide us with a ton of features that we use

11
00:00:48,448 --> 00:00:51,994
every day. Lives here we can check, but some points of interest nearby. We can

12
00:00:52,032 --> 00:00:54,958
find out where. We can grab a quick cup of coffee. We can find the

13
00:00:54,964 --> 00:00:58,506
best sushi, which is Momo's sushi by these way. Or just look at some pictures

14
00:00:58,538 --> 00:01:02,346
of the area. This next screenshot is of public transit directions. It's showing

15
00:01:02,378 --> 00:01:05,278
the metro that I would take to get from my last apartment to work.

16
00:01:05,364 --> 00:01:08,526
My wife and I share one car, so when I don't have it, I was

17
00:01:08,548 --> 00:01:11,162
able to get a good idea of how long it would take to get downtown.

18
00:01:11,226 --> 00:01:14,446
And this next one shows some driving directions. This route is where I would take

19
00:01:14,468 --> 00:01:17,238
to get to my mom's house where I grew up. The time here is a

20
00:01:17,244 --> 00:01:20,246
little bit optimistic, though. It never actually took under 4 hours to get there with

21
00:01:20,268 --> 00:01:23,446
traffic. And how many of you like to travel? Well, I know as

22
00:01:23,468 --> 00:01:26,406
much as we'd all love to be in another country every month, that's usually not

23
00:01:26,428 --> 00:01:30,406
feasible, especially now. So my wife likes to take virtual vacations around the world,

24
00:01:30,508 --> 00:01:33,794
which is a little bit better for our budget. But google Maps helps her easily

25
00:01:33,842 --> 00:01:36,998
travel around and check things out. Here we're getting a good look at

26
00:01:37,004 --> 00:01:40,346
the great pyramids of Giza. We can get an overhead view from above

27
00:01:40,378 --> 00:01:43,406
and see what the area actually looks like. The cool thing about this though is

28
00:01:43,428 --> 00:01:46,286
we can actually get a close up look with street view. We can get an

29
00:01:46,308 --> 00:01:49,358
idea of the scale of this structure. It's huge. And we can get

30
00:01:49,364 --> 00:01:51,946
an idea of how big it really is. When I was talking to my wife

31
00:01:51,978 --> 00:01:54,766
about this, she was in the middle of one of her journeys. She wandered to

32
00:01:54,788 --> 00:01:58,138
a place called the Valley of Geysers, which is located in Russia. On the Komchika

33
00:01:58,154 --> 00:02:01,642
peninsula. It turns out this geyser field is the second largest concentration

34
00:02:01,706 --> 00:02:04,366
on Earth. It seems wild to me that we can get a look at this

35
00:02:04,388 --> 00:02:07,206
place and it's all because someone took the time to take a picture of this

36
00:02:07,228 --> 00:02:10,290
remote place. These particular picture was from a local guide,

37
00:02:10,370 --> 00:02:13,398
so that means any of us can do this. And the neat thing is we

38
00:02:13,404 --> 00:02:16,166
can check out this kind of place even if we'll never have the opportunity to

39
00:02:16,188 --> 00:02:19,506
go. It's obviously not these real thing, but we're still able to get a glimpse

40
00:02:19,538 --> 00:02:22,566
of what remote places around the world look like. So where do we actually get

41
00:02:22,588 --> 00:02:25,654
the data to build out all these features? Well, first you have an obvious one.

42
00:02:25,692 --> 00:02:28,726
You have scientists and analysts. This is just a stock photo I found on these

43
00:02:28,748 --> 00:02:32,414
GIS university website site. But they're constantly hard at work collecting and

44
00:02:32,452 --> 00:02:35,646
processing data and I really have to hope that they're always looking this happy.

45
00:02:35,748 --> 00:02:39,310
You also have technology. Thanks to the cars and the people that build street view,

46
00:02:39,380 --> 00:02:41,998
we get a close up look of the pyramids and we can also get some

47
00:02:42,004 --> 00:02:45,374
fun Easter eggs along the way. This also includes a ton of people around

48
00:02:45,412 --> 00:02:49,246
the world, like I showed in Russia. There are local guides all over contributing

49
00:02:49,278 --> 00:02:52,654
pictures and data. And did I mention there's Easter eggs? Thanks Tokyo.

50
00:02:52,702 --> 00:02:55,586
There's a ton of ones like these all over the Internet. But then we have

51
00:02:55,608 --> 00:02:59,346
satellites. There's a bunch of different types. Some collect imagery, some collect more

52
00:02:59,368 --> 00:03:02,966
in a data format, but they all help to produce assets which we can use

53
00:03:02,988 --> 00:03:06,450
to create our maps. A good example of this is cryosat from ESA.

54
00:03:06,530 --> 00:03:10,386
It uses its onboard instruments to measure changes in it thickness.

55
00:03:10,498 --> 00:03:13,978
It can measure changes as accurate as zero 7 year.

56
00:03:14,064 --> 00:03:17,754
The example on the right is showing Antarctica mapped out in 3d using the data

57
00:03:17,792 --> 00:03:20,982
it collected. Another example of this is NASA's modus terra.

58
00:03:21,046 --> 00:03:24,154
Using its image sensors, it covers every point on Earth,

59
00:03:24,202 --> 00:03:27,514
every one to two days. It collects large scale global dynamics

60
00:03:27,562 --> 00:03:31,466
like cloud coverage, ocean processes and changes in the atmosphere. The shot

61
00:03:31,498 --> 00:03:35,034
on the right is a photo over Lake Erie in the United States. NASA alone

62
00:03:35,082 --> 00:03:38,306
is working all the ones that you see here. They published this image to show

63
00:03:38,328 --> 00:03:41,918
the state of their missions operated by their Earth team. It shows satellites

64
00:03:41,934 --> 00:03:45,598
in orbit now and out until 2023. But NASA and ESA aren't

65
00:03:45,614 --> 00:03:48,786
alone here. There's thousands of satellites like these flying over us right

66
00:03:48,808 --> 00:03:52,066
now. Some of them aren't even working, but a lot of them are challenging images

67
00:03:52,098 --> 00:03:55,286
and data about our planet. These satellites are also cool from

68
00:03:55,308 --> 00:03:58,914
a consumer point of view. NASA and other teams put up pictures on Instagram

69
00:03:58,962 --> 00:04:02,262
for our daily those from above. At the top, you see International Space

70
00:04:02,316 --> 00:04:05,626
Station, which isn't a satellite, I know, but it shows the earth at

71
00:04:05,648 --> 00:04:08,774
night, which I just think is kind of cool. The bottom is from daily overview,

72
00:04:08,822 --> 00:04:12,442
which is showing a look at Lake neutrons in Tanzania, which is just mind

73
00:04:12,496 --> 00:04:15,918
blowing. Then on the right, we have a gorgeous look from NASA Earth, which is

74
00:04:15,924 --> 00:04:19,658
a picture of Mergawi archipelago, which is on the border of Burma and Thailand.

75
00:04:19,754 --> 00:04:22,926
It's awesome to be able to see these kinds of inspiring pictures right in our

76
00:04:22,948 --> 00:04:26,306
Instagram feeds. But switching back to maps for a second, this is just

77
00:04:26,328 --> 00:04:29,998
another look at downtown Alexandria. But behind that, it's OpenStreetMap.

78
00:04:30,094 --> 00:04:33,426
OSM is an open source project. It maintains a huge set

79
00:04:33,448 --> 00:04:37,202
of metadata that includes the attributes and properties that define specific

80
00:04:37,256 --> 00:04:40,994
geographic areas. It allows mappers all over the world to contribute.

81
00:04:41,042 --> 00:04:44,194
So with their tooling, anyone can identify points of interest and update

82
00:04:44,242 --> 00:04:47,298
features. With our powers combined, that means another source

83
00:04:47,314 --> 00:04:50,946
of this data is you. But millions of people all around the world have mapped

84
00:04:50,978 --> 00:04:54,186
on OSM. There's meetups and communities all over. Others just

85
00:04:54,208 --> 00:04:57,898
work alone as individuals, but thousands of people work on this every single day.

86
00:04:57,984 --> 00:05:01,606
You also see big companies who use or contribute back to OSM, like Apple

87
00:05:01,638 --> 00:05:05,466
uses its regions for where commercial data isn't available, and Lyft contributes

88
00:05:05,498 --> 00:05:09,178
back with their work. They're all adding points of ventures and drawing streets. And it's

89
00:05:09,194 --> 00:05:12,414
more for just learning what's in the United States. But for third

90
00:05:12,452 --> 00:05:16,266
world countries all around the world, it's incredibly helpful from a humanitarian aid

91
00:05:16,298 --> 00:05:19,586
perspective, where here we can see an identified refugee camp on

92
00:05:19,608 --> 00:05:22,978
the border of South Sudan and Ethiopia. A lot of times, people in

93
00:05:22,984 --> 00:05:26,126
these areas might not know where they can be safe, but OSM allows

94
00:05:26,158 --> 00:05:29,586
these people to identify the features and help others survive. So where am

95
00:05:29,608 --> 00:05:32,514
I going with all this? Well, the point I'm trying to make is that maps

96
00:05:32,562 --> 00:05:36,022
are more than just driving directions. Maps are literally giving people

97
00:05:36,076 --> 00:05:39,414
tools to save the world. There's tons of research going on from different

98
00:05:39,452 --> 00:05:42,746
areas, from climate change to agriculture. By taking collected data and

99
00:05:42,768 --> 00:05:46,746
applying into a map, we're providing another visualization medium for scientists that

100
00:05:46,768 --> 00:05:49,834
can actually make a difference in people's lives. Some examples that you can find

101
00:05:49,872 --> 00:05:53,574
online are like NASA's worldview. Here we can see tropical cyclone edai,

102
00:05:53,622 --> 00:05:56,906
which was one of the worst cyclones on record to affect Africa in the southern

103
00:05:56,938 --> 00:06:00,426
hemisphere. It affected close to 2.2 million people in eastern

104
00:06:00,538 --> 00:06:04,138
Africa. It's insane to see the scale of this storm. Another is NASA's

105
00:06:04,154 --> 00:06:07,886
firm service. It allows you to see active fires all around the world. Here we're

106
00:06:07,918 --> 00:06:11,602
seeing a cutout of the barefire wildfires that are occurring over in

107
00:06:11,656 --> 00:06:15,474
California. We can see the number of active fires in each area. You can

108
00:06:15,512 --> 00:06:19,082
even see the gray smoke compared to the clouds in the fire. It's devastating.

109
00:06:19,166 --> 00:06:22,726
But tools like this help people manage teams and resources for

110
00:06:22,748 --> 00:06:26,230
determining how to help in these scenarios. And another thing that's pretty current,

111
00:06:26,300 --> 00:06:29,286
which is why we're all online. We can take a look at this map from

112
00:06:29,308 --> 00:06:32,714
Johns Hopkins University. It shows the number of coronavirus cases all around

113
00:06:32,752 --> 00:06:36,534
the world, showing the visualizations lives. This on a map can help people identify

114
00:06:36,582 --> 00:06:40,106
the larger parts of impact. Similarly, this map from

115
00:06:40,128 --> 00:06:43,562
Nextstream shows the evolution and spread of the virus. If you visit this page,

116
00:06:43,616 --> 00:06:46,810
you can actually play an animation that shows how the virus spread.

117
00:06:46,890 --> 00:06:50,526
These types of tools are incredibly helpful for anyone in the science community that's trying

118
00:06:50,548 --> 00:06:54,394
to understand and study more about this virus. But also on a lighter note,

119
00:06:54,442 --> 00:06:58,062
people are also having some fun with maps where here radio.

120
00:06:58,116 --> 00:07:01,010
They have a map that lets you select a country in a period of time.

121
00:07:01,080 --> 00:07:04,914
So I can listen to music from Germany in the can listen to

122
00:07:05,032 --> 00:07:08,434
brazilian music in the 30s. But there are a ton of wellknown teams doing

123
00:07:08,472 --> 00:07:10,918
really great work trying to help. These are just some of the ones in the

124
00:07:10,924 --> 00:07:14,194
United States. We have usgs helping to map out earthquakes.

125
00:07:14,242 --> 00:07:18,454
USDA is monitoring food access, and they're not just monitoring food in the US,

126
00:07:18,572 --> 00:07:22,730
they're monitoring all around the world. They are all working towards providing more information

127
00:07:22,880 --> 00:07:26,086
to people who can actually make a difference, which is directly translating

128
00:07:26,118 --> 00:07:29,546
to livesaved. So how does all this stuff actually work? It definitely can

129
00:07:29,568 --> 00:07:32,970
seem really intimidating. There's a lot of information there, but getting started

130
00:07:33,040 --> 00:07:35,742
probably isn't as bad as you think. So let's break it down a little bit.

131
00:07:35,796 --> 00:07:39,834
Mapping applications look like your standard Jamstack app. So for those unfamiliar Jamstack

132
00:07:39,882 --> 00:07:43,514
sites are JavaScript APIs and markup. It's pretty much a static HTML

133
00:07:43,562 --> 00:07:46,978
website, but utilizing JavaScript in the browser to make any requests to

134
00:07:46,984 --> 00:07:50,466
your APIs that would provide dynamic data. It's not necessarily a

135
00:07:50,488 --> 00:07:53,586
new idea, but the architecture's got a cool name now, which also

136
00:07:53,608 --> 00:07:57,326
comes with some cool references. Boom Shakalaka. But the Jamstack concept

137
00:07:57,358 --> 00:08:00,270
is pretty much what you're working with out of the box with maps. First you

138
00:08:00,280 --> 00:08:03,906
have the javascript that makes the map and the libraries that run the map load

139
00:08:04,018 --> 00:08:07,526
and layered on top of that are your APIs, which for maps look like your

140
00:08:07,548 --> 00:08:10,838
underlying imagery. And anything you put on top, that compiles down

141
00:08:10,844 --> 00:08:14,854
to your markup, which the output is your standard HTML and that ultimately gets served

142
00:08:14,902 --> 00:08:18,266
the person using the app. So let's start at the top with JavaScript. We're going

143
00:08:18,288 --> 00:08:20,986
to look at leaflet. While it's not the only one, it's one of the most

144
00:08:21,008 --> 00:08:24,590
popular mapping libraries available right now. Here we have a simple maps example

145
00:08:24,660 --> 00:08:27,978
that we get from Leaflet's homepage. It's pretty basic map.

146
00:08:28,154 --> 00:08:31,658
On top we have some simple markers and a pop up, but behind that we're

147
00:08:31,674 --> 00:08:34,926
using OpenStreetMaps that's providing our base map layer. So how

148
00:08:34,948 --> 00:08:37,678
do we get there? Well, believe it or not, this small snippet is all it

149
00:08:37,684 --> 00:08:40,602
takes. So let's break it down. From the top we create a map instance.

150
00:08:40,666 --> 00:08:44,106
That map instance takes an id, which is the id of the div we're mounting

151
00:08:44,138 --> 00:08:47,554
on. The concept is kind of similar to what you would expect from react

152
00:08:47,602 --> 00:08:50,726
when you're mounting a component. But next we have the view of the map using

153
00:08:50,748 --> 00:08:54,086
latitude and longitude. We also set the zoom level that allows us

154
00:08:54,108 --> 00:08:57,346
to determine how far into the map we're actually zoomed in. Next we describe

155
00:08:57,378 --> 00:08:59,446
the layer that we want to add to the map. This part is called the

156
00:08:59,468 --> 00:09:02,598
tile layer. We'll get to tile layers in a little bit these, but we're going

157
00:09:02,604 --> 00:09:06,054
to set up a new tile layer instance using an endpoint URL. We also provide

158
00:09:06,092 --> 00:09:09,366
an attribution to give the surface credit. So this will give us the base of

159
00:09:09,388 --> 00:09:12,974
these map. But how do get those markers? This last snippet creates the marker using

160
00:09:13,012 --> 00:09:16,318
a leaflet marker instance, we set the position of where we want the marker to

161
00:09:16,324 --> 00:09:19,486
be using latitude and longitude again. Then we bind the pop up to

162
00:09:19,508 --> 00:09:22,638
the marker and we set sensible text and we continue to open it up

163
00:09:22,644 --> 00:09:25,994
in its place. And after that we have our basic map.

164
00:09:26,042 --> 00:09:28,946
All right, so if you're anything like me, you like to build your applications in

165
00:09:28,968 --> 00:09:32,766
react. Luckily we have react Leaflet, which is a library that takes leaflet

166
00:09:32,798 --> 00:09:35,874
and builds out native react components to help us quickly get started

167
00:09:35,912 --> 00:09:39,422
with maps. Here we have an example that's shown on the react leaflet homepage.

168
00:09:39,486 --> 00:09:42,534
If you notice, it's the same map that we saw before, but it's now built

169
00:09:42,572 --> 00:09:46,246
out using react components. Breaking this down again, we have our map component that

170
00:09:46,268 --> 00:09:49,846
wraps everything. We set our latitude and longitude using the center prop and

171
00:09:49,868 --> 00:09:52,966
we set our zoom using the zoom prop. Inside our map we have our tile

172
00:09:52,998 --> 00:09:56,486
layer component. Then we add our endpoint and an attribution. Then we add our marker

173
00:09:56,518 --> 00:10:00,154
component, set the coordinates with the position prop. Inside that we include a pop

174
00:10:00,192 --> 00:10:03,434
up component which we can nest with our simple text. And again,

175
00:10:03,472 --> 00:10:07,022
we have our basic map example. There are also some other flavors of leaflet available

176
00:10:07,076 --> 00:10:10,686
if you find yourself in another framework. Angular and Vue both have libraries that help

177
00:10:10,708 --> 00:10:14,026
you get started. Unfortunately though, I couldn't find a logo with the angular and leaflet

178
00:10:14,058 --> 00:10:17,182
mashup, so getting to that point isn't too bad. But let's talk about the data

179
00:10:17,236 --> 00:10:20,418
that actually goes into building the map. When dealing with maps, I like to think

180
00:10:20,424 --> 00:10:23,858
of a poorly drawn cake. The base map is the actual cake. Then you

181
00:10:23,864 --> 00:10:26,978
have your overlays that are your icing, and then you have some data sprinkled on

182
00:10:26,984 --> 00:10:30,546
top. Your base map typically looks like something like OpenStreetMap or modus

183
00:10:30,578 --> 00:10:33,734
terra. As we saw before, your overlays could be anything like a small

184
00:10:33,772 --> 00:10:37,286
sample of high res imagery or heat maps to visualize the data. On top

185
00:10:37,308 --> 00:10:41,650
of your data can literally be anything, such as active fires or evacuation zones.

186
00:10:41,810 --> 00:10:44,694
Starting to dig in a little bit further to the base map. This is essentially

187
00:10:44,742 --> 00:10:47,942
the map imagery that you have that's available to cover the entire globe.

188
00:10:48,006 --> 00:10:51,126
This will be the foundation of your map. The map image layers are called tile

189
00:10:51,158 --> 00:10:54,474
layers, which are composed of a bunch of small tile images that make up one

190
00:10:54,512 --> 00:10:57,770
large image. If you can see at the top, we have our tile layer endpoint.

191
00:10:57,850 --> 00:11:00,974
There's a few properties that get programmatically swapped out, like our

192
00:11:01,012 --> 00:11:04,426
date zoom and x and Y axis. The nice thing about this endpoint

193
00:11:04,458 --> 00:11:08,034
scheme though, is it's really common, so we can just as easily swap this out

194
00:11:08,072 --> 00:11:11,554
for OpenStreetMap, for instance. The reason though this gets broken up into

195
00:11:11,592 --> 00:11:15,086
smaller images is you don't want people having to pull down huge image

196
00:11:15,118 --> 00:11:18,994
files where the entirety of these map could be over 1gb in size,

197
00:11:19,112 --> 00:11:22,358
where realistically, someone using our map might only use a

198
00:11:22,364 --> 00:11:25,494
fraction of that. Overlays are similar to your base map, but a lot of times

199
00:11:25,532 --> 00:11:28,866
they just don't have nearly the same amount of imagery available, which is why they're

200
00:11:28,898 --> 00:11:32,246
called an overlay. This could be if you have some higher resolution imagery only

201
00:11:32,268 --> 00:11:34,454
for a little part of the map, or if you wanted to show a different

202
00:11:34,492 --> 00:11:37,426
kind of image for your map, like a heat map. Here we have an image

203
00:11:37,458 --> 00:11:40,750
overlay of the predicted 2020 population city over

204
00:11:40,820 --> 00:11:43,998
open street maps. We're showing the northeast United States where we

205
00:11:44,004 --> 00:11:47,706
can see. On the right we see Philadelphia, and you can also see DC

206
00:11:47,738 --> 00:11:50,666
and Baltimore on the left. This is just another example of some of the imagery

207
00:11:50,698 --> 00:11:53,914
NASA provides. And then we generally have data using shapes.

208
00:11:53,962 --> 00:11:57,166
We can visualize data really any way we want to. Here we're

209
00:11:57,198 --> 00:12:00,626
adding individual points of interest to show active gives, but you can also

210
00:12:00,648 --> 00:12:04,594
use lines, circles, polygons. Here we can see a fire boundary for those same

211
00:12:04,632 --> 00:12:07,806
wildfires on top of OSM. The points are helpful

212
00:12:07,838 --> 00:12:11,734
for seeing active fires, but seeing the boundary can be easier to comprehend for

213
00:12:11,772 --> 00:12:15,286
areas of danger. The point though is there really aren't any requirements for

214
00:12:15,308 --> 00:12:19,046
visualizing data, but there's just standards for how it interfaces with

215
00:12:19,068 --> 00:12:22,438
leaflet. Now, some of the data is free, some of it's not. NASA provides a

216
00:12:22,444 --> 00:12:25,674
ton of public data and tile endpoints. It makes it really easy to get started

217
00:12:25,712 --> 00:12:28,138
in a kind of plug and play kind of way. I showed you a few

218
00:12:28,144 --> 00:12:31,302
of those already, like the population heat map and our base maps.

219
00:12:31,366 --> 00:12:34,462
But others, such as digital glow, provide access to limited data.

220
00:12:34,516 --> 00:12:38,698
They have an open data program that gives access to imagery for disaster areas.

221
00:12:38,794 --> 00:12:42,686
This helps immensely for teams that are trying to put together solutions that are trying

222
00:12:42,708 --> 00:12:45,998
to help fighting disasters, but the rest of it would be a premium product that

223
00:12:46,004 --> 00:12:48,446
you would have to pay for. All right, so once we have our map and

224
00:12:48,468 --> 00:12:50,638
our data on top of it, we need to compile it down and serve it

225
00:12:50,644 --> 00:12:53,934
to the browser. This is actually the shortest step of the group. Compiling the app

226
00:12:53,972 --> 00:12:57,558
is pretty much what you would expect for anything standard on a webpack based app.

227
00:12:57,644 --> 00:13:01,298
You can use your favorite tool, like create react app, or Gatsby, those compiled

228
00:13:01,314 --> 00:13:04,786
down to a static site which outputs the HTML, CSS, and JavaScript.

229
00:13:04,898 --> 00:13:07,766
Once you have that compiled version, you can serve it wherever you want. At that

230
00:13:07,788 --> 00:13:10,706
point, it's really just object storage. So whether you want to put in a bucket

231
00:13:10,738 --> 00:13:13,814
on s three or use Azure's new tool, you have a lot of options.

232
00:13:13,932 --> 00:13:17,142
So what can we build with this? We've been working hard at element 84,

233
00:13:17,196 --> 00:13:21,054
trying to come up with a way for first responders and disasters scenarios to

234
00:13:21,092 --> 00:13:24,078
have a really easy to use UI. The goal here is that we'd be able

235
00:13:24,084 --> 00:13:26,878
to get the UI to a point where they don't have to think hard to

236
00:13:26,884 --> 00:13:29,994
get the information they want from the maps. This is a picture of first responders

237
00:13:30,042 --> 00:13:33,486
Trevor Skaggs took when he was up against the campfire wildfires in

238
00:13:33,508 --> 00:13:37,026
California from 2018. There's many natural disasters like

239
00:13:37,048 --> 00:13:40,606
this that unfortunately take place every year just like the barefire wildfires,

240
00:13:40,718 --> 00:13:44,466
but it's intense and it impacts people's lives. We want to try to

241
00:13:44,488 --> 00:13:47,154
help, so we want to try to put tools in people's hands that can actually

242
00:13:47,192 --> 00:13:50,514
make a difference. Those tools can help them fight current disasters and

243
00:13:50,552 --> 00:13:53,778
be more prepared for the next. We call this film drop. Dr. This is showing

244
00:13:53,794 --> 00:13:57,186
the east coast of Australia. I'm sure some of us are familiar with the bushfire

245
00:13:57,218 --> 00:14:00,502
wildfires that devastated their east coast. We can plug and play

246
00:14:00,556 --> 00:14:03,798
really any data source and provide can easy way to visualize that.

247
00:14:03,884 --> 00:14:07,302
Here we're showing active fires on top of satellite imagery. The hope

248
00:14:07,356 --> 00:14:10,318
is that whether someone wants to look at active fires or the boundary way,

249
00:14:10,404 --> 00:14:13,886
they don't have to fumble around with advanced settings to get there. After talking to

250
00:14:13,908 --> 00:14:17,198
some of the people that were actually in the field, like Trevor, we determined that

251
00:14:17,204 --> 00:14:19,966
we need to get this thing to a point where an operator can understand it

252
00:14:19,988 --> 00:14:23,614
in less than 15 minutes. As much as some of the other uis available have

253
00:14:23,652 --> 00:14:27,554
really great granular control. There's just not enough time to try to explain that and

254
00:14:27,592 --> 00:14:30,770
simply try to figure it out. With a simple toggle, we can get a completely

255
00:14:30,840 --> 00:14:34,482
different perspective for how a fire is impacting an area. This particular

256
00:14:34,536 --> 00:14:37,806
shot is from California campfire wildfires, where we can see active

257
00:14:37,838 --> 00:14:41,046
fire points and boundaries over satellite imagery. And we can also

258
00:14:41,068 --> 00:14:44,626
see some high resolution imagery and active fires over street maps.

259
00:14:44,738 --> 00:14:47,762
Another feature we added is the ability to add data points to the map.

260
00:14:47,826 --> 00:14:51,254
If someone wants to report somebody that's missing, they can easily add this data,

261
00:14:51,292 --> 00:14:53,798
point to the map and sync it up to the cloud for others to see.

262
00:14:53,884 --> 00:14:56,754
The cool thing about this, though, is we can store this locally in the browser,

263
00:14:56,802 --> 00:15:00,218
so if a person doesn't actually have network connectivity, they can still sync

264
00:15:00,234 --> 00:15:03,514
it up later. We also want to provide the ability for people to collect insitu

265
00:15:03,562 --> 00:15:07,166
data and make it immediately available. Someone with a drone can map out

266
00:15:07,188 --> 00:15:10,766
an area, upload it to their computer and sync it and make that available

267
00:15:10,868 --> 00:15:14,682
as a new layer that can really provide some powerful, up to date imagery

268
00:15:14,746 --> 00:15:18,490
for better understanding your surroundings. The imagery is actually from a co worker of

269
00:15:18,500 --> 00:15:22,206
mine who flew his drone up over Lake Lansing in Michigan. Film drop

270
00:15:22,238 --> 00:15:24,706
also gets a little bit more interesting on the data side. Not to go down

271
00:15:24,728 --> 00:15:27,986
a rabbit hole, but we're building this to be able to upload data directly to

272
00:15:28,008 --> 00:15:31,154
an AWS snowball edge, which is that gray box that the laptop

273
00:15:31,202 --> 00:15:34,150
is sitting on there, and it's basically a cloud in a box.

274
00:15:34,220 --> 00:15:37,954
And this gives people on the field, another level of processing power and capabilities

275
00:15:38,002 --> 00:15:41,366
that they just didn't have before. So what makes this impactful? Well, the hope here

276
00:15:41,388 --> 00:15:44,666
is that it can help first responders get the information they need to be

277
00:15:44,688 --> 00:15:47,946
more productive and efficient in the field. That could directly equate to more

278
00:15:47,968 --> 00:15:51,594
lives saved in many scenarios. So, realistically, imagine someone can area

279
00:15:51,632 --> 00:15:55,426
without cell service. They can fly a drone, upload that data to a snowball

280
00:15:55,478 --> 00:15:59,086
edge, and process that to visualize it on a map. This can help show

281
00:15:59,108 --> 00:16:02,286
things like what areas are impacted by a fire that are no longer safe to

282
00:16:02,308 --> 00:16:05,758
go to, that can immediately help save someone's life. And I know it might not

283
00:16:05,764 --> 00:16:08,638
be summer for everybody, but how about a road trip? Of course, we can have

284
00:16:08,644 --> 00:16:11,918
a little fun with this, too. I put together this simple demo that tracks a

285
00:16:11,924 --> 00:16:14,526
road trip on the east coast of the United States. This is actually a road

286
00:16:14,548 --> 00:16:17,798
trip with my wife in the summer of 2015. Ignore the

287
00:16:17,804 --> 00:16:21,186
stray lines out to Las Vegas. We actually flew through that part, but it allows

288
00:16:21,218 --> 00:16:23,894
us to simply get a look at all the locations we wanted to stop at

289
00:16:23,932 --> 00:16:26,806
throughout the United States. The cool thing, though, is if we select one of the

290
00:16:26,828 --> 00:16:29,574
points, and we can get a little itinerary with a picture of when we were

291
00:16:29,612 --> 00:16:32,646
there. So, how did I put this together? So, the first thing I did was

292
00:16:32,668 --> 00:16:35,890
starting to collect the locations I wanted and put them in a structured data format.

293
00:16:35,970 --> 00:16:38,834
Once I had that, I spun up a base of the app using a Gatsby

294
00:16:38,882 --> 00:16:41,670
starter that I created with leaf split. I'll get to the starter in a little

295
00:16:41,680 --> 00:16:43,898
bit here, but for now, it's going to be a little bit of hand waving

296
00:16:43,994 --> 00:16:47,454
with those locations. I needed to take the structured data and translate it into

297
00:16:47,492 --> 00:16:51,354
something that our mapping library would understand. This particular format is geojacent,

298
00:16:51,402 --> 00:16:55,002
which I was able to create by mapping over the locations and making shape groups.

299
00:16:55,066 --> 00:16:58,718
I actually needed to do this two times. Once in the example where I created

300
00:16:58,734 --> 00:17:02,226
the different latitude and longitude points, but also in a separate instance that

301
00:17:02,248 --> 00:17:04,962
I was able to create lines with two points.

302
00:17:05,096 --> 00:17:08,334
But after we have our data in our desired formats, we can take those raw

303
00:17:08,382 --> 00:17:12,402
JSON data sets, and we can plug them into a new leaflet Geojson instance,

304
00:17:12,466 --> 00:17:15,686
and simply apply it to the map. We'll also notice that I'm getting

305
00:17:15,708 --> 00:17:19,266
the bounds of the geojacent here, which is essentially the area that the geojacent

306
00:17:19,298 --> 00:17:21,986
data takes up on the map. So once I have those bounds, I can tell

307
00:17:22,028 --> 00:17:25,626
the map to view its current view to those bounds. So how about those

308
00:17:25,648 --> 00:17:28,726
tooltips so in the last slide we showed that our geojson sets

309
00:17:28,758 --> 00:17:31,914
with a custom option point to layer, which I've highlighted here.

310
00:17:31,952 --> 00:17:35,034
But this allows us to pass in a function which we can modify the layer

311
00:17:35,082 --> 00:17:38,446
being created in leaflet from our data. So what we're trying to

312
00:17:38,468 --> 00:17:41,758
do for each layer that gets created or each point is create a

313
00:17:41,764 --> 00:17:45,246
new marker. Within the marker we behind a pop up to it, similar to

314
00:17:45,268 --> 00:17:48,562
what we saw in our basic intro earlier. But within that we create some custom

315
00:17:48,616 --> 00:17:51,762
HTML in a string form that allows us to set the custom

316
00:17:51,816 --> 00:17:54,786
content for the pop up. And with all that we have our maps with some

317
00:17:54,808 --> 00:17:58,206
custom tooltip pop ups. Not too bad, right? But even if we wanted to extend

318
00:17:58,238 --> 00:18:01,954
this a little bit, we could sync this up to dynamically pull images from Instagram

319
00:18:02,002 --> 00:18:05,446
and show a gallery of images during our trip. We can use today's date and

320
00:18:05,468 --> 00:18:08,198
highlight these on the trip we're at for that day. We can even add a

321
00:18:08,204 --> 00:18:11,686
timeline where maybe we can scrub back and play the road trip. But to get

322
00:18:11,708 --> 00:18:14,438
here, the starter takes out some of the need to bootstrap the app so we

323
00:18:14,444 --> 00:18:17,574
can get productive right away and start playing with the data. If you're curious or

324
00:18:17,612 --> 00:18:20,478
interested in getting your hands dirty, the source code for this is all up in

325
00:18:20,484 --> 00:18:23,406
my GitHub. I'll post it to Twitter later. That's not a hint to follow me

326
00:18:23,428 --> 00:18:27,242
or anything, but also included in my talk notes and also what makes this impactful.

327
00:18:27,306 --> 00:18:30,318
Well, for me, it was just fun to build. I love road trips, but I

328
00:18:30,324 --> 00:18:32,814
think it's fun to take a normal event and make it a little bit more

329
00:18:32,852 --> 00:18:36,414
interactive to share with a map. Now, when I talk about we, I really mean

330
00:18:36,452 --> 00:18:39,026
all of us, I want to drive home the point that any of us can

331
00:18:39,048 --> 00:18:42,674
do this. The tools that we have available make this accessible for anybody to

332
00:18:42,712 --> 00:18:46,430
use. So as I mentioned before, I started this demo app with a starter

333
00:18:46,510 --> 00:18:49,986
to help get people more productive quickly with maps, I created a Gatsby

334
00:18:50,018 --> 00:18:53,414
starter for leaflet. We can very quickly spin up a new mapping app

335
00:18:53,452 --> 00:18:56,726
with very little fuss and immediately become productive. Using the

336
00:18:56,748 --> 00:19:00,726
Gatsby Cli, you can create a new project with the git address. This grabs the

337
00:19:00,748 --> 00:19:04,406
project and installs the NPM dependencies. Then you can run yarn

338
00:19:04,438 --> 00:19:07,990
or NPM develop whichever you prefer and this starts your local server.

339
00:19:08,070 --> 00:19:11,398
And then we have our mapping app. It's simple. I've been trying to add features

340
00:19:11,414 --> 00:19:14,714
little by little, but it's a good foundation to get started with a mapping app

341
00:19:14,752 --> 00:19:18,014
in react and as a bonus, the summer road trip demo can actually be used

342
00:19:18,052 --> 00:19:21,226
as a Gatsby starter. Similar to the leaflet one. You can instantly spin

343
00:19:21,258 --> 00:19:24,766
up a new road trip mapping app. You would just use the Gatsby Cli like

344
00:19:24,788 --> 00:19:28,094
the other starter. I also wrote a tutorial that actually walks you through setting up

345
00:19:28,132 --> 00:19:31,806
one yourself. Step by step. It goes right through the functionality and it

346
00:19:31,828 --> 00:19:35,586
has split but commits. For easy reference, I'll include the link with my talk notes

347
00:19:35,618 --> 00:19:38,438
as well, or you can also deploy it right to netlify if you have an

348
00:19:38,444 --> 00:19:41,426
account that makes it really easy to spin up fast and just a note.

349
00:19:41,458 --> 00:19:44,406
This works for anywhere in the world, not just the United States. Just remember to

350
00:19:44,428 --> 00:19:47,254
update the photos. I also have a few other guides available.

351
00:19:47,372 --> 00:19:50,706
Lives. You can create a travel bucket list, or you can create a Stats dashboard

352
00:19:50,738 --> 00:19:54,146
for the Covid-19 pandemic. I'll include the links to those in my talk notes

353
00:19:54,178 --> 00:19:56,834
as well. So, did I inspire you to learn a little bit more about maps?

354
00:19:56,882 --> 00:19:59,302
Well, if I did, I have a ton of resources for you to get started.

355
00:19:59,356 --> 00:20:02,654
In addition to those tutorials from before, I just recently launched a course

356
00:20:02,692 --> 00:20:06,074
on egghead IO that walks you through building a map from scratch for a react

357
00:20:06,122 --> 00:20:09,326
app. I also have a bunch of free lessons available if you're not ready

358
00:20:09,348 --> 00:20:13,226
to quite dive into a course yet. Also include those in my link notes

359
00:20:13,338 --> 00:20:15,822
and that's it. Thank you. Feel free to reach out if you have any questions

360
00:20:15,876 --> 00:20:17,850
about mapping or anything else about the jamstack.

