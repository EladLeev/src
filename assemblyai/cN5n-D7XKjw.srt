1
00:00:24,170 --> 00:00:27,986
Welcome everybody. Conf 42 Chaos Engineering Conference

2
00:00:28,098 --> 00:00:32,210
and two Chaos engineering war Games I'm Gabor Gerencser.

3
00:00:32,290 --> 00:00:36,034
I work for Vodafone UK as a tech lead in the performance

4
00:00:36,082 --> 00:00:39,234
and Chaos engineering team. By profession, I'm a software

5
00:00:39,282 --> 00:00:42,614
developer engineer in testing. Join me to see

6
00:00:42,652 --> 00:00:46,386
how Chaos Engineering war games can help preparing your organization

7
00:00:46,578 --> 00:00:50,106
for random events. How do you prepare

8
00:00:50,178 --> 00:00:53,706
your organization for the unexpected? In this session,

9
00:00:53,738 --> 00:00:57,422
we will explore random events and their

10
00:00:57,476 --> 00:01:01,450
impact on the organization

11
00:01:01,530 --> 00:01:05,698
and how chaos engineering war games can have to deal with them.

12
00:01:05,784 --> 00:01:09,426
We also discuss why it is important to know what

13
00:01:09,448 --> 00:01:12,754
is your software solution and organization state and how

14
00:01:12,792 --> 00:01:16,434
to convince your stakeholders that chaos

15
00:01:16,482 --> 00:01:20,358
engineering war game is an effective way for building

16
00:01:20,444 --> 00:01:23,846
resiliency. We will dive into different types of

17
00:01:23,868 --> 00:01:27,234
war games we used at Vodafone along with the fun elements

18
00:01:27,282 --> 00:01:31,226
we added to keep participants engaged. I share lesson learned from

19
00:01:31,248 --> 00:01:34,762
more war games, including how to get started,

20
00:01:34,896 --> 00:01:38,554
which exercise works best, managing participant and

21
00:01:38,592 --> 00:01:43,338
setting cause. Lastly, we'll talk about sharing the result of Chaos Engineering

22
00:01:43,514 --> 00:01:46,974
war games within your organization and beyond. It's not just about

23
00:01:47,012 --> 00:01:50,282
the war games, it's about spreading the word about Chaos

24
00:01:50,346 --> 00:01:52,480
engineering and its benefits.

25
00:01:54,150 --> 00:01:57,486
To add a bit of insight, I included a couple of quotes

26
00:01:57,518 --> 00:02:00,766
reminding us that chaos and chaos engineering

27
00:02:00,798 --> 00:02:04,530
has many aspects. This quote, for example, illustrates that

28
00:02:04,600 --> 00:02:08,258
chaos is often a product of our interpretation of events,

29
00:02:08,354 --> 00:02:12,418
influenced by our limited understanding

30
00:02:12,594 --> 00:02:16,742
and as the quote suggests, all lives are filled with

31
00:02:16,796 --> 00:02:19,718
unpredictable event. In fact, amidst all the changes,

32
00:02:19,884 --> 00:02:23,306
these round of events remains the only consistent aspect of

33
00:02:23,328 --> 00:02:26,714
the universe. Their impact is felt both personally and within

34
00:02:26,752 --> 00:02:30,682
the organization we are part of, as well as in the software solution

35
00:02:30,746 --> 00:02:34,654
we manage. Consider these organizations and

36
00:02:34,692 --> 00:02:37,882
software collection as complex systems with numerous

37
00:02:37,946 --> 00:02:40,746
components interacting to produce outcomes.

38
00:02:40,858 --> 00:02:45,026
The complexity of this system makes it challenging to fully comprehend the

39
00:02:45,048 --> 00:02:48,994
behavior and functionality. To make sense of this

40
00:02:49,192 --> 00:02:52,350
complexity, we establish boundaries.

41
00:02:52,430 --> 00:02:56,414
These boundaries allows us to focus on attention or attention

42
00:02:56,542 --> 00:03:00,170
on specific areas such as our organization

43
00:03:00,350 --> 00:03:04,082
or software solution, making this flood of events,

44
00:03:04,146 --> 00:03:07,270
knowledge and information more manageable.

45
00:03:07,950 --> 00:03:11,446
Yet, it's essential to remember that we don't exist

46
00:03:11,478 --> 00:03:14,998
in isolation. We are influenced by our environment,

47
00:03:15,174 --> 00:03:19,222
which can have both positive and negative effect on our complex

48
00:03:19,286 --> 00:03:23,310
system, and you're likely to heard of knowns.

49
00:03:23,890 --> 00:03:27,502
Known knowns are the events we are familiar with

50
00:03:27,556 --> 00:03:31,054
and understand. We can plan for and manage these events because

51
00:03:31,092 --> 00:03:34,274
they hold no elements of randomness. However,

52
00:03:34,472 --> 00:03:38,114
uncertainty arises when encounter events we

53
00:03:38,152 --> 00:03:41,406
are unaware or don't comprehend fully.

54
00:03:41,518 --> 00:03:45,554
The unknown knowns and the known knowns software solution

55
00:03:45,602 --> 00:03:49,330
can mitigate some of these uncertainties through resiliency

56
00:03:49,410 --> 00:03:53,494
practices like circuit breaker, and as information

57
00:03:53,612 --> 00:03:57,710
decreases further, we encounter even more chaotic events.

58
00:03:57,810 --> 00:04:02,310
These are the unknown unknowns. Preparing for these is incredibly

59
00:04:02,470 --> 00:04:05,782
challenging, if not impossible, as they represent

60
00:04:05,846 --> 00:04:09,018
truly disruptive occurrences that catch us completely

61
00:04:09,104 --> 00:04:12,634
off guard. Why it's difficult to provide examples

62
00:04:12,682 --> 00:04:16,794
of these events. The unknown unknowns acknowledging

63
00:04:16,842 --> 00:04:20,090
their existence is crucial as they have the potential

64
00:04:20,250 --> 00:04:23,650
to significantly impact the organization.

65
00:04:26,390 --> 00:04:30,626
Think of chaos engineering war games as

66
00:04:30,648 --> 00:04:34,642
the equivalent of Firedria for an organizations. Just as

67
00:04:34,696 --> 00:04:38,758
emergency services gather to simulate scenarios in

68
00:04:38,844 --> 00:04:42,242
specially designed buildings, these games provide a structured

69
00:04:42,306 --> 00:04:46,326
environment for organizations to test the resiliency of

70
00:04:46,348 --> 00:04:50,566
their software solution and be prepared. The unknown unknowns

71
00:04:50,598 --> 00:04:54,630
as well. Participants engage in simulated incidents,

72
00:04:54,790 --> 00:04:58,198
allowing them to practice and refine their responses

73
00:04:58,294 --> 00:05:02,762
to unexpected events. Similar firefighters

74
00:05:02,826 --> 00:05:05,726
practice different aspects of putting fires out.

75
00:05:05,828 --> 00:05:09,178
Chaos engineering war games allow teams to improve their skills

76
00:05:09,194 --> 00:05:12,694
in handling various types of software failures or incident.

77
00:05:12,842 --> 00:05:16,798
This might involve testing communication protocols, internal processes,

78
00:05:16,894 --> 00:05:20,750
or the application of specific knowledge to resolve

79
00:05:20,830 --> 00:05:24,786
issues efficiently. By actively participating in

80
00:05:24,808 --> 00:05:28,646
these simulations, organization can identify weaknesses in

81
00:05:28,668 --> 00:05:32,322
their systems and processes before they became

82
00:05:32,466 --> 00:05:36,262
a problem. Ultimately, chaos engineering war games help

83
00:05:36,316 --> 00:05:40,086
teams build confidence in their ability to respond effectively

84
00:05:40,118 --> 00:05:43,446
to unexpected challenges, promoting a culture

85
00:05:43,478 --> 00:05:46,694
of preparedness, collaboration, and resilience

86
00:05:46,822 --> 00:05:48,890
within the organization.

87
00:05:51,330 --> 00:05:55,514
Understanding the current state of your system or organizations

88
00:05:55,642 --> 00:05:59,134
is crucial for war gaming and for the

89
00:05:59,172 --> 00:06:03,490
overall preparedness. Without a clear grasp of

90
00:06:03,640 --> 00:06:07,538
where your software and organization stand, it difficult to

91
00:06:07,704 --> 00:06:11,326
spot weaknesses, analyze past incidents,

92
00:06:11,358 --> 00:06:14,846
set goals for war games, or identify knowledge gaps and

93
00:06:14,968 --> 00:06:18,018
inefficiencies in the processes.

94
00:06:18,194 --> 00:06:22,018
Knowing the current state is vital and must be coupled

95
00:06:22,034 --> 00:06:24,550
with good SRE practices like observability.

96
00:06:24,890 --> 00:06:28,454
Observability provide easy access to proactive

97
00:06:28,502 --> 00:06:31,674
measurements and analysis of the system. They can

98
00:06:31,712 --> 00:06:35,814
warn us of issues before they escalate, helping us anticipate

99
00:06:35,862 --> 00:06:37,740
and prevent problems.

100
00:06:38,670 --> 00:06:41,594
Through tools like logs,

101
00:06:41,642 --> 00:06:45,214
metrics, and other indicators, we can gain insight into

102
00:06:45,252 --> 00:06:48,926
the health of our systems. Metrics such as

103
00:06:49,028 --> 00:06:52,062
MTTR defect numbers, incident numbers,

104
00:06:52,116 --> 00:06:55,474
and code quality and the others I listed on

105
00:06:55,512 --> 00:06:59,010
this slide are crucial indicators of system health.

106
00:06:59,160 --> 00:07:03,054
However, it is important not to rely solely on basic metrics.

107
00:07:03,182 --> 00:07:07,010
Understand your software and organization deeply

108
00:07:07,090 --> 00:07:10,870
and focus on what matters for improvements.

109
00:07:12,490 --> 00:07:15,814
Make this as part of your business as usual, not just a one off

110
00:07:15,852 --> 00:07:19,622
exercise. This wealth of information can guide better decision

111
00:07:19,686 --> 00:07:23,882
making, not just helping wargaming, and keep your

112
00:07:24,016 --> 00:07:28,380
organization prepared. What emerge comes in its way.

113
00:07:31,410 --> 00:07:34,478
In previous slides, I discussed the

114
00:07:34,644 --> 00:07:38,458
significance of chaos engineering and its role

115
00:07:38,634 --> 00:07:42,090
in preparing organization for unexpected challenges.

116
00:07:42,250 --> 00:07:46,114
However, simply recognizing it's important isn't enough.

117
00:07:46,312 --> 00:07:50,366
It's crucial to convince stakeholders that chaos engineering

118
00:07:50,398 --> 00:07:55,818
war games are an effective way to enhance organizations

119
00:07:55,934 --> 00:07:59,478
resilience, not just in terms of preparedness, but also

120
00:07:59,564 --> 00:08:03,954
in having collection, knowledge sharing and serving

121
00:08:04,002 --> 00:08:08,198
as a training platform. Stakeholders typically

122
00:08:08,374 --> 00:08:11,978
prioritize the quality and accessibility of the services

123
00:08:12,144 --> 00:08:15,862
provided to the customers as customer satisfaction

124
00:08:15,926 --> 00:08:19,814
directly impact revenue. For instance, let's imagine

125
00:08:19,862 --> 00:08:24,506
an organization with 100 users interacting

126
00:08:24,538 --> 00:08:29,550
with the system generating 1000

127
00:08:29,620 --> 00:08:33,018
pan each per hour. That's potentially

128
00:08:33,114 --> 00:08:36,514
revenue of 100,000 pan. But if

129
00:08:36,552 --> 00:08:39,860
the software solution is inaccessible due to system problems,

130
00:08:40,390 --> 00:08:44,414
revenue is lost. War games helps organizations

131
00:08:44,462 --> 00:08:48,194
to avoid outages and underscore

132
00:08:48,242 --> 00:08:51,766
the importance of war games in improving accessibility and

133
00:08:51,788 --> 00:08:55,270
availability, thus increasing customer satisfaction and

134
00:08:55,340 --> 00:08:59,014
revenue. Take the above numbers and change them a factor

135
00:08:59,062 --> 00:09:02,570
or two to really see the risk of lost

136
00:09:02,990 --> 00:09:06,614
revenue. Just if you increase the 100 users

137
00:09:06,662 --> 00:09:11,690
to 1000 user, we are reaching a million pounds.

138
00:09:14,210 --> 00:09:18,270
So to see the risk of lost revenue due to an amplitude outage

139
00:09:19,570 --> 00:09:23,774
or SpaceX called this amplified outage rapid

140
00:09:23,822 --> 00:09:27,060
unscheduled disassembly the

141
00:09:28,630 --> 00:09:32,414
war games helps identify problems, areas and weaknesses,

142
00:09:32,542 --> 00:09:36,034
allowing teams to address them promptly.

143
00:09:36,162 --> 00:09:40,070
Additionally, they prepare incident resolution

144
00:09:40,810 --> 00:09:44,562
teams to be more effective,

145
00:09:44,626 --> 00:09:47,894
resulting in faster problem resolution. It helps

146
00:09:47,942 --> 00:09:51,654
enhancing quote quality by encouraging reviews

147
00:09:51,702 --> 00:09:55,606
and implementation of resiliency best practices leading

148
00:09:55,638 --> 00:09:59,750
to decreased development cost. While chaos engineering

149
00:09:59,910 --> 00:10:04,406
isn't cost free, it benefits outweighs the expenses.

150
00:10:04,598 --> 00:10:07,982
Costs include preparation time, running the war games,

151
00:10:08,116 --> 00:10:11,630
and potentially environment cost and license cost.

152
00:10:11,780 --> 00:10:15,294
However, the impact of these war games on organizational

153
00:10:15,342 --> 00:10:19,614
resiliency far outweighs the cost in terms of revenue

154
00:10:19,662 --> 00:10:22,978
returns. Analyzing the current state,

155
00:10:23,144 --> 00:10:27,282
understanding weaknesses of your complex system and

156
00:10:27,336 --> 00:10:30,934
evaluating cost are essential for demonstrating the value

157
00:10:30,972 --> 00:10:33,634
of chaos engineering war games to stakeholders.

158
00:10:33,762 --> 00:10:37,266
Presenting this information to stakeholders helps

159
00:10:37,298 --> 00:10:40,886
them understand why the games are crucial for organizational

160
00:10:40,998 --> 00:10:43,930
resiliency and preparedness.

161
00:10:45,870 --> 00:10:50,022
Another quote I like this quote because it reminds me

162
00:10:50,176 --> 00:10:54,334
that chaos or random events is not an enemy but an

163
00:10:54,452 --> 00:10:57,754
opportunity. If we didn't

164
00:10:57,802 --> 00:11:01,166
face chaos and random events daily, we would be

165
00:11:01,188 --> 00:11:05,502
content with the current solution and wouldn't think more efficient

166
00:11:05,566 --> 00:11:09,154
better solution to solve our problems. So it's good to see

167
00:11:09,272 --> 00:11:13,410
chaos not as a negative thing, but as

168
00:11:13,480 --> 00:11:14,340
an opportunity.

169
00:11:17,770 --> 00:11:21,814
We talk about chaos engineering war games in general and

170
00:11:21,852 --> 00:11:25,574
why they are important. The next step is to discuss the types of

171
00:11:25,612 --> 00:11:28,874
war games we use at Vodapone. There are two main

172
00:11:28,912 --> 00:11:32,842
categories, the tabletop exercises and the environment based

173
00:11:32,976 --> 00:11:36,842
war games. Tabletop exercises are an

174
00:11:36,896 --> 00:11:40,206
easy way to get started with chaos engineering war

175
00:11:40,228 --> 00:11:44,478
games. They involve gathering people physically or online

176
00:11:44,644 --> 00:11:48,094
around the table and going through various scenarios that could

177
00:11:48,132 --> 00:11:51,150
affect the software solution or the organization.

178
00:11:51,490 --> 00:11:55,730
This process helps identifying weaknesses in processes,

179
00:11:56,230 --> 00:11:59,406
knowledge, communication, documentation, architecture,

180
00:11:59,518 --> 00:12:02,418
and to a certain degree the software solution itself.

181
00:12:02,584 --> 00:12:06,760
Tabletop exercises typically last one or 2

182
00:12:07,210 --> 00:12:10,918
hours, require no additional environment and

183
00:12:11,004 --> 00:12:15,314
chaos, a minimal cost in terms of man hours. They can be organized

184
00:12:15,442 --> 00:12:18,874
online, as I said, or on site, or the combination of both,

185
00:12:18,992 --> 00:12:22,826
and can focus on specifically on a team or

186
00:12:22,848 --> 00:12:26,966
teams, or involve multiply teams

187
00:12:26,998 --> 00:12:30,830
as well a wider range of system

188
00:12:30,900 --> 00:12:34,814
coverage. However, it is essential to keep

189
00:12:34,932 --> 00:12:38,414
the group size manageable, ideally no more than

190
00:12:38,452 --> 00:12:41,774
30 people. Actually, the most we

191
00:12:41,812 --> 00:12:45,554
had at the tabletop War games at Vodafone was

192
00:12:45,592 --> 00:12:49,122
around 15 people and that worked out quite

193
00:12:49,176 --> 00:12:52,482
well. Record or not

194
00:12:52,536 --> 00:12:55,750
record a war games, it may

195
00:12:55,900 --> 00:12:59,400
affect participants opusness or willingness to talk about

196
00:12:59,770 --> 00:13:04,930
sensitive matters. If recording isn't necessarily necessary,

197
00:13:05,010 --> 00:13:08,090
I suggest not to record the tabletop war games. Instead,

198
00:13:08,160 --> 00:13:11,354
use the goals on notes and

199
00:13:11,392 --> 00:13:15,130
have a scribe who record the important findings and discussions

200
00:13:15,870 --> 00:13:19,370
don't make the tabletop war games complicated,

201
00:13:19,970 --> 00:13:24,014
keep them simple. For example, at Vodafone we

202
00:13:24,052 --> 00:13:27,802
used a PowerPoint presentation to share different random

203
00:13:27,866 --> 00:13:31,726
events and scenarios with the participants. We started with a

204
00:13:31,748 --> 00:13:36,594
simple exercise like missing bubbles or to

205
00:13:36,632 --> 00:13:40,050
warm up people like a specific meaning like

206
00:13:40,120 --> 00:13:43,474
what is MTTR? Or missing a couple

207
00:13:43,512 --> 00:13:47,320
of words from MTTR and then people had to guess what that is.

208
00:13:47,770 --> 00:13:51,560
So it was quite useful to make people

209
00:13:52,090 --> 00:13:56,118
relaxed and then gradually you can continue

210
00:13:56,204 --> 00:13:59,994
with more complex scenarios and formats like

211
00:14:00,112 --> 00:14:03,354
tv shows just to make the tabletop war

212
00:14:03,392 --> 00:14:06,826
games more exciting. The format is not

213
00:14:06,848 --> 00:14:10,814
that important till it helps people to

214
00:14:10,852 --> 00:14:14,254
discuss topics and making it fun as

215
00:14:14,292 --> 00:14:18,490
help because that helps to discuss sensitive

216
00:14:18,650 --> 00:14:21,950
topics and tabletop exercise

217
00:14:23,010 --> 00:14:26,720
is a very efficient and low cost way to start

218
00:14:27,650 --> 00:14:31,614
chaos engineering war games the

219
00:14:31,652 --> 00:14:35,254
more complex war game types is the environment based war games.

220
00:14:35,412 --> 00:14:38,982
It comes with higher cost and it

221
00:14:39,036 --> 00:14:42,934
requires dedicated environments and typically lasts longer than a couple

222
00:14:42,972 --> 00:14:47,320
of hours. We run war games up to 6 hours.

223
00:14:48,030 --> 00:14:51,690
It needs longer preparation due to its complex nature.

224
00:14:52,270 --> 00:14:55,642
It needs a briefing for participants and

225
00:14:55,696 --> 00:14:59,546
the longer retrospective as well. They need to understand the

226
00:14:59,568 --> 00:15:03,354
participants, the rules, what it means to

227
00:15:03,552 --> 00:15:07,198
participate in the board game. For example, if a

228
00:15:07,204 --> 00:15:10,782
test environment is used, it's not exactly like the real

229
00:15:10,836 --> 00:15:13,954
production environment. People need to know what they can and

230
00:15:13,992 --> 00:15:17,490
cannot do in that setting. The goal is

231
00:15:17,640 --> 00:15:21,410
different. Why? It may cover

232
00:15:21,480 --> 00:15:24,894
similar aspect as the tabletop war games such as the

233
00:15:24,952 --> 00:15:28,614
software and the processes. The main focus here is

234
00:15:28,652 --> 00:15:32,482
really on the software solution and how to handle real life incident

235
00:15:32,546 --> 00:15:36,486
and random events and the processes of

236
00:15:36,508 --> 00:15:40,458
the organization as well. As I

237
00:15:40,464 --> 00:15:44,522
said, the emphasis is more on the software side which

238
00:15:44,576 --> 00:15:48,214
makes this war games more complex. To organize

239
00:15:48,342 --> 00:15:51,594
it requires a longer duration,

240
00:15:51,722 --> 00:15:55,594
more participants and the involvement

241
00:15:55,642 --> 00:15:59,662
of multiply teams. This increased complexity means that

242
00:15:59,796 --> 00:16:03,262
having teams availability is crucial. We typically

243
00:16:03,326 --> 00:16:06,994
ask for primary and backup participants from each

244
00:16:07,032 --> 00:16:11,374
team to ensure a participant

245
00:16:11,422 --> 00:16:14,954
from a team, even if the primary participant

246
00:16:15,022 --> 00:16:19,266
is unavailable. You can organize this similarly

247
00:16:19,298 --> 00:16:22,706
to tabletop online on sign or mix

248
00:16:22,738 --> 00:16:26,194
of the port. It's important that participants

249
00:16:26,242 --> 00:16:30,314
have access to the environment and can communicate as they would

250
00:16:30,352 --> 00:16:34,154
do during a real production incident, making the board

251
00:16:34,192 --> 00:16:39,526
game as production like as possible generate

252
00:16:39,638 --> 00:16:42,910
really great value within

253
00:16:42,980 --> 00:16:46,762
the environment based war games, we have different categories

254
00:16:46,906 --> 00:16:50,430
based on the target and the participants availability.

255
00:16:51,010 --> 00:16:54,622
Smaller focus area of war games involve

256
00:16:54,766 --> 00:16:57,918
fewer people from a few teams.

257
00:16:58,014 --> 00:17:01,822
They most cost effective as they may not require,

258
00:17:01,886 --> 00:17:03,890
for example, a full test environment.

259
00:17:05,450 --> 00:17:09,126
The larger scale war games are full or end to

260
00:17:09,148 --> 00:17:12,840
end environment based war games where we test

261
00:17:13,530 --> 00:17:17,254
the whole end to end system. It can involve more

262
00:17:17,292 --> 00:17:21,846
people because generally production incidents in such an environment

263
00:17:21,958 --> 00:17:25,594
takes more people to solve issues. The number

264
00:17:25,632 --> 00:17:28,874
of participants can easily reach to

265
00:17:28,912 --> 00:17:32,954
20 or even to 30 people if we differentiate

266
00:17:33,002 --> 00:17:36,158
further between test and production environment based

267
00:17:36,244 --> 00:17:40,138
war games as you guess, production environment war games

268
00:17:40,154 --> 00:17:44,154
are riskier and the organizations needs to reach a maturity

269
00:17:44,282 --> 00:17:46,560
level to run such war game.

270
00:17:47,910 --> 00:17:51,426
It is important to keep this in mind that it's pointless to

271
00:17:51,448 --> 00:17:55,750
test something if you already know it is broken.

272
00:17:56,170 --> 00:18:00,258
First, fix the known issue and test them in a controlled

273
00:18:00,354 --> 00:18:04,434
test environment. Once you have reduced production

274
00:18:04,482 --> 00:18:07,430
incidence to a rare occurrence,

275
00:18:08,170 --> 00:18:11,738
you can start to run war games there. There is no point to run

276
00:18:11,904 --> 00:18:15,434
it in production if your incident numbers are not

277
00:18:15,552 --> 00:18:19,718
low enough. Use test environment in that case,

278
00:18:19,904 --> 00:18:23,242
when you raise that maturity, then you can switch to production

279
00:18:23,306 --> 00:18:26,830
environment to ensure the team's preparedness.

280
00:18:28,290 --> 00:18:32,560
Participants in war games may have varying levels of experience

281
00:18:33,030 --> 00:18:36,354
from junior to senior, and you can run war

282
00:18:36,392 --> 00:18:39,806
games in a test environment for all level of knowledge,

283
00:18:39,918 --> 00:18:42,750
using them as a training exercise.

284
00:18:42,910 --> 00:18:46,066
However, avoid running war games

285
00:18:46,098 --> 00:18:49,746
for people with limited or no domain knowledge in a production

286
00:18:49,778 --> 00:18:53,382
environment. It is really risky to let somebody

287
00:18:53,436 --> 00:18:56,710
without the knowledge to touch production environments.

288
00:18:57,210 --> 00:19:00,806
Instead, train them first and then expose

289
00:19:00,838 --> 00:19:05,382
them to random events in a controlled environment to prevent

290
00:19:05,526 --> 00:19:08,854
major incidents like self generated

291
00:19:08,982 --> 00:19:11,470
major incidents in production environment.

292
00:19:12,130 --> 00:19:15,902
Just like in tabletop war games, it's important to analyze past

293
00:19:15,956 --> 00:19:19,262
incidents. The goal is not to break

294
00:19:19,316 --> 00:19:23,122
everything, but rather to test system resilience and the

295
00:19:23,176 --> 00:19:27,006
organizations readiness for unexpected events

296
00:19:27,198 --> 00:19:30,430
don't blame that is super important. Keep it safe.

297
00:19:30,510 --> 00:19:33,890
Focus on collaboration and identifying

298
00:19:34,310 --> 00:19:37,734
weaknesses together. Working as

299
00:19:37,772 --> 00:19:41,250
a team will generate

300
00:19:41,330 --> 00:19:44,200
better result. Again, keep it simple.

301
00:19:44,570 --> 00:19:48,570
It's easier to run a war game with less complex scenarios.

302
00:19:49,070 --> 00:19:53,130
You don't necessarily even need to start automation,

303
00:19:53,870 --> 00:19:57,706
just use for

304
00:19:57,728 --> 00:20:01,754
example, an AWS console

305
00:20:01,882 --> 00:20:05,534
and change something to

306
00:20:05,572 --> 00:20:09,134
generate a random incident. For example,

307
00:20:09,332 --> 00:20:13,322
we generally use chaos

308
00:20:13,386 --> 00:20:17,006
toolkit and manual steps in our war games so it's

309
00:20:17,038 --> 00:20:22,002
not fully automated and

310
00:20:22,056 --> 00:20:25,358
avoid causing panic. Make it

311
00:20:25,384 --> 00:20:28,646
clear that the war game is just a simulation and

312
00:20:28,748 --> 00:20:32,306
not a real emergency. With high maturity,

313
00:20:32,418 --> 00:20:36,290
you won't even need to notify people beforehand,

314
00:20:36,450 --> 00:20:40,186
but you need to reach that majority because

315
00:20:40,368 --> 00:20:44,326
the organizations will be well versed in handling unexpected

316
00:20:44,358 --> 00:20:47,786
events. Ensure that you have plan to

317
00:20:47,808 --> 00:20:51,530
roll back or fix any issues caused by the war games.

318
00:20:53,330 --> 00:20:56,910
And as I talked about this earlier,

319
00:20:57,410 --> 00:21:04,370
that setting boundaries and focusing

320
00:21:06,230 --> 00:21:09,620
on the complex system is important.

321
00:21:11,270 --> 00:21:14,820
Full environment based war games may

322
00:21:15,430 --> 00:21:18,194
require to simulate the external environment.

323
00:21:18,322 --> 00:21:21,874
While we are focusing on our complex system, we shouldn't forget

324
00:21:21,922 --> 00:21:25,346
about the environment surrounding our organization

325
00:21:25,538 --> 00:21:28,886
and this helps ensure

326
00:21:28,918 --> 00:21:32,154
that interface like processing and communication to

327
00:21:32,192 --> 00:21:35,962
third party supplier for example are clear for everybody

328
00:21:36,096 --> 00:21:39,850
involved. For example, consider your communication

329
00:21:40,910 --> 00:21:44,558
to the mentioned third party supplier. Do you know who

330
00:21:44,724 --> 00:21:49,310
your contact person there, how quickly they need to respond?

331
00:21:51,330 --> 00:21:54,858
For example, as before we run the war games,

332
00:21:54,874 --> 00:21:58,862
we analyze our communication with third party suppliers.

333
00:21:59,006 --> 00:22:03,006
We created response template still simulate

334
00:22:03,038 --> 00:22:07,030
their communication and we use these during the war game

335
00:22:07,180 --> 00:22:11,382
and to close the different types of war games. Remember that

336
00:22:11,436 --> 00:22:15,158
high power tools, powerful tools, these are in your hands

337
00:22:15,324 --> 00:22:18,570
to improve your organization.

338
00:22:19,470 --> 00:22:22,620
The gamification is super important.

339
00:22:23,390 --> 00:22:27,434
We discussed the more serious side of the war gaming first,

340
00:22:27,632 --> 00:22:31,710
but here there are a couple of examples how you can gamify

341
00:22:32,210 --> 00:22:35,838
the war games and you

342
00:22:35,844 --> 00:22:39,258
can use time element to make it more competitive.

343
00:22:39,434 --> 00:22:42,662
You can run the incident

344
00:22:42,746 --> 00:22:46,354
resolutions, people against people or teams against people.

345
00:22:46,472 --> 00:22:50,318
Again, that helps to have a competitive spirit

346
00:22:50,494 --> 00:22:53,874
for the war game. You can introduce like

347
00:22:53,992 --> 00:22:57,762
monopoly tide shuns cards to introduce chaos

348
00:22:57,826 --> 00:23:01,670
into the Chaos War games. Non software specific

349
00:23:01,820 --> 00:23:05,106
random events like for example your CI CD

350
00:23:05,138 --> 00:23:08,762
pipeline is broken, but you have a p one incident to

351
00:23:08,896 --> 00:23:12,522
resolve or your

352
00:23:12,576 --> 00:23:15,834
communication channel like a chat application is

353
00:23:15,872 --> 00:23:19,306
broken. How the people can communicate without that. So there are

354
00:23:19,328 --> 00:23:23,114
many random events you can introduce to the war games.

355
00:23:23,242 --> 00:23:27,690
For tabletop War games you can use tv

356
00:23:27,850 --> 00:23:30,880
fish show formats to make it more interesting.

357
00:23:31,490 --> 00:23:36,238
You can have a leaderboard to

358
00:23:36,404 --> 00:23:40,362
have a visual representation and progress that can motivate

359
00:23:40,426 --> 00:23:44,142
participate to focus on the war games. And of course

360
00:23:44,276 --> 00:23:47,558
you can board people

361
00:23:47,644 --> 00:23:51,586
participants to boost their morale and maintain

362
00:23:51,698 --> 00:23:55,478
their focus and enthusiasm for the war game itself.

363
00:23:55,564 --> 00:23:59,946
So there are a lot of elements, just make sure that you

364
00:23:59,968 --> 00:24:03,674
keep it safe and keep it fun as

365
00:24:03,712 --> 00:24:08,838
well. So this quote,

366
00:24:08,934 --> 00:24:12,718
similarly to the previous quote shows that

367
00:24:12,804 --> 00:24:16,590
chaos is not always negative, it represents

368
00:24:17,010 --> 00:24:20,734
an innovation. This is quite important to keep

369
00:24:20,772 --> 00:24:25,730
in mind in general moving

370
00:24:25,800 --> 00:24:29,438
forward, let me share a few lessons

371
00:24:29,534 --> 00:24:33,246
from our journey. We began with tabletop

372
00:24:33,278 --> 00:24:36,914
war games, which proved to be effective

373
00:24:36,962 --> 00:24:40,806
and quick method for identifying obvious issues.

374
00:24:40,988 --> 00:24:44,178
As discussed earlier, this allowed

375
00:24:44,194 --> 00:24:47,080
the organizations to address these quickly.

376
00:24:48,330 --> 00:24:51,858
From there we progressed to more complex war games.

377
00:24:52,034 --> 00:24:55,482
Started with a focus area war game and then we switched to

378
00:24:55,536 --> 00:24:58,874
environment, wider environment based war

379
00:24:58,912 --> 00:25:02,446
games. The goal was always to

380
00:25:02,468 --> 00:25:05,678
improve the organization resonance in a

381
00:25:05,684 --> 00:25:09,994
cost effective way and not to show brilliant

382
00:25:10,122 --> 00:25:13,726
chaos engineering gurus. VR I mentioned

383
00:25:13,828 --> 00:25:17,874
a lot of times analyze your current situation is the first

384
00:25:17,912 --> 00:25:21,538
step to define your goals. Keep it simple,

385
00:25:21,704 --> 00:25:24,842
just pull a cable. I mentioned going to AWS

386
00:25:24,926 --> 00:25:28,966
console and change something there. Kill an ecs instance for

387
00:25:28,988 --> 00:25:32,502
example. Keep cost always

388
00:25:32,556 --> 00:25:36,274
in mind. The more complex the exercise, the more costly

389
00:25:36,322 --> 00:25:37,720
it will be to run.

390
00:25:39,310 --> 00:25:42,970
And complexity is not your friend. It increases

391
00:25:43,390 --> 00:25:45,900
the preparation time as well,

392
00:25:46,750 --> 00:25:49,500
so keep it simple. For example,

393
00:25:51,390 --> 00:25:55,070
for one of the board games, we aim for a complex scenario,

394
00:25:55,410 --> 00:25:59,162
believing that we were prepared for the challenge.

395
00:25:59,306 --> 00:26:03,074
However, we faced delays in preparation and had

396
00:26:03,112 --> 00:26:06,674
to scale back to a simpler exercise to

397
00:26:06,712 --> 00:26:10,962
meet the deadlines. So essentially build

398
00:26:11,016 --> 00:26:14,820
up your knowledge, gain confidence and address

399
00:26:15,610 --> 00:26:19,014
initial challenges. Before moving to

400
00:26:19,052 --> 00:26:22,630
more complex exercises.

401
00:26:26,010 --> 00:26:29,322
We talk about the war games. We talk about how to manage

402
00:26:29,376 --> 00:26:33,850
them, how to start them, how to convince stakeholders.

403
00:26:34,990 --> 00:26:37,690
Let's talk about the exercises.

404
00:26:39,970 --> 00:26:43,406
It's very important to keep it simple.

405
00:26:43,588 --> 00:26:47,306
Start with common resilience scenarios.

406
00:26:47,418 --> 00:26:50,986
They are often valid to any systems

407
00:26:51,018 --> 00:26:55,166
without needing to analyze

408
00:26:55,198 --> 00:26:57,650
the system extensively.

409
00:26:58,150 --> 00:27:02,674
For example, consider a common scenario like

410
00:27:02,872 --> 00:27:06,790
slow time, slow response time from an API.

411
00:27:07,370 --> 00:27:11,750
This is very common

412
00:27:11,820 --> 00:27:15,174
scenario and how can you handle it? You can test

413
00:27:15,212 --> 00:27:20,282
it with war games and you can introduce best

414
00:27:20,336 --> 00:27:23,494
practices like circuit breaker as an outcome.

415
00:27:23,542 --> 00:27:27,500
So keep it simple. Use the most common scenarios first.

416
00:27:31,170 --> 00:27:33,440
Again, I'm repeating here, but it's important,

417
00:27:33,970 --> 00:27:38,094
don't test known issues. Fix first and then

418
00:27:38,212 --> 00:27:41,802
test it. And analyzing

419
00:27:41,866 --> 00:27:46,100
the current state is the first step. As we discussed before

420
00:27:46,550 --> 00:27:49,790
and I mentioned the automation,

421
00:27:49,950 --> 00:27:53,602
not automation. You can start war gaming without

422
00:27:53,736 --> 00:27:57,126
much automation or without any automation. It can be

423
00:27:57,148 --> 00:28:00,582
a manual process and then you can go

424
00:28:00,636 --> 00:28:05,000
into automation more. As you learn about the

425
00:28:05,370 --> 00:28:08,978
war games, you increase your knowledge

426
00:28:09,154 --> 00:28:12,858
and the whole war gaming needs to be

427
00:28:12,944 --> 00:28:17,530
production like to prepare your team to handle production

428
00:28:17,950 --> 00:28:21,254
incidents and to detect weaknesses

429
00:28:21,302 --> 00:28:25,126
in the production environment. And that includes the production like

430
00:28:25,168 --> 00:28:28,446
traffic on the system. It's not a must, but usually when

431
00:28:28,468 --> 00:28:31,774
you test microservices, you need a load on the

432
00:28:31,892 --> 00:28:34,930
system to trigger events. However,

433
00:28:35,080 --> 00:28:38,398
don't make it as a blocker. You can use non

434
00:28:38,494 --> 00:28:42,254
load specific exercises

435
00:28:42,382 --> 00:28:45,702
like a database for

436
00:28:45,836 --> 00:28:49,462
failover. So in summary, simplicity is

437
00:28:49,516 --> 00:28:52,758
key. Keep the exercise straightforward and

438
00:28:52,924 --> 00:28:54,070
realistic.

439
00:28:57,870 --> 00:29:02,330
One of the most important side

440
00:29:02,400 --> 00:29:05,974
of war games is the participant.

441
00:29:06,102 --> 00:29:10,370
Their knowledge, skills and readiness determines how well an organization

442
00:29:10,470 --> 00:29:14,794
can handle unexpected events, including the unknown

443
00:29:14,842 --> 00:29:18,910
unknowns. Similarly to testing something you already

444
00:29:18,980 --> 00:29:22,802
know is

445
00:29:22,856 --> 00:29:27,554
broken, it is crucial to so

446
00:29:27,592 --> 00:29:32,114
if it is already broken and you know that your

447
00:29:32,152 --> 00:29:36,002
participant training level is not right, then train them

448
00:29:36,056 --> 00:29:40,066
first to make sure that they can handle

449
00:29:40,258 --> 00:29:43,586
incidents. There is no point to include

450
00:29:43,618 --> 00:29:47,030
them in a war game if they are not prepared for this. You already

451
00:29:47,100 --> 00:29:52,586
know that something needs

452
00:29:52,608 --> 00:29:56,154
to be improved when conducted. Environment based war

453
00:29:56,192 --> 00:30:00,050
game war games it's vital to provide participants

454
00:30:00,150 --> 00:30:03,870
with detailed briefing about the environment. As I mentioned

455
00:30:03,940 --> 00:30:06,430
before, they need to understand the restrictions,

456
00:30:06,850 --> 00:30:11,338
the differences from production environments. Often participants

457
00:30:11,434 --> 00:30:15,026
have more privileges in the test environment. You need to

458
00:30:15,048 --> 00:30:18,866
ask them to restrict. Don't use those privileges because they wouldn't be able

459
00:30:18,888 --> 00:30:22,100
to use it in production environment as well.

460
00:30:24,150 --> 00:30:27,666
So most war games are suitable for any skills.

461
00:30:27,778 --> 00:30:32,518
I mentioned this that don't use

462
00:30:32,684 --> 00:30:36,946
participant without production

463
00:30:37,138 --> 00:30:41,494
environment knowledge or incident resolution knowledge. In production

464
00:30:41,542 --> 00:30:45,706
environment it is a high risk. Train them up first.

465
00:30:45,888 --> 00:30:49,226
And I already talk about backup participants as

466
00:30:49,248 --> 00:30:52,880
well. A lot of random things can happen

467
00:30:53,810 --> 00:30:56,558
to people. They might fail ill,

468
00:30:56,724 --> 00:31:00,734
they might just need to simply go on holidays. So having

469
00:31:00,772 --> 00:31:04,430
backup participants ensures that you can run your war games

470
00:31:05,010 --> 00:31:09,206
successfully. Each war games

471
00:31:09,258 --> 00:31:13,410
needs a host to oversee and ensure it runs smoothly.

472
00:31:13,910 --> 00:31:17,314
Having a scribe, especially if games isn't

473
00:31:17,362 --> 00:31:21,174
recorded, allows for collecting information

474
00:31:21,292 --> 00:31:25,170
for retrospective and to identify improvement areas.

475
00:31:25,330 --> 00:31:28,730
This role can also serve as training opportunity

476
00:31:28,880 --> 00:31:31,340
for junior team members.

477
00:31:32,350 --> 00:31:36,060
Changing roles, for example, during the game

478
00:31:36,830 --> 00:31:40,714
can help collaboration

479
00:31:40,762 --> 00:31:44,874
and knowledge exchange. Let a developer take a SRE

480
00:31:44,922 --> 00:31:48,654
role or vice versa. It really brings the team

481
00:31:48,772 --> 00:31:51,806
together and basically

482
00:31:51,908 --> 00:31:55,694
all these has the participant to

483
00:31:55,732 --> 00:32:00,002
participate in the war game effectively and

484
00:32:00,136 --> 00:32:03,586
they are one of the key factors to have

485
00:32:03,608 --> 00:32:06,854
a successful war games take

486
00:32:06,892 --> 00:32:11,426
their feedback seriously. To continuously

487
00:32:11,458 --> 00:32:15,366
improve the war game processes and the

488
00:32:15,388 --> 00:32:16,520
war games itself.

489
00:32:19,150 --> 00:32:23,526
How to set goals it's

490
00:32:23,558 --> 00:32:27,770
essential to consider both business and technical goals

491
00:32:29,550 --> 00:32:33,086
I mentioned before. Analyze the

492
00:32:33,108 --> 00:32:36,670
current state. Understand the stakeholders priorities

493
00:32:37,410 --> 00:32:40,926
they usually focus on improved revenue, improve customer

494
00:32:41,028 --> 00:32:44,610
satisfaction, set your goals accordingly.

495
00:32:47,750 --> 00:32:52,130
Improving software resiliency improvements helps to decrease

496
00:32:52,790 --> 00:32:56,766
development cost as well and not just improve

497
00:32:56,878 --> 00:33:00,634
the customer satisfaction and generally preparedness.

498
00:33:00,702 --> 00:33:03,990
Collaboration, training, all of these can drive

499
00:33:04,060 --> 00:33:07,400
improved customer satisfaction, but also

500
00:33:08,030 --> 00:33:11,482
decreases development cost and also

501
00:33:11,616 --> 00:33:15,562
it can increase job

502
00:33:15,616 --> 00:33:19,290
satisfaction as well and

503
00:33:19,360 --> 00:33:22,880
setting goals metrics go hand in hand.

504
00:33:23,490 --> 00:33:26,622
You need to be able to analyze the effect

505
00:33:26,676 --> 00:33:30,720
of the war game. You should see improvements as a result.

506
00:33:31,090 --> 00:33:34,830
Coming out of the war games and identified

507
00:33:34,910 --> 00:33:39,298
improvements and the fixed problem

508
00:33:39,384 --> 00:33:43,154
areas. And in summary, it's crucial to

509
00:33:43,272 --> 00:33:47,522
choose goals wisely, aligning with organizational

510
00:33:47,586 --> 00:33:51,270
priorities and selecting metrics to provide

511
00:33:51,340 --> 00:33:55,382
insight into progress and improvements and

512
00:33:55,516 --> 00:33:59,050
areas of enhancement.

513
00:34:00,190 --> 00:34:03,290
So there is another quote, and this quote

514
00:34:04,110 --> 00:34:08,490
serves as a reminder the danger of becoming compilation

515
00:34:08,990 --> 00:34:11,722
with established practices and processes.

516
00:34:11,866 --> 00:34:15,546
Often there is a tendency to adhere to familiar methods

517
00:34:15,658 --> 00:34:18,942
of achieving goals and that

518
00:34:18,996 --> 00:34:21,470
can hinder progress.

519
00:34:23,670 --> 00:34:28,210
Nearly the final topic delivering results

520
00:34:29,830 --> 00:34:33,870
it's important to identify your improvement

521
00:34:33,950 --> 00:34:38,742
areas. It's equally important to

522
00:34:38,796 --> 00:34:44,242
address these improvements areas and risk

523
00:34:44,306 --> 00:34:47,966
or weaknesses. Merely identifying

524
00:34:48,018 --> 00:34:51,786
issues is insufficient. They must

525
00:34:51,888 --> 00:34:55,930
be actively tracked and resolved within the organizations.

526
00:34:56,590 --> 00:35:00,354
When raising issues for improvements, it's vital

527
00:35:00,422 --> 00:35:04,810
to track them and ensure that they are effectively

528
00:35:04,970 --> 00:35:08,746
addressed. Each improvement area should be analyzed

529
00:35:08,778 --> 00:35:12,046
to assess its potential impact on

530
00:35:12,068 --> 00:35:16,238
the organization and the action should be taken accordingly.

531
00:35:16,334 --> 00:35:19,762
You can add a priority to

532
00:35:19,816 --> 00:35:21,810
each of the findings.

533
00:35:22,790 --> 00:35:26,630
Tracking is super important and I already mentioned

534
00:35:26,700 --> 00:35:31,062
that coupling these improvements with metrics actually shows

535
00:35:31,196 --> 00:35:34,934
the progress, the improvements and the value the

536
00:35:35,052 --> 00:35:39,610
war games itself delivers.

537
00:35:40,270 --> 00:35:44,198
And additionally to these, it's crucial to recognize that fixing

538
00:35:44,294 --> 00:35:47,770
something once and testing it once is not sufficient.

539
00:35:48,830 --> 00:35:53,534
Do retest and make sure that a

540
00:35:53,572 --> 00:35:56,110
fixed issue stays fixed.

541
00:35:57,970 --> 00:36:01,374
It's super important to ensure that findings from more games are

542
00:36:01,412 --> 00:36:05,090
visible and have a positive impact on the organization.

543
00:36:06,150 --> 00:36:09,554
Continuous improvements are essential to

544
00:36:09,672 --> 00:36:13,810
maintain resilience and effectiveness

545
00:36:15,450 --> 00:36:19,430
when we are facing random events

546
00:36:20,330 --> 00:36:22,360
chaos around us.

547
00:36:24,730 --> 00:36:28,230
The final aspect of chaos engineering

548
00:36:28,310 --> 00:36:32,298
war game is publicity. Clear communication of

549
00:36:32,464 --> 00:36:36,374
the effort, findings and result of war games

550
00:36:36,502 --> 00:36:40,010
is important. We always

551
00:36:40,080 --> 00:36:43,930
create reports for each war game. As I said before,

552
00:36:44,000 --> 00:36:48,590
detailing it goes exercises use the timeline

553
00:36:49,090 --> 00:36:52,506
to provide a clear understanding and

554
00:36:52,548 --> 00:36:56,514
transparency about the execution and the

555
00:36:56,552 --> 00:37:00,290
objectives. In these reports we list the

556
00:37:00,440 --> 00:37:03,982
indentified improvements with their impact

557
00:37:04,046 --> 00:37:08,802
and probability, helping us prioritize

558
00:37:08,946 --> 00:37:12,946
these. But we also include

559
00:37:13,138 --> 00:37:16,854
recommended actions. So we don't just list the

560
00:37:16,892 --> 00:37:22,810
problem areas, but we suggest that how these can be addressed

561
00:37:23,150 --> 00:37:26,250
and taking these improvement

562
00:37:28,350 --> 00:37:31,374
areas or tracking these improvement areas until they are

563
00:37:31,412 --> 00:37:35,358
delivered is essential to make sure that

564
00:37:35,524 --> 00:37:37,840
these improvements are happening.

565
00:37:38,930 --> 00:37:43,362
It's important to mention participants making

566
00:37:43,416 --> 00:37:47,874
sure that they are aware what

567
00:37:47,912 --> 00:37:50,900
they delivered and that's important.

568
00:37:51,990 --> 00:37:54,906
Not only does it acknowledge their effort,

569
00:37:55,038 --> 00:37:58,262
but it also generates a positive bus and

570
00:37:58,316 --> 00:38:01,666
interest in the future war games as well. So it's

571
00:38:01,698 --> 00:38:04,470
important to recognize the participant.

572
00:38:04,810 --> 00:38:08,586
Educating wider community is important. As we

573
00:38:08,608 --> 00:38:09,820
said before,

574
00:38:11,390 --> 00:38:14,170
don't be shy. Share your achievements,

575
00:38:15,470 --> 00:38:18,950
what you achieved through chaos engineering war games

576
00:38:19,110 --> 00:38:22,682
and while it may seems like a small part

577
00:38:22,816 --> 00:38:26,154
of chaos engineering war games,

578
00:38:26,282 --> 00:38:29,840
publicity is important to ensure that

579
00:38:30,770 --> 00:38:34,434
the continuous use of chaos engineering war

580
00:38:34,472 --> 00:38:38,014
games to improve the organization

581
00:38:38,142 --> 00:38:39,170
resiliency,

582
00:38:41,190 --> 00:38:43,460
and it took a long time.

583
00:38:45,030 --> 00:38:48,902
I appreciate your time and attention during this session. We only

584
00:38:48,956 --> 00:38:53,010
scratch the surface of this vast topic, so if you have further

585
00:38:53,090 --> 00:38:56,390
questions, feel free to reach out to me on LinkedIn.

586
00:38:56,730 --> 00:39:01,782
I'm always open to further discussion for

587
00:39:01,916 --> 00:39:05,154
those who are interested looking into deeper

588
00:39:05,282 --> 00:39:09,160
there are plenty of valuable resources available

589
00:39:09,530 --> 00:39:13,246
and thank you once again for your time and

590
00:39:13,348 --> 00:39:17,790
I hope you enjoy the rest of Conf 42 Chaos engineering conference.

591
00:39:19,330 --> 00:39:19,820
Thank you.

