1
00:00:25,090 --> 00:00:28,726
Ability. No surprise there. But this is from a very

2
00:00:28,828 --> 00:00:32,294
basic standpoint. So if you have no

3
00:00:32,332 --> 00:00:36,706
clue what's observability, if you're coming from a non production,

4
00:00:36,818 --> 00:00:40,374
code based background, then this is something you might enjoy

5
00:00:40,492 --> 00:00:43,160
and have a lot to learn from.

6
00:00:43,610 --> 00:00:47,606
So my entire agenda is in the form of questions we'll be

7
00:00:47,628 --> 00:00:50,880
answering today. So we'll start with a quick hello, go to me.

8
00:00:51,970 --> 00:00:55,966
Then we'll see what's observability for folks outside engineering? When I say outside

9
00:00:56,068 --> 00:00:59,278
engineering, I mean anyone who has zero

10
00:00:59,364 --> 00:01:02,654
experience with production code base or has not worked with

11
00:01:02,692 --> 00:01:06,238
DevOps. Then there's for engineers, basically people who have a little bit

12
00:01:06,244 --> 00:01:09,554
of idea of DevOps, who have worked in a little bit of production code

13
00:01:09,592 --> 00:01:13,582
base but haven't really worked on testing and incident

14
00:01:13,646 --> 00:01:16,914
response. Then we have a quick overview

15
00:01:16,962 --> 00:01:20,134
of how we make a system observable. Then we

16
00:01:20,172 --> 00:01:23,926
talk about streaming database, also one of

17
00:01:23,948 --> 00:01:27,526
my favorite databases that I've come across recently. And then we

18
00:01:27,548 --> 00:01:31,718
get into the block diagram of the project that I created to understand observability

19
00:01:31,814 --> 00:01:35,126
better. All right, folks, let's start with the answers.

20
00:01:35,318 --> 00:01:38,790
So, hi folks, I'm Ritzvi. I am a maker.

21
00:01:38,950 --> 00:01:43,006
I love learning new things and then talking about them.

22
00:01:43,188 --> 00:01:46,890
I'm currently freelancing from a Devre standpoint

23
00:01:46,970 --> 00:01:48,990
and a firmware engineer standpoint.

24
00:01:49,570 --> 00:01:53,214
I'm a coach at major league hacking and I love

25
00:01:53,252 --> 00:01:56,258
that job because I get to do all the things I love, from mentoring students

26
00:01:56,344 --> 00:02:00,654
to teaching to coming up with quirky project ideas

27
00:02:00,702 --> 00:02:04,930
all at once. So, as you all might notice,

28
00:02:05,370 --> 00:02:09,160
the theme for this presentation is quite

29
00:02:10,170 --> 00:02:14,066
unusual. But then it is summer and I decided

30
00:02:14,178 --> 00:02:17,678
that we are talking about observation and correlation.

31
00:02:17,794 --> 00:02:20,758
So might as well come up with a nice fruity summary,

32
00:02:20,934 --> 00:02:24,506
recipes based presentation theme to kind of

33
00:02:24,528 --> 00:02:28,070
go with our topics.

34
00:02:28,230 --> 00:02:32,410
So let's get started with what is observability?

35
00:02:33,070 --> 00:02:36,510
Right, so before we go on here, if you are actually very new

36
00:02:36,580 --> 00:02:40,400
to this world, to this word,

37
00:02:41,250 --> 00:02:44,782
I want you all to take a second, pause the video right here

38
00:02:44,916 --> 00:02:48,434
for 15 seconds, and just think of the first thing that comes to your head

39
00:02:48,472 --> 00:02:51,934
when you think of observability. This is something called the intuition

40
00:02:51,982 --> 00:02:55,650
exercise that I do for most of the topics that I especially

41
00:02:55,720 --> 00:02:59,158
take virtual sessions on because it's hard for me to gauge whether or

42
00:02:59,164 --> 00:03:02,998
not you're understanding where you're coming from. So if you do this yourself,

43
00:03:03,084 --> 00:03:06,998
it's much easier for you to kind of untangle threads later when a

44
00:03:07,004 --> 00:03:10,626
lot more terms are thrown at you, right? So let's

45
00:03:10,658 --> 00:03:14,586
take just 10 seconds right here. And if

46
00:03:14,608 --> 00:03:18,250
you all are watching this live and it's going on, type in the first

47
00:03:18,320 --> 00:03:22,410
word that comes to your head when you hear the word observability.

48
00:03:23,310 --> 00:03:26,878
All right, I'm going to move on. So I hope you type in

49
00:03:26,884 --> 00:03:29,854
the first word that came to your head. Trust me, this will really help you

50
00:03:29,892 --> 00:03:33,570
relate correlate with everything that I talk about today

51
00:03:33,640 --> 00:03:36,914
much easily and in a more holistic way.

52
00:03:37,112 --> 00:03:40,900
And then it is about observation. So what better

53
00:03:41,910 --> 00:03:45,470
way to get started? All right, so talking about observability

54
00:03:45,550 --> 00:03:49,414
for everyone, well, let's start with one thing that we would

55
00:03:49,452 --> 00:03:52,450
not be very intuitive about when it comes to observability,

56
00:03:52,530 --> 00:03:56,642
right? We would never consider observation a measurable quantity.

57
00:03:56,706 --> 00:04:00,586
But that's the first thing that we know about observability, that it is a

58
00:04:00,608 --> 00:04:03,962
super measurable quantity. And if it doesn't make sense,

59
00:04:04,016 --> 00:04:08,106
then remember where you're trying to make a system so measurable that

60
00:04:08,128 --> 00:04:11,566
it becomes easy to observe. This is the best I can put

61
00:04:11,588 --> 00:04:14,810
it. So it makes more sense in terms of measuring

62
00:04:14,890 --> 00:04:19,294
observability. It is more than just a status on

63
00:04:19,332 --> 00:04:23,342
those startup websites. You go down and there's a green all

64
00:04:23,396 --> 00:04:26,878
okay, all systems working, status okay buttons.

65
00:04:26,974 --> 00:04:30,606
Observability is way more than that. There is a system that's keeping

66
00:04:30,638 --> 00:04:34,482
in check and reporting a status, but that's not what observability is about,

67
00:04:34,536 --> 00:04:38,006
right? It is a very layered process. We learned about how

68
00:04:38,028 --> 00:04:41,558
there are lots of points

69
00:04:41,644 --> 00:04:45,382
that go into making a software or

70
00:04:45,436 --> 00:04:48,860
an application observable. A great example

71
00:04:49,470 --> 00:04:52,730
to go about imagining observability is fast

72
00:04:52,800 --> 00:04:56,518
fashion. Now, the comparison might seem absurd,

73
00:04:56,614 --> 00:05:00,378
but I promise you will make sense when I explain it. So I

74
00:05:00,384 --> 00:05:03,294
don't know if how many of you all know how fast fashion works,

75
00:05:03,412 --> 00:05:06,954
but the basic working of fast fashion is that they're

76
00:05:07,002 --> 00:05:11,098
keeping a tab on a lot of things. For example, the trends,

77
00:05:11,194 --> 00:05:14,574
the current fashion shows, the current hypes,

78
00:05:14,702 --> 00:05:18,126
not just these, but also social media trends

79
00:05:18,238 --> 00:05:21,634
to finally push out their new products. Then they also

80
00:05:21,672 --> 00:05:25,666
keep a tab on their customers, what clothes are

81
00:05:25,688 --> 00:05:29,382
they viewing, regardless of the trend. And then there's a lot of data

82
00:05:29,436 --> 00:05:33,458
correlation that's happening. That's a great example for observability.

83
00:05:33,634 --> 00:05:37,650
They're not just keeping in tab a particular cycle.

84
00:05:37,730 --> 00:05:41,110
They're not just keeping in tab a status

85
00:05:41,190 --> 00:05:45,078
per se when it comes to a product. They are constantly,

86
00:05:45,174 --> 00:05:49,402
constantly observing customer

87
00:05:49,536 --> 00:05:53,210
versus trend versus social media versus influencers,

88
00:05:53,290 --> 00:05:57,118
versus a number of factors. For example, the lead time to

89
00:05:57,124 --> 00:06:01,360
get a clothes to get it stitched, et cetera. The colors available.

90
00:06:02,690 --> 00:06:06,366
Whether a celebrity picked up on some trend and is following

91
00:06:06,398 --> 00:06:09,806
it, there are so many layers to it that fast fashion

92
00:06:09,838 --> 00:06:13,202
is following, and then pushing out clothes with

93
00:06:13,256 --> 00:06:15,380
almost three weeks lead time.

94
00:06:16,470 --> 00:06:20,662
And that's not very environmental friendly. It's a

95
00:06:20,716 --> 00:06:24,614
great example of how observability really works. If you read more

96
00:06:24,652 --> 00:06:28,314
about this, you'll realize how this analogy makes

97
00:06:28,352 --> 00:06:31,658
perfect sense. And with those beautiful raspberries in mind,

98
00:06:31,744 --> 00:06:34,730
let's move on to the origin story of observability.

99
00:06:35,230 --> 00:06:39,482
So why has observability become such a trendy word in

100
00:06:39,536 --> 00:06:43,578
engineering? Why is everyone talking about observability?

101
00:06:43,674 --> 00:06:47,054
Why are there so many products overnight doing so

102
00:06:47,092 --> 00:06:50,766
well, helping you all achieve observability in your

103
00:06:50,788 --> 00:06:55,010
system? So let's go back to the origin

104
00:06:55,080 --> 00:06:58,834
of the word observability. So the term observability was coined by

105
00:06:58,872 --> 00:07:02,530
engineer Dolph E in 1960,

106
00:07:02,680 --> 00:07:06,738
right? It has grown to mean so many different things in different communities,

107
00:07:06,914 --> 00:07:10,402
but it has its own meaning and definition

108
00:07:10,466 --> 00:07:14,246
in the modern software systems, right? In the 1960 paper,

109
00:07:14,428 --> 00:07:17,790
he introduced a characterization he called observability

110
00:07:17,970 --> 00:07:21,722
to describe the mathematical control systems. So, in control

111
00:07:21,776 --> 00:07:25,306
theory, we usually have a measure of how well the

112
00:07:25,328 --> 00:07:28,554
internal states of a system are working

113
00:07:28,672 --> 00:07:32,462
or are inferred in terms of their knowledge from its

114
00:07:32,516 --> 00:07:36,058
external outputs. And this ratio

115
00:07:36,154 --> 00:07:40,010
is called observability. Or this measure is called observability.

116
00:07:40,170 --> 00:07:43,522
So when you study observability and

117
00:07:43,656 --> 00:07:46,558
controllability, they're actually mathematical duals.

118
00:07:46,654 --> 00:07:50,686
So these come along with sensors, linear algebra

119
00:07:50,718 --> 00:07:54,206
equations, and tons of formal methods.

120
00:07:54,318 --> 00:07:57,910
So the traditional definition of observability is

121
00:07:57,980 --> 00:08:01,638
the realtime of mechanical engineers and people who have a

122
00:08:01,644 --> 00:08:05,526
heart for physical systems with a specific end state in

123
00:08:05,548 --> 00:08:09,382
mind. If you're

124
00:08:09,446 --> 00:08:14,054
interested in knowing more, there are some really nice blogs

125
00:08:14,102 --> 00:08:18,262
available on correlating observability and mechanical systems versus

126
00:08:18,326 --> 00:08:21,454
modern software systems. But yeah,

127
00:08:21,572 --> 00:08:25,150
that's how the origin

128
00:08:25,300 --> 00:08:28,734
of observability as a word. But let's look

129
00:08:28,772 --> 00:08:32,614
into the adapting concept of observability to software,

130
00:08:32,682 --> 00:08:36,162
right? So when we're adapting this definition to

131
00:08:36,216 --> 00:08:39,854
software, we must also layer additional considerations

132
00:08:39,902 --> 00:08:42,610
that are specific to the software engineering domain.

133
00:08:43,030 --> 00:08:46,386
For example, for a software to have observability,

134
00:08:46,578 --> 00:08:50,518
there needs to be the following. For you to even consider

135
00:08:50,604 --> 00:08:54,438
having observability. So you need to be able to understand

136
00:08:54,524 --> 00:08:58,330
the inner workings of your application. You need to

137
00:08:58,400 --> 00:09:01,818
know the state your application may have gotten itself into,

138
00:09:01,984 --> 00:09:05,386
or you know that it's reaching states that

139
00:09:05,408 --> 00:09:09,306
you can't predict. You need to have a system

140
00:09:09,408 --> 00:09:13,070
state solely by observing and interrogating with

141
00:09:13,140 --> 00:09:17,086
external tools. And you should be able to understand the

142
00:09:17,108 --> 00:09:21,600
internal state without shipping any new custom code to handle it because

143
00:09:22,210 --> 00:09:25,586
it's, again, basically reiterating the above point that,

144
00:09:25,768 --> 00:09:28,590
you know, it's reaching places you can't predict.

145
00:09:28,750 --> 00:09:33,474
Right. All right, so basically,

146
00:09:33,592 --> 00:09:36,150
to have a system to be observable,

147
00:09:36,970 --> 00:09:40,486
it's the same thing over and over again that we iterate. That it

148
00:09:40,508 --> 00:09:43,922
has to be unpredictable

149
00:09:43,986 --> 00:09:48,258
is what we're trying to establish for a system to be observable.

150
00:09:48,434 --> 00:09:51,754
Now why do we want system to be observable? Why not just

151
00:09:51,792 --> 00:09:55,526
observe it anyhow? Well, for starters,

152
00:09:55,638 --> 00:09:58,730
you don't always need observability if

153
00:09:58,800 --> 00:10:02,720
it is, for example, a monolithic application

154
00:10:03,250 --> 00:10:07,150
or an application that does not or is not meant to support

155
00:10:07,220 --> 00:10:10,398
cloud of users. We'll get into that in a

156
00:10:10,404 --> 00:10:14,098
little more detail in a bit. All right,

157
00:10:14,184 --> 00:10:17,890
so let's talk about why we need observability,

158
00:10:18,230 --> 00:10:21,426
and let's talk about a couple of

159
00:10:21,448 --> 00:10:25,074
other questions that come into picture when we say we want to make

160
00:10:25,192 --> 00:10:28,862
a system observable. All right, so let's

161
00:10:28,926 --> 00:10:33,058
start by asking the question why our existing

162
00:10:33,234 --> 00:10:37,206
methods weren't enough, right? Why did people have to go out of

163
00:10:37,228 --> 00:10:41,260
their way, come up with a completely new

164
00:10:41,710 --> 00:10:45,100
layered, very layered process to

165
00:10:45,870 --> 00:10:49,958
monitor, basically? Right? Well, first, it is

166
00:10:50,064 --> 00:10:54,222
not an equivalent to monitoring. Observability is way

167
00:10:54,276 --> 00:10:58,270
more than just monitoring. It's about the software

168
00:10:59,250 --> 00:11:03,026
reaching unpredictable places. But you being able to be

169
00:11:03,048 --> 00:11:06,946
ready with an incident response before it reaches that unpredictable place

170
00:11:07,128 --> 00:11:10,974
by constantly keeping

171
00:11:11,022 --> 00:11:14,970
a tab on different factors that can even remotely

172
00:11:15,150 --> 00:11:18,966
affect your system.

173
00:11:19,148 --> 00:11:23,186
And also making sure that when you are keeping

174
00:11:23,218 --> 00:11:26,406
a tab on these things, you're constantly also using

175
00:11:26,508 --> 00:11:30,030
different tools to correlate all the data that you're collecting

176
00:11:30,130 --> 00:11:33,770
and making sure that you know what is happening when it's happening because of what

177
00:11:33,840 --> 00:11:37,114
is happening. Right. And I know it sounds okay,

178
00:11:37,152 --> 00:11:40,666
so we are basically monitoring, but it is, I promise

179
00:11:40,698 --> 00:11:44,526
you, way more than that. Let's reiterate back

180
00:11:44,548 --> 00:11:47,962
to the definition of observability,

181
00:11:48,106 --> 00:11:51,402
but this time in a slightly more technical manner.

182
00:11:51,546 --> 00:11:54,354
All right, so these are the terms that I'll be using a lot, right,

183
00:11:54,472 --> 00:11:57,806
logs, errors, traces, metrics, cardinality and dimensions.

184
00:11:57,918 --> 00:12:01,186
Now, these are very commonly used terms in the world

185
00:12:01,208 --> 00:12:05,182
of observability, so it's nice if you all get acquainted with them

186
00:12:05,336 --> 00:12:08,502
individually. All right, let's start

187
00:12:08,556 --> 00:12:13,094
looking into sentences that we can form using these words.

188
00:12:13,212 --> 00:12:16,774
So let's start with the three pillars of observability. All right,

189
00:12:16,812 --> 00:12:20,246
your first three words in the left, that is log errors and traces

190
00:12:20,358 --> 00:12:23,754
are your three pillars of observability? Why? How? We look

191
00:12:23,792 --> 00:12:27,162
into that in a tad bit. Okay, a single number

192
00:12:27,216 --> 00:12:31,500
with tags optionally appended for grouping and searching those numbers.

193
00:12:32,350 --> 00:12:36,442
This is basically what we call a metric, right? So monitoring

194
00:12:36,506 --> 00:12:39,694
depends a lot on metrics. A metric is a single number

195
00:12:39,732 --> 00:12:43,938
with tags optionally appended for grouping and searching those numbers. So basically

196
00:12:44,024 --> 00:12:47,470
what we're saying is a metric is already assuming

197
00:12:47,550 --> 00:12:51,234
that we only want correlation in this particular way and

198
00:12:51,272 --> 00:12:54,674
then getting numbers. Right. Next,

199
00:12:54,712 --> 00:12:58,422
let's go on to the next sentence. Every application has an inherent amount

200
00:12:58,476 --> 00:13:02,214
of reducible complexity. The only question is who

201
00:13:02,252 --> 00:13:05,266
will have to deal with it? The user, the application developer,

202
00:13:05,298 --> 00:13:09,558
or the platform developer? Well, this is the question of why do we need observability?

203
00:13:09,654 --> 00:13:13,450
Right? So who is dealing with the problem of this

204
00:13:13,520 --> 00:13:17,034
complexity? That is scaling with every new application that comes

205
00:13:17,072 --> 00:13:20,606
into the market, right? So that is where

206
00:13:20,628 --> 00:13:24,414
observability steps in. So when you have an application with

207
00:13:24,452 --> 00:13:28,634
irreducible complexity, you bring in observability,

208
00:13:28,762 --> 00:13:32,842
which has these three main pillars, which is logs, errors and traces.

209
00:13:32,986 --> 00:13:37,182
And then we use our two more terms, which is cardinality and dimensions.

210
00:13:37,326 --> 00:13:41,090
So comparing high dimensionality and high cardinality data

211
00:13:41,160 --> 00:13:44,654
becomes a critical component of being able to discover otherwise.

212
00:13:44,702 --> 00:13:48,470
Hidden issues build in complex system architectures.

213
00:13:48,810 --> 00:13:52,294
All right, so let's talk a little more about what do you mean by

214
00:13:52,332 --> 00:13:55,282
cardinality? And what do you mean by dimensions?

215
00:13:55,426 --> 00:13:59,882
Well, cardinality refers to specifically data,

216
00:14:00,016 --> 00:14:03,386
which is very rare. So what

217
00:14:03,408 --> 00:14:07,338
do you mean by very rare? Which means it is a very low occurring data.

218
00:14:07,504 --> 00:14:12,286
So if you, let's say, have a

219
00:14:12,308 --> 00:14:15,982
log with 100 events happening, and there's one

220
00:14:16,036 --> 00:14:19,370
data that happens every one in thousands

221
00:14:19,450 --> 00:14:23,682
event, right? That is your cardinal number, which basically means

222
00:14:23,736 --> 00:14:27,550
it is happening. It's a highly rare

223
00:14:27,710 --> 00:14:31,074
data type or occurring data, right? Then that's called

224
00:14:31,112 --> 00:14:34,958
dimensions. Dimensions basically keep

225
00:14:35,144 --> 00:14:38,854
value basically a data set

226
00:14:38,892 --> 00:14:42,402
or data pair, which you define

227
00:14:42,466 --> 00:14:46,502
based on the permutations you create with your cardinal data.

228
00:14:46,636 --> 00:14:49,370
So how does this help? Let's look at the sentence again,

229
00:14:49,440 --> 00:14:53,014
right? Comparing high dimensionality and high cardinality

230
00:14:53,062 --> 00:14:56,902
data becomes a critical component. So high cardinality automatically

231
00:14:56,966 --> 00:15:00,186
reduces your entire available data to a

232
00:15:00,208 --> 00:15:03,642
very small number of data, because you know that the cardinality,

233
00:15:03,706 --> 00:15:07,678
if it's a high cardinality data, that means it's already occurring very less,

234
00:15:07,764 --> 00:15:11,374
right? Then comes dimensions. So dimension is

235
00:15:11,412 --> 00:15:15,058
basically how many permutations can you make with your data available?

236
00:15:15,144 --> 00:15:19,458
And using a high cardinality key gives you, while less

237
00:15:19,544 --> 00:15:22,862
dimensions, it'll give you very unique dimensions.

238
00:15:23,006 --> 00:15:26,854
And using, creating these permutations and

239
00:15:26,892 --> 00:15:30,006
comparing them, it becomes a critical component in being

240
00:15:30,028 --> 00:15:34,146
able to discover otherwise hidden issues. So you're

241
00:15:34,178 --> 00:15:37,638
basically taking a lot of data, measuring it,

242
00:15:37,724 --> 00:15:41,290
correlating it in a way that only rare events

243
00:15:41,790 --> 00:15:45,226
are being correlated with each other. And then you're trying

244
00:15:45,248 --> 00:15:48,426
to see how and when system will go

245
00:15:48,448 --> 00:15:51,878
into an unpredictable state, predicting it beforehand, and then

246
00:15:51,904 --> 00:15:54,734
being able to keep a tab on it. Now,

247
00:15:54,852 --> 00:15:58,426
this might seem obvious after listening to the explanation,

248
00:15:58,538 --> 00:16:02,446
but it took me quite a few blog posts and videos to

249
00:16:02,468 --> 00:16:05,060
understand this place concept, right,

250
00:16:07,190 --> 00:16:11,186
the world seems fairly easy. Like, okay, we're trying to observe something

251
00:16:11,288 --> 00:16:14,754
that might not happen or

252
00:16:14,792 --> 00:16:18,214
might not happen because we have predicted it.

253
00:16:18,412 --> 00:16:22,710
But this basic concept helps you apply

254
00:16:22,780 --> 00:16:26,722
it in your own applications and make your system observable

255
00:16:26,786 --> 00:16:29,270
without making it highly complicated,

256
00:16:29,710 --> 00:16:33,034
even though I understand that you do not want to apply it to

257
00:16:33,072 --> 00:16:36,938
applications that aren't highly complicated. But this entire exercise is to

258
00:16:37,104 --> 00:16:39,660
understand the world of observability better.

259
00:16:40,370 --> 00:16:44,174
Okay, folks, now that we understand basically what observability is,

260
00:16:44,292 --> 00:16:47,550
let's move on to some simple facts,

261
00:16:49,170 --> 00:16:52,846
and then we will look into some

262
00:16:52,868 --> 00:16:57,134
tools for observability. All right, this is another great analogy

263
00:16:57,182 --> 00:17:00,750
that I love giving students monitor, but teachers

264
00:17:00,830 --> 00:17:04,514
observe. So remember in school your

265
00:17:04,552 --> 00:17:08,802
teacher used to allocate someone as a class monitor,

266
00:17:08,946 --> 00:17:12,422
and they would never be the teacher, right? They're just monitoring for a certain

267
00:17:12,476 --> 00:17:16,274
period, and they have their biases, et cetera. But the teacher,

268
00:17:16,402 --> 00:17:19,706
even when they weren't actively monitoring or

269
00:17:19,808 --> 00:17:22,842
trying to keep the class in control,

270
00:17:22,976 --> 00:17:26,698
they were constantly observing. So that's something similar

271
00:17:26,784 --> 00:17:29,770
to the difference between monitoring and observing.

272
00:17:30,270 --> 00:17:33,618
All right, so let's look into some facts. So the more highly

273
00:17:33,654 --> 00:17:36,910
dimensional your data is, the more likely you will be able to find

274
00:17:36,980 --> 00:17:40,666
hidden or elusive patterns in application behavior. In modern systems,

275
00:17:40,698 --> 00:17:44,202
where the permutations of failures that occur are proactively

276
00:17:44,266 --> 00:17:48,046
limitless, capturing only a few basic dimensions in your telemetry

277
00:17:48,078 --> 00:17:51,954
data is insufficient, obviously, right? Because the whole

278
00:17:51,992 --> 00:17:55,874
point of us bringing in observability was because we weren't able to predict

279
00:17:56,002 --> 00:17:59,654
the states that the system was reaching in in

280
00:17:59,692 --> 00:18:03,030
time for us to have incident response

281
00:18:03,530 --> 00:18:06,120
in a way that is helpful to the application.

282
00:18:06,490 --> 00:18:10,266
Right? So what do you go about? What is the

283
00:18:10,288 --> 00:18:13,994
next action plan of action for you

284
00:18:14,032 --> 00:18:18,054
to make sure that your application is constantly observed

285
00:18:18,102 --> 00:18:21,434
in the right way? Well, we want to gather incredibly rich

286
00:18:21,482 --> 00:18:24,080
detail about everything that's happening, right,

287
00:18:24,450 --> 00:18:28,138
especially at the intersection of users code and your user

288
00:18:28,154 --> 00:18:32,142
systems. Right? High dimensionality data provides greater context about

289
00:18:32,196 --> 00:18:35,874
how those intersections unfold, remember, because our high

290
00:18:35,912 --> 00:18:39,486
dimensional data is also something that is coming from cardinality.

291
00:18:39,598 --> 00:18:43,010
Right. And when you're doing that, you're basically making these

292
00:18:43,160 --> 00:18:47,106
deep but fairly unique assumptions.

293
00:18:47,218 --> 00:18:51,350
And not just assumptions, but predictions that

294
00:18:51,500 --> 00:18:54,520
you are ready to handle way before they can happen.

295
00:18:55,050 --> 00:18:58,554
So how do you make a system observable? And then obviously making

296
00:18:58,592 --> 00:19:00,700
an observable, actually observe it.

297
00:19:01,790 --> 00:19:04,918
Okay, so making a system observable, there are four steps

298
00:19:04,934 --> 00:19:08,934
to it. First is instrumentation, which is basically collecting

299
00:19:08,982 --> 00:19:12,526
all the important data that you have, right? Then there is

300
00:19:12,548 --> 00:19:16,510
data correlation, again, basically creating

301
00:19:16,930 --> 00:19:21,278
dimensions and using cardinal data

302
00:19:21,444 --> 00:19:25,102
to create some very unique data correlations.

303
00:19:25,246 --> 00:19:29,090
And then there's obviously incident response, which is basically

304
00:19:29,240 --> 00:19:32,718
being ready for an unpredictable state which has been predicted

305
00:19:32,734 --> 00:19:37,734
by your observability system. And then the new

306
00:19:37,772 --> 00:19:41,366
thing is the aiops, which is basically using a little bit of

307
00:19:41,388 --> 00:19:45,510
AI to make your observable system way smarter.

308
00:19:46,490 --> 00:19:49,850
We will talk a little more about instrumentation.

309
00:19:50,910 --> 00:19:54,202
So why do we want instrumentation? Well,

310
00:19:54,336 --> 00:19:58,170
you can't always have the application send certain

311
00:19:58,240 --> 00:20:02,000
data, especially because you know that you have a lot of

312
00:20:03,170 --> 00:20:06,910
resource consumption while the application is running. So you use

313
00:20:06,980 --> 00:20:10,394
specific tools to specially instrument

314
00:20:10,442 --> 00:20:14,414
all the data, collect it, and then send it to your favorite place

315
00:20:14,452 --> 00:20:17,262
of data correlation. Then you do the data correlation.

316
00:20:17,326 --> 00:20:20,962
There. Your incident response happens based on

317
00:20:21,016 --> 00:20:24,994
what you're trying to predict, what you're not trying to predict based on your application

318
00:20:25,112 --> 00:20:27,960
type, if it's front end, if it's back end,

319
00:20:28,410 --> 00:20:33,074
et cetera, et cetera. And then there is aiops,

320
00:20:33,122 --> 00:20:36,406
right, which I haven't looked a lot into, but there are some

321
00:20:36,428 --> 00:20:39,500
pretty cool applications out there helping you do that.

322
00:20:40,110 --> 00:20:44,970
All right, so we spoke about there

323
00:20:45,040 --> 00:20:48,780
being specific tools to help you all send your data

324
00:20:49,150 --> 00:20:52,846
to the place of your choice to correlate data.

325
00:20:52,948 --> 00:20:56,814
Well, my favorite place has been a streaming database to

326
00:20:56,852 --> 00:21:00,650
correlate data and to create views that help me do incident

327
00:21:00,730 --> 00:21:04,610
response rather efficiently.

328
00:21:05,750 --> 00:21:10,258
So the best way to correlate a

329
00:21:10,264 --> 00:21:14,050
lot of data and to be able to

330
00:21:14,120 --> 00:21:19,042
take out your correlated data in a separate location

331
00:21:19,106 --> 00:21:22,934
altogether is a streaming database. Right. Especially right now

332
00:21:23,052 --> 00:21:27,566
when I am trying to understand and basically get the hold of fundamentals,

333
00:21:27,698 --> 00:21:31,882
it makes more sense to use a streaming database which

334
00:21:31,936 --> 00:21:35,178
basically has the following working,

335
00:21:35,264 --> 00:21:39,082
right. I love open source tech, and I recently came across

336
00:21:39,136 --> 00:21:42,538
this really cool streaming database which lets

337
00:21:42,554 --> 00:21:46,106
me run it locally and on the cloud and lets

338
00:21:46,138 --> 00:21:49,694
me create something called materialized views. We'll look into that in

339
00:21:49,732 --> 00:21:54,078
just a second. But this is basically how a

340
00:21:54,084 --> 00:21:57,934
streaming database works. So rising wave is the name of the streaming

341
00:21:57,982 --> 00:22:01,202
database that I have been playing with like crazy,

342
00:22:01,336 --> 00:22:05,300
and I love being able to create materialized views with

343
00:22:05,690 --> 00:22:09,586
it basically has event streams,

344
00:22:09,778 --> 00:22:13,110
it ingests it, then it creates something

345
00:22:13,180 --> 00:22:16,802
called materialized view, and then it either triggers

346
00:22:16,866 --> 00:22:20,780
actions or event stream again based on your

347
00:22:21,470 --> 00:22:24,582
application. So before we dive

348
00:22:24,646 --> 00:22:27,734
into the blog diagram of what I created,

349
00:22:27,782 --> 00:22:31,658
let's look a little bit more into how rising wave

350
00:22:31,754 --> 00:22:36,366
works. So this is the

351
00:22:36,468 --> 00:22:39,966
rising wave docs, and like you can

352
00:22:39,988 --> 00:22:43,298
tell, I absolutely love their docs as well.

353
00:22:43,384 --> 00:22:47,614
It's very efficiently

354
00:22:47,662 --> 00:22:51,314
organized in terms of what I need, and I especially

355
00:22:51,512 --> 00:22:54,850
love the tiny gis that they've created all over the place.

356
00:22:54,920 --> 00:22:58,102
But basically this is the key part of what we are trying

357
00:22:58,156 --> 00:23:00,760
to apply.

358
00:23:01,210 --> 00:23:04,326
So rising wave can run in both local

359
00:23:04,428 --> 00:23:08,134
and their cloud that they've recently released in the beta trial

360
00:23:08,182 --> 00:23:12,490
format. I usually prefer the local version.

361
00:23:13,150 --> 00:23:16,198
So how does using wave support real time analytics?

362
00:23:16,294 --> 00:23:19,926
Well, rising wave supports real time analytics by ingesting and transforming

363
00:23:19,958 --> 00:23:23,406
data in real time with a variety of data sources, and then

364
00:23:23,428 --> 00:23:26,506
it maintains fresh results installed.

365
00:23:26,538 --> 00:23:29,870
So what it's basically doing is it's creating

366
00:23:30,290 --> 00:23:33,854
a sort of a filter, right? So when you're sending it tons of

367
00:23:33,892 --> 00:23:36,962
data, you're also creating a filter. You're saying,

368
00:23:37,016 --> 00:23:40,418
okay, that's okay, I have a lot

369
00:23:40,424 --> 00:23:43,762
of data, but now in this new table, I want you to keep this

370
00:23:43,816 --> 00:23:47,670
correlated data for me, right? And because

371
00:23:47,740 --> 00:23:51,878
it's a streaming database, it's easier to kind of play with

372
00:23:51,964 --> 00:23:56,006
its relational part of the

373
00:23:56,108 --> 00:23:59,626
entire query. There are some really

374
00:23:59,728 --> 00:24:02,858
cool examples here as well, which they have done.

375
00:24:03,024 --> 00:24:07,098
Let's have a look at this. The clickstream analysis is something

376
00:24:07,184 --> 00:24:10,334
what I'd compare to front

377
00:24:10,372 --> 00:24:13,886
end observability. So this is a great example

378
00:24:13,988 --> 00:24:17,774
to deploy if you all ever want to get started with

379
00:24:17,812 --> 00:24:21,614
streaming databases, or with databases that help

380
00:24:21,652 --> 00:24:25,466
you create a nice filtered

381
00:24:25,498 --> 00:24:29,482
view of your data. Again, the streaming database

382
00:24:29,546 --> 00:24:33,434
has a very wide array of usage.

383
00:24:33,562 --> 00:24:36,920
It is not specific quickly for

384
00:24:37,370 --> 00:24:41,238
observability, but it does do that task very well.

385
00:24:41,324 --> 00:24:44,726
Now you can see that the documentation also has a

386
00:24:44,748 --> 00:24:48,860
lot of comparisons with its current

387
00:24:49,310 --> 00:24:53,046
from the inspiration rather, where it builds

388
00:24:53,078 --> 00:24:56,634
upon. Again, it's completely open source and you all can also go ahead

389
00:24:56,672 --> 00:25:00,666
and contribute to the documentations, and they

390
00:25:00,688 --> 00:25:04,478
have an active slack as well. If you all want help from the community

391
00:25:04,564 --> 00:25:09,274
real time, they have a very detailed

392
00:25:09,322 --> 00:25:12,590
list of sources you all can connect it with and

393
00:25:12,660 --> 00:25:15,426
a lot of things that you all can connect it with as well. You all

394
00:25:15,448 --> 00:25:20,446
can also go ahead and create your own visualizations depending

395
00:25:20,558 --> 00:25:23,842
on what you want to visualize it with, which is

396
00:25:23,896 --> 00:25:29,000
also what makes it my favorite tool for basically

397
00:25:30,730 --> 00:25:34,182
any observability test that I've been conducting in the past few

398
00:25:34,236 --> 00:25:37,960
weeks. So what did I do to

399
00:25:38,810 --> 00:25:43,034
make my streaming database an

400
00:25:43,072 --> 00:25:46,394
observable tool or an observability tool?

401
00:25:46,592 --> 00:25:50,522
This is the blog diagram that I followed. Now to actually demo the entire thing

402
00:25:50,576 --> 00:25:54,118
would be another 40 minutes session altogether. So I'll just take you

403
00:25:54,144 --> 00:25:57,438
through the blog diagram and then maybe I'll just write a blog post in a

404
00:25:57,444 --> 00:26:00,926
bit to show how I did it and show you

405
00:26:00,948 --> 00:26:04,614
how it works. Right? First I have a simple algorithm generating

406
00:26:04,682 --> 00:26:08,434
art, which is basically a tiny spiral I used

407
00:26:08,472 --> 00:26:12,430
to react front end. And I'll also show you one of my favorite tutorials,

408
00:26:12,510 --> 00:26:15,926
which got me started on observing front end, right?

409
00:26:16,028 --> 00:26:19,558
You want instrumenting, so any data,

410
00:26:19,644 --> 00:26:23,430
right? You want to instrument. Remember, you're not trying to

411
00:26:23,580 --> 00:26:26,738
make your system observable, you're just trying to learn how observability

412
00:26:26,834 --> 00:26:30,482
works, right? So you want to instrument some form of data, any data

413
00:26:30,556 --> 00:26:34,186
works, right? And then you want to send and analyze the data.

414
00:26:34,288 --> 00:26:37,610
So again, this is where the streaming database comes in. So you have

415
00:26:37,680 --> 00:26:41,294
first algorithm. Over here you have an

416
00:26:41,332 --> 00:26:44,606
instrument that is basically sending data to your

417
00:26:44,788 --> 00:26:48,266
database. The database that I used was again pricing wave,

418
00:26:48,298 --> 00:26:52,678
the streaming database. It is creating materialized views.

419
00:26:52,874 --> 00:26:56,642
So like we said, materialized view is basically the filter, which is basically

420
00:26:56,696 --> 00:27:00,318
what observability does, right? It creates correlation

421
00:27:00,494 --> 00:27:04,690
and then gives you states that cannot be predicted.

422
00:27:05,030 --> 00:27:08,870
And from here, ideally you want to send it to

423
00:27:09,020 --> 00:27:12,646
observability stack again, which is basically something that helps you

424
00:27:12,668 --> 00:27:16,674
do incident response. But again, this is us just trying to understand observability.

425
00:27:16,802 --> 00:27:21,654
So for incident response, what we have done is basically we've just added

426
00:27:21,702 --> 00:27:25,210
another parameter in the generative art

427
00:27:25,280 --> 00:27:29,500
and fed the materialized or the new correlated data back into the art.

428
00:27:29,890 --> 00:27:33,566
And just for

429
00:27:33,588 --> 00:27:37,840
the sake of understanding how correlation helps create a lot of

430
00:27:38,210 --> 00:27:42,046
difference, you generate the new parameters separately as well.

431
00:27:42,148 --> 00:27:46,526
Now over here you can keep for the instrumenting

432
00:27:46,558 --> 00:27:50,114
sum or any data, you can keep making it as complicated as

433
00:27:50,152 --> 00:27:53,554
you like, right? So for example, I started off

434
00:27:53,592 --> 00:27:57,314
with just observing a click on the screen,

435
00:27:57,432 --> 00:28:01,426
and then I started feeding the entire parameter into the database

436
00:28:01,538 --> 00:28:05,478
and so on and so forth. You can just keep adding onto it and

437
00:28:05,564 --> 00:28:09,018
creating new, just layers of data and sending it

438
00:28:09,024 --> 00:28:13,114
to the database and then making it

439
00:28:13,312 --> 00:28:17,162
more complicated to understand how it actually

440
00:28:17,216 --> 00:28:20,506
makes more sense. It starts making more sense when

441
00:28:20,528 --> 00:28:23,754
you start making it more complicated. All right folks,

442
00:28:23,802 --> 00:28:27,230
that's it from me. I hope you all had a lot of fun

443
00:28:27,380 --> 00:28:29,470
learning about observability.

444
00:28:30,130 --> 00:28:33,886
And yeah, if you all want to reach out to me you all

445
00:28:33,908 --> 00:28:38,446
can reach any of these contacts

446
00:28:38,478 --> 00:28:42,078
to reach out to me. I'm again learning a lot about observability

447
00:28:42,174 --> 00:28:45,202
on the go so if you all want to come learn with me hit me

448
00:28:45,256 --> 00:28:48,854
up and if you all have any feedback regarding the talk as well

449
00:28:49,052 --> 00:28:53,078
do let me know. A huge thanks and a shout out to Conf 42

450
00:28:53,164 --> 00:28:56,882
for accepting this talk. This is a very very new oriented

451
00:28:56,946 --> 00:29:00,386
talk. I had a lot of fun learning about and presenting

452
00:29:00,418 --> 00:29:03,894
it in such a way and I hope you all had

453
00:29:03,932 --> 00:29:07,334
fun as well. If you all did the intuitive exercise. Now is a good time

454
00:29:07,372 --> 00:29:11,274
to kind of correlate and see how much you understood on what you intuitively

455
00:29:11,322 --> 00:29:14,746
understood made so much sense and once you do it's

456
00:29:14,778 --> 00:29:18,000
going to be very difficult for you all to not remember it the way

457
00:29:18,530 --> 00:29:22,750
in a way that you just correlate everything that comes your way with observability.

458
00:29:23,410 --> 00:29:26,910
All right folks, I shall see you hopefully at another

459
00:29:26,980 --> 00:29:27,740
conference soon.

