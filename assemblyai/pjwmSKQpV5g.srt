1
00:00:38,930 --> 00:00:42,786
Hi everyone, welcome to my talk. Today we'll

2
00:00:42,898 --> 00:00:47,154
review platform engineering concept, how it's connected

3
00:00:47,202 --> 00:00:51,418
with DevOps. Furthermore, I brought up some practices

4
00:00:51,594 --> 00:00:55,546
I hope will ensure you a smooth adopting

5
00:00:55,578 --> 00:00:59,258
of platform engineering. My name is Caillou

6
00:00:59,274 --> 00:01:02,734
Medeiros and currently I'm leading the DevOps adoption at

7
00:01:02,772 --> 00:01:06,206
Citi. And why me to talk about this concept

8
00:01:06,238 --> 00:01:10,626
today? Well, I had the chances to work

9
00:01:10,728 --> 00:01:13,970
directly with the stream aligned teams, enabling them,

10
00:01:14,120 --> 00:01:17,846
participating with them to generate it products

11
00:01:17,948 --> 00:01:21,094
and have the happy customer at the

12
00:01:21,132 --> 00:01:24,614
end. But also I had the chance to work with

13
00:01:24,652 --> 00:01:28,814
platform teams at Citi, Red Hat and Slay.

14
00:01:28,962 --> 00:01:32,474
Actually I lead one of them generating a

15
00:01:32,512 --> 00:01:36,362
DevOps tool chain for ensuring this

16
00:01:36,416 --> 00:01:39,954
platform reliable and stable for all decision

17
00:01:40,022 --> 00:01:44,686
alignment teams we had inside the company. If you

18
00:01:44,708 --> 00:01:47,818
want to know more about me, you have here my LinkedIn,

19
00:01:47,994 --> 00:01:51,806
my email and my web portfolio in

20
00:01:51,828 --> 00:01:55,534
GitHub pages. So let's

21
00:01:55,582 --> 00:01:59,554
start what I have prepared for you today. Usually I

22
00:01:59,592 --> 00:02:02,862
start generating shared

23
00:02:02,926 --> 00:02:07,266
understanding on the concepts we will review. So I will introduce DevOps

24
00:02:07,298 --> 00:02:10,854
and platform engineering. For sure you have an understanding of this,

25
00:02:10,892 --> 00:02:14,310
but usually different people

26
00:02:14,380 --> 00:02:18,214
will have different definitions. I like to start generating

27
00:02:18,262 --> 00:02:21,594
this shared understanding and then we will go

28
00:02:21,632 --> 00:02:24,714
to the adoption journey. Why and how they

29
00:02:24,752 --> 00:02:28,918
should be together. Finally, I will introduce the three practices.

30
00:02:29,094 --> 00:02:33,030
I promise you, I hope them ensure

31
00:02:33,110 --> 00:02:36,254
this smooth adoption. As I mentioned at great.

32
00:02:36,452 --> 00:02:39,882
So let's start with the introduction to DevOps and platform engineering.

33
00:02:39,946 --> 00:02:43,378
What is DevOps? First, if I ask to anyone

34
00:02:43,464 --> 00:02:47,886
here for sure you will say your understanding of DevOps.

35
00:02:47,998 --> 00:02:51,746
But I like to introduce DevOps using the first phrase of the

36
00:02:51,768 --> 00:02:55,150
DevOps handbook, which is the main

37
00:02:55,240 --> 00:02:59,186
source of knowledge about DevOps. It starts

38
00:02:59,218 --> 00:03:03,538
with this. Imagine a world where pos dev engineers,

39
00:03:03,634 --> 00:03:06,770
qa it ops and infosec engineers.

40
00:03:06,850 --> 00:03:10,790
All the roles, the typical roles we have inside a traditional

41
00:03:10,950 --> 00:03:13,526
or even a modern IT organization.

42
00:03:13,718 --> 00:03:17,130
Imagine them working together without

43
00:03:17,200 --> 00:03:20,082
barriers, without sidos,

44
00:03:20,166 --> 00:03:23,194
without the normal

45
00:03:23,242 --> 00:03:29,050
boundaries we have defined by the traditional organization

46
00:03:29,210 --> 00:03:32,030
or the topologies we have inside the organization,

47
00:03:32,550 --> 00:03:36,578
not only to help each other with their needs,

48
00:03:36,664 --> 00:03:41,570
but also to ensure the overall organization succeed.

49
00:03:42,070 --> 00:03:45,842
Which basically means have our end user

50
00:03:45,986 --> 00:03:49,686
or our customers happy with the id products we

51
00:03:49,708 --> 00:03:52,390
are generating as it organization.

52
00:03:53,050 --> 00:03:56,274
So that's the understanding that Jenny King,

53
00:03:56,322 --> 00:04:00,060
John Witties, Patrick Devois and Nicole Forrest Green tried to

54
00:04:00,990 --> 00:04:03,660
bring to us in this book.

55
00:04:04,670 --> 00:04:08,614
But when we have this kind of adoptions,

56
00:04:08,662 --> 00:04:12,238
the DevOps adoptions, right, the adoption inside

57
00:04:12,324 --> 00:04:15,406
companies. Basically people will try to

58
00:04:15,428 --> 00:04:18,686
implement different ways of working. For sure

59
00:04:18,788 --> 00:04:21,630
it will be connected with agile adoptions,

60
00:04:22,370 --> 00:04:25,650
lean the software development, adopting, design thinking,

61
00:04:25,720 --> 00:04:29,230
adoption and it will be connected also with technologies,

62
00:04:29,310 --> 00:04:32,898
not just a matter of cultural norms and ways of working.

63
00:04:33,064 --> 00:04:37,910
We will have libraries, tools to go from ideation,

64
00:04:38,250 --> 00:04:41,400
to understand the needs of our customers,

65
00:04:41,770 --> 00:04:45,666
to have something in production solving

66
00:04:45,778 --> 00:04:49,142
the problems of our customers. So we will go

67
00:04:49,196 --> 00:04:53,162
into this mobile loop that DevOps provides to us

68
00:04:53,296 --> 00:04:57,002
to plan, code, build, test, release, deploy, operate and

69
00:04:57,056 --> 00:05:01,870
monitor, and we will be there till the product ends

70
00:05:02,210 --> 00:05:05,918
his time. The problem will be

71
00:05:06,004 --> 00:05:09,742
that where each of these

72
00:05:09,796 --> 00:05:13,220
roles, they will need to

73
00:05:15,510 --> 00:05:19,406
have the set of cultural norms,

74
00:05:19,438 --> 00:05:23,314
the ways of working and the tools they require each

75
00:05:23,352 --> 00:05:27,122
role, right? Furthermore, of the mindset,

76
00:05:27,186 --> 00:05:29,670
the DevOps mindset and principles.

77
00:05:30,810 --> 00:05:34,310
But when we are talking about the DevOps world,

78
00:05:34,380 --> 00:05:38,150
we are talking about a lot, a large list of tools we can use,

79
00:05:38,220 --> 00:05:41,754
right? We need to decide which one we will use and

80
00:05:41,792 --> 00:05:45,670
when. We have different teams inside our organization.

81
00:05:45,830 --> 00:05:49,446
For sure, one team will use one tool, another teams,

82
00:05:49,478 --> 00:05:53,674
they will use other tools because if you don't have management

83
00:05:53,802 --> 00:05:57,422
and standardization, it will happen. I already had this

84
00:05:57,476 --> 00:06:01,290
experience mainly when the organizations

85
00:06:01,370 --> 00:06:04,530
are lead by different managers.

86
00:06:06,150 --> 00:06:09,506
In addition to that, the teams will need

87
00:06:09,528 --> 00:06:13,138
to support these platforms to keep them working,

88
00:06:13,304 --> 00:06:16,546
reliable and stable to use them during the

89
00:06:16,568 --> 00:06:19,942
whole lifecycle of the software development. If not,

90
00:06:20,076 --> 00:06:24,502
something will block the generation of value there

91
00:06:24,556 --> 00:06:28,486
is where platform engineering born. The first introduction

92
00:06:28,518 --> 00:06:32,394
of platform team was in

93
00:06:32,432 --> 00:06:35,914
the team topologies book written by

94
00:06:35,952 --> 00:06:39,814
Matthew Skelton and Manuel Pais. They described

95
00:06:39,862 --> 00:06:43,514
platform teams as this string

96
00:06:43,562 --> 00:06:47,486
alignment team, this product team that will provide an internal product

97
00:06:47,588 --> 00:06:51,386
as platform which these string alignment

98
00:06:51,418 --> 00:06:55,586
teams, these teams with different roles working together, will use as

99
00:06:55,608 --> 00:06:59,106
a service. So platform engineering was described as

100
00:06:59,128 --> 00:07:03,166
a discipline to design and build these tool chains,

101
00:07:03,198 --> 00:07:06,710
these platforms that will be used

102
00:07:06,780 --> 00:07:11,362
as self service to help the engineering

103
00:07:11,506 --> 00:07:15,330
teams that are generating it products for end users

104
00:07:15,490 --> 00:07:19,174
to phase out this new cloud native era.

105
00:07:19,302 --> 00:07:22,858
You will find this description in the platform engineering community page.

106
00:07:22,944 --> 00:07:26,346
You can just type platformengineering.org there.

107
00:07:26,448 --> 00:07:29,862
There are much more information about platform engineering. I encourage

108
00:07:29,926 --> 00:07:33,294
you to go there and investigate on why

109
00:07:33,332 --> 00:07:37,578
not participate in the community. So platform engineering

110
00:07:37,674 --> 00:07:41,518
is that idea where we have an internal team inside the company

111
00:07:41,684 --> 00:07:45,466
and they are solving and reducing the cognitive load of string

112
00:07:45,498 --> 00:07:49,182
alignment teams to only focus and have

113
00:07:49,316 --> 00:07:52,562
their real needed skills to work in their

114
00:07:52,696 --> 00:07:57,270
specific IT product. So the platform teams just

115
00:07:57,420 --> 00:08:01,430
giving an example will provide these tool

116
00:08:01,500 --> 00:08:05,814
chains or the set of tools needed to

117
00:08:05,852 --> 00:08:09,394
perform the typical tasks, repetitive tasks

118
00:08:09,522 --> 00:08:12,460
that the stream aligner teams have,

119
00:08:12,910 --> 00:08:16,362
providing not only the platforms itself but also

120
00:08:16,416 --> 00:08:20,210
the templates, the golden paths and managing

121
00:08:20,310 --> 00:08:23,742
these platforms to keep them reliable and

122
00:08:23,796 --> 00:08:27,374
stable. So more or

123
00:08:27,412 --> 00:08:31,530
less we can understand where they are connected, right? The adoption

124
00:08:31,610 --> 00:08:36,420
journey on why and how they work together is

125
00:08:37,110 --> 00:08:40,482
clear now, more or less. So let's go into the

126
00:08:40,536 --> 00:08:43,934
benefits if we have platform teams supporting

127
00:08:43,982 --> 00:08:47,942
these stream aligned teams which are trying to

128
00:08:48,076 --> 00:08:51,842
work together with all these roles to make the organization succeed.

129
00:08:51,906 --> 00:08:56,002
First of all, as I mentioned before, if you have different teams

130
00:08:56,066 --> 00:08:59,142
without a clear management and aligned management,

131
00:08:59,286 --> 00:09:03,046
for sure they will start to use different platforms

132
00:09:03,078 --> 00:09:06,682
to do the same thing. Let's have an example to

133
00:09:06,736 --> 00:09:10,590
build and deploy one software component. I already

134
00:09:10,660 --> 00:09:13,982
had experience in other companies where

135
00:09:14,036 --> 00:09:17,760
one team was using Jenkins, another team was using

136
00:09:19,010 --> 00:09:22,062
Travis CI or any other tool,

137
00:09:22,116 --> 00:09:26,318
right? Basically in the same company they are using different tools.

138
00:09:26,494 --> 00:09:30,290
So for sure they will face different

139
00:09:30,440 --> 00:09:34,290
issues that will block them and will not

140
00:09:34,440 --> 00:09:38,310
have a chance to share

141
00:09:38,380 --> 00:09:42,630
knowledge, share learning lessons because they are using different tools.

142
00:09:43,210 --> 00:09:46,886
The chance will be a

143
00:09:46,908 --> 00:09:50,522
bit more or less right at the end, the standardization is

144
00:09:50,576 --> 00:09:54,202
needed to have the right control over

145
00:09:54,256 --> 00:09:58,218
the practices we are implementing inside the company and to have success

146
00:09:58,304 --> 00:10:01,866
on a DevOps adoption for sure. I don't want to remove the freedom

147
00:10:01,898 --> 00:10:04,830
of teams, but they should have boundaries.

148
00:10:05,250 --> 00:10:08,958
Platform engineering will provide these boundaries because at the end

149
00:10:09,044 --> 00:10:13,054
we will have an internal team trying to generate an internal

150
00:10:13,102 --> 00:10:16,482
product and combines the rest of the teams to use

151
00:10:16,616 --> 00:10:19,986
this tool, this platform. They will provide a

152
00:10:20,008 --> 00:10:23,890
standardization ways of working standardization and

153
00:10:23,960 --> 00:10:27,718
also they will provide this control to understand who is doing

154
00:10:27,804 --> 00:10:31,554
what, how they are doing and where is the boundaries

155
00:10:31,602 --> 00:10:35,446
they have to manage the different ways of working. Also we

156
00:10:35,468 --> 00:10:38,700
will have reduction of the cognitive load because

157
00:10:39,150 --> 00:10:43,274
in the beginning without platform teams, if we

158
00:10:43,312 --> 00:10:46,778
are in a DevOps adoption journey, we had to

159
00:10:46,864 --> 00:10:50,878
hire engineers with knowledge not only in develop

160
00:10:50,964 --> 00:10:55,194
code but also to operate the software

161
00:10:55,322 --> 00:10:58,606
or even to manage the

162
00:10:58,708 --> 00:11:00,240
CI CD tool.

163
00:11:01,650 --> 00:11:05,106
Removing this dependency or the requirement of

164
00:11:05,128 --> 00:11:08,482
these skills, we will be able to find more

165
00:11:08,536 --> 00:11:11,810
engineers. And also we will reduce the

166
00:11:11,960 --> 00:11:15,914
stress of our engineers inside product teams

167
00:11:16,062 --> 00:11:19,174
to not only develop the active product but

168
00:11:19,212 --> 00:11:22,966
also to maintain their own tools. And finally,

169
00:11:23,148 --> 00:11:26,246
the tools will be more reliable, the platforms will be

170
00:11:26,268 --> 00:11:27,990
more reliable and stable,

171
00:11:29,550 --> 00:11:33,654
avoiding any blocker in the software development

172
00:11:33,702 --> 00:11:37,002
lifecycle related to the platforms needed to

173
00:11:37,056 --> 00:11:40,350
build, develop, verify the code

174
00:11:40,420 --> 00:11:42,240
or even operate the code.

175
00:11:43,570 --> 00:11:47,562
So let's take an example of these two lines.

176
00:11:47,626 --> 00:11:52,014
Right where we have in the first line is

177
00:11:52,052 --> 00:11:56,162
Rina line, a team trying to take one idea from

178
00:11:56,216 --> 00:12:00,146
left and generate a product to have a happy customer to the

179
00:12:00,168 --> 00:12:03,874
right. In any process to generate an

180
00:12:03,912 --> 00:12:07,414
IT product we will have rocks on the wall and

181
00:12:07,452 --> 00:12:10,934
sometimes we will have mountains. So only

182
00:12:10,972 --> 00:12:12,870
having string aligned teams,

183
00:12:13,850 --> 00:12:17,646
if you are entering to a traditional organization and breaking

184
00:12:17,698 --> 00:12:21,494
down the barriers and rearming all the teams

185
00:12:21,542 --> 00:12:25,306
to have all these roles together, to work together,

186
00:12:25,408 --> 00:12:29,770
as DevOps description express,

187
00:12:30,690 --> 00:12:33,840
to generate success inside the company.

188
00:12:34,210 --> 00:12:38,430
Sometimes we will have the people going

189
00:12:38,500 --> 00:12:41,854
outside of the stream aligner team to push the rest

190
00:12:41,892 --> 00:12:45,294
of the team because they will depend on the specific knowledge

191
00:12:45,342 --> 00:12:48,514
of that person. Mainly if we are

192
00:12:48,552 --> 00:12:52,146
talking about platforms that will support the work that the

193
00:12:52,168 --> 00:12:56,722
stream aligned teams are doing. If you need someone that will restart

194
00:12:56,786 --> 00:13:00,470
the Jenkins instance, or if you need someone

195
00:13:00,540 --> 00:13:04,054
that will manage the configuration of your kubernetes or

196
00:13:04,092 --> 00:13:07,442
graphana stack at the end,

197
00:13:07,596 --> 00:13:12,042
someone inside the team will have the specific knowledge and

198
00:13:12,096 --> 00:13:16,326
they will waste their time. They were focusing on generate

199
00:13:16,358 --> 00:13:19,766
value for the end customer to support the daily

200
00:13:19,798 --> 00:13:23,086
work of the team. It's different if we have

201
00:13:23,108 --> 00:13:27,278
a platform team looking to all these issues, possible issues

202
00:13:27,364 --> 00:13:31,454
for sure. It will not remove the whole rocks on the road or

203
00:13:31,492 --> 00:13:34,594
the whole mountains we need to cross over,

204
00:13:34,792 --> 00:13:38,462
but they will simplify the path to be faster

205
00:13:38,526 --> 00:13:42,180
than just having a screen aligned things and reach

206
00:13:43,350 --> 00:13:46,950
before the success. Having our happy

207
00:13:47,020 --> 00:13:50,374
customer at the end of the path. And even they will

208
00:13:50,412 --> 00:13:53,574
be faster to have a fast or quick

209
00:13:53,692 --> 00:13:57,350
feedback loops which will generate better software

210
00:13:58,110 --> 00:14:01,594
and more satisfaction in the customer

211
00:14:01,712 --> 00:14:05,050
to make our organization win in the marketplace.

212
00:14:05,790 --> 00:14:09,578
So if you want to go deeper in this concept and

213
00:14:09,744 --> 00:14:12,778
the connection between DevOps and platform engineering,

214
00:14:12,874 --> 00:14:16,394
I will recommend you the talks of Manual

215
00:14:16,442 --> 00:14:20,026
PI's platform as a product and mayori high DevOps

216
00:14:20,058 --> 00:14:24,154
ain't that but we got a talk because they introduce

217
00:14:24,202 --> 00:14:27,394
more and more on this concept. And finally the state of

218
00:14:27,432 --> 00:14:31,378
DevOps. The report from 2023. They focus 100%

219
00:14:31,464 --> 00:14:35,640
on platform engineering and how this practice is important

220
00:14:36,010 --> 00:14:39,510
to face out the challenges proposed by DevOps

221
00:14:40,170 --> 00:14:42,120
in the last years.

222
00:14:43,130 --> 00:14:47,014
So now we reach the three practices I

223
00:14:47,052 --> 00:14:50,458
had prepared for you. I used these practices in

224
00:14:50,464 --> 00:14:54,106
the past, but first I want to generate a

225
00:14:54,128 --> 00:14:58,202
sense of why we need these practices. So I will introduce some challenges behind

226
00:14:58,256 --> 00:15:01,934
platform engineering. Adopting first

227
00:15:01,972 --> 00:15:05,374
of all, DevOps and platform engineering is

228
00:15:05,412 --> 00:15:08,702
not something that is easy to do, right? It seems

229
00:15:08,756 --> 00:15:12,638
like we need to do that will be a total

230
00:15:12,724 --> 00:15:16,418
success. That is what I need to have.

231
00:15:16,504 --> 00:15:20,114
And after this talk, you will reach your manager. You will

232
00:15:20,152 --> 00:15:24,050
try to push the platform engineering ideas inside your company.

233
00:15:24,200 --> 00:15:27,766
But it's not an easier thing, right? Probably will

234
00:15:27,788 --> 00:15:28,790
be harder.

235
00:15:30,170 --> 00:15:33,846
But don't get sad, right?

236
00:15:34,028 --> 00:15:37,958
There are ways to face out the challenges we usually

237
00:15:38,044 --> 00:15:41,466
will have. Not only the platform engineering adoption, some of

238
00:15:41,488 --> 00:15:45,162
them are related to any transformation process. First of all,

239
00:15:45,216 --> 00:15:48,938
lack of time and high demand because when we are introducing a platform

240
00:15:49,024 --> 00:15:51,662
team inside a company, first of all,

241
00:15:51,796 --> 00:15:55,374
everyone will be busy. So it's difficult to

242
00:15:55,412 --> 00:15:58,954
motivate people to adopt a new platform and the demand

243
00:15:59,002 --> 00:16:02,640
will just increase. If you have success with one team,

244
00:16:03,330 --> 00:16:06,900
everyone will want to have this platform as well.

245
00:16:07,430 --> 00:16:11,042
Ways of working and thinking usually we don't have just one

246
00:16:11,096 --> 00:16:15,718
team inside a company. We will have a lot of teams and they will bring

247
00:16:15,804 --> 00:16:19,542
with their ideas, their BSS, their ways

248
00:16:19,596 --> 00:16:23,574
of working, because they work like that in

249
00:16:23,612 --> 00:16:26,946
other companies. And these platform teams,

250
00:16:26,978 --> 00:16:30,826
they will be in the middle. So the facilitation will

251
00:16:30,848 --> 00:16:34,662
be a mess if you don't have the platform team prepared.

252
00:16:34,806 --> 00:16:37,866
And finally, the people motivation and the rotation of

253
00:16:37,888 --> 00:16:41,390
IT engineers is a huge problem for

254
00:16:41,460 --> 00:16:45,386
all initiatives we have today inside the IT organization.

255
00:16:45,498 --> 00:16:49,402
So let's go a bit deeper inside each of these challenges.

256
00:16:49,546 --> 00:16:53,530
First of all, if we have platform teams,

257
00:16:53,610 --> 00:16:56,974
they will need to manage platforms. And platforms

258
00:16:57,022 --> 00:17:00,114
are not just one tool. The expertise on these

259
00:17:00,152 --> 00:17:03,586
tools will be one of the challenges. How you can keep

260
00:17:03,768 --> 00:17:07,830
the expertise inside the team, how this expertise can be

261
00:17:07,980 --> 00:17:11,462
put in benefit of the internal customers,

262
00:17:11,596 --> 00:17:15,154
the swing alignment teams, and to develop these skills

263
00:17:15,202 --> 00:17:18,522
inside the string alignment teams. Because even

264
00:17:18,576 --> 00:17:22,490
when we are providing a platform with templates and golden pads

265
00:17:23,470 --> 00:17:26,646
inside the srina teams, they need to develop some skills

266
00:17:26,678 --> 00:17:30,586
to take real profit of the platforms that platform

267
00:17:30,688 --> 00:17:35,246
thinking provide. How we can reply in

268
00:17:35,268 --> 00:17:38,526
front of failures and outages, because they

269
00:17:38,548 --> 00:17:42,110
will happen and the documentation that needs to be updated.

270
00:17:42,710 --> 00:17:45,940
Everything will go so fast.

271
00:17:47,350 --> 00:17:50,994
At the same time we need to manage the demand, because if we

272
00:17:51,032 --> 00:17:53,746
are introducing a platform team inside a company,

273
00:17:53,928 --> 00:17:58,006
usually if

274
00:17:58,028 --> 00:18:01,014
it ends in a success case, for sure,

275
00:18:01,052 --> 00:18:04,466
managers will try to push this to the rest of the teams.

276
00:18:04,578 --> 00:18:08,514
So more users means more doubts, more requests

277
00:18:08,562 --> 00:18:11,370
and the team need to be prepared for these challenges.

278
00:18:11,790 --> 00:18:15,322
In other side, we have the ways of working the facilitation between

279
00:18:15,376 --> 00:18:18,986
teams, right? Because several ways of doing the same thing. As I

280
00:18:19,008 --> 00:18:22,862
mentioned before, sometimes we will have just a simple

281
00:18:22,916 --> 00:18:26,462
case, sometimes we will have one team using one

282
00:18:26,516 --> 00:18:29,786
CI tool, another teams using other CI

283
00:18:29,818 --> 00:18:33,830
tools, and the different ways of configuring and provide environments

284
00:18:34,010 --> 00:18:37,826
and provide resources will

285
00:18:37,848 --> 00:18:41,266
be a mess. So the facilitation to put the

286
00:18:41,288 --> 00:18:44,546
platform team in middle of this will be a

287
00:18:44,568 --> 00:18:49,010
challenge for sure. Also they will need to face out complex compliance

288
00:18:49,090 --> 00:18:52,854
flows. Because in all companies we have these

289
00:18:52,892 --> 00:18:56,658
kind of problems with specific requirements,

290
00:18:56,834 --> 00:19:00,166
distorted perspectives of priorities.

291
00:19:00,278 --> 00:19:04,026
And the last thing I had seen in the last companies

292
00:19:04,128 --> 00:19:07,514
and teams I had worked after the COVID we

293
00:19:07,552 --> 00:19:10,922
start working globally with people from different countries

294
00:19:10,986 --> 00:19:14,234
and the languages and the understanding

295
00:19:14,282 --> 00:19:17,630
barriers sometimes generate a lot of confusion.

296
00:19:18,690 --> 00:19:22,030
Finally, keep team engaged. This is another

297
00:19:22,100 --> 00:19:26,718
challenge, a huge challenge, because not only related with platform engineering,

298
00:19:26,894 --> 00:19:29,710
it's in all cases inside the IT organization.

299
00:19:29,790 --> 00:19:33,154
People is burning out and

300
00:19:33,192 --> 00:19:36,306
the cognitive load is directly related to this.

301
00:19:36,408 --> 00:19:39,938
How the platform teams can manage this cognitive load, as I

302
00:19:39,944 --> 00:19:43,862
mentioned it, the time will be a problem, the demand would be a problem.

303
00:19:43,996 --> 00:19:47,954
So it's super easy to get burned

304
00:19:48,002 --> 00:19:51,814
out. Of course, the technical and practice

305
00:19:51,862 --> 00:19:54,922
debts will add more

306
00:19:54,976 --> 00:19:58,554
challenges to this. So how we can face it.

307
00:19:58,672 --> 00:20:02,510
There you have my three practices. The first one is customer

308
00:20:02,660 --> 00:20:06,510
centric leadership. Right inside each platform team,

309
00:20:06,580 --> 00:20:10,334
we should have a leader with a design thinking mindset to

310
00:20:10,372 --> 00:20:14,570
identify the customers, the internal customers. These string alignment teams

311
00:20:14,650 --> 00:20:18,514
understand the real needs because for sure, if we have

312
00:20:18,552 --> 00:20:22,930
platform teams in different companies to

313
00:20:23,000 --> 00:20:26,930
provide the same type of platform, they will identify

314
00:20:27,010 --> 00:20:30,982
different objectives, different needs, because each

315
00:20:31,036 --> 00:20:35,282
organization has their own conditions,

316
00:20:35,346 --> 00:20:39,306
their own requirements. So it's super important to put in

317
00:20:39,328 --> 00:20:42,778
the place of the customers and understand their

318
00:20:42,864 --> 00:20:46,586
objectives, to guide the priorities of the team.

319
00:20:46,688 --> 00:20:50,446
And also this leader should connect the

320
00:20:50,468 --> 00:20:53,120
platform team, the whole platform team with the customers.

321
00:20:53,650 --> 00:20:58,234
How this leader can do that promoting

322
00:20:58,282 --> 00:21:01,630
inside the team to map and make it visible,

323
00:21:02,130 --> 00:21:05,874
the profile of our end users. You can

324
00:21:05,912 --> 00:21:09,486
use empathy mapping proto or user Persona.

325
00:21:09,678 --> 00:21:13,346
For mapping these profiles, it's crucial to have

326
00:21:13,368 --> 00:21:17,526
the design thinking mindset. It will provide you this perspective that

327
00:21:17,628 --> 00:21:21,400
this is my end user and I want to satisfy their needs.

328
00:21:22,090 --> 00:21:26,134
The second practice is practice what you preach sounds super

329
00:21:26,332 --> 00:21:29,606
logical, but I had a lot

330
00:21:29,628 --> 00:21:33,482
of experiences where the platform teams, they were not using their

331
00:21:33,536 --> 00:21:37,034
own platform and was a mess because at the end they

332
00:21:37,072 --> 00:21:40,170
don't know what is happening, really happening in production.

333
00:21:40,590 --> 00:21:43,950
The better way to understand how users are living

334
00:21:44,020 --> 00:21:47,326
or they are implementing the platform is using it.

335
00:21:47,428 --> 00:21:51,406
Metrics is the perfect way to measure this, to take a

336
00:21:51,428 --> 00:21:55,090
control of this. So setting the right metrics will be

337
00:21:55,240 --> 00:21:58,900
good to identify and monitor during the time

338
00:21:59,430 --> 00:22:03,474
if the team is really using the platform and it

339
00:22:03,512 --> 00:22:07,538
can be complemented with the internal and external usability

340
00:22:07,634 --> 00:22:11,238
testing. I mean you will invite not only

341
00:22:11,324 --> 00:22:15,314
people outside of your team, but inside your team to execute

342
00:22:15,362 --> 00:22:18,614
and run usability testing. Go navigate

343
00:22:18,662 --> 00:22:22,490
through the platform and the offering the platform team is

344
00:22:22,560 --> 00:22:25,926
providing and test it before to release

345
00:22:25,958 --> 00:22:29,462
a new version to reduction. Also have showcases

346
00:22:29,526 --> 00:22:32,750
and demo days to promote your platform and motivate people

347
00:22:32,820 --> 00:22:36,414
to get into the platform and start using and

348
00:22:36,452 --> 00:22:40,394
finally run this kind of lighting talks or tech talks

349
00:22:40,522 --> 00:22:43,986
because then you will share your knowledge to the rest of

350
00:22:44,008 --> 00:22:47,218
the teams on how this platform should be used.

351
00:22:47,384 --> 00:22:51,122
It will generate a better understanding of

352
00:22:51,176 --> 00:22:54,290
your end user and how to

353
00:22:54,360 --> 00:22:57,894
improve the platform experience. Finally,

354
00:22:58,012 --> 00:23:02,246
form champions. This is the

355
00:23:02,268 --> 00:23:05,846
practice that I love more because when

356
00:23:05,868 --> 00:23:09,754
we are talking about platform teams, usually it's not

357
00:23:09,792 --> 00:23:13,066
just one technology. We will have more than one

358
00:23:13,088 --> 00:23:16,710
technology, more than one library, more than one platform to generate

359
00:23:16,790 --> 00:23:20,298
one single platform to support different

360
00:23:20,384 --> 00:23:21,580
needs of these.

361
00:23:23,890 --> 00:23:27,658
So the knowledge needed to manage all these platforms

362
00:23:27,834 --> 00:23:33,346
is crazy, right? I had the chance to lead a

363
00:23:33,368 --> 00:23:37,010
platform team where we were providing

364
00:23:38,710 --> 00:23:42,850
DevOps tool chain to versionate their code,

365
00:23:42,920 --> 00:23:46,738
to build their code, deploy their code. So a

366
00:23:46,744 --> 00:23:49,950
lot of platforms in all these stages,

367
00:23:50,110 --> 00:23:53,590
right? Not only to build, but also to scan

368
00:23:54,570 --> 00:23:58,106
and generate automation in

369
00:23:58,128 --> 00:24:02,074
the test phases. So what

370
00:24:02,112 --> 00:24:06,330
is the keys there of this practice?

371
00:24:06,750 --> 00:24:10,038
The whole team should be generalist.

372
00:24:10,134 --> 00:24:14,266
I'm talking about the t shaped people, right? They should be generalist

373
00:24:14,298 --> 00:24:17,630
in all tools and platforms you have inside the platform team.

374
00:24:17,780 --> 00:24:21,326
And some of them will be deeper in specific

375
00:24:21,428 --> 00:24:25,582
platforms to generate ownership and

376
00:24:25,636 --> 00:24:29,902
delegate the responsibilities and keep the documentation

377
00:24:30,046 --> 00:24:33,410
updated and bring news to the team,

378
00:24:33,560 --> 00:24:37,954
solve issues and generate more expertise

379
00:24:38,002 --> 00:24:39,480
in the rest of the team.

380
00:24:41,050 --> 00:24:44,710
So with this, you will stop to search for experts

381
00:24:45,530 --> 00:24:49,554
and you need to start forming them stop

382
00:24:49,612 --> 00:24:53,094
to search for experts because for sure you will find some experts

383
00:24:53,142 --> 00:24:56,570
in the marketplace, but they will be so expensive.

384
00:24:58,030 --> 00:25:01,594
I will not say that you need to stop to search for experts and

385
00:25:01,632 --> 00:25:04,942
sometimes it will be needed. But if you can avoid it,

386
00:25:04,996 --> 00:25:08,334
try to find people that you can form and generate the t

387
00:25:08,372 --> 00:25:12,758
shaped people inside your platform team because it will maintain

388
00:25:12,874 --> 00:25:16,034
low the cognitive load and

389
00:25:16,152 --> 00:25:19,202
hide the expertise for that. First of all,

390
00:25:19,336 --> 00:25:23,154
you need to have a career path for each member and this

391
00:25:23,192 --> 00:25:26,534
career path should be aligned with the

392
00:25:26,572 --> 00:25:30,550
team needs. And at the end, the end user needs

393
00:25:30,620 --> 00:25:34,422
the internal teams, right? The stream aligned teams with that

394
00:25:34,476 --> 00:25:38,102
career. You will have certification training paths for

395
00:25:38,156 --> 00:25:41,578
all members inside your team, not only to be generalists in the platform,

396
00:25:41,664 --> 00:25:44,380
but also to be deeper in one specific platform.

397
00:25:45,470 --> 00:25:49,354
Complement that with game days and Chow's engineering sessions where

398
00:25:49,392 --> 00:25:53,530
they will need to prepare the platform to fail

399
00:25:53,610 --> 00:25:57,934
and solve it during a real and

400
00:25:57,972 --> 00:26:00,560
live moment. Finally,

401
00:26:00,930 --> 00:26:05,006
assign and create a calendar of lighting talks and tech talks that is connected

402
00:26:05,038 --> 00:26:08,194
with the other practices to these champions, to be

403
00:26:08,232 --> 00:26:12,274
led by these champions, because then they will learn more

404
00:26:12,392 --> 00:26:15,410
to be prepared to talk about those concepts.

405
00:26:16,570 --> 00:26:20,134
So, to summarize the three practices I broke to you today

406
00:26:20,332 --> 00:26:24,146
and ensure a smooth adoption of platform engineering

407
00:26:24,178 --> 00:26:27,802
inside your company. As you already reviewed with me,

408
00:26:27,856 --> 00:26:31,642
platform engineering is useful to

409
00:26:31,696 --> 00:26:35,498
support the DevOps adoption and ensure that

410
00:26:35,664 --> 00:26:39,386
the whole organization the IT organization. All the different roles we

411
00:26:39,408 --> 00:26:43,246
have inside work together to make the

412
00:26:43,268 --> 00:26:46,954
organization succeed. Try to bring this to your teams

413
00:26:47,002 --> 00:26:50,654
right? And also you can use it in other teams as well if

414
00:26:50,692 --> 00:26:53,662
you feel that is useful. First of all,

415
00:26:53,716 --> 00:26:57,362
customer centric leadership. We need to have one leader with design

416
00:26:57,416 --> 00:27:00,834
thinking mindset, with a clear vision of our customers and

417
00:27:00,872 --> 00:27:04,434
sharing this information with the rest of the platform team, promoting the

418
00:27:04,472 --> 00:27:08,566
closeness with the customers and

419
00:27:08,748 --> 00:27:12,214
setting and aligning the objectives and goals to

420
00:27:12,252 --> 00:27:15,766
address the platform team success. Because at the

421
00:27:15,788 --> 00:27:18,826
end, if a platform is not good enough, it will not

422
00:27:18,848 --> 00:27:21,370
be adapted and it will be a failure.

423
00:27:22,350 --> 00:27:25,690
Then let's practice what you preach. If you are

424
00:27:25,760 --> 00:27:30,370
proposing a platform to the internal users internal

425
00:27:30,470 --> 00:27:34,174
teams, then you need to use it as an internal team

426
00:27:34,212 --> 00:27:37,642
as well. Set some shared metrics

427
00:27:37,706 --> 00:27:41,610
with you and the end users and recognize

428
00:27:41,690 --> 00:27:45,330
and show the achievements because then people will

429
00:27:45,400 --> 00:27:48,722
get more motivated to find improvements inside

430
00:27:48,776 --> 00:27:51,890
the platform. Finally, form champions

431
00:27:52,950 --> 00:27:56,820
because it's super hard to find people ready to work

432
00:27:57,130 --> 00:28:01,602
in a platform team. So find generalist formed

433
00:28:01,666 --> 00:28:04,950
experts by two and delegate and trust

434
00:28:05,020 --> 00:28:08,838
on them. Trust on them that the documentation will be updated.

435
00:28:08,934 --> 00:28:12,694
They will bring the ideas to work in the specific platforms

436
00:28:12,822 --> 00:28:16,700
they are expert and to make the platform better.

437
00:28:17,950 --> 00:28:21,440
Finally, just to close this talk,

438
00:28:21,810 --> 00:28:25,166
I will empower you to go to the platform engineering community

439
00:28:25,268 --> 00:28:29,162
page, read the nagging steps

440
00:28:29,226 --> 00:28:32,458
to platform engineering hell that Lucas Galante

441
00:28:32,554 --> 00:28:36,094
published some time ago. You will find there are some

442
00:28:36,132 --> 00:28:39,338
mistakes in the platform engineering adoption

443
00:28:39,434 --> 00:28:43,034
you can avoid, and also I empower you to watch the Nick

444
00:28:43,082 --> 00:28:46,520
Watt talk about people, process and platform.

445
00:28:47,370 --> 00:28:50,754
Finally, if you want to join the platform engineering YouTube

446
00:28:50,802 --> 00:28:55,254
chat channel, there you will find much more content to

447
00:28:55,292 --> 00:28:58,966
prepare your path or your career as platform

448
00:28:59,068 --> 00:29:03,138
engineer. Thanks for joining. Thanks for participating.

449
00:29:03,314 --> 00:29:06,420
I hope you are enjoying this event and have a nice day.

