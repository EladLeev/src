1
00:00:35,090 --> 00:00:39,174
Hi, thank you for joining me to talk about adoption and deprecation and

2
00:00:39,212 --> 00:00:42,630
how to get everyone to use the internal developer platform.

3
00:00:42,780 --> 00:00:46,326
I'm Omar Kahani. I'm a staff engineer in the infogroup at

4
00:00:46,348 --> 00:00:49,898
SNC, where I lead platform teams. Building the internal

5
00:00:49,954 --> 00:00:53,546
developer platform before we dive in a bit about the infra

6
00:00:53,578 --> 00:00:57,434
group. We are three teams, but we're not doing any companywide

7
00:00:57,482 --> 00:01:00,880
ops, DevOps or on call for everything.

8
00:01:01,330 --> 00:01:05,162
We're building a paved path for other teams to lower cognitive

9
00:01:05,226 --> 00:01:08,686
load and make their day to day happier and simpler.

10
00:01:08,798 --> 00:01:12,350
As a result, if you want our solutions to be effective,

11
00:01:12,510 --> 00:01:15,986
we need the teams to adopt it. It can be as simple as

12
00:01:16,008 --> 00:01:20,054
a minor version of a helm chart, that provision postgres, or as

13
00:01:20,092 --> 00:01:22,898
complicated as changing the git brand strategy.

14
00:01:22,994 --> 00:01:26,134
Today, I want to show a framework with a set of practices that

15
00:01:26,172 --> 00:01:29,962
can make migration and adoption successfully, fast and without

16
00:01:30,016 --> 00:01:33,546
frustration. The framework is based on the technology

17
00:01:33,648 --> 00:01:38,218
adoption lifecycle, first presented in 1957

18
00:01:38,384 --> 00:01:41,454
and then republished and generalized in tools and

19
00:01:41,492 --> 00:01:45,294
studies such as crossing the chess on the

20
00:01:45,332 --> 00:01:49,310
lifecycle describe how technology is adapted in the general population

21
00:01:49,730 --> 00:01:51,760
from zero to 100.

22
00:01:52,950 --> 00:01:55,758
The model splits the market into buckets,

23
00:01:55,934 --> 00:01:59,170
each with a different consumer behavior.

24
00:01:59,830 --> 00:02:03,362
Using the same process, we can segment the RND and

25
00:02:03,416 --> 00:02:07,542
have an adoption strategy for each group using

26
00:02:07,596 --> 00:02:10,786
the model. We can also provide a systematical

27
00:02:10,818 --> 00:02:13,814
way to show progress in the migration project.

28
00:02:14,012 --> 00:02:17,738
Breaking down the model, we will now discuss each segment and the

29
00:02:17,744 --> 00:02:21,754
tools and practices to apply to it. Also in

30
00:02:21,792 --> 00:02:25,418
each segment, we will identify the relevant teams cases

31
00:02:25,504 --> 00:02:27,610
on the criterias of the segments.

32
00:02:28,350 --> 00:02:32,014
That mapping might change over time as teams change their

33
00:02:32,052 --> 00:02:35,262
behavior. So do that exercise each time

34
00:02:35,316 --> 00:02:37,360
before you start a migration project.

35
00:02:39,410 --> 00:02:43,170
The first group is innovators, a small group of people

36
00:02:43,240 --> 00:02:47,730
who get excited about new technology because it's novel.

37
00:02:48,470 --> 00:02:52,130
People in this group are willing to pay the tax of using a product

38
00:02:52,200 --> 00:02:56,054
that is not polished, has bugs, and lack any

39
00:02:56,092 --> 00:02:59,542
necessary documentation for onboarding. As long

40
00:02:59,596 --> 00:03:03,480
as they will be the first to use it, they will use it.

41
00:03:04,650 --> 00:03:07,722
That willingness is a gift for us as we build

42
00:03:07,776 --> 00:03:11,850
new solutions because we need design partners to build

43
00:03:11,920 --> 00:03:14,380
with us that product.

44
00:03:15,310 --> 00:03:18,998
So usually we will collaborate with ones or two teams

45
00:03:19,174 --> 00:03:22,862
to test our assumptions and to test the product

46
00:03:22,916 --> 00:03:27,002
that we build as we build it. Using design partners,

47
00:03:27,066 --> 00:03:29,710
we will be able to build a more specific solution,

48
00:03:30,130 --> 00:03:34,094
one that will work later on. For innovators,

49
00:03:34,142 --> 00:03:37,678
we will look for teams that have application without risk

50
00:03:37,774 --> 00:03:41,570
or low risk. We don't want application that will

51
00:03:41,640 --> 00:03:45,634
impact customers if there is downtime or problems.

52
00:03:45,832 --> 00:03:49,254
We also need teams that have time and are willing to

53
00:03:49,292 --> 00:03:53,254
free time in their sprint for pairing with us and

54
00:03:53,292 --> 00:03:57,126
make the effort to use our tool so we

55
00:03:57,148 --> 00:04:00,486
know who they are, we know what to do with them. We are ready to

56
00:04:00,508 --> 00:04:04,278
move to the next group. The second group is the early adapters.

57
00:04:04,454 --> 00:04:08,026
This group still get excited about new technology, but they also need

58
00:04:08,048 --> 00:04:11,506
to get a real value. Although they are willing to have some bugs

59
00:04:11,558 --> 00:04:15,374
and figure out some things, they still need it to solve a real

60
00:04:15,412 --> 00:04:18,894
problem for them. It's an excellent group to test

61
00:04:18,932 --> 00:04:22,186
the product as is a moment before GA.

62
00:04:22,378 --> 00:04:26,126
It's also a great group to validate and write the onboarding

63
00:04:26,158 --> 00:04:29,790
guides that will help us support the majority.

64
00:04:29,950 --> 00:04:34,114
Inside R D we will look for teams that have trust and

65
00:04:34,152 --> 00:04:38,114
are willing to try things before they come GA. We also

66
00:04:38,152 --> 00:04:41,794
need teams with time because the onboarding is not trivial

67
00:04:41,922 --> 00:04:45,766
and there might be bugs that will require pairing time with us.

68
00:04:45,948 --> 00:04:49,286
There's a lot more to talk about early adoptions, but I

69
00:04:49,308 --> 00:04:53,034
want to talk about the next group first. The next group is

70
00:04:53,072 --> 00:04:57,302
the majority, and as the name suggests, it's most of the organization.

71
00:04:57,446 --> 00:05:01,070
In the model. It's about 68% of the population.

72
00:05:02,050 --> 00:05:05,486
The majority cares about their day to day work and the

73
00:05:05,508 --> 00:05:09,214
problems they have, and technology is only a way to

74
00:05:09,252 --> 00:05:13,034
solve those problems. Therefore, approaching the majority

75
00:05:13,162 --> 00:05:17,138
is completely different from the first two groups, not without a

76
00:05:17,144 --> 00:05:20,766
reason. Crossing the Chessam put a gap between the early adopters

77
00:05:20,878 --> 00:05:24,514
and the majority. From my experience, there are

78
00:05:24,552 --> 00:05:27,800
two main reasons for failure with this group.

79
00:05:28,410 --> 00:05:32,530
One is a product that doesn't solve a problem, but hopefully

80
00:05:32,610 --> 00:05:36,534
doing user research, working with design patterns and

81
00:05:36,572 --> 00:05:39,420
doing pocs, that's not the case.

82
00:05:40,110 --> 00:05:43,500
The second reason is that the migration is too difficult.

83
00:05:44,430 --> 00:05:47,866
Every product, technology, tool and practice that we use

84
00:05:47,968 --> 00:05:51,082
should provide us a value, but the value get

85
00:05:51,136 --> 00:05:54,862
lower by the effort it takes us to actually use that new tool.

86
00:05:54,996 --> 00:05:58,446
At the left corner we can see great products, but the

87
00:05:58,468 --> 00:06:01,854
effort to use them is so high that we wouldn't get any

88
00:06:01,892 --> 00:06:05,186
value from them. On the right side, we can

89
00:06:05,208 --> 00:06:08,590
see that the migration is so simple we can capture

90
00:06:08,670 --> 00:06:11,714
all the value of the product. Good product and

91
00:06:11,752 --> 00:06:14,558
low migration effort should be our goal.

92
00:06:14,654 --> 00:06:18,374
There are two practices that we use at Snyk to make that

93
00:06:18,412 --> 00:06:22,358
migration effort lower. The first is using

94
00:06:22,444 --> 00:06:26,450
self serve tools. In one case, we upgraded

95
00:06:26,530 --> 00:06:30,042
our internal deployment tools to have more options, but that

96
00:06:30,096 --> 00:06:33,974
required every application team to change their deployment

97
00:06:34,022 --> 00:06:37,674
configuration. That's a very high migration effort and we wanted

98
00:06:37,712 --> 00:06:41,630
to lower that, so we automatically opened PR

99
00:06:41,700 --> 00:06:46,160
for them, reducing the migration effort to a simple PR review

100
00:06:46,530 --> 00:06:49,946
and a simple click on the merge button in GitHub

101
00:06:50,138 --> 00:06:53,650
documentation can also lower that migration effort.

102
00:06:54,230 --> 00:06:57,778
Use the early adapters to make sure the guides and the

103
00:06:57,784 --> 00:07:01,058
docs are simple and clear for people without

104
00:07:01,144 --> 00:07:04,574
prior knowledge. We also usually task

105
00:07:04,622 --> 00:07:08,574
one of our teams members to follow the guide word

106
00:07:08,632 --> 00:07:11,814
by word. He is not allowed to do anything that is not

107
00:07:11,852 --> 00:07:15,174
strictly written in the guide so we can see where he gets

108
00:07:15,212 --> 00:07:18,438
struggled and how we can improve our documentation.

109
00:07:18,534 --> 00:07:21,686
The last group is the laggers. In the classic

110
00:07:21,718 --> 00:07:23,900
model they hate change.

111
00:07:25,470 --> 00:07:29,100
In the classic model this group hate change.

112
00:07:29,470 --> 00:07:32,634
They hate it so much they never do it

113
00:07:32,672 --> 00:07:36,746
unless they are forced inside the RND. Some teams

114
00:07:36,858 --> 00:07:40,974
must be the last to adopt, but it doesn't mean they hate change.

115
00:07:41,172 --> 00:07:43,460
There might be other reason for that.

116
00:07:43,910 --> 00:07:47,300
It might be that they have a production critical application,

117
00:07:47,750 --> 00:07:51,570
they can't suffer downtime and they don't want to take

118
00:07:51,640 --> 00:07:55,346
any unnecessary risk. So they prefer to wait and

119
00:07:55,368 --> 00:07:59,560
see the problems that other teams will have. They might have a legacy system,

120
00:08:00,010 --> 00:08:03,814
one that no one is familiar with. So in

121
00:08:03,852 --> 00:08:07,654
one of my previous companies we had those kind of legacy system

122
00:08:07,852 --> 00:08:12,066
which was super difficult to make any change. And anytime

123
00:08:12,098 --> 00:08:15,402
we wanted to change anything we had to group a lot of people

124
00:08:15,456 --> 00:08:19,146
inside a room and understand the legacy system and how it's deployed in order

125
00:08:19,168 --> 00:08:22,422
to make that change. Or they might need more time.

126
00:08:22,576 --> 00:08:25,886
So think about that team that is currently on the hook to

127
00:08:25,908 --> 00:08:28,880
deliver a very significant milestone to your company.

128
00:08:29,810 --> 00:08:32,880
They don't have time to mess with their deployment process,

129
00:08:33,250 --> 00:08:36,670
with the way that they provision cloud resources.

130
00:08:36,830 --> 00:08:40,098
They need things to work and without any change.

131
00:08:40,184 --> 00:08:43,300
So what can you do to make those team adopt your product?

132
00:08:44,150 --> 00:08:48,214
What is the best thing we can provide them? We can

133
00:08:48,252 --> 00:08:51,810
provide them knowledge just in time specific knowledge

134
00:08:51,890 --> 00:08:55,510
for their application about the migration effort.

135
00:08:56,410 --> 00:09:00,230
In other words, we can pair with them in that pairing session.

136
00:09:00,310 --> 00:09:04,102
We will be able to provide the necessary knowledge to make the migration effort

137
00:09:04,166 --> 00:09:07,978
as low as possible. While they can provide the specific

138
00:09:08,064 --> 00:09:12,078
application context. Together we can make that change easy

139
00:09:12,164 --> 00:09:15,342
and affordable. So to recap, we talked about

140
00:09:15,396 --> 00:09:18,542
four segments, the innovators, our design

141
00:09:18,596 --> 00:09:22,206
partners, the early adapters that will do pocs and

142
00:09:22,228 --> 00:09:25,262
test our documentation, the majority,

143
00:09:25,326 --> 00:09:29,006
both the early and the late, that will use our self serve tools

144
00:09:29,038 --> 00:09:31,810
and guidance to make that migration.

145
00:09:32,550 --> 00:09:36,174
And we talked about the laggers where we need empathy

146
00:09:36,222 --> 00:09:40,390
and pairing time with them to complete that migration project.

147
00:09:40,540 --> 00:09:44,598
We also talked about the majority and how they are a key group

148
00:09:44,764 --> 00:09:47,994
to our success. So now I want to talk about

149
00:09:48,032 --> 00:09:51,046
more tools and practices. Aiming to the majority,

150
00:09:51,158 --> 00:09:55,130
we will talk about two practices, trust and sticks.

151
00:09:55,790 --> 00:09:58,810
Trust is part of every buying decision we make.

152
00:09:58,960 --> 00:10:03,022
A while ago we bought a home coffee machine because we thought

153
00:10:03,156 --> 00:10:06,560
the coffee at home will be better than a coffee in the coffee shop.

154
00:10:07,010 --> 00:10:11,600
The first way to build trust is by celebrating our early adopters success

155
00:10:12,050 --> 00:10:15,130
and even using them to demo and explain the problem and

156
00:10:15,140 --> 00:10:18,510
the solution in their own words. So at Snyk

157
00:10:18,590 --> 00:10:21,938
there is A-R-D sprint demo which is an excellent platform

158
00:10:22,024 --> 00:10:26,014
for those kind of celebration. Find the best place to celebrate

159
00:10:26,062 --> 00:10:29,446
those in your company and in fact make it a

160
00:10:29,468 --> 00:10:32,582
rule. A PoC must end with as many

161
00:10:32,636 --> 00:10:35,986
people hearing about it. Speaking about early adoptions,

162
00:10:36,098 --> 00:10:40,014
let's go back and add another criteria. Early adoptions

163
00:10:40,082 --> 00:10:43,660
must represent as many use cases and groups as possible.

164
00:10:44,110 --> 00:10:47,514
Trust is established by people close to you with

165
00:10:47,552 --> 00:10:51,614
a similar use case, but trust is also established by

166
00:10:51,652 --> 00:10:55,214
people. You value their opinion. In every group, organization and

167
00:10:55,252 --> 00:10:58,974
community there are always individuals that can

168
00:10:59,012 --> 00:11:02,670
reach out and influence people's decision because people trust

169
00:11:02,740 --> 00:11:06,266
and value their opinion. In SNCC, those are group

170
00:11:06,308 --> 00:11:10,078
level staff engineers which can influence the group practices.

171
00:11:10,254 --> 00:11:13,646
In one of our first migration projects, we intended

172
00:11:13,678 --> 00:11:16,946
to replace the continuous delivery system. This was a

173
00:11:16,968 --> 00:11:20,698
fundamental change to an historical process inside SNCC.

174
00:11:20,894 --> 00:11:24,342
Not only that, but everyone inside the group was

175
00:11:24,396 --> 00:11:27,622
less than a year in the company and wasn't in the position

176
00:11:27,676 --> 00:11:30,250
to build trust with the whole organization.

177
00:11:30,750 --> 00:11:33,882
We had to use other people for that. So after

178
00:11:33,936 --> 00:11:37,946
identifying them, we engaged with them in a series of meetings where

179
00:11:37,968 --> 00:11:41,598
we presented our assumptions and shared the blueprints of the final

180
00:11:41,684 --> 00:11:45,882
process. It was even before design patterns,

181
00:11:46,026 --> 00:11:50,014
very early in the process, after sharing our

182
00:11:50,052 --> 00:11:53,134
thinking process and our results, we asked

183
00:11:53,172 --> 00:11:56,766
them, where do you see problems now? It didn't

184
00:11:56,798 --> 00:12:00,180
meant that we implemented everything that came up right away,

185
00:12:00,550 --> 00:12:04,274
but it helped us to prioritize and help us segment R

186
00:12:04,312 --> 00:12:07,686
and D. For example, we knew some teams can be

187
00:12:07,708 --> 00:12:11,446
early adopters because they have some special use cases that is not

188
00:12:11,468 --> 00:12:15,206
yet covered. Besides that, they had become ambassador for

189
00:12:15,228 --> 00:12:18,534
the majority. We saw that in slack threads where

190
00:12:18,572 --> 00:12:22,602
someone was suddenly saying that the infragroup is working to solving that

191
00:12:22,656 --> 00:12:25,594
specific problem and please engage with them.

192
00:12:25,792 --> 00:12:29,354
And when it came to the actual adoption, they were able to

193
00:12:29,392 --> 00:12:33,102
explain it and build trust. With all the r D

194
00:12:33,236 --> 00:12:37,082
so far we were friendly. We tried to do a natural adoptions,

195
00:12:37,226 --> 00:12:40,190
but sometimes sticks must be pulled.

196
00:12:41,010 --> 00:12:43,786
Sticks can be as simple as a support deadline.

197
00:12:43,978 --> 00:12:47,490
In four or six weeks we will stop support the old version,

198
00:12:48,070 --> 00:12:51,710
but support deadline need to be realistic. If the organization

199
00:12:51,790 --> 00:12:55,042
is working in two weeks prints you probably need to put

200
00:12:55,096 --> 00:12:58,946
four or six or even 80 weeks in advance to give teams

201
00:12:58,978 --> 00:13:01,190
the times to add it to the next prints.

202
00:13:02,330 --> 00:13:06,406
The other stick that can be used is getting high level manager support

203
00:13:06,588 --> 00:13:10,010
so they will instruct teams to create time for the migration.

204
00:13:10,510 --> 00:13:13,862
Use high level manager support. You don't want to force

205
00:13:13,926 --> 00:13:17,066
every change across the organization. You want to be

206
00:13:17,088 --> 00:13:20,538
able to create natural adoption and have lightweight sticks

207
00:13:20,554 --> 00:13:24,506
like the support deadline. Sticks are not excuse

208
00:13:24,538 --> 00:13:27,806
for not doing anything else. Trust, good product,

209
00:13:27,908 --> 00:13:31,674
self serve migration all must be used before sticks

210
00:13:31,802 --> 00:13:35,502
and in fact if you do them it will be even easier to use those

211
00:13:35,556 --> 00:13:38,846
sticks and get high level manager support and people will

212
00:13:38,868 --> 00:13:42,910
be less frustrated when you introduce any forcing mechanism.

213
00:13:43,570 --> 00:13:46,962
So to summarize, we talked about the technology adoptions

214
00:13:47,026 --> 00:13:50,566
cycle and how to segment our R D organization the

215
00:13:50,588 --> 00:13:54,610
different approaches for each segment. We talked about migration

216
00:13:54,690 --> 00:13:58,662
difficulty and how it affects the majority. We talked about

217
00:13:58,716 --> 00:14:02,854
trust and how to establish it. And finally we talked about sticks and

218
00:14:02,892 --> 00:14:06,534
forcing change. For anything else please reach

219
00:14:06,572 --> 00:14:08,260
out on Twitter. Thank you.

