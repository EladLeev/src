{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/acacf805-d1e4-42f3-b415-324c29c6db8f", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["be", "being", "building", "buildings", "conffourtytwo", "energyvault", "iot", "lives", "operations", "permeating", "programmanager", "tadehhakopian", "twins"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "id": "05f82102-9568-4258-a3c2-7d513a937edf", "status": "completed", "error": null, "text": "This is the next phase of IoT and information and visualization with digital twins. Let's get started a little bit about myself. I am Tati Hikopian, a program manager working with digital integration in the built environment. I've been a course author and speaker for topics like coding and building information modeling. So let's get started with what are digital twins? Simple explanation here is a digital twin is a digital representation of a physical object or system. For example, you might have a robot arm like this. You would see in many different factories as the physical object, and you might be able to copy it as a digital twin in a digital environment. Like in this example, where we see on the upper left inset a manipulating a robot arm in real time, and then this digital representation in the larger picture, showing the robot arm movements as it is displaced from the original position. This is a really good, straightforward example of what a digital twin does. It just replicates what's going on in real time in the physical environment. So the ingredients of digital twins is IoT, cloud, and data. The IoT is just a device that is able to be connected to the Internet at large. The cloud and network infrastructure behind it lets you send the data over and store it someplace. And then the data itself is the useful application we get out of twins, and they work in conjunction together. And let's talk about the use cases of digital twins in the world today. There's manufacturing, factory automation, and simulation. There's vehicles, tracking vehicles, sensors, healthcare devices for monitoring the human body, which includes something as simple as an Apple Watch or pippit that could track steps or your heart rate. And then there's structures and buildings to monitor your energy use, and equipment and buildings. Also useful things like trying to track the displacement of a bridge over time to make sure it's within tolerances. So what are the benefits of digital twins, and why do people use them with IoT devices? Well, it's real time. You can see what's happening with your physical assets without having to send someone out there to check it, or going through some very intensive process to figure out what's actually happening in the environment with the monitoring twenty four seven, you have always a picture at hand of what's going on with your physical assets. It also provides historical data on things like maintenance, operations, and metrics in one place. That way, if you want to know what's been happening for a day, a year, many years, it's at your disposal. You don't have to worry about trying to collect disparate sources of information to understand the history of your asset. You don't have to go through binders and paper logs to get information. It's digital, it's in one place, it's easy to sort through, and it's scalable from small to large projects, because the fundamentals don't really change that much, no matter how big you go. And you could predict outcomes based on historical data and the metrics you're tracking, which is very useful for things like maintenance and expansion of operations. And this all leads to shared benefits for owners of, say, a real estate portfolio. You can understand where your assets are, how they're performing, and how to improve operations for long term return on investments. Building managers and equipment managers can understand the activity of the equipment at hand. For example, if you manage a school as a facility manager, you can figure out with some IoT connected devices like agarometers, if there's some kind of leak in the lives. And instead of waiting until you have a flood in the hallways, you can get an alert, track it, and get ahead of the fix before there's any problems in school and equipment manufacturers. If your devices are already enabled and equipped with IoT devices on the edge, you could support operations remotely. If there's any kind of issues with the equipment that you sold to somebody, warranty, upkeep, downtime, you name it, you can get ahead of it by being able to tap into the IoT gateway. So with that in mind, there's a whole world of digital twins and visualization I'd like to get into, because it's being, as you could see by the prior examples applied in so many different fields in so many different ways. But of course, I want to start with something. Our favorite topic, data standards. And data standards are important. There are many different kind of standards. Depending on what kind of field of work you do. There's always more than a few, and usually try to do their best to make it a straightforward, reliable process. But usually get this kind of situation where people want to make like the master data standard or master standard, and you just end up with more standards. So that's more or less the kind of going on in data for IoT in general. For example, these are different industry bodies that will work on IoT for manufacturing, industry 4.0, manufacturing for certain types of devices, like Internet consortium. So there's a lot of organizing bodies around the world that will try to provide some kind of standardization. So it's not for a lack of standards, it's just for a lack of heuristics between the standards permeating what is the shared kind of intent and terminology, not necessarily a technical specification, because that really is sensitive to the field you work in, how a vehicle manufacturer and how somebody working in healthcare might have a very different perspective on the technical specifications. It's more important about the shared language of the ways you go about getting started and accomplishing tasks. What's great about that, though, is we now have this bucket called a digital twin consortium, which brings a lot of different standards, more than what you see here, and tries to harmonize the language and the general operations between them. I bring this up because if you ever wanted to really dive into digital twins, you do have to understand the flows of data. And with something like a consortium standard, which brings in common language, that becomes a lot more easy to communicate. For example, they'll provide you with the input, operational and output concept here, simple representation digital twin consortium puts together for how you would process reference data. So you don't have to go into the weeds of a given standard. You just agree that there's a process for taking whatever your x inputs are, going through a system and getting y outputs. This might seem simple and elementary, but I granted this myself. Where we take things for granted, we come from different places. I come from a construction and design background. Other people might be coming from a telecom background, other people might be coming from a cybersecurity background. And our terminology gets mixed. So we start early and often with the idea of how to communicate with each other. And even something as simple as a structured store of information, again, can be very opaque. If you don't specify that, it could be some kind of SQL database, GIS CAD being point clouds, IoT streams, and different log lives in history, you name it. Just be very clear and specific and you won't go wrong. Otherwise, all your data is in an excel database. Typically, I don't start conversations with data standards first and foremost, but this is something you want to clarify early and often is what are our standards? How do we communicate? Because again, up and down that chain of IoT and digital twins, there is a lot of communication, and not everybody's going to have the same point of view about what a different term or system that is viable will be. So just FYI, this is something that is very pertinent in this world. Okay, now we've got that out of the way. Let's talk about tech stacks and how you'd actually get anything done. And the fun part of IoT and digital twins is you have to convert a lot of things to a lot of other things, file formats, data stores, and there's a lot of interoperability going on here. So it's about as simple as this. Mixed it out to be. And we can simplify a little better with just this idea of how IoT components and connections come together. Starting with the red box here, the smart devices, whether that's streaming video, a device, vehicles, equipment, whatever it is, that's your starting point. That's the real world where all the data comes from. You have to find a way to make sure that somehow is connected to the Internet in whatever way, shape or form, whatever wavelength standard, Bluetooth, Wifi, you name it, whatever it is IoT needs to connect. Those are the starting points, which then goes to a gateway, Wifi or, excuse me, the IoT device on its own typically does not have a gateway. So you have to have a gateway, like a Wifi router or cable connection or some device nearby that can act as a hub to collect all the data and then set it to the Internet. This might seem like a no brainer, but sometimes your equipment is in some remote area and the bandwidth is not great or connections aren't there. So this is actually a bottleneck you have to work through. Depending where you are. Sometimes your equipment or devices are moving. Like I mentioned earlier, if you are asking people to use some kind of body monitoring device, depending on where they are and how frequent you want that data, you might have some latency issues. Then you want middleware, whether it's a server rack, a cloud host, some kind of database that can collect all this data and store it someplace and potentially perform operations on it as part of a network stack or platform stack. And then from there, you can finally use all that great information as your applications. You're basically the front facing way of using digital twins. This is what we usually think of digital twins as the application layer, but it goes all the way back to the hardware and the real world assets. Otherwise, your applications are not going to tell you anything very useful. So as long as you get this chain going well, you can't go wrong. The thing is, depending on what world you're working in, whether it's built, environment, medical, industrial space, it's all over the place. You can see here, from manufacturing to urban design to point clouds to surveying, there's so many different solutions out there. There's even three D engines you can use, like in a real unity to help you create digital twins. So the point I'm making here is it's a very diverse world of technology, and don't feel like there's going to be an out of the box solution. There isn't anything so far that I would really say you can rely on for the next couple of years, at least, maybe longer. You really do have to be sensitive to the different starting points of your data. The legacy software and the up and coming startups make it real. So be comfortable learning and getting used to different kinds of tools, because you could put it together yourself or use something like a data science tool to help you analyze the data. But this is just a smorgasbord of all different kinds of technologies, like Jupyter notebooks, power, Bi Kafka, you name it, that you can use for that as well. So good news is you probably do already have a bunch of tools that can be at your disposal for IoT, edge and neutral twins. The underwhelming news is you probably have to learn a bunch more, at least be appreciative of other data sources and operations to make this work. So keep it simple. Don't feel overwhelmed. I'm not trying to intimidate people and make them scared. Start with something simple lives. Sensors. What are the devices at your disposal? Are these hypothetical devices that have not been installed yet? They're not available. They're going to be built or deployed later. Are they real? Pencil that out. Make sure you know what that is. What is the actual sensors and devices, how they connect to the real world? What kind of digital representations do you have? Do you have actual 3d models, point clouds? Is it just charts and graphs? What do you have at your disposal and hosting solutions? This is actually becoming more and more an integral part of the digital twins environment, because even the big cloud hosts are permeating IoT and digital twins specific workflows. So if you can figure out these three buckets, you're already way ahead, because then it's just a matter of making a framework that's suitable for the solution, because again, it can come from any different angle. One example I like to throw out here is digital twins by Azure. I am just showing here as an example of a company and projects I've worked on have used Azure, so I thought IoT was a useful reference. And you can see here the digital twins that zero provides can be pretty diverse. It's able to draw from many different IoT devices, from vehicles to industrial equipment to manufacturing to signals. So this is an example of an actual product being released for a cloud platform to help you package all the data and operations of digital twins. And on top of that, they have an IoT hub. And this is how you would take the different IoT devices, event hubs, and just different data streams, go through an abstraction layer, and then get actual automations and functions out of them at the other end. I would say if you're trying to get things going at a more enterprise friendly level, this is the place to be. Otherwise you might be spending some time experimenting with different smaller technical solutions. And what's great about Azure is you can start small and scale up given the technology. But this is also true of AWS. They have basically their own version of this, and other cloud providers also have something like this, and IoT just lives you a sense of what you can do. This is Cosmos and IoT Azure. The reason I use this diagram actually is a great representation that I was showing you earlier of the different connections and hardware, the gateways, the data storage, and the presentation. This actually does spell it out. Where on the left here you have the IoT devices at your disposal. Like I said, streaming devices, vehicles go to the gateway hub and from there can connect to the different databases, and the automations provided for those databases give you the insights. And then from there, the actions, applications, interface. Individual twins. So this is more what's under the hood and how the framework applies for just one tech stack. Again, there's many variations of this, but it's a little more clear of how you would actually go about executing these kind of architectures and patterns. But it can get much more interesting. This is an example of using what they call an ontology model and the palantir foundry platform to get real time data out of flight patterns. So this is getting the weeds. It's not just abstracted. This is really what you can do with these kind of platforms to get understandings and insights of how complex systems work. So I would love to go into a whole talk about this, but this is really just kind of an overview to give you how it works, many different technologies and solutions of platforms and providers. But as long as you can figure out a way to get some kind of data set from the devices in the real world and represent them. In this case, it's just a chart, something fancy, just a chart streaming the data connections from point a to b to c to z, and then be able to host them and spread that information. You pretty much have a digital twin at that point. So talk real quick about hardware so you get a sense of what's under the hood. I'll keep this one pretty short and sweet. Let's say you have a built asset and you want to show off some cool charts of what's going on, I would recommend going with the view. There's lots of great information available if you just connect the devices with some kind of spatial recognition. I work a lot with buildings, industrial spaces, so something of a specialty topic. For example, just a given house or apartment has multiple digitally connected Internet connect devices, thermometers, security cameras, door cameras, your own phone. I actually have most of these things in my apartment right now. And most people can have basically everything they need for a setup to represent the different comfort levels and activity of their own home. So all you do is map it out. This is an important part of the process, mapping out what you got. If you don't know what you got, you can't use it. And usually a lot of the hardware we see is little chips on these devices. But it could be as simple as an Arduino board or something like an Arduino board. You can hook these up and make your own little custom IoT edge devices. And you could do something like this, slap it on the back of a wall or some equipment, nothing fancy, just make sure the wiring is good and you could already have something that can report the information. Good for temperature sensing, equipment diagnostics. I mentioned earlier about the plumbing of the school. There's a serious issue with a lot of buildings where they leak and they cause us a lot of damage in the hundreds of thousands of dollars. And they're starting to use hygrometers that are small and compact and retrofitting buildings with them. So if there is a water alert, a humidity alert, it can go to a central database. And it's as simple as something like this where you can quickly wire it up or use wireless methods of reporting it, so that with a modest investment, you can avoid serious cost overruns. So it doesn't have to be a huge, challenging project, but it can be. This is an example of the Dearborn vehicle production plant by Ford in michigan. They basically not only connected all their major mechanical equipment in the plant that runs the operations to IoT, to have their facility units check status, their equipment, so their really expensive capital expenditures aren't downtime, which stops the whole line of production, but they also mapped it out in 3D. So the next part here, we'll talk about the actual visualization of the digital twin environment. And what you want to do is make sure that what you have is useful to the end user. Not for yourself or specialist, but just an end user that would be able to interact with it and not disappoint them. You don't want to give them a blue screen of death or some kind of glitch that would prevent the access. Remember, we talked about all these examples of the hardware, the technology stacks, and even the standardization issues. You want to keep these pretty straightforward and effective and not over constraint what you're doing. Otherwise you might have some glitches. But we'll talk about the visualizations look like, and typically the categories that fall into IoT is a 3d model, some geometric representation. Charts, charts are great, different kinds of charts showing you bar graphs, if that's something that's very useful for diagnostic information, VRA for immersion, so that you can really clearly see what's going on in a given space. And even simple maps and floor plans are very useful for the average person, which can be done in multiple ways. Two D at three d projection. So talk about 3d models. Here's an example that came from the company Autodesk, and they're showing how you can go through different time of the day. This is just a time series data explaining temperature and lighting in a building. You can see on the right there the numbers changing from different rooms and different settings they have in each room. What's great about 3d models is they're very intuitive. People like models. They like straightforward models. They can represent a space and orient them very quickly and tell them something useful very quickly. In this case, you're pairing up a model with some sensors or giving you room information, and you could take a little further and even make an interactive 3d model. People love playing with interactive 3D Models. They love going around and looking. And in this case, we're seeing very nuanced data of the environmental settings in heat maps from room to room. That way people understand it's not just one size fits all reading, but there is a little bit of variation in the kind of information they're reading. And again, time series data, hourly reporting in this case. So what's really good about this day and age is most building projects, and most projects in general, even for equipment, they have 3d models. So it's not like you have to go and build a new one necessarily. You just maybe find one for an engineer or architect and repurpose it. This will make the client happy, because they might already have this asset. And if you don't have an actual 3d model, you can use point clouds, you can use a scanner system. Matterport has something like this. You can even start doing some basic things with your phones. So 3d models are a great way to show up an area space that requires area spatial data. But you can go a little deeper and talk about virtual reality. In this example, there is a training going on for industrial equipment using digital twins. What's useful about this, what's really beneficial, is you can do remote training and get a really good sense of how equipment works. It's an example of industrial IoT being used to help workers understand the equipment they're using without having to necessarily send them all into the same factory floor. This is a much more efficient use of time. If you're just trying to get them used to the ins and outs of something, then we talk about plans. In this case, this plan here is just a floor plan of office, and you can talk about occupancy, utilization, temperature, equipment, adjacency. This is really useful for just the average office monitor, average office manager in the average office building. This could be for schools, medical facilities, you name it. People just want to understand what's going on their space. If you ever been in a situation where you wonder why one corner of a building is so cold, this is a great way to figure out what's the highs and lows of the temperature. So this is nothing fancy, nothing hard to do, but it's a great way of visualizing very quickly to somebody what's happening in their environment and help them manage work environments. But beyond that, you can also start cataloging things. In this example, the visualization just showing you clusters of similar types of equipment. This is from a hospital in the middle, you can see those blue gurneys. Hospitals have lots of gurneys, but they need to know where they are so they can have them available for the patients. And in a given facility where you have to make sure your equipment is in good order, inventory, maintenance, and expansions and replacements are known. This is a great way to figure out what is in your model, or, excuse me, what is in your inventory and project and your building. And it's actually a serious problem for many, many different industries, because they kind of know, they may have an idea, but it's a very human thing. So if Gus in facility management is unavailable that day, you may not have no idea where anything is. But if you have a database like this that represents everything very quickly, and it's been tagged and verified in the field, you don't have to worry about that. You can leave Gus alone and you can really quickly pull up all the different assets and the serial numbers and the product data sheets. Last but IoT least, game engines. This is an example of a data flow on the left side. All these different 3d file formats, which there are a lot. Going back to the whole digital twin consortium of putting the data together is actually more challenging. They think in this case they're bringing in different 3d data assets with different kind of meshes and parametric components into a layer called datasmith that then goes into unreal, but it can then be hosted through API connections on your cloud of choice. In that case, in this example of an industrial facility, you might get lots of different engineering model formats from lots of different providers, and they may not be playing nice with each other, they may not be mutually compatible, I've been there. But if you bring it into a game engine which handles that kind of exchange, you can quickly put the industrial and building and gis and topography together, and then provide the insights from the sensors as well from the cloud hosts. And before you know it, you have a whole dashboard explaining a very sophisticated large industrial facility like this to clients and operations who want to know what's going on in their spaces, which is actually a serious problem. You'd be surprised how often it's not clear on a given day how much energy a facility uses or how much of the facility is operational, how much of it is vacant. It really depends on the facility. So this is a great way to make it easy for somebody at the top level of c suite or a customer to understand what's going on. And this is a little more customized but totally doable for most built environments and their equipment. And last but not least, the urban scale. This is Helsinki, Finland. They used a layer called city GML as an information model to help organize their city assets into a base layer for them to then host different other objects, like the building information point clouds, operational data. This is going to help the city understand what's going on in the city, the flows of people, the kinds of places where activities at help will understand and better service the city in different utility expansions in need of road work you need because again, it's usually just done manually based on feedback from people, but you could literally just make it an urban level digital twin, just like twins. In a sense, Google Maps, with their 3d immersion view is a type of digital twin, but there's no real time reporting besides traffic. So you could take this further and using the kind of architecture you see on left there, make your own digital twin. Keep scaling it to a regional level, including topography, satellite data and hydrology, which is what they're trying to account for here. So the scale is pretty much the sky is the limit. And from here we'll talk about planning if this got your attention, what would IoT take to plan for digital twins? Well, the cornerstone here is owners, because owners do have to pay for all this. Usually, whoever's managing the end product, whether it's device or facility, they're the ones paying for it. So you have to get their ear and you have to build a business case of what is in the proposal. What are you trying to actually, an RFP, a request for proposal. What is it they're trying to get across? Potentially do a pilot program, because this might be capital intensive or long term. So maybe you do have to get their approval to work. Everybody's happy with the proof of concept. Describe the ROA based on the pilot and the RFP to make sure everybody's happy, including the accountants, and look for opportunities to roll these out, because they may not happen all the time. They may be happening one offs, but once they are, there may get upkeep and pro tip. You want to be on the leading edge of the adoption curve. Even if things aren't perfect, this environment around IoT digital twins and the visualization constantly changes. So the sooner you get started, the easier it is to change. Because if you go on the laggard edge, not the leading edge of the laggard edge, you'll be in a rush to try to catch up with the business need and use cases of digital twins, and then you'll end up with a Klude. And I worked on many of Kluge, and you don't want to be there. And your project team just needs to be set up so that you assess, plan, document, train, create a common data environment type of digital twin, an early release, a cloud hosting solution, analyze the data, study the trends of that data, create, update for your operations that are relevant from the data, and then repeat. It's a cycle. And yes, there are many handoffs, and yes, there are many steps that yes, you do have to be aware of them, because it's not one guy, it's not one app, it's many apps, many people, some who are not technically savvy, but are very knowledgeable, and you just have to be mindful of the human lives of exchange here. So to get started, I have a couple of easy steps to help you. It's not as complicated as we have here on this chart. Know what you want, what do you want to do? What do you care about? What is it you want to get tracked in digital twins? Any simple thing. What are the opportunities to apply that we talked about? Pilot project, perhaps maybe a simple test. It doesn't have to be anything fancy, just look for opportunities to apply it, plan it out, chart the critical path and what it takes to get there and adjust as you go. It's a very much touch and go operation in many cases, until you get the final result and then you can dial them in. So don't be afraid to modify Iot as you proceed. Achieve you want building performance? Well, you need lots of sensors and analytics. You want user feedback. Will you need a human facing element to get some kind of survey data or some kind of human appreciation out? If that's what your concern is. If you want people to make sure they're happy with it. If it's not simply a machine spitting out data, you need to make sure humans are giving you some kind of useful feedback and automation if you want to just automate the whole thing. If it's already a solved problem on the performance and evaluation, then maybe you need better technology automation to get the data fast, because sometimes you have to report thousands of operations a second in industrial equipment to make sure that the data there is useful for maintenance operations. Bringing Iot all together. So from the beginning end, create connections to the physical environment, get live updates from the environment and make sure that reliable have a place to store the data that is nice and secure. Analyze the data for notifications and usage. Upgrade your equipment and digital assets over time. Repeat forever. Because just like the real world that we live in, nothing stays in one place for too long. Everything changes. The work keeps going, the ride never ends. Twins is quite the adventure I've been on over the years from some very static kinds of data that rarely gets updated to super frequent data updates and all the different changes in the digital environment over the years. So it is quite a fun place to be. You never get bored. There's always something you can work on, so just appreciate that you can't go wrong. Takeaways digital twins are virtual representation of physical assets. They are not in and of themselves an operation independent of the physical world. They all exist in a schema of connected devices. It's not one stream or one flow, but very much a schema of different devices communicating with each other to a digital environment. Use common ground for planning with standardizing bodies and terminology to avoid confusion. There are many modes of visualization for digital twins. Pick one that suits what you're trying to achieve. Experiment a little bit. Create a business plan of roadmaps, because these can take a while and they can have many twists and turns. So make sure you chart out a course that can last for at least a few months, if not a year or two. Find opportunities to use digital twins. Sometimes they're kind of handed to you, outlined to you by other people. Sometimes you can get clever and create different ways to help people understand the assets and environments they're trying to evaluate. Here's some additional resources reading about digital twins, standards, enterprises, productivity, you name it. There's lots of material out here. That's a good starting point for you all. That's it. Wrapping it up. Thanks so much for joining me in my talk today. I hope you had as much fun listening as I had talking about it. If there's any questions or any outreach, please reach out to me, Tadehhakopian, LinkedIn, GitHub, anywhere. I'm search engine optimized, so you can't go wrong with those letters in that combination. And thank you all again for attending my talk.", "words": [], "utterances": null, "confidence": 0.951293928571423, "audio_duration": 1948.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- This is the next phase of IoT and information and visualization with digital twins. A digital twin is a digital representation of a physical object or system. The ingredients of digital twins is IoT, cloud, and data. Why do people use them with IoT devices?\n- There's a whole world of digital twins and visualization I'd like to get into. Data standards are important. It's more important about the shared language of the ways you go about getting started and accomplishing tasks. A digital twin consortium brings a lot of different standards.\n- IoT and digital twins means converting a lot of things to other things. From manufacturing to urban design to point clouds to surveying, there's so many different solutions out there. Keep it simple. Don't feel overwhelmed.\n- A given house or apartment has multiple digitally connected Internet connect devices, thermometers, security cameras, door cameras. You can hook these up and make your own custom IoT edge devices. With a modest investment, you can avoid serious cost overruns.\n- Next part here, we'll talk about the actual visualization of the digital twin environment. What you want to do is make sure that what you have is useful to the end user. You want to keep these pretty straightforward and effective.\n- 3d models are a great way to show up an area space that requires area spatial data. In this example, there is a training going on for industrial equipment using digital twins. These models can be used to help workers understand the equipment they're using.\n- The sooner you get started, the easier it is to change. You want to be on the leading edge of the adoption curve. The environment around IoT digital twins and the visualization constantly changes. There are many steps that you do have to be aware of.\n- Thanks so much for joining me in my talk today. If there's any questions or any outreach, please reach out to me, Tadehhakopian, LinkedIn, GitHub, anywhere. And thank you all again for attending my talk.", "auto_highlights_result": {"status": "success", "results": [{"count": 1, "rank": 0.08, "text": "many different IoT devices", "timestamps": [{"start": 812788, "end": 814350}]}, {"count": 1, "rank": 0.07, "text": "many different kind", "timestamps": [{"start": 305008, "end": 305638}]}, {"count": 1, "rank": 0.07, "text": "IoT digital twins", "timestamps": [{"start": 1658020, "end": 1659066}]}, {"count": 3, "rank": 0.07, "text": "different kinds", "timestamps": [{"start": 701472, "end": 703114}, {"start": 712788, "end": 713306}, {"start": 1168296, "end": 1168718}]}, {"count": 1, "rank": 0.07, "text": "different devices", "timestamps": [{"start": 1872616, "end": 1873342}]}, {"count": 26, "rank": 0.07, "text": "digital twins", "timestamps": [{"start": 26748, "end": 27522}, {"start": 46572, "end": 47590}, {"start": 95296, "end": 96182}, {"start": 123176, "end": 124078}, {"start": 155828, "end": 156394}, {"start": 290396, "end": 291106}, {"start": 399568, "end": 400358}, {"start": 501024, "end": 501654}, {"start": 523464, "end": 524094}, {"start": 634556, "end": 635282}, {"start": 636572, "end": 637026}, {"start": 670552, "end": 671406}, {"start": 771544, "end": 772222}, {"start": 778072, "end": 778794}, {"start": 794816, "end": 795414}, {"start": 806948, "end": 807466}, {"start": 826764, "end": 827858}, {"start": 1296816, "end": 1297930}, {"start": 1598368, "end": 1599370}, {"start": 1658426, "end": 1659066}, {"start": 1675224, "end": 1676078}, {"start": 1730748, "end": 1731490}, {"start": 1857490, "end": 1858266}, {"start": 1882988, "end": 1883570}, {"start": 1899408, "end": 1900150}, {"start": 1914772, "end": 1915866}]}, {"count": 1, "rank": 0.06, "text": "many different technologies", "timestamps": [{"start": 950224, "end": 951894}]}, {"count": 2, "rank": 0.06, "text": "different ways", "timestamps": [{"start": 297488, "end": 298154}, {"start": 1906308, "end": 1906942}]}, {"count": 1, "rank": 0.06, "text": "many different factories", "timestamps": [{"start": 58868, "end": 59770}]}, {"count": 1, "rank": 0.06, "text": "different time", "timestamps": [{"start": 1194704, "end": 1195578}]}, {"count": 1, "rank": 0.06, "text": "different standards", "timestamps": [{"start": 389708, "end": 390306}]}, {"count": 1, "rank": 0.06, "text": "real time data", "timestamps": [{"start": 926648, "end": 927442}]}, {"count": 1, "rank": 0.06, "text": "digital assets", "timestamps": [{"start": 1814660, "end": 1815374}]}, {"count": 3, "rank": 0.06, "text": "data standards", "timestamps": [{"start": 300742, "end": 301930}, {"start": 302672, "end": 303318}, {"start": 489212, "end": 490002}]}, {"count": 1, "rank": 0.06, "text": "different 3d data assets", "timestamps": [{"start": 1445248, "end": 1446374}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}