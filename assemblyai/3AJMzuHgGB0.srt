1
00:00:38,850 --> 00:00:42,454
Hi there. Welcome to my session. It's good to see you.

2
00:00:42,652 --> 00:00:45,814
Well, actually, I don't see you, but it's good that you're watching this.

3
00:00:45,852 --> 00:00:49,270
And I'm excited that you are, because it shows me that you care

4
00:00:49,340 --> 00:00:53,386
about more than just making software. But youre

5
00:00:53,418 --> 00:00:56,414
also interested in the delivery part,

6
00:00:56,532 --> 00:01:00,122
which is, if you ask me, very crucial. My name is Abel Ferhover.

7
00:01:00,186 --> 00:01:04,814
I'm a quality and test automation engineer, and I work for a company called Testcoders.

8
00:01:04,942 --> 00:01:08,642
Now, the reason I became a consultant is so that I got

9
00:01:08,696 --> 00:01:12,190
to work with many different clients,

10
00:01:12,270 --> 00:01:15,960
many different companies and groups and teams and people.

11
00:01:16,490 --> 00:01:21,222
And the funny thing is that I did not know before is

12
00:01:21,276 --> 00:01:24,770
that all these different groups, all these different teams,

13
00:01:24,850 --> 00:01:28,134
they're all struggling with this very same issues,

14
00:01:28,332 --> 00:01:31,722
which almost reminds me of parenting. Now,

15
00:01:31,776 --> 00:01:35,194
I don't know if you have any kids. I do. I've got two kids.

16
00:01:35,312 --> 00:01:38,986
And only yesterday I was grocery shopping with my

17
00:01:39,008 --> 00:01:42,486
son, and at some point he decides he's

18
00:01:42,518 --> 00:01:45,578
had enough and he does not want to walk any further.

19
00:01:45,754 --> 00:01:49,486
So luckily we were almost done. So I had to pick him

20
00:01:49,508 --> 00:01:52,686
up, put him under my right arm, and in my

21
00:01:52,708 --> 00:01:56,706
left arm I had a heavy grocery bag. So we were

22
00:01:56,728 --> 00:02:00,034
walking to the car, back to the car, and there were two women.

23
00:02:00,152 --> 00:02:03,486
They were sort of laughing at me. And once I walked

24
00:02:03,518 --> 00:02:07,030
past them, they said, well, it's the same everywhere.

25
00:02:07,530 --> 00:02:10,822
They were clearly recognizing some of my

26
00:02:10,876 --> 00:02:13,606
strategies that they probably experienced themselves.

27
00:02:13,788 --> 00:02:17,506
And it's the same in our world of software development

28
00:02:17,538 --> 00:02:21,546
and software engineering, we have the same problems and have

29
00:02:21,568 --> 00:02:24,822
to deal with the same issues and the same pitfalls.

30
00:02:24,966 --> 00:02:28,346
And that's what this session is all about. Now, before we

31
00:02:28,368 --> 00:02:32,038
get started, I'd like to do a show of hands, but this is

32
00:02:32,064 --> 00:02:35,406
a virtual conference, so I can't do that.

33
00:02:35,428 --> 00:02:39,006
But I will run a few scenarios, a few statements by you

34
00:02:39,028 --> 00:02:42,334
anyway, because I think you will recognize a few

35
00:02:42,372 --> 00:02:46,354
of them. All right, so let's see. Here we go. Let me

36
00:02:46,392 --> 00:02:48,420
move over to a different view.

37
00:02:49,110 --> 00:02:53,250
Right. Do you recognize this situation specifically?

38
00:02:53,670 --> 00:02:57,318
Have you ever had a dedicated sprint to work

39
00:02:57,484 --> 00:03:00,770
on bugs or technical debts Specifically?

40
00:03:00,930 --> 00:03:04,662
And be honest, I know that I have another

41
00:03:04,716 --> 00:03:08,122
one. Do you often find items on your product

42
00:03:08,176 --> 00:03:12,140
backlog that date back more than twelve months ago?

43
00:03:13,790 --> 00:03:17,802
Oh, yeah. This is a classic one. What you actually see here is

44
00:03:17,856 --> 00:03:21,306
a sprint board, a sprint

45
00:03:21,338 --> 00:03:25,498
backlog where you'll find a lot of items

46
00:03:25,674 --> 00:03:29,226
sitting and waiting in the testing column.

47
00:03:29,338 --> 00:03:32,634
So there's a lot of work to be done in that area.

48
00:03:32,772 --> 00:03:36,462
This is what we call a bottleneck. So do you recognize

49
00:03:36,606 --> 00:03:39,940
a bottleneck in your sprint board?

50
00:03:40,550 --> 00:03:43,982
Another great one. Yeah. Canceled retrospectives

51
00:03:44,046 --> 00:03:47,286
to finish the almost done work. So instead of

52
00:03:47,308 --> 00:03:51,142
doing a valuable retrospective session, we finish that

53
00:03:51,196 --> 00:03:54,966
item that was almost done so that we don't have to bring it

54
00:03:54,988 --> 00:03:59,126
on into sprint planning for the next sprint. Have you

55
00:03:59,148 --> 00:04:02,490
ever done that? This is a classic one.

56
00:04:02,640 --> 00:04:05,530
Product owners who do testing.

57
00:04:06,110 --> 00:04:09,498
Now, these are actual things I've seen out there,

58
00:04:09,584 --> 00:04:13,310
things that I've actually been a part of as well, to be honest.

59
00:04:13,460 --> 00:04:16,986
And to me, all of these situations are typical examples

60
00:04:17,018 --> 00:04:20,442
of signals and symptoms and characteristics,

61
00:04:20,586 --> 00:04:24,990
if you will, of teams that are not performing well, teams typically,

62
00:04:25,150 --> 00:04:28,770
that are complaining, for example, about the amount

63
00:04:28,840 --> 00:04:33,026
of unaccounted work that comes up during a sprint in

64
00:04:33,048 --> 00:04:36,374
the form of bugs or technical debt or whatever. And these

65
00:04:36,412 --> 00:04:40,054
are also the teams that struggle with pressure from their

66
00:04:40,092 --> 00:04:44,440
business to deliver more stuff that they can't in time.

67
00:04:44,970 --> 00:04:48,022
Teams that typically finish less

68
00:04:48,076 --> 00:04:51,626
than 90% of what they originally planned for. Now,

69
00:04:51,648 --> 00:04:54,780
if youre recognized a few of these scenarios yourself,

70
00:04:55,230 --> 00:04:58,726
don't be alarmed. It's not that you are part of a team that's

71
00:04:58,758 --> 00:05:02,410
not doing well. It's just that there are some opportunities

72
00:05:02,570 --> 00:05:06,334
for you to improve. These opportunities to

73
00:05:06,372 --> 00:05:09,998
improve typically revolve around three major

74
00:05:10,164 --> 00:05:13,794
areas, so to speak. And the first one is

75
00:05:13,992 --> 00:05:16,430
bugs, dealing with bugs,

76
00:05:16,590 --> 00:05:20,434
preventing bugs, all that stuff. The second one is

77
00:05:20,632 --> 00:05:24,034
legacy. There's quite a lot of legacy out there.

78
00:05:24,152 --> 00:05:27,794
I think everyone deals with legacy on a daily basis, so therefore,

79
00:05:27,842 --> 00:05:31,574
it's important that you have a way of dealing that. And the third

80
00:05:31,612 --> 00:05:34,070
one is technical depth.

81
00:05:34,570 --> 00:05:38,246
Many, many teams do not have a way of working that involves the

82
00:05:38,268 --> 00:05:41,526
definition of technical depth and how they should deal with technical debt.

83
00:05:41,558 --> 00:05:45,306
There's no strategy, there's no clear vision. So first of all, I'd like

84
00:05:45,328 --> 00:05:49,690
to align on the definition of these three areas

85
00:05:50,510 --> 00:05:54,240
so that we're speaking the same language. I think that makes sense.

86
00:05:54,770 --> 00:05:57,930
Let me move over. Let's start with bugs.

87
00:05:58,010 --> 00:06:01,294
All right. So to me, a bug is very clear.

88
00:06:01,412 --> 00:06:05,122
Let there be no mistake. It is something

89
00:06:05,176 --> 00:06:08,498
that we have delivered and that worked before.

90
00:06:08,664 --> 00:06:12,638
It's been tested, it's been through the whole software development lifecycle,

91
00:06:12,814 --> 00:06:16,870
and now it's not working anymore.

92
00:06:17,450 --> 00:06:19,880
So that's very straightforward. All right.

93
00:06:20,330 --> 00:06:23,750
Now, the second one, the second area was legacy,

94
00:06:24,490 --> 00:06:27,846
and that's a bit more difficult, a bit

95
00:06:27,868 --> 00:06:31,354
more tricky. There's no clear definition, but I think

96
00:06:31,392 --> 00:06:34,586
there are a few signals you can spot, if you will,

97
00:06:34,688 --> 00:06:38,042
that point to a legacy system. And the first one is

98
00:06:38,096 --> 00:06:42,074
that the system outdates the current tech

99
00:06:42,112 --> 00:06:46,058
stack or team, if you will. So there's no one around anymore

100
00:06:46,154 --> 00:06:49,706
who knows how to deal with the system, who has developed the system, has actively

101
00:06:49,738 --> 00:06:53,826
worked on it, or it's from a

102
00:06:53,848 --> 00:06:58,018
technical framework built in a technical framework or with a technology that

103
00:06:58,104 --> 00:07:00,610
you are not no longer using anymore.

104
00:07:00,950 --> 00:07:04,814
Another characteristic or symptom

105
00:07:04,862 --> 00:07:08,070
of legacy is when youre

106
00:07:08,140 --> 00:07:11,446
see around you or you feel it yourself, that people are afraid of

107
00:07:11,468 --> 00:07:15,830
touching a system. It's so delicate, it's so fragile.

108
00:07:19,770 --> 00:07:23,958
You might even be afraid of cloning a certain repository on youre local machine.

109
00:07:24,054 --> 00:07:27,654
Just because you're afraid you accidentally make a commit,

110
00:07:27,702 --> 00:07:30,606
merge the whole thing, and then break the system,

111
00:07:30,788 --> 00:07:34,334
which is not going to happen, of course, but you get what I'm saying.

112
00:07:34,532 --> 00:07:39,022
And another one is that if

113
00:07:39,076 --> 00:07:42,458
there is no or zero testing

114
00:07:42,554 --> 00:07:45,858
for this project available, so, like, let's say there are only a couple of

115
00:07:45,864 --> 00:07:49,522
unit tests. For example, I'm not talking about things as

116
00:07:49,576 --> 00:07:53,506
test coverage or code coverage here, like when

117
00:07:53,528 --> 00:07:56,830
you would have an 80% coverage and you say,

118
00:07:56,840 --> 00:08:00,098
oh, it's a legacy system, because there's 20% uncovered,

119
00:08:00,194 --> 00:08:03,730
or that 20% is now considered legacy.

120
00:08:03,890 --> 00:08:07,126
Now, not like that. It's a bit more pragmatic, if you will.

121
00:08:07,308 --> 00:08:10,666
But if there is no testing, there's no way

122
00:08:10,688 --> 00:08:14,058
of learning what the system is supposed to do.

123
00:08:14,144 --> 00:08:17,866
And I think that's the whole thing with legacy. You need to want

124
00:08:17,888 --> 00:08:22,106
to learn what the system does because you are unfamiliar with it. And tests

125
00:08:22,138 --> 00:08:25,966
are a very good way to do that. All right, so the

126
00:08:25,988 --> 00:08:29,402
next item was technical debt.

127
00:08:29,546 --> 00:08:32,914
And that's the one we'll be going into. A little bit

128
00:08:33,032 --> 00:08:36,498
more into debt. Technical debt can

129
00:08:36,504 --> 00:08:39,570
be split up into four categories, hence the quadrant.

130
00:08:39,910 --> 00:08:44,094
And on one hand, we have prudent

131
00:08:44,142 --> 00:08:47,326
actions, careful actions, careful decisions, and on the other hand,

132
00:08:47,368 --> 00:08:52,150
we have reckless decisions. Then on the other axis, we've got deliberate

133
00:08:52,810 --> 00:08:56,818
choices, deliberate decisions, and we've got the accidental

134
00:08:56,914 --> 00:09:00,570
decisions, like not knowingly.

135
00:09:00,910 --> 00:09:05,370
So let's go over all four of these categories.

136
00:09:05,710 --> 00:09:09,386
So this green block simulates the

137
00:09:09,408 --> 00:09:12,834
best form of technical debt, the non harmful,

138
00:09:12,902 --> 00:09:15,870
let's say. And that is when you say,

139
00:09:15,940 --> 00:09:19,758
okay, I know that I'm taking on technical debt. In this case,

140
00:09:19,924 --> 00:09:23,390
it's a deliberate action, and I will deal with it later. I know

141
00:09:23,460 --> 00:09:27,170
that I have to deal with this later, otherwise it's not going to go away

142
00:09:27,320 --> 00:09:30,546
and it will slow me down. Then there's the reckless form of

143
00:09:30,568 --> 00:09:34,626
this, the reckless thing where we say,

144
00:09:34,728 --> 00:09:38,166
well, we don't have the time to do it right now, so we take on

145
00:09:38,188 --> 00:09:40,982
the technical debt and we'll see what happens after that.

146
00:09:41,116 --> 00:09:44,902
There's no plan for paying back that debt. There's no plan

147
00:09:44,956 --> 00:09:48,694
for fixing it. Then we have the other one where it's an

148
00:09:48,732 --> 00:09:52,634
accidental decision. We did not know it. But we have a

149
00:09:52,752 --> 00:09:55,914
careful mindset. We take a careful mindset here. So at some point

150
00:09:55,952 --> 00:09:59,386
we figure out, or it comes to our attention that we have taken on

151
00:09:59,408 --> 00:10:03,146
technical debt, and at that point we say, oh, wait, hold on, we should

152
00:10:03,168 --> 00:10:06,526
have done it better. We shouldn't have done it differently, and we're going to do

153
00:10:06,548 --> 00:10:09,870
it that way from now on. And then there's the final

154
00:10:09,940 --> 00:10:12,922
one, the one that you should definitely avoid.

155
00:10:13,066 --> 00:10:17,154
That is when you did not know that youre did make a mistake or

156
00:10:17,192 --> 00:10:21,426
you took on technical debt. And at some point you do know and you still

157
00:10:21,528 --> 00:10:24,626
ignore it, right? Someone points out we have

158
00:10:24,648 --> 00:10:27,938
taken on technical debt and you say, oh, well, we don't care. We don't know

159
00:10:27,944 --> 00:10:30,630
how to do it. We don't know how to fix it. Let's not do it.

160
00:10:30,780 --> 00:10:34,306
That's the horrible one. Make sure you're not in that last category.

161
00:10:34,418 --> 00:10:38,266
All right, so let's have a look at an

162
00:10:38,288 --> 00:10:41,866
example for that. So let's look at a very simple

163
00:10:41,968 --> 00:10:45,238
example of technical debt in a mathematical

164
00:10:45,334 --> 00:10:48,954
form. Let's say for argument's sake, I want

165
00:10:48,992 --> 00:10:52,074
to take a trip. I love holidays. I love taking

166
00:10:52,192 --> 00:10:55,518
holidays and going on trips. And this trip that I

167
00:10:55,524 --> 00:10:58,218
have in mind is going to cost me €6000.

168
00:10:58,314 --> 00:11:01,854
It's good for my health, it's good for my family, it's good for

169
00:11:02,052 --> 00:11:05,794
everything, basically. And it's a must have. It's very

170
00:11:05,832 --> 00:11:09,698
important to me and it will solve a lot of issues and everyone's going

171
00:11:09,704 --> 00:11:12,420
to be really happy after this trip, however,

172
00:11:13,270 --> 00:11:17,202
I have only managed to save up €2400,

173
00:11:17,346 --> 00:11:20,360
200 a month. Right? That's what I can save.

174
00:11:20,730 --> 00:11:24,246
So I'm short quite a lot, actually. Now I

175
00:11:24,268 --> 00:11:28,290
can take on this 3600 as a debt.

176
00:11:28,450 --> 00:11:31,994
I can do that. Which makes me

177
00:11:32,112 --> 00:11:35,194
having to pay this. Let's for argument's sake, say that I have to pay this

178
00:11:35,232 --> 00:11:38,806
back in one year. And on the previous slide,

179
00:11:38,838 --> 00:11:42,670
we just learned I can only save 2400

180
00:11:42,740 --> 00:11:45,680
a year, in other words, 200 a month.

181
00:11:46,210 --> 00:11:49,870
So I would be short another 1200

182
00:11:49,940 --> 00:11:53,474
after one year. And that doesn't even go to savings. That goes

183
00:11:53,512 --> 00:11:56,050
to paying back the debt.

184
00:11:56,870 --> 00:11:59,778
How do I get an extra hundred a month?

185
00:11:59,864 --> 00:12:03,874
That's the question. So here I've sketched our

186
00:12:03,992 --> 00:12:07,478
monthly spending pattern, if you

187
00:12:07,484 --> 00:12:11,042
will. So we pay something like mortgage

188
00:12:11,106 --> 00:12:15,110
or rent. We have insurances. We have utilities like

189
00:12:15,180 --> 00:12:18,502
Wifi and also water and power,

190
00:12:18,636 --> 00:12:22,186
but most of all wifi. Of course we have a car that

191
00:12:22,208 --> 00:12:25,706
we need to drive around and we need to eat and of

192
00:12:25,728 --> 00:12:29,146
course we have that 200 on savings. So we

193
00:12:29,168 --> 00:12:32,986
need an extra hundred. And the bank is going to come every month going

194
00:12:33,008 --> 00:12:36,318
to charge that other account on. Where is that money going to

195
00:12:36,324 --> 00:12:40,014
come from? Where is that hundred going to come from? That's the big

196
00:12:40,052 --> 00:12:42,510
question. Are you going to pay less rent?

197
00:12:42,870 --> 00:12:46,420
Don't think your landlord would like that. Are you going to

198
00:12:46,870 --> 00:12:50,050
stop some insurances? Sounds very,

199
00:12:50,120 --> 00:12:53,314
very risky. Pay less for utilities. No,

200
00:12:53,352 --> 00:12:56,718
go, stop driving the car. Could be,

201
00:12:56,824 --> 00:13:00,840
but that way we can't drive to work, eat less food.

202
00:13:01,370 --> 00:13:04,006
Maybe we can find something there.

203
00:13:04,188 --> 00:13:08,746
But that's the whole idea. That's what we're doing right now. We're planning to

204
00:13:08,768 --> 00:13:12,294
come up with the extra hundred. This is the planning phase.

205
00:13:12,342 --> 00:13:16,618
If you do not do this, you will slow down.

206
00:13:16,784 --> 00:13:21,326
You will be forced into changing your

207
00:13:21,348 --> 00:13:24,586
spending pattern in this case, or the effects

208
00:13:24,618 --> 00:13:27,854
will be that you won't be

209
00:13:27,892 --> 00:13:31,790
able to deliver as much stuff because

210
00:13:31,860 --> 00:13:35,494
you have to deal with the implications of that debt

211
00:13:35,562 --> 00:13:39,026
that you did not pay. For example, there could be more bugs on

212
00:13:39,048 --> 00:13:42,590
your backlog because you didn't pay back your technical debt

213
00:13:42,670 --> 00:13:45,926
and now you have got a temporary dirty fix

214
00:13:46,028 --> 00:13:49,366
still out there in production and you have to deal with

215
00:13:49,388 --> 00:13:52,200
the consequences. So please, oh please,

216
00:13:52,970 --> 00:13:56,630
just pay back your debt. Do not plan

217
00:13:56,780 --> 00:14:00,658
to be clever or add more resources. Pay back the

218
00:14:00,684 --> 00:14:04,426
debt. Accept the pain. Because yes, it hurts a

219
00:14:04,448 --> 00:14:08,250
little at first, but you should spend time

220
00:14:08,400 --> 00:14:11,870
every sprint to pay back technical debt,

221
00:14:12,770 --> 00:14:16,510
even if your technical debt is minimal every day. I'm sorry,

222
00:14:16,580 --> 00:14:20,526
every sprint, you put technical debt on the top

223
00:14:20,628 --> 00:14:24,002
of your backlog. That's it. You put

224
00:14:24,056 --> 00:14:27,678
technical debt on the top of your backlog every sprint,

225
00:14:27,774 --> 00:14:31,234
and you finish it first. 1st thing when a new

226
00:14:31,272 --> 00:14:34,754
sprint starts, you work on that. Simple as that.

227
00:14:34,952 --> 00:14:38,834
If you fail to do that, if you just ignore your technical

228
00:14:38,882 --> 00:14:42,306
debt, it'll become a vicious cycle and it'll

229
00:14:42,338 --> 00:14:45,640
drag you down. And I want to sketch a

230
00:14:46,010 --> 00:14:49,882
simple example of that from the field of test automation because

231
00:14:49,936 --> 00:14:53,500
that's where I'm specialized at. So what I've seen a lot

232
00:14:53,870 --> 00:14:57,638
in continuous deployments and continuous delivery pipelines

233
00:14:57,734 --> 00:15:01,494
is when there is like failing tests at a late

234
00:15:01,542 --> 00:15:05,482
stage, there's perhaps an end to end test or something that is flaky

235
00:15:05,546 --> 00:15:09,134
or it gives back a false positive because some

236
00:15:09,172 --> 00:15:12,606
technical reason it is failing and it's blocking our

237
00:15:12,628 --> 00:15:15,934
build. Right. What I've seen developers do

238
00:15:15,972 --> 00:15:19,700
is to turn off that test just to make that build pass.

239
00:15:20,310 --> 00:15:23,778
That is the moment youre take on technical debt. And it can be

240
00:15:23,784 --> 00:15:27,154
for good reason. It can be, but there are some follow

241
00:15:27,192 --> 00:15:31,346
up actions you should do, and if you don't do them, youre build passes,

242
00:15:31,458 --> 00:15:34,534
you get a lower test coverage results into more

243
00:15:34,572 --> 00:15:40,054
bugs, or at least more bug reports. And bugs

244
00:15:40,102 --> 00:15:43,770
result into you having to deploy a hot fix and

245
00:15:43,840 --> 00:15:47,098
you forgot to update your tests because you've turned them off.

246
00:15:47,264 --> 00:15:50,634
And you get to the same cycle again and

247
00:15:50,672 --> 00:15:54,174
again and again. Youre box result into

248
00:15:54,212 --> 00:15:58,046
more bugs, result into more bugs, and you

249
00:15:58,148 --> 00:16:01,774
get where I'm going at right now, as I said before,

250
00:16:01,812 --> 00:16:05,362
I worked in various teams and in my experience,

251
00:16:05,496 --> 00:16:09,182
it is the DevOps teams that are typically

252
00:16:09,246 --> 00:16:12,882
better in handling technical depth. I think the reason

253
00:16:12,936 --> 00:16:16,994
why is because true DevOps teams

254
00:16:17,122 --> 00:16:20,354
that contain both developers and operational engineers,

255
00:16:20,482 --> 00:16:23,890
true DevOps teams that work together on a daily basis,

256
00:16:23,970 --> 00:16:27,622
they feel the pain of technical debt in each

257
00:16:27,676 --> 00:16:31,478
phase of the software development lifecycle that you'll see on this image,

258
00:16:31,574 --> 00:16:35,606
the DevOps logo. Because now developers

259
00:16:35,638 --> 00:16:39,514
do not only feel the pain of technical debt when they

260
00:16:39,552 --> 00:16:43,050
have to perform testing or building or releasing or coding,

261
00:16:43,130 --> 00:16:46,686
they feel it during the entire lifecycle. And it's the

262
00:16:46,708 --> 00:16:50,206
other way around. Ops engineers now feel the pain of

263
00:16:50,308 --> 00:16:54,466
technical debt also in the development lifecycle, in the

264
00:16:54,488 --> 00:16:57,826
coding phase or the building phase. All right,

265
00:16:57,848 --> 00:17:01,474
so another very big thing in DevOps is

266
00:17:01,512 --> 00:17:05,978
automation. It's super important, and it's

267
00:17:06,014 --> 00:17:09,314
for the simple reason that in DevOps, what we try to achieve,

268
00:17:09,362 --> 00:17:12,886
first of all, is flow. It's actually the

269
00:17:12,908 --> 00:17:16,562
first way of DevOps is realizing or creating flow.

270
00:17:16,706 --> 00:17:20,634
And that means that work flows from left to

271
00:17:20,672 --> 00:17:23,754
right, from dev to ops, without having

272
00:17:23,792 --> 00:17:27,386
to wait a lot in between. We're not going to make this

273
00:17:27,408 --> 00:17:30,858
whole big release window once a week or once a month,

274
00:17:30,944 --> 00:17:34,138
where we put all of our commits together,

275
00:17:34,224 --> 00:17:36,906
we squash them, and then we give it to an end user and it becomes

276
00:17:36,938 --> 00:17:40,414
a very big release. What we try to achieve is really

277
00:17:40,452 --> 00:17:43,470
small bits all the time, and maintainable,

278
00:17:43,550 --> 00:17:47,186
containable. And in order to

279
00:17:47,208 --> 00:17:51,074
do that, you need a lot of automation. You need automating tests an

280
00:17:51,112 --> 00:17:54,382
awful lot. You need automate, CI pipelines,

281
00:17:54,526 --> 00:17:57,106
deployment processes, release processes,

282
00:17:57,218 --> 00:18:00,934
everything you can imagine you want to automate, because you want to

283
00:18:00,972 --> 00:18:05,218
be able to release or give stuff to an end user

284
00:18:05,394 --> 00:18:08,758
all day long, ten times a day if

285
00:18:08,844 --> 00:18:12,762
necessary. And this is something you can pick up

286
00:18:12,896 --> 00:18:16,378
yourself, even if you're not practicing DevOps, even if you're

287
00:18:16,384 --> 00:18:19,386
not part of a DevOps team, or you don't even have DevOps teams within your

288
00:18:19,408 --> 00:18:22,494
organization. Even then you can still pick up

289
00:18:22,532 --> 00:18:25,790
on this very important item of automation.

290
00:18:27,170 --> 00:18:31,040
And a good way to start is with the definition of done,

291
00:18:31,410 --> 00:18:34,890
right? So the definition of done in agile and scrum is a

292
00:18:34,900 --> 00:18:38,178
list or a description of stuff that need to

293
00:18:38,184 --> 00:18:41,634
be completed, tasks that need to be completed before you

294
00:18:41,672 --> 00:18:45,266
call your work done. So if you haven't got a definition of

295
00:18:45,288 --> 00:18:49,126
done, I think that's the first thing to do. And if

296
00:18:49,148 --> 00:18:52,450
you need inspiration for what to automate,

297
00:18:52,610 --> 00:18:55,746
then go look at this list because it typically contains

298
00:18:55,778 --> 00:18:59,322
the stuff we don't like to do in my experience,

299
00:18:59,456 --> 00:19:03,462
like writing release notes and doing some manual

300
00:19:03,526 --> 00:19:07,530
testing, or preferably not actually,

301
00:19:07,680 --> 00:19:11,070
but all kinds of quality gates,

302
00:19:11,730 --> 00:19:15,040
peer reviews, all of that. See where

303
00:19:15,730 --> 00:19:19,680
you can automate and start with that.

304
00:19:20,130 --> 00:19:23,590
So another big thing that can slow

305
00:19:23,610 --> 00:19:26,738
down a team without them even realizing it

306
00:19:26,824 --> 00:19:29,380
is the decision making process.

307
00:19:29,990 --> 00:19:33,278
Decisions need to be made on a daily basis, and sometimes they're

308
00:19:33,294 --> 00:19:36,902
big decisions, sometimes they're small decisions, typically. The bigger ones,

309
00:19:36,956 --> 00:19:40,562
of course, tend to take longer and require

310
00:19:40,626 --> 00:19:43,974
more thought and are slowing down

311
00:19:44,012 --> 00:19:47,160
our productivity and sometimes even our quality as well.

312
00:19:47,630 --> 00:19:50,790
Because we have no way of doing this. It's all gut feeling,

313
00:19:50,870 --> 00:19:55,850
discussion, opinions, and DevOps

314
00:19:56,430 --> 00:20:00,558
advocates that you practice data driven decision making

315
00:20:00,644 --> 00:20:03,726
over gut feeling, as clearly sketched in

316
00:20:03,748 --> 00:20:07,294
this funny image. Now this is a very difficult thing,

317
00:20:07,412 --> 00:20:11,406
because all decisions ever, always, all the

318
00:20:11,428 --> 00:20:15,086
time, no exceptions, are made by emotions,

319
00:20:15,198 --> 00:20:19,122
are based on emotions. So how do you quantify that?

320
00:20:19,256 --> 00:20:22,546
That's a challenge. All right, so I understand this

321
00:20:22,568 --> 00:20:26,066
is not a workshop, but I do want to mention two tools in

322
00:20:26,088 --> 00:20:29,526
particular. I found them very useful in

323
00:20:29,548 --> 00:20:32,440
the past when having to make a decision as a team,

324
00:20:33,130 --> 00:20:36,806
when there are multiple solutions out there. Now, these tools are

325
00:20:36,828 --> 00:20:40,730
called the AHP matrix and the pew matrix,

326
00:20:41,230 --> 00:20:45,398
and they are complementary to one another. So we use the AHP

327
00:20:45,494 --> 00:20:49,270
matrix as a team exercise to define

328
00:20:49,350 --> 00:20:52,906
what aspects of the possible

329
00:20:53,008 --> 00:20:56,534
solution we find important. And the AHP

330
00:20:56,582 --> 00:21:00,046
metrics can be used to quantify that

331
00:21:00,148 --> 00:21:03,958
and find out what is most important. Now, we use the output

332
00:21:03,994 --> 00:21:07,698
from the AHP matrix in the pew matrix. So in

333
00:21:07,704 --> 00:21:11,086
the pew matrix, we ultimately compare

334
00:21:11,278 --> 00:21:14,546
the final solutions that we have to pick from. So let

335
00:21:14,568 --> 00:21:17,574
me give you a bit of an example of an AHP matrix and what it

336
00:21:17,612 --> 00:21:21,542
looks like. I was working with a team that needed to select a

337
00:21:21,596 --> 00:21:26,134
contract testing tool to ultimately test

338
00:21:26,172 --> 00:21:29,846
API versions and contracts, actually. So there

339
00:21:29,868 --> 00:21:33,078
are many different solutions out there, but before we get to the solution,

340
00:21:33,174 --> 00:21:36,460
before we choose the best tool, for youre job,

341
00:21:36,910 --> 00:21:40,638
we needed to identify what we found important about this tool,

342
00:21:40,724 --> 00:21:44,010
and that's where we did the HP matrix.

343
00:21:44,170 --> 00:21:47,726
So first we've identified pricing is

344
00:21:47,748 --> 00:21:51,134
important, then collaboration and source control is

345
00:21:51,172 --> 00:21:54,230
important. It needed to support open API

346
00:21:54,250 --> 00:21:57,666
3.0. We wanted to look

347
00:21:57,688 --> 00:22:01,090
at the learning curve, because if it's a very difficult tool to

348
00:22:01,240 --> 00:22:05,090
master, that may influence the decision we want to make.

349
00:22:05,240 --> 00:22:08,914
It would be nice if there was a mocking service or mock

350
00:22:08,962 --> 00:22:12,646
server available within the tool and it needed to

351
00:22:12,748 --> 00:22:16,098
support graphQL in the future, even though we weren't

352
00:22:16,274 --> 00:22:20,122
now, the exercise goes as following only.

353
00:22:20,176 --> 00:22:24,090
The yellow highlighted cells are the ones youre need to fill in,

354
00:22:24,240 --> 00:22:28,262
and it is every time we do a compare

355
00:22:28,406 --> 00:22:31,566
between two attributes and two only,

356
00:22:31,668 --> 00:22:34,798
that's all youre need to discuss with your team. So the first one,

357
00:22:34,884 --> 00:22:38,378
I'm highlighting it right here, is collaboration

358
00:22:38,474 --> 00:22:41,966
and source control versus pricing versus the

359
00:22:41,988 --> 00:22:45,202
column. So row versus column, which do we found more

360
00:22:45,256 --> 00:22:48,514
important? And if you find, for example,

361
00:22:48,632 --> 00:22:54,002
collaboration more important, you give it 12358

362
00:22:54,136 --> 00:22:57,542
points, basically Fibonacci sequence. And if you find

363
00:22:57,596 --> 00:23:01,090
pricing more important, you do the same, but it's like a negative.

364
00:23:01,170 --> 00:23:04,902
So this is like, I find pricing important two

365
00:23:04,956 --> 00:23:08,490
versus zero or three

366
00:23:08,560 --> 00:23:12,762
versus zero. In this case, if I would put in a three,

367
00:23:12,896 --> 00:23:16,060
let me select it. Whoops, here we go.

368
00:23:16,670 --> 00:23:20,650
Then I would say collaboration is more important than pricing.

369
00:23:21,070 --> 00:23:24,746
If I find it way more important, I could use the Fibonacci

370
00:23:24,778 --> 00:23:28,206
sequence to say in, for example, eight.

371
00:23:28,388 --> 00:23:32,522
That's a lot more important. So you do that for each yellow

372
00:23:32,586 --> 00:23:35,854
cell. You don't need to look at the white cells because they, in this case,

373
00:23:35,892 --> 00:23:39,374
got automatically filled. Otherwise youre have to do the opposite.

374
00:23:39,422 --> 00:23:42,062
If you don't have a spreadsheet that does that, if you don't have the formula,

375
00:23:42,126 --> 00:23:45,460
then just fill in the opposite and you'll be fine.

376
00:23:45,830 --> 00:23:49,526
So you do that for each and every yellow cell,

377
00:23:49,708 --> 00:23:53,458
and what it ultimately does, it comes up with a weight.

378
00:23:53,634 --> 00:23:57,222
That's the output of the HP matrix. It's the weight for

379
00:23:57,276 --> 00:24:01,766
each property. We will use this in the pew

380
00:24:01,798 --> 00:24:05,706
matrix. Yeah, there it is. So we use this in the pew matrix to

381
00:24:05,728 --> 00:24:09,802
ultimately compare the different solutions with one another. But first we needed

382
00:24:09,856 --> 00:24:12,954
to identify which one we found most important.

383
00:24:13,072 --> 00:24:16,286
So, in this case, you can see that we found the second row, which is

384
00:24:16,308 --> 00:24:19,694
collaboration and source control and open API 3.0,

385
00:24:19,812 --> 00:24:22,640
most important. So if we change this,

386
00:24:23,090 --> 00:24:26,658
for example, the learning curve now

387
00:24:26,744 --> 00:24:30,274
becomes a lot less important. But then again,

388
00:24:30,312 --> 00:24:33,694
this is a team exercise. So you should decide with a team and have discussion

389
00:24:33,742 --> 00:24:37,046
on each matter. All right, so let me

390
00:24:37,068 --> 00:24:41,106
just copy the values of these properties,

391
00:24:41,218 --> 00:24:43,830
the weight that we basically calculated.

392
00:24:44,410 --> 00:24:48,534
Let me just copy it in right here. And here

393
00:24:48,572 --> 00:24:52,330
we have it. So this is the Q matrix you're looking at.

394
00:24:52,480 --> 00:24:55,834
We have a list of properties that

395
00:24:55,872 --> 00:24:59,306
we've defined that are important to take into an account when

396
00:24:59,328 --> 00:25:03,146
we make a decision. We have the calculated weight that we did from the Ahb

397
00:25:03,178 --> 00:25:06,366
matrix. So this is no longer AhB matrix, this is

398
00:25:06,388 --> 00:25:10,506
the pew matrix. And now we have three different solutions listed

399
00:25:10,538 --> 00:25:14,658
up that we want to select from, that we want to choose from.

400
00:25:14,824 --> 00:25:17,518
For contract testing, you can use postman,

401
00:25:17,694 --> 00:25:20,450
you can use pactflow, and you can use pact.

402
00:25:20,790 --> 00:25:24,578
All right, so I've cleared the values, set them all to zero

403
00:25:24,744 --> 00:25:28,294
for all the different solution. Now, the first thing we do is we

404
00:25:28,332 --> 00:25:31,718
identify or we select one of the three,

405
00:25:31,884 --> 00:25:35,670
in this case, one of the three solutions as a baseline.

406
00:25:36,010 --> 00:25:39,398
And that could be any one of them. It doesn't matter, none at

407
00:25:39,404 --> 00:25:43,158
all. It could be the current solution. That could be one of the suggested solutions

408
00:25:43,334 --> 00:25:46,538
in this case. As you can see, we have selected pact as the

409
00:25:46,544 --> 00:25:50,090
baseline. I've highlighted it in yellow. So that means

410
00:25:50,240 --> 00:25:54,570
we don't change those values, there's zeros, we don't change those scores.

411
00:25:54,730 --> 00:25:58,430
What we are going to do as a team is we going to compare,

412
00:25:58,930 --> 00:26:02,502
for each solution, each attribute with the baseline

413
00:26:02,586 --> 00:26:06,180
with pact in this case. So as first, we could

414
00:26:06,710 --> 00:26:09,810
compare packed flow with packed on

415
00:26:09,880 --> 00:26:14,370
pricing, and we give that a score. So, for example, I say packed flow

416
00:26:15,030 --> 00:26:19,026
is more expensive than pact and therefore gets minus

417
00:26:19,058 --> 00:26:22,834
one, or it's a lot more expensive than packed and it gets minus

418
00:26:22,882 --> 00:26:27,218
two. And you do that for each of the attributes.

419
00:26:27,394 --> 00:26:30,582
And if they're equal, youre give it a zero.

420
00:26:30,716 --> 00:26:33,814
And if they're better or worse, give them a minus

421
00:26:33,862 --> 00:26:37,434
or plus number. And the options I have

422
00:26:37,632 --> 00:26:41,018
selected here is minus one, minus 20,

423
00:26:41,104 --> 00:26:44,638
and plus one, plus two. That's the one you get to select.

424
00:26:44,724 --> 00:26:49,200
You can change the math if you think that makes the decision ultimately more clear.

425
00:26:49,650 --> 00:26:54,290
So you do this as a team. And let me just randomly

426
00:26:54,870 --> 00:26:58,434
put some stuff out there just so that we have a

427
00:26:58,472 --> 00:27:02,034
clear winner. Minus one.

428
00:27:02,232 --> 00:27:05,602
Actually, learning curve and postman is quite easy.

429
00:27:05,656 --> 00:27:09,174
So that I'm going to give that to backflow is going to be a bit

430
00:27:09,212 --> 00:27:12,626
more difficult or actually as difficult as pact.

431
00:27:12,818 --> 00:27:15,782
There's a mocking service. Yes, they have it.

432
00:27:15,836 --> 00:27:19,094
Graphql support yes. But I suppose that's the same

433
00:27:19,132 --> 00:27:22,698
with pact. So let's say this is the final

434
00:27:22,784 --> 00:27:26,006
output in my case, as you can see, there's a clear winner.

435
00:27:26,038 --> 00:27:29,306
Now, I've altered the numbers that way, so that would

436
00:27:29,328 --> 00:27:34,378
be for this example. But the clear winner is postman.

437
00:27:34,554 --> 00:27:38,014
It could also be that your baseline is the clear winner. And if we

438
00:27:38,052 --> 00:27:41,966
would alter the numbers and have to score all the

439
00:27:41,988 --> 00:27:46,434
other solution with minus numbers, you can guess that, of course.

440
00:27:46,552 --> 00:27:49,826
Let me just tweak it a little bit here. If this

441
00:27:49,848 --> 00:27:53,022
would be the output of the pew metrics, the pact,

442
00:27:53,086 --> 00:27:56,486
the baseline would be the clear winner. So this is how you can

443
00:27:56,508 --> 00:28:00,790
use that. Hopefully you understand that this tool helps you

444
00:28:00,860 --> 00:28:03,970
avoid discussions based on opinions.

445
00:28:04,130 --> 00:28:08,150
Right? So it's no longer, I think Packflow is better than packed because

446
00:28:08,300 --> 00:28:12,186
I've worked with it in the past and it was so good. Now you

447
00:28:12,208 --> 00:28:15,814
get to dive deep on the matter, dive deep

448
00:28:15,862 --> 00:28:19,034
in the solutions and compare them

449
00:28:19,232 --> 00:28:22,350
based on what you have identified that you find

450
00:28:22,420 --> 00:28:26,480
important about this decision, in this moment, with this team.

451
00:28:26,850 --> 00:28:31,166
Now, I would love to give you more tips and tricks to

452
00:28:31,348 --> 00:28:35,166
lead these exercises, these group discussions, and how

453
00:28:35,188 --> 00:28:38,434
to put together the right group, for example, put together the right

454
00:28:38,472 --> 00:28:42,622
people, how to select them, how to find and identify the criteria

455
00:28:42,766 --> 00:28:46,674
that are the basis of this entire exercise. But as

456
00:28:46,712 --> 00:28:49,538
I said, we are limited in time and I have to move on. If youre

457
00:28:49,554 --> 00:28:52,994
like to learn more, please come visit one of my workshops.

458
00:28:53,042 --> 00:28:57,426
I give them at conferences as well. You can check me out on abletohoova.com

459
00:28:57,548 --> 00:29:00,918
schedule, or you can book one of these workshops

460
00:29:01,014 --> 00:29:04,502
virtually, go to my website and you'll

461
00:29:04,566 --> 00:29:08,534
find a submission form and all about this workshop.

462
00:29:08,662 --> 00:29:12,606
So let's move on. All right, so there's one final thing

463
00:29:12,628 --> 00:29:16,654
I'd like to say about decision making. And if you

464
00:29:16,692 --> 00:29:20,526
remember only one thing from this session, let it be this one. And it

465
00:29:20,548 --> 00:29:23,540
is good. Is good enough.

466
00:29:24,150 --> 00:29:28,114
And what I mean to say by that is I've seen many,

467
00:29:28,232 --> 00:29:33,566
many different teams and individual developers struggle

468
00:29:33,758 --> 00:29:36,790
with the decision making process because they thought there was

469
00:29:36,860 --> 00:29:40,454
more information out there to be gathered to

470
00:29:40,492 --> 00:29:43,602
be taken into an account. I've seen developers

471
00:29:43,746 --> 00:29:47,174
that had to select, let's say, between three or

472
00:29:47,212 --> 00:29:51,500
four solutions, make the entire proof of concept for each solution into

473
00:29:51,950 --> 00:29:55,450
an mvp, almost like building the entire

474
00:29:55,520 --> 00:29:59,242
thing like four times, and then say, I want that solution because

475
00:29:59,296 --> 00:30:03,098
that's the best one. That is going to take ages.

476
00:30:03,274 --> 00:30:06,654
You're never going to get things done that way. So please make

477
00:30:06,692 --> 00:30:10,426
informed decisions, but stop overanalyzing.

478
00:30:10,538 --> 00:30:13,954
Good is good enough. I actually had to learn and understand this

479
00:30:13,992 --> 00:30:16,100
principles the hard way.

480
00:30:16,870 --> 00:30:21,326
It was about ten years ago, I think, when I was parking

481
00:30:21,438 --> 00:30:25,170
my car. Actually, I was locking up my car almost

482
00:30:25,240 --> 00:30:28,854
in front of my house when I heard footsteps coming

483
00:30:28,892 --> 00:30:31,990
in from the left. And it was a Saturday night,

484
00:30:32,060 --> 00:30:35,734
I think it was around eleven ish or twelve, and I had just come home

485
00:30:35,772 --> 00:30:39,350
from visiting friends and I heard footsteps coming towards

486
00:30:39,420 --> 00:30:42,762
me. But I lived in the city, so people walk,

487
00:30:42,816 --> 00:30:45,866
and that's not a thing to pay attention to,

488
00:30:45,888 --> 00:30:49,226
I suppose. But all of a sudden, as I'm locking up

489
00:30:49,248 --> 00:30:52,734
my car, I hear these footsteps stop right behind me.

490
00:30:52,772 --> 00:30:56,000
And just before I pick up on that,

491
00:30:56,530 --> 00:31:00,494
I get a hit on the head from behind.

492
00:31:00,612 --> 00:31:04,500
I get hit pretty hard and I fell over onto my car.

493
00:31:05,110 --> 00:31:09,122
Now I immediately get up and turn around and I see

494
00:31:09,256 --> 00:31:12,626
a man standing there, holding a

495
00:31:12,648 --> 00:31:16,162
knife in his hand. Now from that moment on,

496
00:31:16,216 --> 00:31:19,382
everything went dark at that moment, and it took

497
00:31:19,436 --> 00:31:23,046
quite a few months, actually, before I remembered more or less what

498
00:31:23,068 --> 00:31:26,902
happened after that moment. So after I had

499
00:31:26,956 --> 00:31:29,820
turned around, there was a fight.

500
00:31:31,070 --> 00:31:34,742
I immediately jumped onto the knife. I realized

501
00:31:34,806 --> 00:31:38,870
it like that, that this is a critical

502
00:31:38,950 --> 00:31:42,938
situation and it's a life or death

503
00:31:43,114 --> 00:31:47,150
thing. So as that takes

504
00:31:47,300 --> 00:31:51,054
about eight milliseconds, youre body jumps into a mode or

505
00:31:51,092 --> 00:31:54,786
your mind actually changes into a mode. And luckily my

506
00:31:54,808 --> 00:31:58,546
mind chose to fight because I don't think there was actually any

507
00:31:58,568 --> 00:32:00,660
other way I would have gotten out of it.

508
00:32:01,990 --> 00:32:05,710
There was a fight. Ultimately I survived, obviously, because I

509
00:32:05,720 --> 00:32:10,534
wouldn't be here sitting having this talk. And it

510
00:32:10,572 --> 00:32:14,086
had a lot of impact after that. It was not the

511
00:32:14,108 --> 00:32:17,922
fight, not the injuries. There were injuries, but they were minor,

512
00:32:17,986 --> 00:32:21,400
really minor, nothing to be really concerned about,

513
00:32:21,870 --> 00:32:25,786
but that had a mental impact on me. So at this point in my

514
00:32:25,808 --> 00:32:29,366
life, I was actually in the army, I was in the infantry

515
00:32:29,398 --> 00:32:32,542
in the Royal dutch army. And luckily for me, they have

516
00:32:32,596 --> 00:32:36,426
got specialists who know very well how to treat PTSD

517
00:32:36,458 --> 00:32:39,690
and PTSD symptoms, which is what I was showing

518
00:32:39,850 --> 00:32:42,762
now. They treated me and it worked very well, actually.

519
00:32:42,916 --> 00:32:47,166
So I was happy to do not have those symptoms anymore.

520
00:32:47,358 --> 00:32:51,106
But still, I could not make sense of this

521
00:32:51,128 --> 00:32:55,074
whole event. I couldn't make sense out of it because

522
00:32:55,192 --> 00:32:58,642
everything that happened that night was very illogical.

523
00:32:58,786 --> 00:33:02,166
I mean, someone just doesn't walk up to you and

524
00:33:02,188 --> 00:33:05,414
start attacking you if he's after your money

525
00:33:05,452 --> 00:33:09,258
or something, because that is what happened during the fight. I got knocked out

526
00:33:09,344 --> 00:33:12,614
somehow, and when I woke up, my wallet

527
00:33:12,662 --> 00:33:15,994
was gone and it had been found by the police later that very

528
00:33:16,032 --> 00:33:18,842
night. But if someone's after your money,

529
00:33:18,976 --> 00:33:22,750
they are likely to warn you before they attack

530
00:33:22,820 --> 00:33:26,490
you, just so to avoid the whole physical confrontation, because it's

531
00:33:26,570 --> 00:33:30,480
risky for the Margaret as well. But that didn't happen.

532
00:33:31,170 --> 00:33:34,610
Also, he attacked me with a knife, but he hit me with his

533
00:33:34,680 --> 00:33:37,906
fist, I assume first from behind. If you

534
00:33:37,928 --> 00:33:41,006
want to attack someone with a knife, you want to inflict

535
00:33:41,038 --> 00:33:44,514
damage, you do that with a knife. And this guy,

536
00:33:44,552 --> 00:33:47,670
he didn't stab me, really. He cut me,

537
00:33:47,740 --> 00:33:51,430
and I got injured, but never fatally injured.

538
00:33:52,090 --> 00:33:56,070
Luckily for me, my injuries weren't even close. And this guy

539
00:33:56,140 --> 00:33:59,914
clearly did not know how to work

540
00:33:59,952 --> 00:34:03,222
the knife or how to do most damage.

541
00:34:03,286 --> 00:34:06,134
And if he did, it wasn't his intention,

542
00:34:06,262 --> 00:34:10,006
but it seemed like it didn't. So that

543
00:34:10,128 --> 00:34:13,406
didn't make any sense either. So what I

544
00:34:13,428 --> 00:34:17,338
was left with was a lot of nonsensible

545
00:34:17,514 --> 00:34:21,294
facts, and that kept bothering me.

546
00:34:21,492 --> 00:34:24,750
At some point, the police stopped the investigation

547
00:34:24,830 --> 00:34:28,354
because there were no more leads. I mean, they did some investigation that

548
00:34:28,392 --> 00:34:31,614
night, but there were no leads coming in. They never caught

549
00:34:31,662 --> 00:34:35,074
the guy. And I was

550
00:34:35,112 --> 00:34:38,726
left with a dead end, basically. And I

551
00:34:38,828 --> 00:34:42,594
noticed, I was very much bothered by this. I kept

552
00:34:42,642 --> 00:34:45,814
analyzing this. I kept analyzing this until the moment someone actually

553
00:34:45,852 --> 00:34:49,366
mentioned to me, like, are there any new facts

554
00:34:49,398 --> 00:34:53,820
coming in? Is there something you can do or anyone can do

555
00:34:54,270 --> 00:34:57,994
to make sense of this all? And the answer to that question

556
00:34:58,112 --> 00:35:02,058
was, no, there's nothing we can do.

557
00:35:02,224 --> 00:35:05,466
That's the whole reason the police had to close down the investigation.

558
00:35:05,658 --> 00:35:08,830
So at that point, I had to say to myself, all right,

559
00:35:08,980 --> 00:35:12,490
it's enough. We know what we know.

560
00:35:12,580 --> 00:35:15,700
It doesn't make any sense. We have to move on.

561
00:35:16,230 --> 00:35:20,354
Don't overanalyze. Good is good

562
00:35:20,392 --> 00:35:24,260
enough, even in a horrible or bad situation.

563
00:35:25,030 --> 00:35:29,062
Right. So I'd like to wrap up this session and

564
00:35:29,116 --> 00:35:32,120
briefly summarize the stuff that we talked about.

565
00:35:32,730 --> 00:35:36,166
So we talked a lot about technical debt, and I hope you get that.

566
00:35:36,188 --> 00:35:39,554
The point here is to not take on technical debt unless

567
00:35:39,602 --> 00:35:43,286
you are willing to pay back the debt. If you're

568
00:35:43,318 --> 00:35:47,034
not willing to pay back the debt or you can't, you don't have a plan,

569
00:35:47,232 --> 00:35:50,986
do not take it on. Please keep to your own quality standards and

570
00:35:51,008 --> 00:35:54,954
do not take shortcuts, because that's essentially what technical

571
00:35:55,002 --> 00:35:58,682
debt is. Technical debt goes to the top of the backlog.

572
00:35:58,746 --> 00:36:01,966
That's the rule. That's the only way youre can deal with it on

573
00:36:01,988 --> 00:36:05,442
a daily basis. So please make sure

574
00:36:05,496 --> 00:36:09,378
your sprint backlog always contains one or two

575
00:36:09,464 --> 00:36:13,682
or more. Three perhaps. I don't know. It depends on your team items of

576
00:36:13,736 --> 00:36:17,734
technical depth, and make sure you handle them first.

577
00:36:17,932 --> 00:36:21,334
Very important. I'm afraid this is the only way you

578
00:36:21,372 --> 00:36:24,630
can deal with it that is sustainable.

579
00:36:25,210 --> 00:36:28,586
Then we talked about how DevOps teams are typically a lot better in

580
00:36:28,608 --> 00:36:32,150
handling technical depth because their responsibility

581
00:36:32,230 --> 00:36:35,914
for the entire software development lifecycle and how they

582
00:36:36,032 --> 00:36:39,674
incorporate automation to do that. Now that's something you can pick

583
00:36:39,712 --> 00:36:43,166
up on yourself. And a good way of starting there is to

584
00:36:43,268 --> 00:36:46,926
analyze your definition of done and see what tasks there are in

585
00:36:46,948 --> 00:36:50,334
there that you could possibly automate. That's where you should

586
00:36:50,372 --> 00:36:53,594
start. And then finally we talked about decision

587
00:36:53,642 --> 00:36:57,566
making and how data driven decision making is a lot better than gut

588
00:36:57,598 --> 00:37:01,026
feeling, and how data driven decision making can offer

589
00:37:01,048 --> 00:37:04,434
you a bit more structure. So we talked about the AHP matrix and the

590
00:37:04,472 --> 00:37:07,798
pew matrix and how you can easily incorporate them in

591
00:37:07,804 --> 00:37:11,522
the decision making when having to select out of multiple

592
00:37:11,586 --> 00:37:14,886
solutions with an entire team or group of people,

593
00:37:14,988 --> 00:37:19,270
which can be tricky. So thank you for listening.

594
00:37:19,610 --> 00:37:23,126
If you have any questions, comments, remarks or anything,

595
00:37:23,228 --> 00:37:26,226
please reach out to me on GitHub,

596
00:37:26,338 --> 00:37:29,898
LinkedIn or send an old fashioned electronic

597
00:37:29,954 --> 00:37:33,898
mail through to ablet at testcoders NL or visit

598
00:37:33,914 --> 00:37:37,566
my website awoltforhoova.com and I'd love to get in

599
00:37:37,588 --> 00:37:41,070
touch. I'd love to hear your thoughts and ideas

600
00:37:41,490 --> 00:37:45,594
for now. Thanks again and enjoy. Conf 42 DevOps

601
00:37:45,642 --> 00:37:47,370
2024 cheers.

