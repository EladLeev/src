1
00:01:28,690 --> 00:01:31,938
Hi. Today I'm going to talk about why the future is cloud native

2
00:01:32,034 --> 00:01:34,680
and why your organization should be too.

3
00:01:35,290 --> 00:01:38,982
Today we're going to be covering what a cloud native system looks

4
00:01:39,036 --> 00:01:42,462
like, why enterprises are making the move to cloud

5
00:01:42,516 --> 00:01:45,886
native and why not. I'm then going to look into

6
00:01:45,988 --> 00:01:49,930
a case study in the banking sector and their cloud transformation.

7
00:01:50,090 --> 00:01:53,766
Then I'm going to talk about the benefits of adding cloud native package repository

8
00:01:53,818 --> 00:01:57,714
like cloudsmith to your tech stack. Then I'm going to look into

9
00:01:57,912 --> 00:02:01,410
what you should consider when selecting cloud native tools.

10
00:02:01,910 --> 00:02:05,178
Hey so I'm Kira Carey. I work in developer

11
00:02:05,214 --> 00:02:08,982
relations in Cloudsmith. I'm nearly there a year and before

12
00:02:09,036 --> 00:02:12,838
this I was a software engineer for over ten years. I worked

13
00:02:12,924 --> 00:02:17,330
on web services and web apps, in printing,

14
00:02:17,410 --> 00:02:21,130
in security products and in computer vision applications.

15
00:02:21,790 --> 00:02:25,626
The biggest change I've seen in software development over the last ten years has been

16
00:02:25,648 --> 00:02:29,722
the availability of cloud infrastructure and that move away from data

17
00:02:29,776 --> 00:02:33,294
centers. It's changed how we develop software and

18
00:02:33,332 --> 00:02:36,846
what we develop. I worked on cloud transformations and

19
00:02:36,868 --> 00:02:40,474
had to really skill up on all that cloud stuff on Docker,

20
00:02:40,522 --> 00:02:44,494
microservices, event messaging and changing those config

21
00:02:44,542 --> 00:02:47,906
code. It was

22
00:02:47,928 --> 00:02:51,102
a huge learning curve for me and has given me a lot of empathy

23
00:02:51,166 --> 00:02:54,610
for developers going through the same cloud transformation.

24
00:02:56,230 --> 00:03:00,086
So before we go on, I want to talk about Cloudsmith. Cloudsmith is

25
00:03:00,108 --> 00:03:03,670
a cloud native fully managed package management as a service.

26
00:03:03,820 --> 00:03:07,858
We host and support over 28 different types of package formats

27
00:03:08,034 --> 00:03:12,006
and we securely store your packages in a private artifact repository

28
00:03:12,118 --> 00:03:16,070
and we make it easy for you to automate and integrate your artifact registry

29
00:03:16,150 --> 00:03:18,810
with your existing CI CD tooling.

30
00:03:20,450 --> 00:03:23,390
So what does it mean to be cloud native?

31
00:03:25,810 --> 00:03:29,694
Cloud native systems are architectured and developed to take

32
00:03:29,732 --> 00:03:33,662
advantage of the latest cloud technologies infrastructure

33
00:03:33,726 --> 00:03:36,478
provision and configuration is automated.

34
00:03:36,654 --> 00:03:40,270
Resources are dynamically allocated and reallocated

35
00:03:40,350 --> 00:03:43,380
at deploy time based on the needs of the application.

36
00:03:44,630 --> 00:03:48,594
Cloud native software development usually needs microservice

37
00:03:48,642 --> 00:03:52,322
architecture. You expose functionality via restful

38
00:03:52,386 --> 00:03:56,002
APIs. You probably use containers

39
00:03:56,146 --> 00:03:59,350
with Docker, you have some sort of container orchestration

40
00:03:59,430 --> 00:04:03,270
software like Kubernetes, youre use messaging systems

41
00:04:03,350 --> 00:04:06,330
like Kafka and RabbitMQ,

42
00:04:06,670 --> 00:04:10,598
and you probably automate your CI CD process to

43
00:04:10,624 --> 00:04:14,222
build your software into the cloud and to deploy to cloud

44
00:04:14,276 --> 00:04:18,266
infrastructure. You're probably building and releasing code multiple

45
00:04:18,298 --> 00:04:22,174
times a day and you probably also have a cloud made of tech

46
00:04:22,212 --> 00:04:26,030
stack to help you with your build process for your CIC details

47
00:04:26,110 --> 00:04:29,534
for your package management tools, your observation tools,

48
00:04:29,582 --> 00:04:31,250
and your security tools.

49
00:04:33,190 --> 00:04:37,334
In Cloudsmith we've seen a huge increase in the

50
00:04:37,452 --> 00:04:41,346
number of packages stored on Cloudsmith associated

51
00:04:41,378 --> 00:04:45,542
with cloud native technologies like helm and Docker. From 2020

52
00:04:45,596 --> 00:04:50,140
to 2021, new helm packages are up 271%.

53
00:04:50,510 --> 00:04:52,426
New docker packages are up 236%.

54
00:04:52,448 --> 00:04:56,266
And from today

55
00:04:56,368 --> 00:04:59,994
to the started of the year, new ham packages are at

56
00:05:00,032 --> 00:05:04,080
last year's 70% level, even though we're just a quarter way into the year.

57
00:05:05,810 --> 00:05:09,626
So if cloud is so amazing, why isn't everybody just hopping

58
00:05:09,658 --> 00:05:13,294
on that bandwagon? Well, this is not just an engineering

59
00:05:13,342 --> 00:05:16,654
decision, it's an executive level decision. The big boss

60
00:05:16,702 --> 00:05:19,886
man upstairs. There's huge upfront

61
00:05:19,918 --> 00:05:23,522
costs. Rearchitecting your systems is a huge

62
00:05:23,576 --> 00:05:27,160
undertaking, especially if you have a lot of legacy code.

63
00:05:28,330 --> 00:05:31,126
It's likely to take up many engineering hours,

64
00:05:31,228 --> 00:05:34,790
changing from a monolithic application to microservices.

65
00:05:35,210 --> 00:05:38,786
You need to update your tech stack, getting rid of your on prem systems

66
00:05:38,818 --> 00:05:42,422
and moving to their cloud offerings, or maybe changing supplier.

67
00:05:42,566 --> 00:05:45,898
You need to renegotiate these contracts, review new products.

68
00:05:46,064 --> 00:05:49,434
Your build processes are likely to change with new tooling and

69
00:05:49,472 --> 00:05:52,746
increased automation, there's probably going

70
00:05:52,768 --> 00:05:56,518
to be personnel changes. You need to train up your developers and

71
00:05:56,544 --> 00:05:59,742
your it team job does may change.

72
00:05:59,876 --> 00:06:03,550
You may need to hire in new developers and maybe even a consultancy

73
00:06:03,630 --> 00:06:07,214
team. And you possibly

74
00:06:07,262 --> 00:06:09,460
need to train up your customers as well.

75
00:06:10,390 --> 00:06:13,886
So there's risks and security issues also associated

76
00:06:13,918 --> 00:06:17,650
with moving to the cloud. At cloud service providers,

77
00:06:17,730 --> 00:06:20,834
issues become your issues in December

78
00:06:20,882 --> 00:06:24,486
last year AWS had an outage in

79
00:06:24,588 --> 00:06:28,438
us eastern region and it affected loads of sites

80
00:06:28,454 --> 00:06:32,502
and applications like Tinder, IMDb being Netflix

81
00:06:32,566 --> 00:06:36,460
and Disney. So it's no joke moving to the cloud.

82
00:06:39,070 --> 00:06:41,920
So this seems pretty tough. Why would anybody do it?

83
00:06:42,610 --> 00:06:46,282
Well, there's loads of really good reasons. Reduced overall

84
00:06:46,346 --> 00:06:49,214
cost. I mean for businesses it's the bottom line.

85
00:06:49,332 --> 00:06:53,234
Improved performance, enhanced security, it's brilliant for

86
00:06:53,272 --> 00:06:57,134
distributed teams and customers. And bit also facilitates

87
00:06:57,182 --> 00:07:00,674
innovation in your product. Let's go

88
00:07:00,712 --> 00:07:02,900
into these reasons in more detail.

89
00:07:05,350 --> 00:07:09,266
Let's start with cost. Oh, it didn't

90
00:07:09,298 --> 00:07:14,660
change over cost,

91
00:07:15,750 --> 00:07:18,946
so running data centers is costly. They require a lot

92
00:07:18,968 --> 00:07:22,502
of electricity for all that air conditioning and people

93
00:07:22,556 --> 00:07:26,342
need to run it. Infrastructure and cloud

94
00:07:26,396 --> 00:07:29,922
native services are fully managed. You don't have to worry

95
00:07:29,986 --> 00:07:33,222
about maintaining your on prem software or infrastructure.

96
00:07:33,366 --> 00:07:37,206
No updates, no security patches, no replacing obsolete

97
00:07:37,238 --> 00:07:40,730
hardware. There's economies of scale to consider.

98
00:07:40,880 --> 00:07:45,110
Third party providers like AWS, Google Cloud and Microsoft

99
00:07:45,190 --> 00:07:48,686
can offer economies of case that a single organization could

100
00:07:48,708 --> 00:07:51,920
not realize on their own. It's a price thing.

101
00:07:52,690 --> 00:07:56,798
And we should also consider opportunity costs. Every dollar youre invest

102
00:07:56,884 --> 00:08:00,082
in an engineer not working on your core competency youre

103
00:08:00,136 --> 00:08:03,810
core products has an opportunity cost associated with it

104
00:08:03,960 --> 00:08:07,182
and also there's clearer pricing. It's generally

105
00:08:07,326 --> 00:08:10,600
you pay for what you use in some sort of subscription model.

106
00:08:12,890 --> 00:08:17,042
There's performance benefits. Cloud native

107
00:08:17,106 --> 00:08:21,378
software can quickly scale and readjust its resources to meet demand.

108
00:08:21,554 --> 00:08:25,094
A company experiencing rapid growth can use the cloud to expand

109
00:08:25,142 --> 00:08:28,842
its infrastructure and computing power. In contrast, the same

110
00:08:28,896 --> 00:08:32,634
company using on prem infrastructure would have to quickly invest

111
00:08:32,752 --> 00:08:36,126
in more hardware, software and engineers to keep up with

112
00:08:36,148 --> 00:08:37,550
this rapid growth.

113
00:08:39,250 --> 00:08:42,894
Cloud native applications arent bit to run the cloud

114
00:08:43,012 --> 00:08:46,606
and they're designed with redundancy and high availability in

115
00:08:46,628 --> 00:08:50,382
mind. High availability is made possible by redundant

116
00:08:50,446 --> 00:08:53,966
and failover systems. Data and services are spread

117
00:08:53,998 --> 00:08:57,250
across regions to avoid that single point of failure.

118
00:08:57,590 --> 00:09:01,030
So let's talk about security with cloud native systems,

119
00:09:01,450 --> 00:09:05,282
people are afraid of the loss of control and security risks

120
00:09:05,346 --> 00:09:08,678
in using cloud infrastructure. A secure system

121
00:09:08,764 --> 00:09:13,318
needs a secure building, training, constant security updates,

122
00:09:13,414 --> 00:09:17,526
high availability monitoring and disaster recovery infrastructure.

123
00:09:17,718 --> 00:09:22,026
Although many companies that host their software on prem take security

124
00:09:22,128 --> 00:09:25,674
very seriously, it's expensive and requires

125
00:09:25,722 --> 00:09:29,566
many working hours. You can actually raise your

126
00:09:29,588 --> 00:09:33,440
security posture using cloud infrastructure and cloud native services.

127
00:09:33,810 --> 00:09:36,030
There's 24/7 monitoring.

128
00:09:36,610 --> 00:09:40,466
Security expertise is beyond the reach. Expertise is

129
00:09:40,488 --> 00:09:43,810
available that is beyond the reach of most in house teams.

130
00:09:45,190 --> 00:09:48,990
Cloud infrastructure can provide you with internationally recognized

131
00:09:49,070 --> 00:09:52,782
accreditations. Your HIPAA, your isos, your fips,

132
00:09:52,846 --> 00:09:56,662
your sock two. And they can also help you achieve those

133
00:09:56,716 --> 00:09:59,320
third party accreditations for youre products.

134
00:09:59,850 --> 00:10:03,734
I know being cloud native helps cloudsmith achieve our ISO

135
00:10:03,782 --> 00:10:07,642
27 and one last year. It made the process much

136
00:10:07,696 --> 00:10:09,530
faster and more streamlined.

137
00:10:11,790 --> 00:10:15,582
Cloud infrastructure providers have security and

138
00:10:15,636 --> 00:10:18,270
compliance services to help you manage,

139
00:10:18,340 --> 00:10:22,174
access, analyze data for irregular activity, and they can also

140
00:10:22,212 --> 00:10:24,750
tap into machine learning capabilities.

141
00:10:25,170 --> 00:10:29,040
Developers can then use these services to automate security.

142
00:10:30,130 --> 00:10:34,110
They also provide services to prove your compliant relations.

143
00:10:34,270 --> 00:10:37,874
This is really important to those highly regulated industries like

144
00:10:37,992 --> 00:10:41,206
insurance, banking, pharmaceutical, that kind

145
00:10:41,228 --> 00:10:45,318
of thing. Security is definitely a risk when moving to

146
00:10:45,324 --> 00:10:48,646
the cloud, but designing a system with security in

147
00:10:48,668 --> 00:10:52,774
mind and by incorporating security into youre build and deploy

148
00:10:52,822 --> 00:10:56,774
process, your system can actually be more secure than a traditional on prem

149
00:10:56,822 --> 00:11:01,914
system. Let's talk about how cloud

150
00:11:01,952 --> 00:11:05,660
native systems can really benefit distributed teams and customers.

151
00:11:06,130 --> 00:11:09,706
Well, first off, Covid has really supercharged the rise

152
00:11:09,738 --> 00:11:12,986
of the distributed teams. Many teams are remote bursts

153
00:11:13,018 --> 00:11:16,714
and have members that reside around the world. I'm a remote

154
00:11:16,762 --> 00:11:20,246
employee myself. Our head office is in Belfast

155
00:11:20,298 --> 00:11:23,374
and I'm in Dublin on Prem.

156
00:11:23,422 --> 00:11:26,466
Software solutions tend to be faster the closer you are

157
00:11:26,488 --> 00:11:29,974
to the infrastructure. So if you have a team in the US and a team

158
00:11:30,012 --> 00:11:33,078
in Europe and you only have one data center,

159
00:11:33,244 --> 00:11:36,150
one of them is bound to experience lag.

160
00:11:37,450 --> 00:11:40,934
Cloud native services are multi region and provide

161
00:11:41,052 --> 00:11:44,746
consistent response times no matter where you are in the world.

162
00:11:44,928 --> 00:11:49,210
This helps with collaboration and productivity on distributed teams.

163
00:11:49,870 --> 00:11:53,286
Cloud software can use techniques like content delivery

164
00:11:53,318 --> 00:11:57,658
networks and edge caching to further improve performance

165
00:11:57,754 --> 00:12:00,430
on their cloud native systems.

166
00:12:02,370 --> 00:12:06,410
Cloud native systems can also accelerate innovation

167
00:12:06,490 --> 00:12:09,746
in products. Modern DevOps process make it

168
00:12:09,768 --> 00:12:13,170
easy to release and build code multiple times a day.

169
00:12:13,320 --> 00:12:16,660
Deploying new product can take weeks instead of months.

170
00:12:18,150 --> 00:12:21,334
Also, you can tap into that data analytics that's really

171
00:12:21,372 --> 00:12:24,162
associated with cloud native systems.

172
00:12:24,306 --> 00:12:28,386
Data aggregation is made more efficient in cloud native systems.

173
00:12:28,578 --> 00:12:32,034
You can actually build products and gain insights powered by this

174
00:12:32,092 --> 00:12:36,042
data. Another thing to consider

175
00:12:36,176 --> 00:12:39,302
is you can plug into the world's innovation.

176
00:12:39,446 --> 00:12:43,034
You can buy cloud native tooling that can bring you instant and

177
00:12:43,072 --> 00:12:47,230
continual benefits with features getting added without needing any upgrades.

178
00:12:49,410 --> 00:12:53,226
The next section I'm going to talk about this case study into the banking sector

179
00:12:53,258 --> 00:12:58,206
and their cloud transformation the

180
00:12:58,228 --> 00:13:02,274
banking industry has been pretty slow to adopt to the cloud and update their

181
00:13:02,312 --> 00:13:05,870
systems to be cloud native. Banks have long understood

182
00:13:05,950 --> 00:13:09,666
that using cloud infrastructure has cost benefits, but they didn't feel

183
00:13:09,688 --> 00:13:12,962
like it was worth the risk. There's loads of understandable

184
00:13:13,026 --> 00:13:17,026
reasons for this, including they're in a highly regulated industry

185
00:13:17,138 --> 00:13:20,614
and they're reluctant to move from their on prem systems due to

186
00:13:20,652 --> 00:13:23,370
privacy and regulatory reasons.

187
00:13:24,190 --> 00:13:27,418
Banks arent reluctant to move away from their legacy technology,

188
00:13:27,584 --> 00:13:31,322
especially their Carey tech systems that do all those millions of

189
00:13:31,376 --> 00:13:35,010
transactions every day. Because it works. It's familiar.

190
00:13:35,110 --> 00:13:37,760
If it ain't broke, don't fix it kind of thing.

191
00:13:39,090 --> 00:13:42,154
Banking executives have conflicting priorities,

192
00:13:42,282 --> 00:13:46,078
making it difficult for them to prioritize a major huge it

193
00:13:46,164 --> 00:13:53,780
project, especially one associated with such so

194
00:13:54,390 --> 00:13:57,570
we've noticed in cloudsmith over the last few months that

195
00:13:57,640 --> 00:14:01,474
financial institutions have been interested in cloudsmith because

196
00:14:01,512 --> 00:14:05,030
we are a cloud native SaaS product, they're not asking

197
00:14:05,100 --> 00:14:08,920
for our on prem version anymore, which is great because we don't have one.

198
00:14:09,850 --> 00:14:13,626
I've being looking into reasons for why there's been an

199
00:14:13,648 --> 00:14:17,366
increased interest in our product, and I found that several

200
00:14:17,398 --> 00:14:20,970
banks have undergone a cloud transformation during the pandemic.

201
00:14:22,670 --> 00:14:25,870
Capital one announced in November 2020 that it was going

202
00:14:25,940 --> 00:14:29,534
all in on the cloud by closing all its data centers and

203
00:14:29,572 --> 00:14:32,830
migrating everything over to AWS.

204
00:14:33,650 --> 00:14:38,062
JP Morgan, HSBC helps Fargo,

205
00:14:38,206 --> 00:14:42,206
and also there's been comments about it in the New York Times and Forbes

206
00:14:42,238 --> 00:14:45,650
talks about bank's great core to the cloud migration.

207
00:14:47,990 --> 00:14:51,426
Why did this happen now? Well, it's not all banking

208
00:14:51,538 --> 00:14:55,206
cloud infrastructure offerings have matured. They have

209
00:14:55,228 --> 00:14:58,854
services that helps provide to help meet security and

210
00:14:58,892 --> 00:15:01,270
compliance standards in banking.

211
00:15:02,670 --> 00:15:05,510
Regulatory agencies in the US, the UK,

212
00:15:05,590 --> 00:15:09,050
the EU and others are now more open to cloud

213
00:15:09,120 --> 00:15:10,250
only banks.

214
00:15:12,590 --> 00:15:16,650
Several larger banks have undergone a cloud transformation

215
00:15:16,730 --> 00:15:20,202
during the pandemic. This is not a coincidence.

216
00:15:20,346 --> 00:15:24,542
Customers aren't going into banks and they're demanding services and real

217
00:15:24,596 --> 00:15:28,034
time results that require bank systems to

218
00:15:28,072 --> 00:15:30,050
undergo a cloud transformation.

219
00:15:31,750 --> 00:15:35,026
There's also market pressures that banks have to consider.

220
00:15:35,208 --> 00:15:39,378
They're worried about these young pups, the fintechs of the world,

221
00:15:39,464 --> 00:15:42,850
revolut and big techs even like

222
00:15:43,000 --> 00:15:46,406
releasing financial products, and that in order to keep up with

223
00:15:46,428 --> 00:15:48,710
the competition, they need to evolve.

224
00:15:50,170 --> 00:15:53,814
There's also staffing reasons. The pool of technical

225
00:15:53,862 --> 00:15:57,994
talent that understands these legacy systems is

226
00:15:58,032 --> 00:16:01,786
shrinking and aging as the

227
00:16:01,808 --> 00:16:05,450
technology ages. Alan McIntyre

228
00:16:05,530 --> 00:16:08,974
from banking, a senior director for

229
00:16:09,012 --> 00:16:13,422
banking at Accenture, talked about the

230
00:16:13,556 --> 00:16:17,566
causes for the core to the cloud and how it's reached a tipping

231
00:16:17,598 --> 00:16:21,042
point. Now the journey has been worth

232
00:16:21,096 --> 00:16:21,970
the effort.

233
00:16:25,190 --> 00:16:28,626
Well, what do the banking sector get out of

234
00:16:28,648 --> 00:16:31,942
this cloud transformation and these cloud

235
00:16:31,996 --> 00:16:35,414
native systems? Well, all the stuff I talked about before,

236
00:16:35,612 --> 00:16:39,490
reduced cost, performance improvements,

237
00:16:39,650 --> 00:16:43,394
security improvements and security province,

238
00:16:43,442 --> 00:16:47,082
that these cloud

239
00:16:47,136 --> 00:16:51,014
services can now prove that they're compliant

240
00:16:51,062 --> 00:16:55,182
to the regulations that banking have to, that's important

241
00:16:55,236 --> 00:16:59,226
to banking. It's really helped

242
00:16:59,258 --> 00:17:03,178
distributed teams and distributed customers, and it's

243
00:17:03,194 --> 00:17:06,654
also facilitated innovation. So maybe

244
00:17:06,692 --> 00:17:10,286
youre see new features in your banking application. Maybe you're

245
00:17:10,318 --> 00:17:13,746
able to access all your banking products from a

246
00:17:13,768 --> 00:17:16,850
single application now, your mortgage, your credit card,

247
00:17:16,920 --> 00:17:20,390
your savings accounts, they're no longer stored separately.

248
00:17:22,090 --> 00:17:25,910
There's fraud detection features. And also

249
00:17:25,980 --> 00:17:30,406
we're now seeing real time results where before youre

250
00:17:30,428 --> 00:17:33,942
might have to wait a few days, a few days to see your real balance

251
00:17:34,086 --> 00:17:37,542
while it's doing all this batch processing in the background.

252
00:17:37,686 --> 00:17:41,530
And now you're instantly seeing real time results.

253
00:17:44,470 --> 00:17:48,630
Ok, the next section I'm going to talk about how

254
00:17:48,700 --> 00:17:52,134
adding Cloudsmith's cloud native package repository to your

255
00:17:52,172 --> 00:17:56,582
tech stack can really help

256
00:17:56,636 --> 00:18:00,886
your build pipeline. Hey, so Cloudsmith

257
00:18:00,918 --> 00:18:04,346
is a cloud native, fully managed package management as

258
00:18:04,368 --> 00:18:08,566
a service. We host all your packages in any format,

259
00:18:08,758 --> 00:18:12,302
just in case you were wondering about what a package was,

260
00:18:12,436 --> 00:18:16,686
because not everybody is like 24/7

261
00:18:16,788 --> 00:18:19,070
talking about package management.

262
00:18:19,810 --> 00:18:24,258
A package, an artifact, an image or a binary groups together

263
00:18:24,424 --> 00:18:28,002
files containing your software along with metadata about

264
00:18:28,056 --> 00:18:32,190
the software dependencies, those third party dependencies,

265
00:18:32,350 --> 00:18:35,882
maybe open source dependencies or in house dependencies,

266
00:18:36,046 --> 00:18:39,590
all in a well defined format in that package.

267
00:18:39,930 --> 00:18:43,254
So maybe it's a maven package or a Nuget package or

268
00:18:43,292 --> 00:18:45,110
NPM or a docker,

269
00:18:46,730 --> 00:18:50,506
a package repository, a registry or feed. It's a place to

270
00:18:50,528 --> 00:18:54,406
store all your packages. If you have adopted DevOps

271
00:18:54,438 --> 00:18:58,118
practices, you'll be building your packages

272
00:18:58,214 --> 00:19:02,110
a few times a day and pushing them to youre package repository.

273
00:19:03,650 --> 00:19:07,274
So your package repository is at the heart of your software

274
00:19:07,322 --> 00:19:10,990
pipeline and has the potential to be a real bottleneck.

275
00:19:13,410 --> 00:19:17,878
You can see here an example of a build pipeline where you're

276
00:19:17,914 --> 00:19:20,994
building a few times a day you're pushing your package to

277
00:19:21,032 --> 00:19:24,706
Cloudsmith. We're hosting it for you to be available to

278
00:19:24,728 --> 00:19:26,690
deploy to cloud infrastructure.

279
00:19:29,690 --> 00:19:33,558
So one of the key benefits to our customers is that

280
00:19:33,644 --> 00:19:36,886
our cloud native service means that you can push your packages up and

281
00:19:36,908 --> 00:19:41,142
deploy them anywhere in the world. Scaling is handled

282
00:19:41,206 --> 00:19:44,682
by us, distribution is handled by us.

283
00:19:44,816 --> 00:19:47,610
Maintenance and upgrades, that's us as well.

284
00:19:47,760 --> 00:19:51,066
24/7 report support and we

285
00:19:51,088 --> 00:19:54,750
can provide a service level agreement guaranteeing of times.

286
00:19:54,900 --> 00:19:58,474
I think it's like 99.5 but it's generally

287
00:19:58,522 --> 00:20:01,280
99.9, something like that. It's good.

288
00:20:02,290 --> 00:20:05,982
And how are we able to achieve this? Well, Cloudsmith is designed

289
00:20:06,046 --> 00:20:09,406
from the ground up as a cloud native application. We don't

290
00:20:09,438 --> 00:20:12,626
offer an on Prem variant. It means that we

291
00:20:12,648 --> 00:20:16,302
arent multiregion, globally available and scalable.

292
00:20:16,446 --> 00:20:19,320
We're a fully managed package management. As a service,

293
00:20:20,330 --> 00:20:24,294
we're built on top of a content delivery network with over

294
00:20:24,332 --> 00:20:28,686
225 points of presence, allowing us to efficiently

295
00:20:28,738 --> 00:20:31,850
distribute and deploy software artifacts globally.

296
00:20:34,430 --> 00:20:38,026
Another huge benefit that our customers get from using a

297
00:20:38,048 --> 00:20:41,710
cloud native packages manager is that we provide simple pricing.

298
00:20:43,250 --> 00:20:46,270
You pay for your usage and your storage,

299
00:20:46,930 --> 00:20:48,990
your bandwidth and your storage.

300
00:20:51,890 --> 00:20:55,666
Efficient and simple access and analysis of data is part

301
00:20:55,688 --> 00:20:59,362
and parcel with being cloud native. We're also able to provide

302
00:20:59,416 --> 00:21:03,090
our customers with detailed analytics about their repositories

303
00:21:03,510 --> 00:21:06,500
about who has downloaded what and where.

304
00:21:07,770 --> 00:21:10,854
We also provide information

305
00:21:10,972 --> 00:21:14,530
for you to monitor your storage, your bandwidth and your token usage

306
00:21:14,610 --> 00:21:18,018
so you won't be surprised by an unexpected overage

307
00:21:18,114 --> 00:21:21,434
and it'll give you a bit of time to change youre settings before you reach

308
00:21:21,472 --> 00:21:22,330
your limits.

309
00:21:25,070 --> 00:21:27,530
Support is really important to Cloudsmith,

310
00:21:28,430 --> 00:21:32,640
but I have to say it's actually easier for Cloudsmith and

311
00:21:33,650 --> 00:21:37,360
cloud native tools to provide quality support.

312
00:21:37,890 --> 00:21:41,306
We support one tool running on our infrastructure,

313
00:21:41,498 --> 00:21:44,714
other tools, other on prem tools have loads of different

314
00:21:44,772 --> 00:21:48,158
versions out there running in the wild on customers'hardware.

315
00:21:48,254 --> 00:21:51,826
The permutations involved in supporting that make it very difficult to

316
00:21:51,848 --> 00:21:55,726
provide quality support. We value support at Cloudsmith,

317
00:21:55,758 --> 00:21:58,230
but we also benefit from being cloud native.

318
00:21:59,850 --> 00:22:03,890
There's actually a lot of innovation happening in the space of securing

319
00:22:03,970 --> 00:22:06,550
your supply chain and package management.

320
00:22:07,210 --> 00:22:10,774
It's really hard for people to keep up with all the advances in package

321
00:22:10,822 --> 00:22:14,106
management. But because Cloudsmith is cloud native, youre are

322
00:22:14,128 --> 00:22:17,130
always on the latest version with the latest features.

323
00:22:18,510 --> 00:22:23,018
And it's great because our cloud native architecture and DevOps processes

324
00:22:23,114 --> 00:22:26,254
allow us to build and release code several times a day.

325
00:22:26,372 --> 00:22:30,014
We can also release versions of features behind

326
00:22:30,132 --> 00:22:34,186
feature flags, which allows us to kick the tires and reduce

327
00:22:34,218 --> 00:22:38,082
our risk in launching features. We actually have a lot of stuff coming

328
00:22:38,136 --> 00:22:41,874
up in quarter two. We have new formats like Conda for

329
00:22:41,912 --> 00:22:45,506
those data scientists out there. We have support for software bill and

330
00:22:45,528 --> 00:22:49,778
materials. We have support for new ways to sign packages,

331
00:22:49,954 --> 00:22:53,542
more logging and service accounts, and more.

332
00:22:53,676 --> 00:22:57,800
And once they're done, youre customers get those features straight away.

333
00:23:00,110 --> 00:23:03,222
So cloud native engineering teams need a cloud native

334
00:23:03,286 --> 00:23:07,942
tech stack to help them build their software. It facilitates

335
00:23:08,086 --> 00:23:11,706
increased automation and stability. I'm going

336
00:23:11,728 --> 00:23:15,070
to talk about what a cloud native tech stack can look like for building,

337
00:23:15,140 --> 00:23:19,178
testing, packaging, securing and monitoring your software pipeline.

338
00:23:19,354 --> 00:23:23,086
And then let's talk about what to look out for when adding a

339
00:23:23,108 --> 00:23:25,330
cloud native tool to your tech stack.

340
00:23:26,870 --> 00:23:30,334
So what would a cloud native software pipeline

341
00:23:30,382 --> 00:23:33,634
look like for building and deploying your software? You'll need

342
00:23:33,672 --> 00:23:36,790
some source code management.

343
00:23:37,210 --> 00:23:40,994
You'll need CI CD for automatically

344
00:23:41,042 --> 00:23:44,374
building and testing your code anytime a new commit is

345
00:23:44,412 --> 00:23:48,182
made. You need a package management tool

346
00:23:48,236 --> 00:23:52,886
in the center there for hosting

347
00:23:52,918 --> 00:23:56,582
your packages and making them available to deploy

348
00:23:56,646 --> 00:23:59,210
wherever you are or to cloud infrastructure.

349
00:24:00,930 --> 00:24:04,906
You have monitoring tools or observability tools

350
00:24:04,938 --> 00:24:09,294
like your datadogs, your splunks. You have security

351
00:24:09,412 --> 00:24:12,606
tools for scanning your packages or

352
00:24:12,628 --> 00:24:16,002
scanning your code. You have tools for

353
00:24:16,056 --> 00:24:19,070
deploying to infrastructure like Ansible, terraform,

354
00:24:19,150 --> 00:24:20,450
all that kind of jazz.

355
00:24:22,710 --> 00:24:25,842
And cloud native engineering teams need

356
00:24:25,896 --> 00:24:29,240
tools that are stable, that are highly available,

357
00:24:30,010 --> 00:24:33,474
that encourage you to automate your software pipeline,

358
00:24:33,602 --> 00:24:37,014
and tools that are easy to integrate together. Because you can see here

359
00:24:37,052 --> 00:24:40,586
from this image, there's so many permutations when

360
00:24:40,608 --> 00:24:44,266
you're building your software pipeline. All these tools need to

361
00:24:44,368 --> 00:24:48,220
play well together so that you can have the setup that you want.

362
00:24:51,310 --> 00:24:54,910
So what should you look out for when youre adding a cloud native tool

363
00:24:54,980 --> 00:24:58,254
to your software to your tech

364
00:24:58,292 --> 00:25:01,902
stack? It should be easy to sign

365
00:25:01,956 --> 00:25:05,346
up and you should get immediate access to the tool. No waiting for

366
00:25:05,368 --> 00:25:09,026
accounts to be provisioned or permissions to be

367
00:25:09,048 --> 00:25:09,890
granted.

368
00:25:13,910 --> 00:25:17,666
It's frustrating to use and maintain a tool with no does or poor

369
00:25:17,698 --> 00:25:21,510
docs. Features should be well documented, and also

370
00:25:21,580 --> 00:25:24,360
your APIs should be well documented as well.

371
00:25:28,170 --> 00:25:31,334
There are so many permutations for building your software.

372
00:25:31,462 --> 00:25:35,542
Your tooling should provide robust APIs, nice integrations,

373
00:25:35,606 --> 00:25:39,286
and webhooks to allow you to automate your software pipeline to suit

374
00:25:39,318 --> 00:25:43,162
your organization. When something

375
00:25:43,216 --> 00:25:46,334
goes wrong, you want to be able to speak to someone quickly about

376
00:25:46,372 --> 00:25:50,160
what's going on and know that they will help resolve the issue.

377
00:25:51,090 --> 00:25:54,750
So I think there's things that you should consider and

378
00:25:54,820 --> 00:25:58,562
thanks for listening to me. So the cloud has been around for over

379
00:25:58,616 --> 00:26:02,286
ten years, is matured enough so that even highly

380
00:26:02,318 --> 00:26:06,046
regulated industries like banking are moving their core systems

381
00:26:06,078 --> 00:26:09,614
to the cloud. Cloudsmith is a package management

382
00:26:09,742 --> 00:26:13,182
as a service, and can be part of your cloud native

383
00:26:13,246 --> 00:26:16,642
tech stack. I think the journey is

384
00:26:16,696 --> 00:26:19,962
now worth the effort. Thanks so much for listening and

385
00:26:20,016 --> 00:26:21,434
I hope to see you again.

