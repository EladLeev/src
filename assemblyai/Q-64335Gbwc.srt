1
00:00:25,570 --> 00:00:28,982
You. Hey, everyone. Today I am

2
00:00:29,036 --> 00:00:32,530
talking about why are people developing inside containers

3
00:00:32,610 --> 00:00:36,406
and how GitHub code spaces takes containerization to

4
00:00:36,428 --> 00:00:40,374
the next level. Now, I have a bit of

5
00:00:40,492 --> 00:00:44,514
a confession. It's that in 2018,

6
00:00:44,642 --> 00:00:48,226
about five years ago, when I started my software engineers career,

7
00:00:48,338 --> 00:00:52,302
I had no clue what containers were like. I received a list

8
00:00:52,356 --> 00:00:55,902
of install instructions on my first day. It was talking

9
00:00:55,956 --> 00:01:00,554
about install Docker and do this with containers and kubernetes.

10
00:01:00,682 --> 00:01:04,062
And I was like, what are containers? I don't really

11
00:01:04,116 --> 00:01:07,774
understand or why people are developing inside containers.

12
00:01:07,902 --> 00:01:11,038
But I was like, fake it till you make it. Fake it till

13
00:01:11,054 --> 00:01:14,434
you make it. Doesn't matter. But then I went

14
00:01:14,472 --> 00:01:17,058
back to it, and I was like, you know what? It does matter. I want

15
00:01:17,064 --> 00:01:21,142
to know why. So the first half of this talk is to

16
00:01:21,196 --> 00:01:24,902
kind of explain that for folks who

17
00:01:24,956 --> 00:01:28,098
might have related with me. And then the second half of this talk is to

18
00:01:28,124 --> 00:01:31,626
talk about GitHub code spaces. So let's get into it. The way I

19
00:01:31,648 --> 00:01:35,542
like to illustrate what container's purpose

20
00:01:35,606 --> 00:01:39,050
and usage is for is this line.

21
00:01:39,120 --> 00:01:42,630
It works on my machine. So either you found yourself

22
00:01:42,720 --> 00:01:45,678
saying that before, or you've heard somebody say that,

23
00:01:45,764 --> 00:01:48,640
and if not, it's soon to come.

24
00:01:49,010 --> 00:01:52,518
And you might be like, why would somebody say it works on my machine?

25
00:01:52,634 --> 00:01:56,274
So when you start coding at a

26
00:01:56,312 --> 00:02:00,430
company or for an open source project or whatever, maybe your configurations

27
00:02:00,510 --> 00:02:03,970
are sometimes a little bit different. So sometimes

28
00:02:04,040 --> 00:02:07,338
when you fix a bug or add a new feature, and then you push

29
00:02:07,374 --> 00:02:11,090
it up to production or staging, or you share it with a coworker

30
00:02:11,170 --> 00:02:15,350
or teammate, they're like, it's not working for me. It's not working

31
00:02:15,420 --> 00:02:18,934
here. It's broken. And that is because you might have slightly

32
00:02:18,982 --> 00:02:22,966
different containerization settings or environment variables, or something's

33
00:02:22,998 --> 00:02:27,114
just a little bit different, which is causing your

34
00:02:27,152 --> 00:02:30,746
feature or your bug to not be reflected in the same way as

35
00:02:30,768 --> 00:02:33,822
it was on your local machine. So then it makes you say,

36
00:02:33,876 --> 00:02:38,430
wait, but it works on my computer. It works on my machine. Like, I swear.

37
00:02:39,250 --> 00:02:42,786
Yeah. So that's kind of

38
00:02:42,808 --> 00:02:46,850
why containers were created. Or part of it, right? Is to

39
00:02:47,000 --> 00:02:50,210
stabilize or create some consistent within

40
00:02:50,280 --> 00:02:54,066
environments. And what

41
00:02:54,088 --> 00:02:57,746
is a container? Right. So, according to Docker,

42
00:02:57,858 --> 00:03:02,130
a container is a standard unit of software that packages

43
00:03:02,210 --> 00:03:05,746
up code and all its dependencies so applications

44
00:03:05,778 --> 00:03:09,862
can run quickly and reliably from one computing environment

45
00:03:10,006 --> 00:03:14,106
to another. And what is

46
00:03:14,128 --> 00:03:18,038
Docker? Docker is an open source

47
00:03:18,134 --> 00:03:22,154
platform or product that was founded in March 2013

48
00:03:22,282 --> 00:03:25,614
by Solomon Hykes. And when

49
00:03:25,652 --> 00:03:29,774
people think of containers, they immediately go to Docker but

50
00:03:29,892 --> 00:03:33,998
Docker didn't create containers or the idea of containers.

51
00:03:34,094 --> 00:03:37,922
It only popularized the use of containers because

52
00:03:37,976 --> 00:03:42,526
Docker made it so much easier. It's more of like a suite

53
00:03:42,718 --> 00:03:46,738
of different management tools for containers.

54
00:03:46,914 --> 00:03:50,440
And it made it way easier for developers to be able to

55
00:03:51,610 --> 00:03:55,494
containerize or package up all their software and

56
00:03:55,532 --> 00:03:59,802
ship it. So just

57
00:03:59,856 --> 00:04:03,110
reiterating the users of containers and why they exist.

58
00:04:03,190 --> 00:04:06,346
So containers enable software engineers to program in

59
00:04:06,368 --> 00:04:10,762
a consistent environment. So for example, your dev environment

60
00:04:10,906 --> 00:04:14,766
may mirror, or will now mirror your production environment with

61
00:04:14,788 --> 00:04:18,506
the same operating system configurations and dependencies.

62
00:04:18,618 --> 00:04:22,014
And this will enable all bugs and features that

63
00:04:22,052 --> 00:04:24,814
behave the same across all environments.

64
00:04:24,942 --> 00:04:28,754
So now you don't have to say it works on my machine, it works

65
00:04:28,792 --> 00:04:32,418
on everybody's now. So let's go back in time. Little history

66
00:04:32,504 --> 00:04:37,026
lesson of the origination or how containers

67
00:04:37,218 --> 00:04:41,574
were created. So we start in 1979

68
00:04:41,692 --> 00:04:45,414
with this command called Shrut. I think

69
00:04:45,452 --> 00:04:48,870
some people pronounce it differently, but your girl says Shrut.

70
00:04:49,550 --> 00:04:53,318
But basically this command allowed you to change the root directory

71
00:04:53,414 --> 00:04:56,794
for any given process. And the benefit here is that

72
00:04:56,832 --> 00:05:00,414
it gave you an isolated environment for build processes and

73
00:05:00,452 --> 00:05:04,234
dependencies. Then in 2000 came freebsd

74
00:05:04,282 --> 00:05:07,754
jails. And these were pretty similar where they allowed developers

75
00:05:07,802 --> 00:05:10,942
to isolate and test updates and changes

76
00:05:11,076 --> 00:05:14,642
without jeopardizing the integrity of the system. The cool

77
00:05:14,696 --> 00:05:18,590
thing is these came with some designated IP addresses.

78
00:05:18,750 --> 00:05:23,150
Then in 2006, Google created this thing called process containers,

79
00:05:23,230 --> 00:05:25,726
which have now been renamed to control groups,

80
00:05:25,758 --> 00:05:30,062
aka c groups. And basically this isolated resource

81
00:05:30,126 --> 00:05:34,118
usage of like hours, cpu, memory, disk, I o and

82
00:05:34,204 --> 00:05:37,494
network. Basically this is just giving developers a chance

83
00:05:37,532 --> 00:05:41,270
to be like, hey, here's this container

84
00:05:41,350 --> 00:05:44,586
or area where this resource is.

85
00:05:44,608 --> 00:05:47,882
And I want to test and debug and figure out what's going on

86
00:05:47,936 --> 00:05:51,802
without touching the rest of the system. And then comes

87
00:05:51,856 --> 00:05:55,930
in Docker. So I kind of skipped a lot, but there were other implementations

88
00:05:56,010 --> 00:05:59,370
of different type of container management and containers.

89
00:05:59,530 --> 00:06:03,362
But Docker came in in 2013 and this

90
00:06:03,416 --> 00:06:06,514
was way easier to use and people were like,

91
00:06:06,552 --> 00:06:10,034
okay, I can dig it. And introduced a suite of

92
00:06:10,072 --> 00:06:13,330
management and packaging tools for containerization.

93
00:06:13,670 --> 00:06:17,510
Essentially all of this is to say, this has been

94
00:06:17,580 --> 00:06:21,250
a pursuit of figuring out how we can run software

95
00:06:21,330 --> 00:06:24,360
reliably from one environment to another.

96
00:06:26,410 --> 00:06:30,546
And I think code spaces takes containerization

97
00:06:30,658 --> 00:06:34,218
to the next level. And we're going to talk about how right after

98
00:06:34,304 --> 00:06:37,898
I introduce myself a little bit more, I like to introduce myself,

99
00:06:38,064 --> 00:06:41,338
you're like, who is this person that's talking? Who's this amazing

100
00:06:41,424 --> 00:06:44,986
person? So my name is Rizel Scarlett. I'm a junior developer

101
00:06:45,018 --> 00:06:48,606
advocate at GitHub. Before that I was a software engineer for about

102
00:06:48,628 --> 00:06:51,774
three years. I'm an advisor, and I was a director at

103
00:06:51,812 --> 00:06:55,886
an organization called Code, which introduces women of color

104
00:06:56,068 --> 00:06:59,874
and non binary people of color to web development for free.

105
00:06:59,992 --> 00:07:03,474
I'm also pretty passionate, or some might say

106
00:07:03,512 --> 00:07:06,946
addicted to social media. So if you are also on

107
00:07:06,968 --> 00:07:10,530
the interwebs, you can go ahead and follow me at black girl Hykes

108
00:07:10,610 --> 00:07:14,322
on Twitter, mastodon, Instagram dev two hash node,

109
00:07:14,466 --> 00:07:18,450
literally anything you could think of except on Twitch. I am black girl hykes.

110
00:07:18,530 --> 00:07:22,566
One because I forgot my password and got myself locked

111
00:07:22,598 --> 00:07:26,074
out of my account. All right, let's jump back

112
00:07:26,112 --> 00:07:29,434
into it. So we're going to talk about what is GitHub codespaces and how it

113
00:07:29,472 --> 00:07:33,130
takes development to the next level, how it's taking containerization

114
00:07:33,210 --> 00:07:35,630
to the next level. First of all, what is it,

115
00:07:35,700 --> 00:07:40,026
right, essentially to not even make it complicated.

116
00:07:40,138 --> 00:07:43,706
It's just an ide in your browser.

117
00:07:43,818 --> 00:07:46,654
So whether that's vs. Code, jetbrains,

118
00:07:46,702 --> 00:07:50,302
Jupyterlab, you can get that in your browser.

119
00:07:50,446 --> 00:07:53,694
And I hope y'all like my meme of Tyra Banks saying vs.

120
00:07:53,742 --> 00:07:57,854
Code, but make it fashion. All right, so why would

121
00:07:57,912 --> 00:08:01,250
this be helpful to you? Like vs. Code in your browser?

122
00:08:01,410 --> 00:08:05,190
So when you work in a code space, the environment you're working in

123
00:08:05,260 --> 00:08:09,174
is created using a development container, and that development container

124
00:08:09,222 --> 00:08:12,774
is hosted on a virtual machine. So this is allowing

125
00:08:12,822 --> 00:08:16,682
you to code in a container that's hosted on

126
00:08:16,816 --> 00:08:19,690
the cloud, as everyone says.

127
00:08:19,840 --> 00:08:23,534
And what is the cloud? Right? If you're like, what is this cloud thing?

128
00:08:23,652 --> 00:08:26,782
It's just can environment that doesn't reside on your computer,

129
00:08:26,916 --> 00:08:30,462
but rather on the Internet. It's not with you,

130
00:08:30,596 --> 00:08:34,260
that server, that environment is not with you. It's in the cloud.

131
00:08:35,350 --> 00:08:39,470
Okay, so I do want to specify

132
00:08:39,630 --> 00:08:43,394
like codespaces is not the GitHub web editor. I've called

133
00:08:43,432 --> 00:08:46,994
to a couple people and they've thought it's the GitHub

134
00:08:47,042 --> 00:08:50,566
web editor. So the GitHub web editor is when you go

135
00:08:50,588 --> 00:08:54,214
to a repository and then you press the period button and

136
00:08:54,252 --> 00:08:57,910
it opens up a web editor like view

137
00:08:57,980 --> 00:09:02,294
for you. And this just allows you to edit your

138
00:09:02,332 --> 00:09:06,010
files, right? But you can't, like if you just had a formatting problem

139
00:09:06,080 --> 00:09:09,382
or something and you wanted to quickly edit your files

140
00:09:09,446 --> 00:09:12,698
without ruining the spacing for Yaml, because we

141
00:09:12,704 --> 00:09:15,482
know Yaml is a little picky or any other thing,

142
00:09:15,536 --> 00:09:18,526
right? We don't want prettier to yell at us and we want to edit the

143
00:09:18,548 --> 00:09:22,334
code without opening up our editor and

144
00:09:22,532 --> 00:09:25,826
cloning things and doing all that, you just go into the

145
00:09:25,848 --> 00:09:29,246
GitHub web editor and edit it and then commit

146
00:09:29,278 --> 00:09:32,686
it. But it has no terminal. You can't

147
00:09:32,718 --> 00:09:36,802
run the code. You can't really do much. That is the GitHub web editor

148
00:09:36,866 --> 00:09:40,658
as opposed to GitHub code spaces. It has a terminal,

149
00:09:40,754 --> 00:09:44,454
you can run your code there, you can

150
00:09:44,492 --> 00:09:48,442
set up what machine type you're using,

151
00:09:48,496 --> 00:09:52,090
right? You can use GPU, you can use a whole bunch of different

152
00:09:52,160 --> 00:09:55,290
things on GitHub code spaces.

153
00:09:55,710 --> 00:09:59,354
And GitHub code spaces is not necessarily free.

154
00:09:59,472 --> 00:10:02,874
So you do get 60 hours of free usage

155
00:10:02,922 --> 00:10:07,146
per month. So that's a good amount. But GitHub web editor

156
00:10:07,178 --> 00:10:09,760
is free forever for all time.

157
00:10:11,410 --> 00:10:14,622
All right, so the benefits of GitHub code spaces,

158
00:10:14,686 --> 00:10:17,874
why would you want to code in a

159
00:10:17,992 --> 00:10:21,614
development container that's hosted on the cloud and now you're

160
00:10:21,662 --> 00:10:24,590
in your browser? Well, you get faster,

161
00:10:24,750 --> 00:10:27,922
right? Or you can automate the onboarding process

162
00:10:27,976 --> 00:10:31,286
for folks. If you've ever joined a new job, they give

163
00:10:31,308 --> 00:10:34,758
you this document of like, here's all the steps you got

164
00:10:34,764 --> 00:10:38,362
to do to be able to code in this code base. And it can take

165
00:10:38,416 --> 00:10:42,554
forever, like a day to a week. And with

166
00:10:42,592 --> 00:10:46,042
this, your manager or coworker or whatever can

167
00:10:46,096 --> 00:10:50,006
set up all the environment variables.

168
00:10:50,038 --> 00:10:53,130
You'll need all the dependencies all in one go.

169
00:10:53,200 --> 00:10:56,078
And then when you start your new job, you can open it up and be

170
00:10:56,084 --> 00:11:00,174
like, wow, I can commit code day one. I don't need to do the

171
00:11:00,212 --> 00:11:03,594
setup stuff. It allows you to code from anywhere

172
00:11:03,642 --> 00:11:07,666
as well. Because it's browser based. You don't have to download your

173
00:11:07,688 --> 00:11:10,946
repo or clone your repo onto your local machine and

174
00:11:10,968 --> 00:11:15,550
then start installing things again because you have that automated configuration

175
00:11:15,630 --> 00:11:19,780
file that's setting everything up for you. It's all in there,

176
00:11:20,250 --> 00:11:24,322
believe me. I've coded in codespaces

177
00:11:24,386 --> 00:11:27,106
on a plane, on my iPad.

178
00:11:27,298 --> 00:11:31,494
So wherever you have Internet access, and if you have access to that repository,

179
00:11:31,622 --> 00:11:35,866
you can open that bad boy up. And then because it's using

180
00:11:35,968 --> 00:11:39,562
containers again, you don't have that problem

181
00:11:39,616 --> 00:11:43,454
of it works on my machine because it's bringing that uniformity to

182
00:11:43,492 --> 00:11:46,654
your developers environments. All right,

183
00:11:46,692 --> 00:11:50,202
so let's talk about how codespaces can be used for onboarding

184
00:11:50,266 --> 00:11:53,942
new employees. So codespaces

185
00:11:54,026 --> 00:11:57,202
users this concept called configuration as

186
00:11:57,256 --> 00:12:01,150
code and what that is is basically config files

187
00:12:01,230 --> 00:12:04,834
dictating how your app should run on the

188
00:12:04,872 --> 00:12:08,594
given environment, whether it's a platform or hardware operating

189
00:12:08,642 --> 00:12:12,166
system, whatever your config files are saying, this is what

190
00:12:12,268 --> 00:12:16,006
should happen. This is what I'm expecting. This is

191
00:12:16,028 --> 00:12:17,800
the environment that I'm in.

192
00:12:18,810 --> 00:12:22,134
And the benefit of this right to have config

193
00:12:22,182 --> 00:12:26,214
files as code is now you can manage them in your repository

194
00:12:26,342 --> 00:12:30,300
with version control. And this allows you to do things like

195
00:12:30,750 --> 00:12:34,686
have them all in a centralized location, have CI CD run

196
00:12:34,708 --> 00:12:37,806
on them, and be able to trace bugs. I'll go on to a little bit

197
00:12:37,828 --> 00:12:41,626
more on this slide. Right, so centralization, you have one single source

198
00:12:41,658 --> 00:12:45,166
of truth for your config files. They're all

199
00:12:45,188 --> 00:12:49,326
in one place. You're not searching everywhere for them because they're in your repository.

200
00:12:49,438 --> 00:12:52,706
You can run like CI CD stuff on them. So if you

201
00:12:52,728 --> 00:12:55,986
want to check out linting or testing or do some

202
00:12:56,008 --> 00:12:59,862
security scanning on them, you can do that all in one go with hours code

203
00:12:59,916 --> 00:13:03,154
and your config files. And then also if you make a mistake,

204
00:13:03,202 --> 00:13:06,258
maybe there's an extra space or a random comma.

205
00:13:06,354 --> 00:13:10,250
You can look back through your commits, your version control,

206
00:13:10,320 --> 00:13:13,610
and be like, oh, that's what changed. I accidentally added a comma.

207
00:13:14,830 --> 00:13:18,778
All right, so let's talk about how we can set this up

208
00:13:18,944 --> 00:13:22,302
for newcomers, right? So you have this thing called

209
00:13:22,356 --> 00:13:26,558
a dev container JSOn. It is responsible for

210
00:13:26,644 --> 00:13:30,778
automatically installing things like extensions, environment variables,

211
00:13:30,874 --> 00:13:34,654
install commands, build commands, your docker

212
00:13:34,702 --> 00:13:38,526
file, post forwarding and post creation commands,

213
00:13:38,638 --> 00:13:41,998
or specifying

214
00:13:42,014 --> 00:13:44,978
your Docker file. So here in this example, right,

215
00:13:45,064 --> 00:13:49,090
this is one for node js. We're saying we're using this Docker file.

216
00:13:49,250 --> 00:13:52,694
We're going to use code JS 16. And here's all the

217
00:13:52,732 --> 00:13:56,482
extensions I want installed automatically. I want es lint, I want prettier,

218
00:13:56,546 --> 00:14:00,246
and I want live share. I could specify the forwarding ports. Like I could

219
00:14:00,268 --> 00:14:04,426
say I want it to run on 3000 when it's open and when

220
00:14:04,448 --> 00:14:07,366
it opens up, when that code space opens up, I want it to run yarn

221
00:14:07,398 --> 00:14:10,170
install da da da da da. Cool stuff,

222
00:14:10,240 --> 00:14:13,214
right? And then we have our Docker file, right?

223
00:14:13,252 --> 00:14:16,474
Docker files are used to automate the installation and containerization

224
00:14:16,522 --> 00:14:20,126
of a container, so it contains a list of commands that the

225
00:14:20,148 --> 00:14:23,406
Docker client calls while creating an image. For this, all I

226
00:14:23,428 --> 00:14:26,786
needed to write was node 16 bullseye, because that's all I

227
00:14:26,808 --> 00:14:29,714
needed. That's all I wanted. It's just node 16, right?

228
00:14:29,832 --> 00:14:33,362
And then we have the Docker compose YaMl file. This is probably

229
00:14:33,416 --> 00:14:36,662
one that's less users, but it is useful if you want to run

230
00:14:36,716 --> 00:14:40,098
multiple containers. So let's say you want to run a database

231
00:14:40,194 --> 00:14:43,874
and a web server in a code space. That's what the Docker

232
00:14:43,922 --> 00:14:46,680
compose yaml file is for,

233
00:14:47,370 --> 00:14:51,226
and you can use it for that. So if we look at

234
00:14:51,328 --> 00:14:55,530
this file right here, we see them setting up the postgres database

235
00:14:55,870 --> 00:15:00,194
and saying even what port they wanted on and putting in all those variables.

236
00:15:00,262 --> 00:15:03,134
So you got it? All right,

237
00:15:03,252 --> 00:15:07,342
let's talk about one use case that I thought of

238
00:15:07,396 --> 00:15:11,354
for code spaces, which is using it if you were a coding

239
00:15:11,402 --> 00:15:14,946
instructor. I don't think many people have thought of this,

240
00:15:15,048 --> 00:15:18,562
but for me, as someone who's taught people to code either

241
00:15:18,616 --> 00:15:22,366
online or in person, for coding workshops or boot

242
00:15:22,398 --> 00:15:26,038
camps, I've been like, yo, code spaces would be so cool for this.

243
00:15:26,124 --> 00:15:29,622
So here is, let me pause this really quickly

244
00:15:29,676 --> 00:15:33,000
and give some consistent here I have a,

245
00:15:33,770 --> 00:15:37,286
I started from the beginning. Give me a

246
00:15:37,308 --> 00:15:38,380
quick second,

247
00:15:40,750 --> 00:15:45,020
give me a quick second. All right,

248
00:15:48,350 --> 00:15:52,274
we were here, so I don't want it to press play, but essentially

249
00:15:52,422 --> 00:15:55,886
pause. What has happened here is I set up

250
00:15:55,908 --> 00:15:59,626
a code space, and this code space, this is for someone teaching

251
00:15:59,658 --> 00:16:03,774
them front end like HTML, CSS and JavaScript if they've never done

252
00:16:03,812 --> 00:16:06,914
it too much before. And what I have is when they open

253
00:16:06,952 --> 00:16:10,306
it up, they get a view of the browser. This gives them a

254
00:16:10,328 --> 00:16:13,826
cloud that I but part of the clock. But I have some

255
00:16:13,848 --> 00:16:18,054
missing pieces here. And essentially one

256
00:16:18,092 --> 00:16:21,170
half is the browser or the preview of the browser,

257
00:16:21,250 --> 00:16:25,090
and then the other half is splitting up their HTML,

258
00:16:25,170 --> 00:16:29,190
CSS and Javascript files for them so they can see it clearly.

259
00:16:30,250 --> 00:16:33,962
And then I have these little prompts created by

260
00:16:34,016 --> 00:16:37,754
an extension, a GitHub extension called code tour. So once they

261
00:16:37,792 --> 00:16:40,778
open it up, they get all of this and the prompt tells them hey,

262
00:16:40,944 --> 00:16:44,718
there's a question mark here. Can you update the h one value

263
00:16:44,804 --> 00:16:48,206
to change it to six? And it does all these things so they can get

264
00:16:48,228 --> 00:16:51,882
a little bit comfortable moving around or navigating

265
00:16:51,946 --> 00:16:55,646
these different files from an HTML file to CSS file

266
00:16:55,678 --> 00:16:58,674
to a JavaScript file. So I'm going to press play so you can see the

267
00:16:58,712 --> 00:17:02,590
experience. So here I'm changing

268
00:17:02,750 --> 00:17:06,674
that question mark to six, and then I say,

269
00:17:06,792 --> 00:17:09,974
oh cool, let's change the color. Let's change

270
00:17:10,012 --> 00:17:13,286
the color. So they're looking at the CSS and the linear gradient and

271
00:17:13,308 --> 00:17:16,038
maybe they want to change it to red. Okay, cool.

272
00:17:16,204 --> 00:17:19,882
And there's one thing that's pretty weird. The hour

273
00:17:19,936 --> 00:17:23,978
hand and the second hand are moving really fast.

274
00:17:24,144 --> 00:17:27,994
So I ask them to update one of the

275
00:17:28,032 --> 00:17:31,600
lines and I say change the seconds to hour.

276
00:17:32,130 --> 00:17:35,662
Yes, cool. So now

277
00:17:35,796 --> 00:17:39,134
that it's updated, the hour hand is going to move on

278
00:17:39,172 --> 00:17:42,606
the hour and the second hand is going to move on

279
00:17:42,628 --> 00:17:46,174
the second and then it says mission complete. So all

280
00:17:46,212 --> 00:17:49,794
the stuff I users here is essentially I'll show you.

281
00:17:49,912 --> 00:17:53,634
First I set up a dev container JSon so that

282
00:17:53,752 --> 00:17:57,074
when they opened it up and all I had in there was just these

283
00:17:57,112 --> 00:18:00,182
extensions, nothing else, because I didn't need anything else.

284
00:18:00,236 --> 00:18:03,910
There's no backend or anything here. Just when they open up this code space,

285
00:18:03,980 --> 00:18:07,830
I wanted it to immediately install eslint for them.

286
00:18:07,900 --> 00:18:11,766
Prettier vs live share an extension I made called deploy

287
00:18:11,798 --> 00:18:14,726
to GitHub pages so that they can deploy this afterwards.

288
00:18:14,918 --> 00:18:18,102
The same vs code theme I had code swing,

289
00:18:18,166 --> 00:18:21,366
code hours, and code spell checker. This helped

290
00:18:21,398 --> 00:18:24,606
me immensely because I find what happens, especially in

291
00:18:24,628 --> 00:18:27,594
a remote environment, is sometimes people get lost,

292
00:18:27,722 --> 00:18:31,146
and especially if there's multiple people and I can't

293
00:18:31,178 --> 00:18:35,134
see that they're lost because I'm not in the same place as them. So having

294
00:18:35,172 --> 00:18:39,358
the code tour extension helps them to stay on track and get guided,

295
00:18:39,454 --> 00:18:43,042
even when they're not too sure what to do. And then

296
00:18:43,176 --> 00:18:46,478
having them have the same theme as me and stuff like that. So they're

297
00:18:46,494 --> 00:18:50,566
not like oh excuse me instructor, why is mine highlighted as

298
00:18:50,588 --> 00:18:54,390
blue but yours is highlighted as pink? Everything the same across

299
00:18:54,460 --> 00:18:58,006
the board for them, same environment, so that it doesn't allow them

300
00:18:58,028 --> 00:19:02,122
to be confused. Then there's can extension called

301
00:19:02,176 --> 00:19:05,990
codeswing. So what I added in there is a file called codeswing

302
00:19:06,070 --> 00:19:09,226
JSon to kind of show the layout of how

303
00:19:09,248 --> 00:19:12,890
I wanted things to go. So I wanted the files, the index

304
00:19:12,970 --> 00:19:16,734
HTML, the CSS and the Javascript to be split on the right,

305
00:19:16,852 --> 00:19:20,480
and then you would see the browser on the left hand side.

306
00:19:21,730 --> 00:19:25,066
Then we had the code tour and this is that extension

307
00:19:25,098 --> 00:19:28,306
that gives you a tour of the code base. I used it to kind of

308
00:19:28,328 --> 00:19:32,306
guide them through stuff. So I have different steps here and

309
00:19:32,328 --> 00:19:35,634
I specify which line and which file and what I

310
00:19:35,672 --> 00:19:39,026
want the code tour to say and they can press next when they've

311
00:19:39,058 --> 00:19:42,086
completed it. I thought that was pretty fun.

312
00:19:42,268 --> 00:19:45,842
Then there's also, I also think code spaces is useful

313
00:19:45,906 --> 00:19:49,714
for those who like experimenting with different programming

314
00:19:49,762 --> 00:19:53,094
languages. There's some people that as soon as a new framework,

315
00:19:53,142 --> 00:19:56,378
Javascript framework comes out, people want to try it out, and I

316
00:19:56,464 --> 00:20:00,426
don't get them wrong, I'm like, it's totally fine. So there

317
00:20:00,448 --> 00:20:03,934
is this idea in code space, or this concept in code space is

318
00:20:03,972 --> 00:20:07,150
called templates. So I'm going to go ahead and

319
00:20:07,300 --> 00:20:11,374
navigate over there. So here

320
00:20:11,412 --> 00:20:15,118
we have GitHub.com codespaces

321
00:20:15,294 --> 00:20:19,234
templates and you have multiple templates. You can either open

322
00:20:19,272 --> 00:20:22,590
up a blank template, a ruby on rails template, a react

323
00:20:22,670 --> 00:20:26,226
Jupyter express, and nextjs and

324
00:20:26,328 --> 00:20:29,240
much more. So we're going to open up the nextjs one.

325
00:20:33,690 --> 00:20:36,550
While this is opening up, I'm going to clear my throat.

326
00:20:37,630 --> 00:20:40,490
And now you all are seeing the login for GitHub.

327
00:20:48,990 --> 00:20:53,430
All righty. And I might zoom in here just a smidge.

328
00:20:53,590 --> 00:20:57,690
So it might take a little bit of time. I pressed reset

329
00:20:57,770 --> 00:21:00,974
right after it did it. It's going to take a little bit of time to

330
00:21:01,012 --> 00:21:04,250
install all the things needed. So it has a couple of extensions

331
00:21:04,410 --> 00:21:07,714
and it should open up a browser view for me.

332
00:21:07,752 --> 00:21:10,994
I'm going to let it do its thing, but we can watch it

333
00:21:11,032 --> 00:21:15,018
happen. Pretty cool that. Here's the browser opening

334
00:21:15,054 --> 00:21:16,920
up on the left hand side for me.

335
00:21:17,930 --> 00:21:21,446
So we can see that in

336
00:21:21,468 --> 00:21:25,362
the browser we have a file that says fast refresh

337
00:21:25,426 --> 00:21:29,110
demo and essentially it has a component with state.

338
00:21:29,260 --> 00:21:32,486
So if I click it, the clicks keep counting.

339
00:21:32,518 --> 00:21:35,786
It can throw an error for me too. Document body is

340
00:21:35,808 --> 00:21:40,038
not a function. So I can go ahead now that everything is essentially

341
00:21:40,134 --> 00:21:42,780
set up and I can find that.

342
00:21:43,630 --> 00:21:46,094
Let me put it on this side so we'll be able to see it.

343
00:21:46,132 --> 00:21:49,742
I can find that index js file and I can say

344
00:21:49,796 --> 00:21:53,682
maybe I want, for whatever reason, the count to increment by

345
00:21:53,736 --> 00:21:57,634
two. So if I save that, it'll automatically change to that.

346
00:21:57,672 --> 00:22:05,978
I think it's

347
00:22:06,094 --> 00:22:06,760
okay.

348
00:22:09,850 --> 00:22:13,270
I decided to go off script and do that. Don't worry.

349
00:22:16,090 --> 00:22:19,962
Let's go back to actually what was on my script. My script was

350
00:22:20,016 --> 00:22:23,462
to actually go ahead and change the file

351
00:22:23,526 --> 00:22:26,682
here. So instead of changing the count,

352
00:22:26,736 --> 00:22:30,640
I expected it to go up by two. That's all right.

353
00:22:31,490 --> 00:22:35,406
What I'm going to do instead. I might not have paid attention to what

354
00:22:35,428 --> 00:22:38,960
the incremental values are. Perhaps this was

355
00:22:39,650 --> 00:22:43,006
for this part and not for this. That's all right.

356
00:22:43,108 --> 00:22:46,130
So I can essentially go ahead and just change

357
00:22:46,200 --> 00:22:49,394
like this. Instead of it saying fast refresh demo, I can

358
00:22:49,432 --> 00:22:53,266
say code spaces takes containerization and

359
00:22:53,288 --> 00:22:56,882
I'll move these files. We don't need this folder so big to

360
00:22:56,936 --> 00:23:00,450
the next level and we can see this automatically

361
00:23:00,530 --> 00:23:04,182
changing. Right? You get that view right there. And this gives you a chance

362
00:23:04,236 --> 00:23:07,350
to be huh? How does next JS work? Let me play around

363
00:23:07,420 --> 00:23:10,866
with some of the features here. It's already set

364
00:23:10,908 --> 00:23:14,506
up for you, or if you already know, next JS, but you just

365
00:23:14,528 --> 00:23:18,262
want to create a quick demo app instead of going through NPM

366
00:23:18,326 --> 00:23:22,326
install or yarn install or whatever for next JS. Here you have

367
00:23:22,368 --> 00:23:26,030
this playground that you can play around in and you can actually

368
00:23:26,100 --> 00:23:29,950
go ahead and just commit it to your repository.

369
00:23:30,370 --> 00:23:34,260
And I think that part of it's so fun. All right, let's go back.

370
00:23:36,550 --> 00:23:39,998
Oh man. All right, now here's

371
00:23:40,014 --> 00:23:43,438
the other thing. I think it's great. If you're prayer programming

372
00:23:43,534 --> 00:23:46,962
similar to Ngrok, you can do port

373
00:23:47,016 --> 00:23:50,746
forwarding here. So if we go to the dev container

374
00:23:50,798 --> 00:23:54,086
JSon, I'm hoping it's going to tell us that it's forwarded. Yes,

375
00:23:54,188 --> 00:23:57,634
forwarded to port 3000 or this is the forward port,

376
00:23:57,692 --> 00:24:02,090
right? And then it forwards it to this

377
00:24:02,160 --> 00:24:05,270
long address that says black girl bytes,

378
00:24:05,350 --> 00:24:09,530
verbospace invention and all these random numbers. So normally

379
00:24:10,350 --> 00:24:13,598
the convention, the naming convention is like the owner's name,

380
00:24:13,684 --> 00:24:17,118
a random word that it's generated, and then a

381
00:24:17,124 --> 00:24:21,034
couple of random numbers, the port number, and then preview

382
00:24:21,162 --> 00:24:24,978
app GitHub dev. Now this is

383
00:24:25,064 --> 00:24:28,690
something that if I click this and I've opened it in my browser,

384
00:24:29,270 --> 00:24:32,354
I can see the same thing, right? Instead of just

385
00:24:32,392 --> 00:24:35,794
seeing it within code spaces, or if I wanted

386
00:24:35,832 --> 00:24:39,414
to share it with someone and prove to them that yes, it does work

387
00:24:39,452 --> 00:24:42,870
on my machine. While we're coding together in live share

388
00:24:42,940 --> 00:24:46,646
on GitHub code spaces, I can change the visibility and

389
00:24:46,668 --> 00:24:51,082
I can say I want this to be public in general or

390
00:24:51,216 --> 00:24:54,486
just public to my containerization. So like anybody who's

391
00:24:54,518 --> 00:24:58,300
part of my organization could be able to see this. So if I but public,

392
00:24:59,230 --> 00:25:03,338
and let's say I copied this copy and

393
00:25:03,424 --> 00:25:06,526
I'm going to open this, but I'm not sure if it

394
00:25:06,548 --> 00:25:09,966
would change anything for you all. But if I was to share this

395
00:25:09,988 --> 00:25:13,406
with somebody, I'll open it in a different browser, they would still be

396
00:25:13,428 --> 00:25:17,362
able to see it as well. It doesn't too much really

397
00:25:17,496 --> 00:25:20,290
show that for you because I'm on the same computer,

398
00:25:20,440 --> 00:25:23,614
but you can change that port visibility.

399
00:25:23,742 --> 00:25:27,170
And it's one of the things that I think is pretty cool on GitHub

400
00:25:27,250 --> 00:25:30,520
codespaces. But wait, there's more.

401
00:25:30,890 --> 00:25:34,550
So after we talk about port forwarding,

402
00:25:36,010 --> 00:25:39,946
you can also manage code spaces from the command line,

403
00:25:40,048 --> 00:25:43,274
which I think is pretty fun, pretty awesome if

404
00:25:43,312 --> 00:25:46,730
you are a command line geek here. In this example,

405
00:25:46,800 --> 00:25:50,714
I show that you can type Gh codespaces list and

406
00:25:50,752 --> 00:25:54,350
see a list of all your GitHub code spaces. You can also create

407
00:25:54,420 --> 00:25:57,486
a GitHub code space from here. So what I'm going to do

408
00:25:57,508 --> 00:26:01,310
in the next slide here is. So I created a GitHub code space by

409
00:26:01,380 --> 00:26:05,502
saying GitHub gh codespaces create that flag

410
00:26:05,566 --> 00:26:09,150
r. Then the owner of this, so I have an organization

411
00:26:09,230 --> 00:26:13,102
called galaxy bytes, and then the repo name, which is pink

412
00:26:13,166 --> 00:26:16,606
moon, and I want it to be the code space to be created

413
00:26:16,638 --> 00:26:20,278
on my main branch. So I'm going to go ahead and do that. I create

414
00:26:20,364 --> 00:26:25,062
it and I choose the machine type. So I want two cores and

415
00:26:25,116 --> 00:26:28,374
I'm going to go ahead and refresh it, and I want it to show up

416
00:26:28,412 --> 00:26:31,926
here. So it did show up. I'm just going to pause

417
00:26:31,958 --> 00:26:35,690
it. It showed up right here. So before we had only one code space

418
00:26:35,760 --> 00:26:39,274
under galaxy bytes, and now we have two. And the second one is

419
00:26:39,312 --> 00:26:43,246
called upgraded potato, and it does come up with these random names that

420
00:26:43,268 --> 00:26:46,826
are hard to remember. So I thought, could you rename

421
00:26:46,858 --> 00:26:50,110
the space to something you can remember? And in fact you can.

422
00:26:50,180 --> 00:26:53,146
So if you do gh code space edit,

423
00:26:53,258 --> 00:26:56,674
and then you put in the old code space name and

424
00:26:56,712 --> 00:26:59,906
put the display name, you can be able to change it.

425
00:26:59,928 --> 00:27:03,700
Now, this won't change the permanent name. This is more like

426
00:27:05,910 --> 00:27:09,830
an aka or a name that you'll be able to remember.

427
00:27:09,900 --> 00:27:13,494
It'll still be called black girl bites upgraded potato. But when

428
00:27:13,532 --> 00:27:17,046
you see it, when you're identifying it, you'll see the name that

429
00:27:17,068 --> 00:27:21,094
you change it to. So I'm going to go ahead and paste in the original

430
00:27:21,142 --> 00:27:24,794
name, the permanent name. I'm going to paste it,

431
00:27:24,832 --> 00:27:28,554
and then in display name, I'm going to call it memorable name.

432
00:27:28,752 --> 00:27:32,346
So for me, when I see it, I'll see

433
00:27:32,368 --> 00:27:35,822
the memorable name, but behind the scenes, it'll still be called that

434
00:27:35,876 --> 00:27:39,902
really long name. So once I refresh it, I should see it say memorable name

435
00:27:39,956 --> 00:27:42,110
rather than upgraded potato.

436
00:27:43,410 --> 00:27:46,318
And you can also delete GitHub code spaces.

437
00:27:46,414 --> 00:27:49,618
So again, because this is the permanent name,

438
00:27:49,704 --> 00:27:53,426
I need to still use that name it gave it. So what

439
00:27:53,448 --> 00:27:56,990
I did is I copied and pasted the name, and I put Gh

440
00:27:57,070 --> 00:28:00,486
codespaces, delete flag c

441
00:28:00,588 --> 00:28:04,194
right before it pasted the name. And once I refresh

442
00:28:04,242 --> 00:28:07,350
my page, I should see that the code space doesn't exist.

443
00:28:08,510 --> 00:28:12,102
And last but not least, GitHub code spaces

444
00:28:12,166 --> 00:28:15,926
is. This is the exciting part. I hope y'all didn't

445
00:28:15,958 --> 00:28:19,434
leave yet. GitHub codespaces allows you to do

446
00:28:19,472 --> 00:28:23,326
stuff for data science, machine learning, and AI. So what

447
00:28:23,348 --> 00:28:27,630
we're going to do next is we're going to use GitHub code spaces to generate

448
00:28:28,610 --> 00:28:31,338
some AI art with stable diffusion,

449
00:28:31,434 --> 00:28:35,086
like so cool. All right, so I

450
00:28:35,108 --> 00:28:38,994
have some gifs here. So that way I'm not doing it live because

451
00:28:39,192 --> 00:28:42,926
the demo gods are never with me. So I was able to generate

452
00:28:43,038 --> 00:28:46,814
this cartoon black girl. So I put in this prompt in GitHub quotespaces

453
00:28:46,862 --> 00:28:50,306
that says a cartoon black girl with cotton candy here and a pink

454
00:28:50,338 --> 00:28:53,666
dress standing in front of a pink sky with cotton candy clouds.

455
00:28:53,698 --> 00:28:57,766
And it gave me this kind of scary looking, to be honest.

456
00:28:57,868 --> 00:29:01,258
And then I did another prompt that says a polar bear looking at

457
00:29:01,264 --> 00:29:04,806
the northern lights, and it gave me this. So let's

458
00:29:04,838 --> 00:29:08,330
see how we can make that happen. First off, you need to

459
00:29:08,400 --> 00:29:12,206
make a GPU powered code space, and you would

460
00:29:12,228 --> 00:29:15,822
do that when you open your code space, you got to open it with

461
00:29:15,876 --> 00:29:19,322
options and you'll choose six core, one GPU

462
00:29:19,386 --> 00:29:22,786
rather than two core, four core. This is in

463
00:29:22,808 --> 00:29:26,482
limited beta right now, like this option. So you will have to

464
00:29:26,536 --> 00:29:31,090
request availability to gpus

465
00:29:32,310 --> 00:29:36,454
or to having a GPU powered code space. Then you

466
00:29:36,492 --> 00:29:40,690
want to sign up for a hugging face account and generate an API

467
00:29:40,770 --> 00:29:43,762
token. Once you have that API token,

468
00:29:43,906 --> 00:29:47,410
each of your repositories have codespaces secrets.

469
00:29:47,490 --> 00:29:50,714
So inside of your codespaces secret, you want to

470
00:29:50,752 --> 00:29:54,154
store your hugging face token and you want to name

471
00:29:54,192 --> 00:29:57,340
it hugging face token because that's what it's looking for.

472
00:29:58,910 --> 00:30:02,966
And once you do that, you can open up a Jupyter notebook

473
00:30:03,158 --> 00:30:06,526
and you're going to run each of these lines. I did

474
00:30:06,628 --> 00:30:09,806
fork a repo that I can show you all at

475
00:30:09,828 --> 00:30:12,766
the end that you can fork from me as well,

476
00:30:12,868 --> 00:30:16,366
so that you don't have to do all this from scratch.

477
00:30:16,478 --> 00:30:20,546
So here at each cell you want to press run to

478
00:30:20,568 --> 00:30:24,658
make sure everything works. So first we're going to install the needed

479
00:30:24,744 --> 00:30:29,270
files for this. So we're installing it or needed dependencies,

480
00:30:32,090 --> 00:30:35,814
and this is literally how long it takes, but I think it's interesting to just

481
00:30:35,852 --> 00:30:39,334
see it. So like on the left side we have these

482
00:30:39,372 --> 00:30:43,082
Jupyter notebooks and we have the dev container and all that going

483
00:30:43,136 --> 00:30:46,794
on. Then we want to go ahead and run this line that

484
00:30:46,832 --> 00:30:51,194
ran pretty quickly. We'll run another line that's

485
00:30:51,322 --> 00:30:53,520
setting up everything for us.

486
00:30:54,450 --> 00:30:58,126
So running, running. And I

487
00:30:58,148 --> 00:31:02,174
think while this is happening we

488
00:31:02,212 --> 00:31:05,474
can just look

489
00:31:05,512 --> 00:31:06,260
at it.

490
00:31:09,670 --> 00:31:13,506
So next is going to be the prompt. So we

491
00:31:13,528 --> 00:31:17,346
can see here we're importing autocast from Torch, and this

492
00:31:17,368 --> 00:31:21,062
is where you'll update the prompt to something you want. So I put a boy

493
00:31:21,116 --> 00:31:24,518
hitting a baseball with a baseball bat. I'm going to go ahead

494
00:31:24,604 --> 00:31:28,726
and run it, and hopefully it's not something super terrifying.

495
00:31:28,758 --> 00:31:32,202
I'll run it right after these are done downloading and

496
00:31:32,256 --> 00:31:36,410
done running this stuff. Come on. Cloud faces

497
00:31:44,450 --> 00:31:48,190
should be done pretty soon. I could have fast forwarded this,

498
00:31:48,260 --> 00:31:52,094
but, you know, it's good to see the real time stuff. So we

499
00:31:52,132 --> 00:31:55,378
already had that cotton can here, one from before. So I'm going to

500
00:31:55,384 --> 00:31:57,060
go ahead and run this.

501
00:31:59,590 --> 00:32:03,122
And even it's specifying the height and width of

502
00:32:03,176 --> 00:32:07,310
the image, and it's probably returning an array of different images and

503
00:32:07,400 --> 00:32:10,818
showing us the first one as we can see here with images.

504
00:32:10,914 --> 00:32:15,030
And then it has the zero if element in the array.

505
00:32:15,450 --> 00:32:17,800
So we're getting there. We're halfway there.

506
00:32:18,830 --> 00:32:22,170
Halfway there. All right.

507
00:32:22,240 --> 00:32:26,166
And it generated a really scary looking image.

508
00:32:26,358 --> 00:32:30,022
It tried, but we're used to stable diffusion doing that.

509
00:32:30,096 --> 00:32:33,758
So I'm going to go ahead and show you all the repo that

510
00:32:33,764 --> 00:32:38,654
I used for this and let

511
00:32:38,692 --> 00:32:42,046
us see. So it should be

512
00:32:42,068 --> 00:32:47,940
called do.

513
00:32:51,030 --> 00:32:54,466
Okay, this is it. So if you all wanted to go to it, it is

514
00:32:54,488 --> 00:32:58,590
GitHub.com galaxyblights stable

515
00:32:58,670 --> 00:33:01,954
diffusion. You can go ahead and fork this repo.

516
00:33:02,082 --> 00:33:06,070
I forked it from my manager, who forked it

517
00:33:06,140 --> 00:33:09,538
from the code spaces product manager,

518
00:33:09,634 --> 00:33:13,080
who forked it from somebody else. So you can keep forking it you all

519
00:33:14,190 --> 00:33:18,154
until just to mess around. And you can create your own

520
00:33:18,192 --> 00:33:21,822
if you wanted to. But remember, this has to work with a hugging face

521
00:33:21,876 --> 00:33:25,246
API token, and you have to have access to

522
00:33:25,348 --> 00:33:28,750
Codespace's GPU, and you can request that because

523
00:33:28,820 --> 00:33:31,440
it right now is in limited beta access.

524
00:33:32,050 --> 00:33:36,066
Let's go back. We're almost done. Like, I showed you all the cool

525
00:33:36,168 --> 00:33:39,186
stuff from GitHub codespaces. So I just want to do

526
00:33:39,208 --> 00:33:42,482
a real quick recap. With containers, you can

527
00:33:42,536 --> 00:33:46,258
standardize your development environments, and with GitHub

528
00:33:46,354 --> 00:33:50,434
codespaces, you can streamline onboarding, you can code from answers,

529
00:33:50,562 --> 00:33:53,954
you can have standardized environments, you can use templates

530
00:33:54,002 --> 00:33:59,234
if you wanted to experiment with a framework

531
00:33:59,362 --> 00:34:02,534
or build a quick demo, and you want to skip

532
00:34:02,582 --> 00:34:06,230
all the boilerplate, you can share your forwarded ports with folks,

533
00:34:06,310 --> 00:34:09,558
and you can perform data science and machine learning tasks

534
00:34:09,654 --> 00:34:13,454
such as generating art,

535
00:34:13,572 --> 00:34:17,166
AI art with stable diffusion. It's really fun to

536
00:34:17,188 --> 00:34:20,686
use GitHub code spaces. Thank you. Thank you so much

537
00:34:20,788 --> 00:34:25,070
for tuning in. Thank you to the

538
00:34:25,140 --> 00:34:28,654
Conf 42 DevOps 2023 and

539
00:34:28,852 --> 00:34:32,334
everyone involved for allowing me to speak or inviting me to

540
00:34:32,372 --> 00:34:36,582
speak. This was so much fun. Please hit me up if you have any questions.

541
00:34:36,716 --> 00:34:40,278
My handle is at black girl bites. Thank you.

542
00:34:40,364 --> 00:34:40,610
Bye.

