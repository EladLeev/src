1
00:00:25,410 --> 00:00:29,046
You. Hi, my name

2
00:00:29,068 --> 00:00:33,174
is Bart Angalau, and welcome to my presentation at

3
00:00:33,212 --> 00:00:37,042
42 Chaos Engineering. Let's talk about site reliability

4
00:00:37,106 --> 00:00:39,718
engineers. So as I mentioned,

5
00:00:39,804 --> 00:00:43,590
I'm lead sre@ball.com. Which is a large

6
00:00:43,660 --> 00:00:46,914
online retailing platform in the Netherlands and Belgium,

7
00:00:46,962 --> 00:00:50,542
the largest one. And we've been experimenting with

8
00:00:50,676 --> 00:00:54,078
SRE for about the last two years

9
00:00:54,164 --> 00:00:57,326
now, I guess. So in this presentation, I kind of

10
00:00:57,348 --> 00:01:00,910
want to go into our learning so far, how we've approached it,

11
00:01:01,060 --> 00:01:04,686
etc. A little bit about who we are as

12
00:01:04,708 --> 00:01:07,838
a company. So as I mentioned, we're the largest online retailer

13
00:01:07,854 --> 00:01:11,362
in the Netherlands and Belgium were part of the Aholta has a

14
00:01:11,416 --> 00:01:14,626
group of companies, and we're a retailing platform. So we

15
00:01:14,648 --> 00:01:18,266
sell things ourselves online. But other retailers

16
00:01:18,318 --> 00:01:21,814
can also sell their items via our website. And that

17
00:01:21,852 --> 00:01:24,790
means that we sell anything that pretty much anything non food,

18
00:01:24,860 --> 00:01:28,750
so that can be pets and children's stuff or furniture.

19
00:01:28,850 --> 00:01:31,946
And we ship that all from both our

20
00:01:31,968 --> 00:01:36,266
partners warehouses, but also from our own warehouses. And we

21
00:01:36,288 --> 00:01:39,674
have a couple hundred thousands of pitched that we ship each

22
00:01:39,712 --> 00:01:42,314
day with like 10 million active users.

23
00:01:42,442 --> 00:01:47,274
We have a pretty involved and very interesting microservice

24
00:01:47,322 --> 00:01:49,902
landscape, and we work with about 600,

25
00:01:49,956 --> 00:01:53,450
700 engineers to innovate there.

26
00:01:53,540 --> 00:01:57,426
And weve existed and been developing the back

27
00:01:57,448 --> 00:02:01,646
end since like 1999 or something. And we've

28
00:02:01,678 --> 00:02:04,898
had quite a long journey and we've been doing DevOps for quite a

29
00:02:04,904 --> 00:02:09,958
while already. So, yeah, how did we get to sre@bottle.com?

30
00:02:10,044 --> 00:02:13,926
So let's quickly go through the journey that we

31
00:02:13,948 --> 00:02:17,494
had as a company towards SRE, and then we can go into how that

32
00:02:17,532 --> 00:02:20,682
has shaped our vision on it and shaped what we're doing

33
00:02:20,736 --> 00:02:24,454
now and what we've learned from all of that. So Bolocom's

34
00:02:24,502 --> 00:02:28,890
journey to SRe kind of started in 2009

35
00:02:29,040 --> 00:02:32,794
when we had our agile transformation and we started adopting

36
00:02:32,842 --> 00:02:36,000
things from scrum and the like.

37
00:02:36,450 --> 00:02:40,478
But as we developed and wanted to innovate more and more,

38
00:02:40,564 --> 00:02:44,266
originally we had our operations externally managed by a different

39
00:02:44,308 --> 00:02:48,386
partner. And you can imagine that that doesn't really benefit the

40
00:02:48,408 --> 00:02:52,050
release cycle. So in 2013, a big project

41
00:02:52,120 --> 00:02:55,634
was to bring these operations in house, and we

42
00:02:55,672 --> 00:02:59,718
established like a top of the line operations team that managed our

43
00:02:59,804 --> 00:03:03,446
mostly, I think we had four or five huge monoliths that we ran at

44
00:03:03,468 --> 00:03:07,238
this time, and they ran that in our own data center.

45
00:03:07,324 --> 00:03:11,074
And then in 2014, I joined bordeaux.com.

46
00:03:11,132 --> 00:03:14,698
It's not really applicable to the SRE journey, but it's just fun to

47
00:03:14,704 --> 00:03:18,934
put in there. And then around 2016, we had our DevOps

48
00:03:18,982 --> 00:03:22,554
transformation so we had a big project that we called man

49
00:03:22,592 --> 00:03:25,678
on the moon. And we had like a catchphrase that was, you build it,

50
00:03:25,684 --> 00:03:29,086
you run it, you love it. So this was where we really wanted to

51
00:03:29,108 --> 00:03:32,638
push the operations as far to the innovation team

52
00:03:32,804 --> 00:03:35,662
as possible. And that was quite successful,

53
00:03:35,726 --> 00:03:39,010
actually, at the time. So we

54
00:03:39,080 --> 00:03:42,642
provided quite a lot of tooling so that all the CI CD could

55
00:03:42,696 --> 00:03:45,566
work all the way towards production,

56
00:03:45,678 --> 00:03:50,034
theoretically. I'm not sure if anyone at that time was actually doing continuous deployment,

57
00:03:50,082 --> 00:03:53,206
but definitely awesome continuous integration. But also around that

58
00:03:53,228 --> 00:03:57,106
time, Google published the first satch liability engineering

59
00:03:57,138 --> 00:04:00,442
books. And it was this time that we first

60
00:04:00,496 --> 00:04:03,702
hosted our internal conference,

61
00:04:03,766 --> 00:04:07,926
which was like the Spaces Summit. And it was at that first internal

62
00:04:07,958 --> 00:04:11,162
conference that David Ferguson from Google also

63
00:04:11,216 --> 00:04:14,794
dropped by. He's like, this has a reefing that we've just published. You should totally

64
00:04:14,842 --> 00:04:18,462
be doing that. And quite a lot of people@ball.com

65
00:04:18,596 --> 00:04:21,866
agreed with him. And when in 2018,

66
00:04:22,058 --> 00:04:26,066
we were also moving towards the cloud, so big

67
00:04:26,248 --> 00:04:29,874
operations team for our own data center, we acknowledged that,

68
00:04:29,912 --> 00:04:33,582
yeah, maybe this cloud thing is actually kind of useful,

69
00:04:33,646 --> 00:04:37,510
so let's do this. And with that migration,

70
00:04:38,090 --> 00:04:41,826
we also started to move towards a product driven organization.

71
00:04:41,938 --> 00:04:45,378
So what we mean here is that instead of organizing our teams

72
00:04:45,394 --> 00:04:48,682
and our microservices in a way that it's organized around

73
00:04:48,736 --> 00:04:52,214
the technical elements, we really organized teams

74
00:04:52,262 --> 00:04:56,358
around the value chains that span all the different technical elements

75
00:04:56,454 --> 00:04:59,986
so that we can hopefully autonomously

76
00:05:00,118 --> 00:05:04,014
innovate within those products and have a less

77
00:05:04,132 --> 00:05:08,094
complex web of communication between different products.

78
00:05:08,212 --> 00:05:11,742
So now you just need to talk between different products instead of talking

79
00:05:11,796 --> 00:05:15,114
between all thousands of microservices. So that's the context

80
00:05:15,162 --> 00:05:18,402
of how we came to SRE. And as I was saying,

81
00:05:18,456 --> 00:05:22,578
from 2016 on, there were quite a few individuals in the company who were already

82
00:05:22,664 --> 00:05:26,574
quite excited about this concept. So in early 2019,

83
00:05:26,702 --> 00:05:30,274
we got all those together, and we started with a pilot

84
00:05:30,322 --> 00:05:34,086
on how can SRE work well for us now,

85
00:05:34,108 --> 00:05:37,446
we had several specific learnings from this pilot that I'm

86
00:05:37,468 --> 00:05:41,250
going to go back into later. But more concretely,

87
00:05:41,330 --> 00:05:44,746
the pilot was got so successful, parts of it were, parts of it

88
00:05:44,768 --> 00:05:48,682
were not so much. So based on learnings of that in 2020, we started with

89
00:05:48,736 --> 00:05:52,702
a dedicated, full time SRE team, and this is also

90
00:05:52,836 --> 00:05:56,670
a team I'm a member of. And it's with this step

91
00:05:56,740 --> 00:06:00,238
that we've really started to get the ball rolling to

92
00:06:00,324 --> 00:06:04,098
get this mindset shift that SRE can really give

93
00:06:04,184 --> 00:06:07,554
an organization. And I think which is also really one of the

94
00:06:07,592 --> 00:06:11,634
major added benefits of SRE over DevOps. Because where

95
00:06:11,672 --> 00:06:14,862
DevOps is kind of like a strategy

96
00:06:14,926 --> 00:06:18,710
for putting parts of your innovation cycle close together

97
00:06:18,860 --> 00:06:22,978
in a single role. SRE really provides a set of practices

98
00:06:23,074 --> 00:06:26,246
and structure for thinking about this combination of the

99
00:06:26,268 --> 00:06:30,314
two practices of development and operations that really allows you

100
00:06:30,352 --> 00:06:34,134
to integrate it for maximum user happiness,

101
00:06:34,262 --> 00:06:37,754
I think because over

102
00:06:37,792 --> 00:06:42,234
the last year and as part of the SRE team. Right? Yeah. So I

103
00:06:42,272 --> 00:06:45,486
don't think in this conference I really need to go into what the

104
00:06:45,508 --> 00:06:49,562
concept of SRE is. But just to really highlight

105
00:06:49,626 --> 00:06:53,134
it quickly, I think the most important part is that you acknowledge

106
00:06:53,182 --> 00:06:56,606
that reliability in any system is your number one feature,

107
00:06:56,718 --> 00:07:00,514
but that we also live in a Fuka world like

108
00:07:00,552 --> 00:07:03,134
volatile, uncertain, complex, ambiguous.

109
00:07:03,262 --> 00:07:06,966
And that these two aspects mean that in

110
00:07:06,988 --> 00:07:10,374
order to maximize your user happiness, you cannot just

111
00:07:10,412 --> 00:07:14,150
say, we have to reach this reliability and that's final.

112
00:07:14,220 --> 00:07:17,698
But you can also got say we can innovate

113
00:07:17,794 --> 00:07:21,274
whatever we want because all innovation will bring risk, and when

114
00:07:21,312 --> 00:07:25,238
you are not there, it doesn't matter how much you've innovated. So there's

115
00:07:25,254 --> 00:07:28,506
a fine balance between these two aspects that

116
00:07:28,688 --> 00:07:31,182
needs to be managed. DevOps, of course,

117
00:07:31,316 --> 00:07:34,894
theoretically sort of addresses that. But in my

118
00:07:34,932 --> 00:07:38,670
discussions with other companies and in research

119
00:07:38,820 --> 00:07:42,254
for how can we best solve this problem for Bolcom, we found

120
00:07:42,292 --> 00:07:46,270
that there's like two different ways to approach SRE.

121
00:07:46,350 --> 00:07:49,794
So you can approach it from the development angle and you

122
00:07:49,912 --> 00:07:53,442
can approach it from the operations angle. And what we

123
00:07:53,496 --> 00:07:57,170
often find is that developers managers

124
00:07:57,330 --> 00:08:00,050
often say they want DevOps,

125
00:08:00,130 --> 00:08:03,814
but then when they say that often what they actually want is

126
00:08:03,852 --> 00:08:07,978
just better CI CD, it's like a smoother journey from

127
00:08:08,064 --> 00:08:11,334
code written to code at the user.

128
00:08:11,382 --> 00:08:15,066
And what they often don't really want is like things like having

129
00:08:15,088 --> 00:08:19,046
to manage disaster recovery and doing post mortems,

130
00:08:19,078 --> 00:08:22,650
instant handling, fire extinguishing stuff like that.

131
00:08:22,720 --> 00:08:25,946
So that's then the call from the dev side and then from opsite,

132
00:08:25,978 --> 00:08:29,502
people are saying, no, we need to do SRE. And what they actually want

133
00:08:29,556 --> 00:08:33,674
often is like reproducible infrastructure, less toil infrastructure

134
00:08:33,722 --> 00:08:37,566
as coats, stuff like that. And they don't really want just like deaf

135
00:08:37,598 --> 00:08:41,426
by ammo and lose their jobs because I

136
00:08:41,448 --> 00:08:45,042
had like a management column at some point here, but it was just

137
00:08:45,096 --> 00:08:47,620
all less cost, less cost, less cost.

138
00:08:48,470 --> 00:08:51,778
And you often see this mismatch like, oh yeah, we now do DevOps,

139
00:08:51,794 --> 00:08:54,994
so we don't need ops anymore. But that's not the way it works because operations

140
00:08:55,042 --> 00:08:58,662
is a deep specialization with relevant insight

141
00:08:58,726 --> 00:09:02,442
into a proper functioning microservice landscape. And also

142
00:09:02,496 --> 00:09:06,470
the way you do these two things together is complex and SRE

143
00:09:06,550 --> 00:09:10,470
has a specific opinion about that. And if you're

144
00:09:10,550 --> 00:09:13,742
just going to be applying software engineering practices to your

145
00:09:13,796 --> 00:09:17,358
operation department, then you're robbing your developers of

146
00:09:17,364 --> 00:09:20,794
the opportunity to learn from production. And production

147
00:09:20,922 --> 00:09:23,926
is your most direct link to your users'dreams.

148
00:09:23,978 --> 00:09:27,714
So in your innovation cycle, you really need to include both

149
00:09:27,752 --> 00:09:31,406
your operations and your development. And as such, I think Google's

150
00:09:31,438 --> 00:09:35,234
mantra that SRE implements DevOps is

151
00:09:35,272 --> 00:09:38,834
vital. So SRe really is a way to get DevOps

152
00:09:38,882 --> 00:09:43,078
right. So that's also how we sre it@ball.com.

153
00:09:43,164 --> 00:09:46,806
And that means that for our SRE team,

154
00:09:46,908 --> 00:09:50,506
our dedicated full time SRE team, weve really set the

155
00:09:50,528 --> 00:09:54,422
mission that it has as a purpose to support our innovation

156
00:09:54,486 --> 00:09:57,798
team. So it helps develop the tooling and the practices

157
00:09:57,974 --> 00:10:01,502
to enable all other teams to find this

158
00:10:01,556 --> 00:10:04,922
balance between reliability and innovation

159
00:10:04,986 --> 00:10:08,622
in the right way. And that means that the team itself, in essence, does not

160
00:10:08,676 --> 00:10:12,286
have run responsibility. This is something that

161
00:10:12,388 --> 00:10:16,434
is also quite often challenged from goal because

162
00:10:16,632 --> 00:10:20,402
they literally told us like, yeah, the consultancy model, we've seen that fill

163
00:10:20,456 --> 00:10:24,194
many times, but for our skill and the way we are

164
00:10:24,232 --> 00:10:28,418
working, it really seems the best fit because bringing

165
00:10:28,594 --> 00:10:32,546
production, operation and development closer

166
00:10:32,658 --> 00:10:35,846
has been of such benefit. So this is

167
00:10:35,868 --> 00:10:39,750
the way we're approaching it and let's see what we've learned

168
00:10:39,830 --> 00:10:43,194
so far. So if we go back to this slide, and I

169
00:10:43,232 --> 00:10:46,602
already announced it quickly when we talked about this

170
00:10:46,656 --> 00:10:50,538
pilot, that there were some learnings. So what did this

171
00:10:50,624 --> 00:10:54,062
pilot entail? So there were five

172
00:10:54,196 --> 00:10:58,142
software and operations engineers and they were given 40%

173
00:10:58,196 --> 00:11:01,662
of their time to go forth an SRE because

174
00:11:01,716 --> 00:11:05,778
we thought SRE is awesome and it will make everything better.

175
00:11:05,944 --> 00:11:09,906
And so you just do this with like two days a week, that should

176
00:11:09,928 --> 00:11:13,662
be enough, right? So you can imagine with such a clear direction

177
00:11:13,726 --> 00:11:17,254
and purpose, this team really enabled things,

178
00:11:17,372 --> 00:11:20,790
or not. So,

179
00:11:20,940 --> 00:11:24,322
yeah, it didn't achieve as much as we'd hoped,

180
00:11:24,386 --> 00:11:28,442
but there was actually a different pilot running

181
00:11:28,576 --> 00:11:31,770
parallel to this which achieved a lot more,

182
00:11:31,840 --> 00:11:35,162
but also didn't really reach the impact that was

183
00:11:35,216 --> 00:11:39,014
desired. So after this didn't go so successfully,

184
00:11:39,062 --> 00:11:42,442
there was really like this idea of, yeah,

185
00:11:42,496 --> 00:11:45,726
so we tried it and it's not going to work for us.

186
00:11:45,828 --> 00:11:49,390
But a critical part of getting SRE right is learnings

187
00:11:49,460 --> 00:11:52,398
from failure. So that's also what we did here.

188
00:11:52,484 --> 00:11:56,498
We looked at what we did, analyzed it and

189
00:11:56,584 --> 00:11:59,938
there were like a couple concrete learnings from this.

190
00:12:00,024 --> 00:12:03,502
And for us, the most relevant one was that SRE

191
00:12:03,646 --> 00:12:07,490
as a part time role next to full time software engineer

192
00:12:07,570 --> 00:12:11,126
doesn't really work so well because the pressures of

193
00:12:11,148 --> 00:12:15,158
backlog innovation always outcompeted our

194
00:12:15,244 --> 00:12:18,486
SRE work. And also while we

195
00:12:18,508 --> 00:12:21,946
were doing this pilot, there were quite a few, especially managers, who were

196
00:12:21,968 --> 00:12:25,846
saying like, oh, lead SRE are a new way to do operations. Then you're

197
00:12:25,878 --> 00:12:30,422
really missing again that connection between innovation

198
00:12:30,486 --> 00:12:34,014
and operation, but you're just approaching it from the other side.

199
00:12:34,052 --> 00:12:37,594
But at the same time, in our investigations discussions,

200
00:12:37,722 --> 00:12:41,738
we did SRe that there were particular problems all around the organization

201
00:12:41,834 --> 00:12:45,134
that we could solve with SRE, but that we just didn't have the capacity

202
00:12:45,182 --> 00:12:48,622
for to solve them properly right now. So this specialty

203
00:12:48,686 --> 00:12:51,854
that SRE is and the solutions

204
00:12:51,902 --> 00:12:55,874
it offers, it was really something we did need. So based

205
00:12:55,912 --> 00:12:59,426
on that, we went for the full time central

206
00:12:59,538 --> 00:13:03,190
dedicated SRE team and we wrote a big plan and we sent it

207
00:13:03,260 --> 00:13:06,662
to it management and it was like, oh yeah, this is actually a pretty

208
00:13:06,716 --> 00:13:10,170
kind of good idea that you got here. So then we had

209
00:13:10,240 --> 00:13:13,562
the central SRE team and for 2020,

210
00:13:13,696 --> 00:13:17,958
the main purpose of the central SRE team was to increase

211
00:13:18,134 --> 00:13:21,946
knowledge about good DevOps practices

212
00:13:22,058 --> 00:13:26,142
SRE practices, increase observability of product

213
00:13:26,196 --> 00:13:30,206
value chains and fix a problem that we hadn't solved yet of

214
00:13:30,228 --> 00:13:33,822
how we do outside of office hour support for cloud

215
00:13:33,876 --> 00:13:37,120
applications. So from the knowledge site,

216
00:13:37,910 --> 00:13:41,938
we built some trainings and we did

217
00:13:42,024 --> 00:13:45,830
presentations. And it was through these

218
00:13:45,900 --> 00:13:49,330
different presentations and engagements with different teams

219
00:13:49,410 --> 00:13:53,042
that we kind of had some our first setbacks,

220
00:13:53,106 --> 00:13:57,142
maybe failures, in that we and the team, we all knew

221
00:13:57,196 --> 00:14:01,178
this subject matter intimately. So we were really familiar with

222
00:14:01,264 --> 00:14:04,810
the concepts and the benefits it can bring.

223
00:14:04,880 --> 00:14:07,594
So we were like, look, this is how it goes, let's go do it.

224
00:14:07,632 --> 00:14:10,698
Yeah. And then we gave a presentation like

225
00:14:10,704 --> 00:14:13,982
that and people were, yeah, let's go do it. Okay. And then

226
00:14:14,036 --> 00:14:17,134
a month later we gave another presentation. Yeah, so this is how it works

227
00:14:17,172 --> 00:14:21,134
and let's go do it. Yeah. But even people who were in

228
00:14:21,172 --> 00:14:24,350
those both presentations and were excited by both presentations,

229
00:14:24,430 --> 00:14:27,794
by the second presentation, there wasn't real progress because

230
00:14:27,832 --> 00:14:31,314
in the meantime they had been doing completely other work in

231
00:14:31,352 --> 00:14:34,910
a completely different context. So having this large

232
00:14:35,000 --> 00:14:38,982
2500 person organization and getting them

233
00:14:39,036 --> 00:14:42,786
to completely rethink the way they think about reliability

234
00:14:42,898 --> 00:14:46,194
right now, because again and again the uptime versus

235
00:14:46,242 --> 00:14:50,530
availability discussion came up and that's just something that's

236
00:14:50,610 --> 00:14:53,722
not trivial to grasp. So we really had to

237
00:14:53,776 --> 00:14:57,338
start from scratch there every time we had a new engagement with a new team

238
00:14:57,424 --> 00:15:01,262
and then just repeat and repeat and repeat. And we can't expect

239
00:15:01,396 --> 00:15:05,326
other people who are got fully focused on reliability to

240
00:15:05,428 --> 00:15:09,066
have this same adoption and immersement

241
00:15:09,178 --> 00:15:12,542
of the concept beneath it as we who are full time

242
00:15:12,596 --> 00:15:16,498
working on it do. So this was like a

243
00:15:16,504 --> 00:15:20,466
big learning for us that we can't run ahead of the pack and

244
00:15:20,488 --> 00:15:23,986
then expect the pack to catch up. We really have to

245
00:15:24,088 --> 00:15:27,582
work together with them and then take them along for the ride.

246
00:15:27,646 --> 00:15:31,366
And then if we work with someone else, start again at the beginning and

247
00:15:31,388 --> 00:15:34,662
take them along for a ride. And then slowly you're building up a

248
00:15:34,716 --> 00:15:39,000
broader knowledge base about these subjects and it'll enter

249
00:15:39,390 --> 00:15:42,630
common knowledge. It's a long process and it's not comparable

250
00:15:42,710 --> 00:15:46,826
to how quickly a person can learn. So that's what

251
00:15:46,928 --> 00:15:50,474
we learned in that knowledge sharing aspect. And then for the

252
00:15:50,592 --> 00:15:54,094
value chain observability, first we wanted to go

253
00:15:54,132 --> 00:15:58,382
like, yeah, were going to take our most critical value chains and

254
00:15:58,516 --> 00:16:02,014
add sre to that. But then we were thinking it's like, well,

255
00:16:02,052 --> 00:16:05,694
maybe wouldn't it make sense to start with a smaller value chain

256
00:16:05,742 --> 00:16:09,154
so that we can have a quick example of how this

257
00:16:09,192 --> 00:16:13,346
works and then we can roll it out easier to other value chain. So we

258
00:16:13,448 --> 00:16:17,326
chose the content product catalog value

259
00:16:17,368 --> 00:16:21,158
chain. And this is like a selling page on our websop shop. And content

260
00:16:21,244 --> 00:16:25,074
just manages all product text assets and product image assets.

261
00:16:25,122 --> 00:16:28,230
So that's images like these, the title,

262
00:16:28,650 --> 00:16:31,930
the category, but also the main image here.

263
00:16:32,000 --> 00:16:35,530
And so we thought like, okay, this is a fairly isolated system.

264
00:16:35,600 --> 00:16:39,338
We can make a quick iteration here, and then we'll have a big success

265
00:16:39,424 --> 00:16:43,054
and share it with everyone. So we had this look into the

266
00:16:43,092 --> 00:16:46,846
whole system, and we looked for

267
00:16:46,948 --> 00:16:50,286
what were the most important parts of that system, and how

268
00:16:50,308 --> 00:16:53,794
can we get complete coverage. And it turns out we got 45

269
00:16:53,832 --> 00:16:57,378
slis. Well, that's maybe a bit much. So we

270
00:16:57,464 --> 00:17:01,140
abstracted it a bit and we made a down select

271
00:17:02,310 --> 00:17:05,922
of five slis that we wanted to monitor

272
00:17:06,066 --> 00:17:10,310
to observe the value chain reliability on.

273
00:17:10,380 --> 00:17:14,390
So we were really focusing on slis that gave us

274
00:17:14,540 --> 00:17:17,926
the high over value chain availability. But if you look

275
00:17:17,948 --> 00:17:21,338
at this slide, you can see all kinds of different

276
00:17:21,424 --> 00:17:24,954
systems in different places. And there were

277
00:17:24,992 --> 00:17:28,454
actually many teams, there were like six different teams involved

278
00:17:28,502 --> 00:17:31,538
in innovating and working on these places.

279
00:17:31,574 --> 00:17:35,086
And by only having enabling slis that go over the

280
00:17:35,108 --> 00:17:39,226
whole stack, there was no clear owner of the single Slis.

281
00:17:39,338 --> 00:17:42,894
So if you're in a situation like us where

282
00:17:43,012 --> 00:17:46,726
there's no clear owner of the high over product slis,

283
00:17:46,778 --> 00:17:50,146
what you need is that you also have lower level slis and

284
00:17:50,168 --> 00:17:53,554
then a clear relation between the two so that you can engage both the

285
00:17:53,592 --> 00:17:57,270
teams on their system level, but also engage the

286
00:17:57,340 --> 00:18:01,222
product managers on the product level. And then with that clear

287
00:18:01,276 --> 00:18:04,662
relation between the two, you can still get the big benefits

288
00:18:04,796 --> 00:18:08,578
of a slice while also having the engagement of

289
00:18:08,604 --> 00:18:12,086
the people who are really involved on the different abstraction level. So that's

290
00:18:12,118 --> 00:18:15,866
something we kind of did wrong here and learned from.

291
00:18:15,968 --> 00:18:19,830
And partly also due to this mismatch

292
00:18:19,910 --> 00:18:23,918
in abstraction level, we never really got to the part

293
00:18:24,004 --> 00:18:27,486
where the teams were actually using these Slis to

294
00:18:27,508 --> 00:18:30,842
actively make that balance between reliability and innovation.

295
00:18:30,906 --> 00:18:34,642
We weve really got the aero budget policy properly set up and

296
00:18:34,696 --> 00:18:38,334
properly burned through our error budgets and then properly used the error budget

297
00:18:38,382 --> 00:18:41,730
policy to recover from that state.

298
00:18:41,800 --> 00:18:45,378
And we really think that this is very much due to the

299
00:18:45,384 --> 00:18:48,406
fact that we did not have that engagement on the low level, but also we

300
00:18:48,428 --> 00:18:52,358
didn't have the right engagement on the higher level. So not so much

301
00:18:52,444 --> 00:18:56,166
buy in from upper management, essentially. So what

302
00:18:56,188 --> 00:18:59,526
weve really learned here is that while the SLIs can

303
00:18:59,548 --> 00:19:02,742
give you great benefits and Slos et cetera,

304
00:19:02,806 --> 00:19:06,794
it's really important to engage with the whole vertical stack of the people

305
00:19:06,832 --> 00:19:10,298
that are involved in the value chain because you need buy in

306
00:19:10,384 --> 00:19:14,094
for the aero budget policy to roll it out over all the different

307
00:19:14,132 --> 00:19:17,902
teams. You need ownership on a product level from product

308
00:19:17,956 --> 00:19:21,326
management and tech leads, but you also need ownership on the

309
00:19:21,348 --> 00:19:24,610
teams to really engage with the SLIs and use that

310
00:19:24,680 --> 00:19:27,220
to basically act before there's a problem.

311
00:19:27,670 --> 00:19:31,518
So if we sum up all those learnings,

312
00:19:31,614 --> 00:19:35,362
we are not Google, our skill is not their skill. So we

313
00:19:35,416 --> 00:19:38,934
truly think it's okay to not be Google and

314
00:19:38,972 --> 00:19:42,518
do it in a way that uses their experience and the

315
00:19:42,524 --> 00:19:45,942
capacity that they offer, but users it in a way that works best

316
00:19:45,996 --> 00:19:49,654
for your own company. Then there is that SRE is a full

317
00:19:49,692 --> 00:19:52,922
time long term investment. It really is

318
00:19:52,976 --> 00:19:56,394
a different way of thinking about both reliability and

319
00:19:56,432 --> 00:19:59,926
innovation. And as such, it touches all kinds of aspects

320
00:20:00,038 --> 00:20:03,758
of your innovation way of working. So it really

321
00:20:03,844 --> 00:20:07,646
takes time to get that mindset shift. So yeah,

322
00:20:07,748 --> 00:20:11,246
that doesn't come quickly and you really need to engage with all

323
00:20:11,268 --> 00:20:14,878
the levels of the organization to get that properly rolled.

324
00:20:14,894 --> 00:20:18,626
But, and especially since it's such a long

325
00:20:18,728 --> 00:20:22,366
term process, it's really important to celebrate your successes,

326
00:20:22,478 --> 00:20:25,954
otherwise you're not going to have the stamina to

327
00:20:25,992 --> 00:20:29,926
ride it out to actual success. Right. So in

328
00:20:29,948 --> 00:20:34,130
a nutshell, that was what we learned at Bulletcom

329
00:20:34,210 --> 00:20:37,586
over the last one and a half years. I noticed that I forgot

330
00:20:37,618 --> 00:20:41,686
to put attributions for the graphics I used

331
00:20:41,868 --> 00:20:45,346
in this recording. I'll add them to the slide deck, and I'm

332
00:20:45,378 --> 00:20:47,560
sure the slides will be available.

333
00:20:48,090 --> 00:20:51,658
So thanks for joining my presentation.

334
00:20:51,754 --> 00:20:55,326
Have lots of fun with 42 chaos engineering and

335
00:20:55,348 --> 00:20:57,260
I'm looking forward to any kind of questions.

