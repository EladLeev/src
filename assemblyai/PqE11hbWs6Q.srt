1
00:00:26,770 --> 00:00:29,974
Welcome. My name is Jonathan Williams and I'm in the

2
00:00:30,012 --> 00:00:33,986
product manager team within the IoT and wireless business unit at Twilio

3
00:00:34,098 --> 00:00:37,650
and I'm here to talk about the challenges around overcoming IoT

4
00:00:37,730 --> 00:00:41,746
security threats from the start. Now you may know Twilio

5
00:00:41,778 --> 00:00:45,302
for our fantastic communications APIs, bringing easy

6
00:00:45,356 --> 00:00:48,706
to use connectivity so SMS, voice, WhatsApp chats,

7
00:00:48,738 --> 00:00:52,474
etc. To apps and websites, enabling billions

8
00:00:52,522 --> 00:00:55,470
of customer interactions to take place every day.

9
00:00:55,620 --> 00:00:59,854
Well, just as we enable simple and easy connectivity for

10
00:00:59,892 --> 00:01:03,202
people and applications, what you might not know

11
00:01:03,256 --> 00:01:07,378
is that we also power connectivity for millions of devices across the

12
00:01:07,384 --> 00:01:10,782
Internet of Things, both with our super sim connectivity

13
00:01:10,846 --> 00:01:14,740
solution as well as our microvisor device builder platform.

14
00:01:15,210 --> 00:01:18,694
But enough about that. Today I really want to talk about the

15
00:01:18,732 --> 00:01:22,582
sobering reality when it comes to IoT devices and

16
00:01:22,636 --> 00:01:26,040
security across the Internet of Things,

17
00:01:26,410 --> 00:01:30,854
security has been overlooked. An amazing 1.51

18
00:01:30,892 --> 00:01:34,458
billion IoT devices were breached in the first six months of 2021,

19
00:01:34,464 --> 00:01:37,574
and this itself was an increase

20
00:01:37,622 --> 00:01:40,934
from 639,000,000 breached in the same time period

21
00:01:40,982 --> 00:01:44,494
in 2020. So this is a growing problem and

22
00:01:44,532 --> 00:01:48,506
with the anticipated number of connected devices worldwide predicted

23
00:01:48,538 --> 00:01:52,126
to reach 50 billion by 2030, there is still a

24
00:01:52,148 --> 00:01:56,766
lot that needs to be done to ensure that these devices are protected from attacks

25
00:01:56,958 --> 00:02:00,526
and things includes ensuring the security of your connected

26
00:02:00,558 --> 00:02:04,146
devices and your data lives up to the promise you make to

27
00:02:04,168 --> 00:02:08,242
your customers. The impact of your devices being compromised

28
00:02:08,306 --> 00:02:11,606
is a big one and can often be ignored until it is

29
00:02:11,628 --> 00:02:14,966
too late. So I think we know that both us

30
00:02:14,988 --> 00:02:19,066
as device builders and now consumers are increasingly aware of

31
00:02:19,088 --> 00:02:22,902
the importance of device security. But it can be challenging

32
00:02:22,966 --> 00:02:26,122
to know which devices are secure by design and

33
00:02:26,176 --> 00:02:29,402
which just haven't been targeted yet. For many

34
00:02:29,456 --> 00:02:32,846
device builders, security can become an afterthought as

35
00:02:32,868 --> 00:02:35,998
you prioritize the features of the product or service itself

36
00:02:36,084 --> 00:02:39,802
when working towards a minimum viable product. Equally,

37
00:02:39,866 --> 00:02:43,118
security can sometimes be considered a necessary but

38
00:02:43,204 --> 00:02:47,550
unexciting piece of the product development. These hoops that you unfortunately

39
00:02:47,630 --> 00:02:51,554
have to jump through. It can also be hard and therefore expensive to

40
00:02:51,592 --> 00:02:54,958
retrofit security into an existing product properly.

41
00:02:55,134 --> 00:02:59,270
And maybe these are some of the reasons why we sometimes see insecure products

42
00:02:59,340 --> 00:03:03,074
released to market. But it is worth remembering that the risk

43
00:03:03,122 --> 00:03:06,774
profile of a security incident is high and the impact can

44
00:03:06,812 --> 00:03:10,074
be extremely severe. If the worst was to

45
00:03:10,112 --> 00:03:13,242
happen and a breach or hack occurs, you may well

46
00:03:13,296 --> 00:03:16,326
end up suffering company damaging impacts.

47
00:03:16,518 --> 00:03:19,978
Really because of this high level of risk, these security

48
00:03:20,064 --> 00:03:23,742
of your data and of your device must be foundational and must

49
00:03:23,796 --> 00:03:27,454
be built in from the start. Security really does need to be

50
00:03:27,492 --> 00:03:31,326
considered as a necessary system component within your device or

51
00:03:31,348 --> 00:03:34,766
system architecture. Now, I thought it might be interesting to

52
00:03:34,788 --> 00:03:38,194
take a look at a few high promise incidents that have happened in the last

53
00:03:38,232 --> 00:03:42,078
few years. Now. I think these are interesting to look at as whilst they're

54
00:03:42,094 --> 00:03:45,906
not necessarily exactly IoT use cases, I think the

55
00:03:45,928 --> 00:03:49,046
lessons learned are directly applicable to what we need to

56
00:03:49,068 --> 00:03:53,238
think about when securing our IoT devices. So before

57
00:03:53,324 --> 00:03:56,614
Zoom became a household name, there were a series of

58
00:03:56,652 --> 00:04:00,246
security loopholes discovered within the Zoom client implementations.

59
00:04:00,358 --> 00:04:03,558
So across several platforms, Mac, Windows, et cetera,

60
00:04:03,734 --> 00:04:07,366
and within the AV industry, there was a lot of comment, news articles

61
00:04:07,398 --> 00:04:10,646
and concerns being raised around the general security of the Zoom

62
00:04:10,678 --> 00:04:14,062
implementation. This in turn was arguably starting to cause

63
00:04:14,116 --> 00:04:18,160
the reputational damage that can be so, so damaging for a growing company.

64
00:04:18,770 --> 00:04:22,234
In many ways, how Zoom responded to the security concerns

65
00:04:22,282 --> 00:04:25,454
was pretty damn impressive. By zoom

66
00:04:25,502 --> 00:04:29,202
pivoting to take security seriously and addressing the issues

67
00:04:29,336 --> 00:04:33,506
raised in a timely fashion, they did manage to turn the problem

68
00:04:33,608 --> 00:04:36,974
into an opportunity to excel, which is no mean

69
00:04:37,032 --> 00:04:40,754
feat. I can only imagine the stress and sleepless

70
00:04:40,802 --> 00:04:44,134
nights that occurred whilst these high profile software fixes were being

71
00:04:44,172 --> 00:04:47,814
worked on. And I'm sure many a Zoom executive would much

72
00:04:47,852 --> 00:04:51,994
rather have seen security as a core feature of the initial product rather

73
00:04:52,032 --> 00:04:55,514
than the afterthought that IoT effectively was. So,

74
00:04:55,552 --> 00:04:58,938
taking a look at another one, several years ago,

75
00:04:59,024 --> 00:05:02,814
the connected security cameras from Hicvision were compromised through

76
00:05:02,852 --> 00:05:06,206
a weak password implementation and a backdoor misuse of a

77
00:05:06,228 --> 00:05:09,710
cookie, which resulted in devices being compromised.

78
00:05:10,050 --> 00:05:14,394
The Department of Homeland Security characterized the vulnerability as remotely

79
00:05:14,442 --> 00:05:17,978
exploitable with a low level of skill to exploit, I.

80
00:05:18,004 --> 00:05:21,714
E. Anyone with a computer can reproduce this and

81
00:05:21,752 --> 00:05:25,018
remotely access another user's camera footage.

82
00:05:25,214 --> 00:05:28,802
Now, rather than this just being a security incident

83
00:05:28,866 --> 00:05:32,534
that was raised and publicized and fixed before it became an

84
00:05:32,572 --> 00:05:35,958
actual issue, as so many are here,

85
00:05:36,044 --> 00:05:39,466
hackers did start accessing camera footage and actual

86
00:05:39,568 --> 00:05:43,226
users were targeted after their device security was

87
00:05:43,248 --> 00:05:46,762
exploited. So their hypothetical worst case

88
00:05:46,816 --> 00:05:50,466
scenario of real users and their data being hacked

89
00:05:50,518 --> 00:05:54,586
became reality. And it's not just reputational damage

90
00:05:54,618 --> 00:05:57,870
that can happen, there can be a huge financial cost

91
00:05:57,940 --> 00:06:01,374
to a security incident as well. Only this year the

92
00:06:01,412 --> 00:06:05,614
well documented colonial pipeline cyber attack took

93
00:06:05,652 --> 00:06:09,526
place and ransomware impacted computerized equipment managing the Texas

94
00:06:09,578 --> 00:06:13,486
based pipeline so kind of a bit like a connected IoT style device

95
00:06:13,518 --> 00:06:17,006
if I squint a bit. But here the attackers stole nearly

96
00:06:17,038 --> 00:06:20,630
100gb of data and threatened to release it on the Internet

97
00:06:20,970 --> 00:06:24,678
if a ransom was not paid. Having caused the shutdown of

98
00:06:24,684 --> 00:06:28,614
the pipeline for six days and compromised these billing system. The only

99
00:06:28,652 --> 00:06:32,506
way out of this situation, in the end has to pay that ransom and

100
00:06:32,528 --> 00:06:37,420
that cost them 75 bitcoin or at the time, $4.4 million.

101
00:06:38,110 --> 00:06:41,774
Now, these are just some of the many, many security incidents or

102
00:06:41,812 --> 00:06:45,546
CVE vulnerabilities that are exploited or design mistakes

103
00:06:45,578 --> 00:06:48,910
that affect products somewhere in the world every single day.

104
00:06:49,060 --> 00:06:52,286
And as someone responsible for a connected device, the risk of

105
00:06:52,308 --> 00:06:55,890
a security incident should be enough to keep you awake at night.

106
00:06:56,040 --> 00:06:59,294
The important thing here, though, is certainly not to throw stones

107
00:06:59,342 --> 00:07:02,740
at others. Those examples I used a moment ago,

108
00:07:03,190 --> 00:07:06,322
it really is to learn, appreciate and understand that

109
00:07:06,376 --> 00:07:09,414
similar things happen all the time. And to that

110
00:07:09,452 --> 00:07:12,726
extent, unless you are really conscious about security as a

111
00:07:12,748 --> 00:07:16,326
core Internet of your product development, this too could happen to

112
00:07:16,348 --> 00:07:19,954
you. So perhaps as an embedded software engineer

113
00:07:20,002 --> 00:07:23,414
or a device developer, a CEO or product manager responsible

114
00:07:23,462 --> 00:07:26,874
for a connected device, what must you think about and

115
00:07:26,912 --> 00:07:30,860
look for to make sure that your device is one of the secure ones?

116
00:07:31,310 --> 00:07:34,990
First, when it comes to security, you really must

117
00:07:35,060 --> 00:07:38,478
start by considering the threat model that you're actually connected about,

118
00:07:38,564 --> 00:07:42,378
I. E. What are you trying to protect and who are you trying to protect

119
00:07:42,484 --> 00:07:45,410
against? And this essentially boils down to,

120
00:07:45,480 --> 00:07:48,686
at one end of the scale, protecting against accidental

121
00:07:48,718 --> 00:07:52,286
misuse or a sloppy implementation that hick vision default

122
00:07:52,318 --> 00:07:55,694
password, for example, through bad actors and rogue

123
00:07:55,742 --> 00:07:59,666
employees, untrusted manufacturing partner access, the kind of thing iso

124
00:07:59,698 --> 00:08:02,806
27,001 help protects against all the

125
00:08:02,828 --> 00:08:06,214
way through to the hypothetical government sponsored hacking where

126
00:08:06,252 --> 00:08:09,334
silicon chips will be decapped and power supply

127
00:08:09,382 --> 00:08:12,730
injection used to read flash contents. And obviously,

128
00:08:12,800 --> 00:08:16,694
the approach that you would consider necessary to protect against accidental

129
00:08:16,742 --> 00:08:20,410
misuse is somewhat different to that required to protect against

130
00:08:20,480 --> 00:08:23,614
statesponsored hacking. Now, the basics of

131
00:08:23,652 --> 00:08:26,874
IoT device security can consider somewhat

132
00:08:26,922 --> 00:08:30,042
covered by legislation or certification in standards.

133
00:08:30,186 --> 00:08:33,690
For example, the most obvious weak authentication,

134
00:08:33,770 --> 00:08:37,282
which in general means a poor or default password approach and must

135
00:08:37,336 --> 00:08:41,086
for obvious reasons be avoided, is increasingly being included

136
00:08:41,118 --> 00:08:44,914
in new IoT legislation around the world. So, for example in

137
00:08:44,952 --> 00:08:48,150
California or Australia and more recently in the United

138
00:08:48,220 --> 00:08:52,034
Kingdom, IoT device legislation is attempting to banish

139
00:08:52,082 --> 00:08:55,378
the weak or default password approach. But there are lots

140
00:08:55,394 --> 00:08:59,450
of devices out there that are still affected by this, and obviously this will

141
00:08:59,520 --> 00:09:03,242
still take time for everyone to adopt it and

142
00:09:03,296 --> 00:09:07,130
standards, be them specific security standards, for example

143
00:09:07,200 --> 00:09:10,774
ARMPSA or the multitude of others, or be it ISO

144
00:09:10,822 --> 00:09:14,014
implementation standards, ISO 27,001

145
00:09:14,052 --> 00:09:18,030
for example. These can also help with some of the specific issues

146
00:09:18,100 --> 00:09:21,674
and people based risks putting in processes around which employees

147
00:09:21,722 --> 00:09:25,406
have access to which systems and the data within them now, many of

148
00:09:25,428 --> 00:09:29,314
these are essentially hoops that you need to jump through, but it could

149
00:09:29,352 --> 00:09:32,706
be said that if you can't jump through the hoop, then you probably

150
00:09:32,808 --> 00:09:35,300
aren't ready to release your product to market,

151
00:09:35,830 --> 00:09:39,126
specifically in terms of the device itself.

152
00:09:39,228 --> 00:09:42,374
And as an example of these things that you need to think about,

153
00:09:42,572 --> 00:09:46,182
Microsoft laid out one approach in their white paper, the seven

154
00:09:46,236 --> 00:09:50,342
properties of highly secure devices. And here Microsoft

155
00:09:50,406 --> 00:09:54,042
identifies and discusses seven properties that they

156
00:09:54,096 --> 00:09:57,510
think must be shared by all highly secure

157
00:09:57,590 --> 00:09:59,850
network connected devices.

158
00:10:00,510 --> 00:10:03,886
And these are a hardware based route of trust that

159
00:10:03,908 --> 00:10:06,954
you have a small trusted computing base, defense,

160
00:10:07,002 --> 00:10:11,230
in depth compartmentalization of code, certificate based

161
00:10:11,300 --> 00:10:14,878
authentication, renewable security and

162
00:10:14,964 --> 00:10:18,402
built in failure reporting. And this does form

163
00:10:18,456 --> 00:10:21,570
a great basis for considering what your device needs to do

164
00:10:21,640 --> 00:10:25,314
in order to be secure. It's important to note that

165
00:10:25,432 --> 00:10:28,774
Microsoft uses a custom silicon part to support these seven

166
00:10:28,812 --> 00:10:32,342
properties, but these can be achieved in a variety of ways,

167
00:10:32,476 --> 00:10:36,534
and I think I agree with them that these should all be considered necessary for

168
00:10:36,572 --> 00:10:40,134
IoT devices today. But I think

169
00:10:40,252 --> 00:10:44,998
there's more to think about as well. So has well as the above seven properties,

170
00:10:45,174 --> 00:10:48,634
I think there are some other things that we should consider necessary for

171
00:10:48,672 --> 00:10:52,542
a secure device implementation, and this includes things like

172
00:10:52,596 --> 00:10:56,110
secure boot and secure factory provisioning.

173
00:10:56,690 --> 00:11:00,106
As manufacturing secure products at scale requires

174
00:11:00,138 --> 00:11:03,354
a well designed production process that allows secure products

175
00:11:03,412 --> 00:11:06,914
to be built in insecure factories. And this

176
00:11:06,952 --> 00:11:10,386
protects customer IP and prevents gray market devices from

177
00:11:10,408 --> 00:11:13,794
ever existing. So whatever you're thinking your threat model is,

178
00:11:13,832 --> 00:11:17,770
whether it's accidental misuse, rogue employees at the factory,

179
00:11:17,950 --> 00:11:21,586
or the manufacturing partner, or the government sponsored hacking

180
00:11:21,698 --> 00:11:25,222
I things, it's fair to say that it is vital that you control and

181
00:11:25,276 --> 00:11:28,854
manage the code that's running on your device. I mean,

182
00:11:28,892 --> 00:11:32,346
if you cannot trust that the device is running the code that you think it

183
00:11:32,368 --> 00:11:36,010
is, I. E. Your code, then pretty much you cannot trust

184
00:11:36,080 --> 00:11:39,594
anything about that device. So to this end, I think

185
00:11:39,632 --> 00:11:44,278
you must have a method of secure boot and secure factory provisioning.

186
00:11:44,454 --> 00:11:47,594
And this is a must have for you to be able to trust the device

187
00:11:47,642 --> 00:11:51,578
and the device code itself. As it's the combination of these features

188
00:11:51,594 --> 00:11:55,186
that ensure that you can guarantee that your device is running

189
00:11:55,288 --> 00:11:59,806
your code. I like to think if you can't manufacture it securely

190
00:11:59,998 --> 00:12:03,666
then it certainly isn't secure. A good example

191
00:12:03,848 --> 00:12:07,426
of this, or can be, is where the need to

192
00:12:07,448 --> 00:12:11,506
get something up and running quickly does not lead to a secure implementation.

193
00:12:11,698 --> 00:12:15,398
And an example of this is the many industrial use cases built on top of

194
00:12:15,404 --> 00:12:18,722
the Raspberry PI. And this does not support either secure,

195
00:12:18,786 --> 00:12:23,066
brute or a secure factory provisioning step. So it's absolutely

196
00:12:23,168 --> 00:12:26,330
great at what it does do in getting a use case up and running quickly,

197
00:12:26,400 --> 00:12:29,980
but kind of secure by design? Not really.

198
00:12:30,430 --> 00:12:33,822
What can we do about it? So the challenge can be

199
00:12:33,876 --> 00:12:37,562
that once you have committed to an approach, be it a hardware

200
00:12:37,626 --> 00:12:41,402
or software approach, then switching or changing your development

201
00:12:41,466 --> 00:12:44,822
can be seen as both a hard and b costly.

202
00:12:44,986 --> 00:12:48,370
The inertia and the sunk cost of development so far,

203
00:12:48,440 --> 00:12:52,482
combined with that pressure to get a product out of the door, often means

204
00:12:52,536 --> 00:12:56,466
that companies, engineering teams and devices tend to stick with

205
00:12:56,568 --> 00:13:00,386
a relatively insecure approach as they look to move to production.

206
00:13:00,578 --> 00:13:04,034
Maybe that's something we saw in some of those examples earlier.

207
00:13:04,162 --> 00:13:08,200
So I think it's important, or perhaps crucial to ask yourself,

208
00:13:08,730 --> 00:13:12,758
how important is it that we have a secured device implementation?

209
00:13:12,934 --> 00:13:16,054
Is the approach that we're taking properly secure,

210
00:13:16,182 --> 00:13:19,498
and are we happy with that level of risk that

211
00:13:19,504 --> 00:13:23,054
were taking security rise? What would the outcome be?

212
00:13:23,092 --> 00:13:26,350
What would happen if our devices were hacked or compromised?

213
00:13:26,770 --> 00:13:30,622
And probably crucially or most importantly, is the cost and

214
00:13:30,676 --> 00:13:34,302
risk of not having a secure approach and potentially having

215
00:13:34,356 --> 00:13:38,434
one of those security incidents really worth it? I would

216
00:13:38,472 --> 00:13:41,886
say don't be afraid to ask these questions, whatever stage

217
00:13:41,918 --> 00:13:45,806
of the development process you're at, and don't be afraid to come to the conclusion

218
00:13:45,838 --> 00:13:48,914
that security must matter. And these earlier

219
00:13:48,962 --> 00:13:52,374
you do this, ideally right at the start, the better it

220
00:13:52,412 --> 00:13:55,270
will be for you, your devices and your customers,

221
00:13:55,420 --> 00:13:58,806
and ultimately your overall business. And if it

222
00:13:58,828 --> 00:14:02,118
seems too hard, don't worry, switching to a secure

223
00:14:02,294 --> 00:14:06,186
architecture doesn't need to be as hard as it seems. And if

224
00:14:06,208 --> 00:14:09,146
you do want to take a look at our approach to a true end to

225
00:14:09,168 --> 00:14:12,794
end embedded security based on our Twilio microvisor,

226
00:14:12,842 --> 00:14:16,122
which is essentially a hypervisor for microcontrollers,

227
00:14:16,186 --> 00:14:19,726
providing a secure implementation at the edge all

228
00:14:19,748 --> 00:14:23,486
the way through to the cloud, or our supersim connectivity for

229
00:14:23,508 --> 00:14:27,258
enabling global cellular connectivity for IoT devices,

230
00:14:27,434 --> 00:14:30,462
then please do check us out@Twilio.com.

231
00:14:30,516 --> 00:14:33,886
Slash IoT so thank you very much

232
00:14:33,908 --> 00:14:37,366
for your time and I hope you enjoy, enjoyed that quick look at what it

233
00:14:37,388 --> 00:14:41,046
takes to consider IoT security from the

234
00:14:41,068 --> 00:14:42,020
start. Thank you very much.

